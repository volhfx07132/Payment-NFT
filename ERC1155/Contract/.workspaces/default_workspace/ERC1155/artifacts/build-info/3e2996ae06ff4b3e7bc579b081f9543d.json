{
	"id": "3e2996ae06ff4b3e7bc579b081f9543d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/ERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC1155.sol\";\r\nimport \"./IERC1155Receiver.sol\";\r\nimport \"./IERC1155MetadataURI.sol\";\r\nimport \"./Address.sol\";\r\nimport \"./Context.sol\";\r\nimport \"./ERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the basic standard multi-token.\r\n * See https://eips.ethereum.org/EIPS/eip-1155\r\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\r\n *\r\n * _Available since v3.1._\r\n */\r\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r\n    using Address for address;\r\n\r\n    // Mapping from token ID to account balances\r\n    mapping(uint256 => mapping(address => uint256)) private _balances;\r\n\r\n    // Mapping from account to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\r\n    string private _uri;\r\n\r\n    /**\r\n     * @dev See {_setURI}.\r\n     */\r\n    constructor(string memory uri_) {\r\n        _setURI(uri_);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC1155).interfaceId ||\r\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155MetadataURI-uri}.\r\n     *\r\n     * This implementation returns the same URI for *all* token types. It relies\r\n     * on the token type ID substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * Clients calling this function must replace the `\\{id\\}` substring with the\r\n     * actual token type ID.\r\n     */\r\n    function uri(uint256) public view virtual override returns (string memory) {\r\n        return _uri;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\r\n        return _balances[id][account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-balanceOfBatch}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256[] memory)\r\n    {\r\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\r\n\r\n        uint256[] memory batchBalances = new uint256[](accounts.length);\r\n\r\n        for (uint256 i = 0; i < accounts.length; ++i) {\r\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\r\n        }\r\n\r\n        return batchBalances;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[account][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: caller is not owner nor approved\"\r\n        );\r\n        _safeTransferFrom(from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC1155-safeBatchTransferFrom}.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(\r\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\r\n            \"ERC1155: transfer caller is not owner nor approved\"\r\n        );\r\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n        uint256[] memory ids = _asSingletonArray(id);\r\n        uint256[] memory amounts = _asSingletonArray(amount);\r\n\r\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n        _balances[id][to] += amount;\r\n\r\n        emit TransferSingle(operator, from, to, id, amount);\r\n\r\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; ++i) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n            _balances[id][to] += amount;\r\n        }\r\n\r\n        emit TransferBatch(operator, from, to, ids, amounts);\r\n\r\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets a new URI for all token types, by relying on the token type ID\r\n     * substitution mechanism\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\r\n     *\r\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\r\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\r\n     * clients with the token type ID.\r\n     *\r\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\r\n     * interpreted by clients as\r\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\r\n     * for token type ID 0x4cce0.\r\n     *\r\n     * See {uri}.\r\n     *\r\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\r\n     * this function emits no events.\r\n     */\r\n    function _setURI(string memory newuri) internal virtual {\r\n        _uri = newuri;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mint(\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n\r\n        address operator = _msgSender();\r\n        uint256[] memory ids = _asSingletonArray(id);\r\n        uint256[] memory amounts = _asSingletonArray(amount);\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        _balances[id][to] += amount;\r\n        emit TransferSingle(operator, address(0), to, id, amount);\r\n\r\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function _mintBatch(\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        require(to != address(0), \"ERC1155: mint to the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            _balances[ids[i]][to] += amounts[i];\r\n        }\r\n\r\n        emit TransferBatch(operator, address(0), to, ids, amounts);\r\n\r\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\r\n\r\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens of token type `id` from `from`\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `from` must have at least `amount` tokens of token type `id`.\r\n     */\r\n    function _burn(\r\n        address from,\r\n        uint256 id,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n\r\n        address operator = _msgSender();\r\n        uint256[] memory ids = _asSingletonArray(id);\r\n        uint256[] memory amounts = _asSingletonArray(amount);\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n\r\n        uint256 fromBalance = _balances[id][from];\r\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[id][from] = fromBalance - amount;\r\n        }\r\n\r\n        emit TransferSingle(operator, from, address(0), id, amount);\r\n\r\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     */\r\n    function _burnBatch(\r\n        address from,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC1155: burn from the zero address\");\r\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\r\n\r\n        address operator = _msgSender();\r\n\r\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n\r\n        for (uint256 i = 0; i < ids.length; i++) {\r\n            uint256 id = ids[i];\r\n            uint256 amount = amounts[i];\r\n\r\n            uint256 fromBalance = _balances[id][from];\r\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\r\n            unchecked {\r\n                _balances[id][from] = fromBalance - amount;\r\n            }\r\n        }\r\n\r\n        emit TransferBatch(operator, from, address(0), ids, amounts);\r\n\r\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Emits a {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(\r\n        address owner,\r\n        address operator,\r\n        bool approved\r\n    ) internal virtual {\r\n        require(owner != operator, \"ERC1155: setting approval status for self\");\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning, as well as batched variants.\r\n     *\r\n     * The same hook is called on both single and batched variants. For single\r\n     * transfers, the length of the `id` and `amount` arrays will be 1.\r\n     *\r\n     * Calling conditions (for each `id` and `amount` pair):\r\n     *\r\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * of token type `id` will be  transferred to `to`.\r\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\r\n     * for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\r\n     * will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `ids` and `amounts` have the same, non-zero length.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any token transfer. This includes minting\r\n     * and burning, as well as batched variants.\r\n     *\r\n     * The same hook is called on both single and batched variants. For single\r\n     * transfers, the length of the `id` and `amount` arrays will be 1.\r\n     *\r\n     * Calling conditions (for each `id` and `amount` pair):\r\n     *\r\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * of token type `id` will be  transferred to `to`.\r\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\r\n     * for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\r\n     * will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `ids` and `amounts` have the same, non-zero length.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal virtual {}\r\n\r\n    function _doSafeTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _doSafeBatchTransferAcceptanceCheck(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) private {\r\n        if (to.isContract()) {\r\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r\n                bytes4 response\r\n            ) {\r\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\r\n                }\r\n            } catch Error(string memory reason) {\r\n                revert(reason);\r\n            } catch {\r\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r\n        uint256[] memory array = new uint256[](1);\r\n        array[0] = element;\r\n\r\n        return array;\r\n    }\r\n}"
			},
			"ERC1155/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"ERC1155/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"ERC1155/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.1;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"ERC1155/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC1155.sol\";\r\n\r\n/**\r\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\r\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155MetadataURI is IERC1155 {\r\n    /**\r\n     * @dev Returns the URI for token type `id`.\r\n     *\r\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\r\n     * clients with the actual token type ID.\r\n     */\r\n    function uri(uint256 id) external view returns (string memory);\r\n}\r\n"
			},
			"ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev _Available since v3.1._\r\n */\r\ninterface IERC1155Receiver is IERC165 {\r\n    /**\r\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\r\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\r\n     *\r\n     * NOTE: To accept the transfer, this must return\r\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n     * (i.e. 0xf23a6e61, or its own function selector).\r\n     *\r\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\r\n     * @param from The address which previously owned the token\r\n     * @param id The ID of the token being transferred\r\n     * @param value The amount of tokens being transferred\r\n     * @param data Additional data with no specified format\r\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\r\n     */\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n\r\n    /**\r\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\r\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\r\n     * been updated.\r\n     *\r\n     * NOTE: To accept the transfer(s), this must return\r\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n     * (i.e. 0xbc197c81, or its own function selector).\r\n     *\r\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\r\n     * @param from The address which previously owned the token\r\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\r\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\r\n     * @param data Additional data with no specified format\r\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\r\n     */\r\n    function onERC1155BatchReceived(\r\n        address operator,\r\n        address from,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata values,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n"
			},
			"ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\r\n     */\r\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\r\n\r\n    /**\r\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\r\n     * transfers.\r\n     */\r\n    event TransferBatch(\r\n        address indexed operator,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256[] ids,\r\n        uint256[] values\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\r\n     * `approved`.\r\n     */\r\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\r\n     *\r\n     * If an {URI} event was emitted for `id`, the standard\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\r\n     * returned by {IERC1155MetadataURI-uri}.\r\n     */\r\n    event URI(string value, uint256 indexed id);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\r\n        external\r\n        view\r\n        returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `operator` cannot be the caller.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata amounts,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
			},
			"ERC1155/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC1155/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC1155/Address.sol\":202:8476  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC1155/Address.sol\":202:8476  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122058861bb45485a042877303e8ff92a79f771d4ec7441e4b6194e78345eff2066464736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122058861bb45485a042877303e8ff92a79f771d4ec7441e4b6194e78345eff2066464736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC DUP7 SHL 0xB4 SLOAD DUP6 LOG0 TIMESTAMP DUP8 PUSH20 0x3E8FF92A79F771D4EC7441E4B6194E78345EFF2 MOD PUSH5 0x64736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "202:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122058861bb45485a042877303e8ff92a79f771d4ec7441e4b6194e78345eff2066464736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC DUP7 SHL 0xB4 SLOAD DUP6 LOG0 TIMESTAMP DUP8 PUSH20 0x3E8FF92A79F771D4EC7441E4B6194E78345EFF2 MOD PUSH5 0x64736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "202:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 8476,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122058861bb45485a042877303e8ff92a79f771d4ec7441e4b6194e78345eff2066464736f6c63430008040033",
									".code": [
										{
											"begin": 202,
											"end": 8476,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 8476,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1155/Address.sol\":{\"keccak256\":\"0x3b74e064b6da34a7f0fb2118e56ce114bb40cb9658c6899c82e9b82e9051315e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a1f21cffab948ce9c49bfe9e017e00d77bd3c72e092b5169d3c2df5e33dc19\",\"dweb:/ipfs/QmRxYsuC1YzFZ76fsADhMwQdGdN9BGHZnws3PcboiDuEXT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1155/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC1155/ERC1155.sol\":534:17575  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\n  mstore(0x40, 0x80)\n    /* \"ERC1155/ERC1155.sol\":1086:1150  constructor(string memory uri_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC1155/ERC1155.sol\":1129:1142  _setURI(uri_) */\n  tag_6\n    /* \"ERC1155/ERC1155.sol\":1137:1141  uri_ */\n  dup2\n    /* \"ERC1155/ERC1155.sol\":1129:1136  _setURI */\n  shl(0x20, tag_7)\n    /* \"ERC1155/ERC1155.sol\":1129:1142  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"ERC1155/ERC1155.sol\":1086:1150  constructor(string memory uri_) {\r... */\n  pop\n    /* \"ERC1155/ERC1155.sol\":534:17575  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\n  jump(tag_8)\n    /* \"ERC1155/ERC1155.sol\":8366:8454  function _setURI(string memory newuri) internal virtual {\r... */\ntag_7:\n    /* \"ERC1155/ERC1155.sol\":8440:8446  newuri */\n  dup1\n    /* \"ERC1155/ERC1155.sol\":8433:8437  _uri */\n  0x02\n    /* \"ERC1155/ERC1155.sol\":8433:8446  _uri = newuri */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"ERC1155/ERC1155.sol\":8366:8454  function _setURI(string memory newuri) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"ERC1155/ERC1155.sol\":534:17575  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_14)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_14)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_14\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_14:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_22\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_21)\ntag_22:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:361   */\ntag_24:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_26\n    /* \"#utility.yul\":137:186   */\n  tag_27\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":121:187   */\n  tag_29\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:264   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":303:304   */\n  0x00\n    /* \"#utility.yul\":300:301   */\n  dup1\n    /* \"#utility.yul\":293:305   */\n  revert\n    /* \"#utility.yul\":262:264   */\ntag_30:\n    /* \"#utility.yul\":316:355   */\n  tag_31\n    /* \"#utility.yul\":348:354   */\n  dup5\n    /* \"#utility.yul\":343:346   */\n  dup3\n    /* \"#utility.yul\":338:341   */\n  dup6\n    /* \"#utility.yul\":316:355   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":102:361   */\n  pop\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":381:669   */\ntag_33:\n    /* \"#utility.yul\":448:453   */\n  0x00\n    /* \"#utility.yul\":497:500   */\n  dup3\n    /* \"#utility.yul\":490:494   */\n  0x1f\n    /* \"#utility.yul\":482:488   */\n  dup4\n    /* \"#utility.yul\":478:495   */\n  add\n    /* \"#utility.yul\":474:501   */\n  slt\n    /* \"#utility.yul\":464:466   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":515:516   */\n  0x00\n    /* \"#utility.yul\":512:513   */\n  dup1\n    /* \"#utility.yul\":505:517   */\n  revert\n    /* \"#utility.yul\":464:466   */\ntag_35:\n    /* \"#utility.yul\":548:554   */\n  dup2\n    /* \"#utility.yul\":542:555   */\n  mload\n    /* \"#utility.yul\":573:663   */\n  tag_36\n    /* \"#utility.yul\":659:662   */\n  dup5\n    /* \"#utility.yul\":651:657   */\n  dup3\n    /* \"#utility.yul\":644:648   */\n  0x20\n    /* \"#utility.yul\":636:642   */\n  dup7\n    /* \"#utility.yul\":632:649   */\n  add\n    /* \"#utility.yul\":573:663   */\n  tag_24\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":564:663   */\n  swap2\n  pop\n    /* \"#utility.yul\":454:669   */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":675:1065   */\ntag_3:\n    /* \"#utility.yul\":755:761   */\n  0x00\n    /* \"#utility.yul\":804:806   */\n  0x20\n    /* \"#utility.yul\":792:801   */\n  dup3\n    /* \"#utility.yul\":783:790   */\n  dup5\n    /* \"#utility.yul\":779:802   */\n  sub\n    /* \"#utility.yul\":775:807   */\n  slt\n    /* \"#utility.yul\":772:774   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":820:821   */\n  0x00\n    /* \"#utility.yul\":817:818   */\n  dup1\n    /* \"#utility.yul\":810:822   */\n  revert\n    /* \"#utility.yul\":772:774   */\ntag_38:\n    /* \"#utility.yul\":884:885   */\n  0x00\n    /* \"#utility.yul\":873:882   */\n  dup3\n    /* \"#utility.yul\":869:886   */\n  add\n    /* \"#utility.yul\":863:887   */\n  mload\n    /* \"#utility.yul\":914:932   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":906:912   */\n  dup2\n    /* \"#utility.yul\":903:933   */\n  gt\n    /* \"#utility.yul\":900:902   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":946:947   */\n  0x00\n    /* \"#utility.yul\":943:944   */\n  dup1\n    /* \"#utility.yul\":936:948   */\n  revert\n    /* \"#utility.yul\":900:902   */\ntag_39:\n    /* \"#utility.yul\":974:1048   */\n  tag_40\n    /* \"#utility.yul\":1040:1047   */\n  dup5\n    /* \"#utility.yul\":1031:1037   */\n  dup3\n    /* \"#utility.yul\":1020:1029   */\n  dup6\n    /* \"#utility.yul\":1016:1038   */\n  add\n    /* \"#utility.yul\":974:1048   */\n  tag_33\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":964:1048   */\n  swap2\n  pop\n    /* \"#utility.yul\":834:1058   */\n  pop\n    /* \"#utility.yul\":762:1065   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1071:1200   */\ntag_29:\n    /* \"#utility.yul\":1105:1111   */\n  0x00\n    /* \"#utility.yul\":1132:1152   */\n  tag_42\n  tag_43\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1122:1152   */\n  swap1\n  pop\n    /* \"#utility.yul\":1161:1194   */\n  tag_44\n    /* \"#utility.yul\":1189:1193   */\n  dup3\n    /* \"#utility.yul\":1181:1187   */\n  dup3\n    /* \"#utility.yul\":1161:1194   */\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1112:1200   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1206:1281   */\ntag_43:\n    /* \"#utility.yul\":1239:1245   */\n  0x00\n    /* \"#utility.yul\":1272:1274   */\n  0x40\n    /* \"#utility.yul\":1266:1275   */\n  mload\n    /* \"#utility.yul\":1256:1275   */\n  swap1\n  pop\n    /* \"#utility.yul\":1246:1281   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1287:1595   */\ntag_28:\n    /* \"#utility.yul\":1349:1353   */\n  0x00\n    /* \"#utility.yul\":1439:1457   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1431:1437   */\n  dup3\n    /* \"#utility.yul\":1428:1458   */\n  gt\n    /* \"#utility.yul\":1425:1427   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1461:1479   */\n  tag_49\n  tag_50\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1425:1427   */\ntag_48:\n    /* \"#utility.yul\":1499:1528   */\n  tag_51\n    /* \"#utility.yul\":1521:1527   */\n  dup3\n    /* \"#utility.yul\":1499:1528   */\n  tag_52\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1491:1528   */\n  swap1\n  pop\n    /* \"#utility.yul\":1583:1587   */\n  0x20\n    /* \"#utility.yul\":1577:1581   */\n  dup2\n    /* \"#utility.yul\":1573:1588   */\n  add\n    /* \"#utility.yul\":1565:1588   */\n  swap1\n  pop\n    /* \"#utility.yul\":1354:1595   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1601:1908   */\ntag_32:\n    /* \"#utility.yul\":1669:1670   */\n  0x00\n    /* \"#utility.yul\":1679:1792   */\ntag_54:\n    /* \"#utility.yul\":1693:1699   */\n  dup4\n    /* \"#utility.yul\":1690:1691   */\n  dup2\n    /* \"#utility.yul\":1687:1700   */\n  lt\n    /* \"#utility.yul\":1679:1792   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1778:1779   */\n  dup1\n    /* \"#utility.yul\":1773:1776   */\n  dup3\n    /* \"#utility.yul\":1769:1780   */\n  add\n    /* \"#utility.yul\":1763:1781   */\n  mload\n    /* \"#utility.yul\":1759:1760   */\n  dup2\n    /* \"#utility.yul\":1754:1757   */\n  dup5\n    /* \"#utility.yul\":1750:1761   */\n  add\n    /* \"#utility.yul\":1743:1782   */\n  mstore\n    /* \"#utility.yul\":1715:1717   */\n  0x20\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1708:1718   */\n  add\n    /* \"#utility.yul\":1703:1718   */\n  swap1\n  pop\n    /* \"#utility.yul\":1679:1792   */\n  jump(tag_54)\ntag_56:\n    /* \"#utility.yul\":1810:1816   */\n  dup4\n    /* \"#utility.yul\":1807:1808   */\n  dup2\n    /* \"#utility.yul\":1804:1817   */\n  gt\n    /* \"#utility.yul\":1801:1803   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1890:1891   */\n  0x00\n    /* \"#utility.yul\":1881:1887   */\n  dup5\n    /* \"#utility.yul\":1876:1879   */\n  dup5\n    /* \"#utility.yul\":1872:1888   */\n  add\n    /* \"#utility.yul\":1865:1892   */\n  mstore\n    /* \"#utility.yul\":1801:1803   */\ntag_57:\n    /* \"#utility.yul\":1650:1908   */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1914:2234   */\ntag_13:\n    /* \"#utility.yul\":1958:1964   */\n  0x00\n    /* \"#utility.yul\":1995:1996   */\n  0x02\n    /* \"#utility.yul\":1989:1993   */\n  dup3\n    /* \"#utility.yul\":1985:1997   */\n  div\n    /* \"#utility.yul\":1975:1997   */\n  swap1\n  pop\n    /* \"#utility.yul\":2042:2043   */\n  0x01\n    /* \"#utility.yul\":2036:2040   */\n  dup3\n    /* \"#utility.yul\":2032:2044   */\n  and\n    /* \"#utility.yul\":2063:2081   */\n  dup1\n    /* \"#utility.yul\":2053:2055   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":2119:2123   */\n  0x7f\n    /* \"#utility.yul\":2111:2117   */\n  dup3\n    /* \"#utility.yul\":2107:2124   */\n  and\n    /* \"#utility.yul\":2097:2124   */\n  swap2\n  pop\n    /* \"#utility.yul\":2053:2055   */\ntag_59:\n    /* \"#utility.yul\":2181:2183   */\n  0x20\n    /* \"#utility.yul\":2173:2179   */\n  dup3\n    /* \"#utility.yul\":2170:2184   */\n  lt\n    /* \"#utility.yul\":2150:2168   */\n  dup2\n    /* \"#utility.yul\":2147:2185   */\n  eq\n    /* \"#utility.yul\":2144:2146   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2200:2218   */\n  tag_61\n  tag_62\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2144:2146   */\ntag_60:\n    /* \"#utility.yul\":1965:2234   */\n  pop\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2240:2521   */\ntag_45:\n    /* \"#utility.yul\":2323:2350   */\n  tag_64\n    /* \"#utility.yul\":2345:2349   */\n  dup3\n    /* \"#utility.yul\":2323:2350   */\n  tag_52\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2315:2321   */\n  dup2\n    /* \"#utility.yul\":2311:2351   */\n  add\n    /* \"#utility.yul\":2453:2459   */\n  dup2\n    /* \"#utility.yul\":2441:2451   */\n  dup2\n    /* \"#utility.yul\":2438:2460   */\n  lt\n    /* \"#utility.yul\":2417:2435   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2405:2415   */\n  dup3\n    /* \"#utility.yul\":2402:2436   */\n  gt\n    /* \"#utility.yul\":2399:2461   */\n  or\n    /* \"#utility.yul\":2396:2398   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2464:2482   */\n  tag_66\n  tag_50\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2396:2398   */\ntag_65:\n    /* \"#utility.yul\":2504:2514   */\n  dup1\n    /* \"#utility.yul\":2500:2502   */\n  0x40\n    /* \"#utility.yul\":2493:2515   */\n  mstore\n    /* \"#utility.yul\":2283:2521   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2527:2707   */\ntag_62:\n    /* \"#utility.yul\":2575:2652   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2572:2573   */\n  0x00\n    /* \"#utility.yul\":2565:2653   */\n  mstore\n    /* \"#utility.yul\":2672:2676   */\n  0x22\n    /* \"#utility.yul\":2669:2670   */\n  0x04\n    /* \"#utility.yul\":2662:2677   */\n  mstore\n    /* \"#utility.yul\":2696:2700   */\n  0x24\n    /* \"#utility.yul\":2693:2694   */\n  0x00\n    /* \"#utility.yul\":2686:2701   */\n  revert\n    /* \"#utility.yul\":2713:2893   */\ntag_50:\n    /* \"#utility.yul\":2761:2838   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2758:2759   */\n  0x00\n    /* \"#utility.yul\":2751:2839   */\n  mstore\n    /* \"#utility.yul\":2858:2862   */\n  0x41\n    /* \"#utility.yul\":2855:2856   */\n  0x04\n    /* \"#utility.yul\":2848:2863   */\n  mstore\n    /* \"#utility.yul\":2882:2886   */\n  0x24\n    /* \"#utility.yul\":2879:2880   */\n  0x00\n    /* \"#utility.yul\":2872:2887   */\n  revert\n    /* \"#utility.yul\":2899:3001   */\ntag_52:\n    /* \"#utility.yul\":2940:2946   */\n  0x00\n    /* \"#utility.yul\":2991:2993   */\n  0x1f\n    /* \"#utility.yul\":2987:2994   */\n  not\n    /* \"#utility.yul\":2982:2984   */\n  0x1f\n    /* \"#utility.yul\":2975:2980   */\n  dup4\n    /* \"#utility.yul\":2971:2985   */\n  add\n    /* \"#utility.yul\":2967:2995   */\n  and\n    /* \"#utility.yul\":2957:2995   */\n  swap1\n  pop\n    /* \"#utility.yul\":2947:3001   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"ERC1155/ERC1155.sol\":534:17575  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC1155/ERC1155.sol\":534:17575  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC1155/ERC1155.sol\":2199:2430  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155/ERC1155.sol\":1222:1532  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155/ERC1155.sol\":1943:2048  function uri(uint256) public view virtual override returns (string memory) {\r... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155/ERC1155.sol\":4138:4580  function safeBatchTransferFrom(\r... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"ERC1155/ERC1155.sol\":2596:3120  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155/ERC1155.sol\":3193:3348  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"ERC1155/ERC1155.sol\":3420:3588  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC1155/ERC1155.sol\":3660:4061  function safeTransferFrom(\r... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"ERC1155/ERC1155.sol\":2199:2430  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n    tag_15:\n        /* \"ERC1155/ERC1155.sol\":2285:2292  uint256 */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":2332:2333  0 */\n      dup1\n        /* \"ERC1155/ERC1155.sol\":2313:2334  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155/ERC1155.sol\":2313:2320  account */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":2313:2334  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155/ERC1155.sol\":2305:2382  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"ERC1155/ERC1155.sol\":2400:2409  _balances */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":2400:2413  _balances[id] */\n      dup1\n        /* \"ERC1155/ERC1155.sol\":2410:2412  id */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":2400:2413  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155/ERC1155.sol\":2400:2422  _balances[id][account] */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":2414:2421  account */\n      dup5\n        /* \"ERC1155/ERC1155.sol\":2400:2422  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC1155/ERC1155.sol\":2393:2422  return _balances[id][account] */\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":2199:2430  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":1222:1532  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n    tag_21:\n        /* \"ERC1155/ERC1155.sol\":1324:1328  bool */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":1376:1402  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"ERC1155/ERC1155.sol\":1361:1402  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC1155/ERC1155.sol\":1361:1372  interfaceId */\n      dup3\n        /* \"ERC1155/ERC1155.sol\":1361:1402  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC1155/ERC1155.sol\":1361:1471  interfaceId == type(IERC1155).interfaceId ||\r... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"ERC1155/ERC1155.sol\":1434:1471  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"ERC1155/ERC1155.sol\":1419:1471  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC1155/ERC1155.sol\":1419:1430  interfaceId */\n      dup3\n        /* \"ERC1155/ERC1155.sol\":1419:1471  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC1155/ERC1155.sol\":1361:1471  interfaceId == type(IERC1155).interfaceId ||\r... */\n    tag_58:\n        /* \"ERC1155/ERC1155.sol\":1361:1524  interfaceId == type(IERC1155).interfaceId ||\r... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"ERC1155/ERC1155.sol\":1488:1524  super.supportsInterface(interfaceId) */\n      tag_60\n        /* \"ERC1155/ERC1155.sol\":1512:1523  interfaceId */\n      dup3\n        /* \"ERC1155/ERC1155.sol\":1488:1511  super.supportsInterface */\n      tag_61\n        /* \"ERC1155/ERC1155.sol\":1488:1524  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_60:\n        /* \"ERC1155/ERC1155.sol\":1361:1524  interfaceId == type(IERC1155).interfaceId ||\r... */\n    tag_59:\n        /* \"ERC1155/ERC1155.sol\":1341:1524  return\r... */\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":1222:1532  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":1943:2048  function uri(uint256) public view virtual override returns (string memory) {\r... */\n    tag_27:\n        /* \"ERC1155/ERC1155.sol\":2003:2016  string memory */\n      0x60\n        /* \"ERC1155/ERC1155.sol\":2036:2040  _uri */\n      0x02\n        /* \"ERC1155/ERC1155.sol\":2029:2040  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":1943:2048  function uri(uint256) public view virtual override returns (string memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":4138:4580  function safeBatchTransferFrom(\r... */\n    tag_33:\n        /* \"ERC1155/ERC1155.sol\":4379:4391  _msgSender() */\n      tag_70\n        /* \"ERC1155/ERC1155.sol\":4379:4389  _msgSender */\n      tag_71\n        /* \"ERC1155/ERC1155.sol\":4379:4391  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"ERC1155/ERC1155.sol\":4371:4391  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155/ERC1155.sol\":4371:4375  from */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":4371:4391  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC1155/ERC1155.sol\":4371:4431  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_72\n      jumpi\n      pop\n        /* \"ERC1155/ERC1155.sol\":4395:4431  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"ERC1155/ERC1155.sol\":4412:4416  from */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":4418:4430  _msgSender() */\n      tag_74\n        /* \"ERC1155/ERC1155.sol\":4418:4428  _msgSender */\n      tag_71\n        /* \"ERC1155/ERC1155.sol\":4418:4430  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"ERC1155/ERC1155.sol\":4395:4411  isApprovedForAll */\n      tag_47\n        /* \"ERC1155/ERC1155.sol\":4395:4431  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_73:\n        /* \"ERC1155/ERC1155.sol\":4371:4431  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_72:\n        /* \"ERC1155/ERC1155.sol\":4349:4509  require(\r... */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"ERC1155/ERC1155.sol\":4520:4572  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"ERC1155/ERC1155.sol\":4543:4547  from */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":4549:4551  to */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":4553:4556  ids */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":4558:4565  amounts */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":4567:4571  data */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":4520:4542  _safeBatchTransferFrom */\n      tag_79\n        /* \"ERC1155/ERC1155.sol\":4520:4572  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"ERC1155/ERC1155.sol\":4138:4580  function safeBatchTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":2596:3120  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n    tag_37:\n        /* \"ERC1155/ERC1155.sol\":2752:2768  uint256[] memory */\n      0x60\n        /* \"ERC1155/ERC1155.sol\":2813:2816  ids */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":2813:2823  ids.length */\n      mload\n        /* \"ERC1155/ERC1155.sol\":2794:2802  accounts */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":2794:2809  accounts.length */\n      mload\n        /* \"ERC1155/ERC1155.sol\":2794:2823  accounts.length == ids.length */\n      eq\n        /* \"ERC1155/ERC1155.sol\":2786:2869  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"ERC1155/ERC1155.sol\":2882:2912  uint256[] memory batchBalances */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":2929:2937  accounts */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":2929:2944  accounts.length */\n      mload\n        /* \"ERC1155/ERC1155.sol\":2915:2945  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_84:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_85:\n      pop\n        /* \"ERC1155/ERC1155.sol\":2882:2945  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":2963:2972  uint256 i */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":2958:3080  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n    tag_86:\n        /* \"ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup5\n        /* \"ERC1155/ERC1155.sol\":2982:2997  accounts.length */\n      mload\n        /* \"ERC1155/ERC1155.sol\":2978:2979  i */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":2978:2997  i < accounts.length */\n      lt\n        /* \"ERC1155/ERC1155.sol\":2958:3080  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n      iszero\n      tag_87\n      jumpi\n        /* \"ERC1155/ERC1155.sol\":3038:3068  balanceOf(accounts[i], ids[i]) */\n      tag_89\n        /* \"ERC1155/ERC1155.sol\":3048:3056  accounts */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":3057:3058  i */\n      dup3\n        /* \"ERC1155/ERC1155.sol\":3048:3059  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_90\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_90:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155/ERC1155.sol\":3061:3064  ids */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":3065:3066  i */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":3061:3067  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_91\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_91:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155/ERC1155.sol\":3038:3047  balanceOf */\n      tag_15\n        /* \"ERC1155/ERC1155.sol\":3038:3068  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_89:\n        /* \"ERC1155/ERC1155.sol\":3019:3032  batchBalances */\n      dup3\n        /* \"ERC1155/ERC1155.sol\":3033:3034  i */\n      dup3\n        /* \"ERC1155/ERC1155.sol\":3019:3035  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ERC1155/ERC1155.sol\":3019:3068  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ERC1155/ERC1155.sol\":2999:3002  ++i */\n      dup1\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":2958:3080  for (uint256 i = 0; i < accounts.length; ++i) {\r... */\n      jump(tag_86)\n    tag_87:\n      pop\n        /* \"ERC1155/ERC1155.sol\":3099:3112  batchBalances */\n      dup1\n        /* \"ERC1155/ERC1155.sol\":3092:3112  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"ERC1155/ERC1155.sol\":2596:3120  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":3193:3348  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_43:\n        /* \"ERC1155/ERC1155.sol\":3288:3340  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_96\n        /* \"ERC1155/ERC1155.sol\":3307:3319  _msgSender() */\n      tag_97\n        /* \"ERC1155/ERC1155.sol\":3307:3317  _msgSender */\n      tag_71\n        /* \"ERC1155/ERC1155.sol\":3307:3319  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"ERC1155/ERC1155.sol\":3321:3329  operator */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":3331:3339  approved */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":3288:3306  _setApprovalForAll */\n      tag_98\n        /* \"ERC1155/ERC1155.sol\":3288:3340  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_96:\n        /* \"ERC1155/ERC1155.sol\":3193:3348  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":3420:3588  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n    tag_47:\n        /* \"ERC1155/ERC1155.sol\":3519:3523  bool */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":3543:3561  _operatorApprovals */\n      0x01\n        /* \"ERC1155/ERC1155.sol\":3543:3570  _operatorApprovals[account] */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":3562:3569  account */\n      dup5\n        /* \"ERC1155/ERC1155.sol\":3543:3570  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155/ERC1155.sol\":3543:3580  _operatorApprovals[account][operator] */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":3571:3579  operator */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":3543:3580  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC1155/ERC1155.sol\":3536:3580  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":3420:3588  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":3660:4061  function safeTransferFrom(\r... */\n    tag_52:\n        /* \"ERC1155/ERC1155.sol\":3876:3888  _msgSender() */\n      tag_101\n        /* \"ERC1155/ERC1155.sol\":3876:3886  _msgSender */\n      tag_71\n        /* \"ERC1155/ERC1155.sol\":3876:3888  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"ERC1155/ERC1155.sol\":3868:3888  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155/ERC1155.sol\":3868:3872  from */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":3868:3888  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC1155/ERC1155.sol\":3868:3928  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_102\n      jumpi\n      pop\n        /* \"ERC1155/ERC1155.sol\":3892:3928  isApprovedForAll(from, _msgSender()) */\n      tag_103\n        /* \"ERC1155/ERC1155.sol\":3909:3913  from */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":3915:3927  _msgSender() */\n      tag_104\n        /* \"ERC1155/ERC1155.sol\":3915:3925  _msgSender */\n      tag_71\n        /* \"ERC1155/ERC1155.sol\":3915:3927  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"ERC1155/ERC1155.sol\":3892:3908  isApprovedForAll */\n      tag_47\n        /* \"ERC1155/ERC1155.sol\":3892:3928  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_103:\n        /* \"ERC1155/ERC1155.sol\":3868:3928  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n    tag_102:\n        /* \"ERC1155/ERC1155.sol\":3846:3997  require(\r... */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"ERC1155/ERC1155.sol\":4008:4053  _safeTransferFrom(from, to, id, amount, data) */\n      tag_108\n        /* \"ERC1155/ERC1155.sol\":4026:4030  from */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":4032:4034  to */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":4036:4038  id */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":4040:4046  amount */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":4048:4052  data */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":4008:4025  _safeTransferFrom */\n      tag_109\n        /* \"ERC1155/ERC1155.sol\":4008:4053  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n    tag_108:\n        /* \"ERC1155/ERC1155.sol\":3660:4061  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC165.sol\":854:1011  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n    tag_61:\n        /* \"ERC1155/ERC165.sol\":939:943  bool */\n      0x00\n        /* \"ERC1155/ERC165.sol\":978:1003  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"ERC1155/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC1155/ERC165.sol\":963:974  interfaceId */\n      dup3\n        /* \"ERC1155/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC1155/ERC165.sol\":956:1003  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"ERC1155/ERC165.sol\":854:1011  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC1155/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_71:\n        /* \"ERC1155/Context.sol\":709:716  address */\n      0x00\n        /* \"ERC1155/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC1155/Context.sol\":729:746  return msg.sender */\n      swap1\n      pop\n        /* \"ERC1155/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":6376:7522  function _safeBatchTransferFrom(\r... */\n    tag_79:\n        /* \"ERC1155/ERC1155.sol\":6603:6610  amounts */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":6603:6617  amounts.length */\n      mload\n        /* \"ERC1155/ERC1155.sol\":6589:6592  ids */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":6589:6599  ids.length */\n      mload\n        /* \"ERC1155/ERC1155.sol\":6589:6617  ids.length == amounts.length */\n      eq\n        /* \"ERC1155/ERC1155.sol\":6581:6662  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"ERC1155/ERC1155.sol\":6695:6696  0 */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":6681:6697  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155/ERC1155.sol\":6681:6683  to */\n      dup5\n        /* \"ERC1155/ERC1155.sol\":6681:6697  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155/ERC1155.sol\":6673:6739  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"ERC1155/ERC1155.sol\":6752:6768  address operator */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":6771:6783  _msgSender() */\n      tag_119\n        /* \"ERC1155/ERC1155.sol\":6771:6781  _msgSender */\n      tag_71\n        /* \"ERC1155/ERC1155.sol\":6771:6783  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"ERC1155/ERC1155.sol\":6752:6783  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":6796:6856  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_120\n        /* \"ERC1155/ERC1155.sol\":6817:6825  operator */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":6827:6831  from */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":6833:6835  to */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":6837:6840  ids */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":6842:6849  amounts */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":6851:6855  data */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":6796:6816  _beforeTokenTransfer */\n      tag_121\n        /* \"ERC1155/ERC1155.sol\":6796:6856  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_120:\n        /* \"ERC1155/ERC1155.sol\":6874:6883  uint256 i */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":6869:7290  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n    tag_122:\n        /* \"ERC1155/ERC1155.sol\":6893:6896  ids */\n      dup5\n        /* \"ERC1155/ERC1155.sol\":6893:6903  ids.length */\n      mload\n        /* \"ERC1155/ERC1155.sol\":6889:6890  i */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":6889:6903  i < ids.length */\n      lt\n        /* \"ERC1155/ERC1155.sol\":6869:7290  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n      iszero\n      tag_123\n      jumpi\n        /* \"ERC1155/ERC1155.sol\":6925:6935  uint256 id */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":6938:6941  ids */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":6942:6943  i */\n      dup3\n        /* \"ERC1155/ERC1155.sol\":6938:6944  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_125\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_125:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155/ERC1155.sol\":6925:6944  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":6959:6973  uint256 amount */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":6976:6983  amounts */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":6984:6985  i */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":6976:6986  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_126\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_126:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"ERC1155/ERC1155.sol\":6959:6986  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":7003:7022  uint256 fromBalance */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":7025:7034  _balances */\n      dup1\n        /* \"ERC1155/ERC1155.sol\":7025:7038  _balances[id] */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":7035:7037  id */\n      dup5\n        /* \"ERC1155/ERC1155.sol\":7025:7038  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155/ERC1155.sol\":7025:7044  _balances[id][from] */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":7039:7043  from */\n      dup12\n        /* \"ERC1155/ERC1155.sol\":7025:7044  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC1155/ERC1155.sol\":7003:7044  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":7082:7088  amount */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":7067:7078  fromBalance */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":7067:7088  fromBalance >= amount */\n      lt\n      iszero\n        /* \"ERC1155/ERC1155.sol\":7059:7135  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"ERC1155/ERC1155.sol\":7215:7221  amount */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":7201:7212  fromBalance */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":7201:7221  fromBalance - amount */\n      sub\n        /* \"ERC1155/ERC1155.sol\":7179:7188  _balances */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":7179:7192  _balances[id] */\n      dup1\n        /* \"ERC1155/ERC1155.sol\":7189:7191  id */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":7179:7192  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155/ERC1155.sol\":7179:7198  _balances[id][from] */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":7193:7197  from */\n      dup13\n        /* \"ERC1155/ERC1155.sol\":7179:7198  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155/ERC1155.sol\":7179:7221  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC1155/ERC1155.sol\":7272:7278  amount */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":7251:7260  _balances */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":7251:7264  _balances[id] */\n      dup1\n        /* \"ERC1155/ERC1155.sol\":7261:7263  id */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":7251:7264  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155/ERC1155.sol\":7251:7268  _balances[id][to] */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":7265:7267  to */\n      dup12\n        /* \"ERC1155/ERC1155.sol\":7251:7268  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC1155/ERC1155.sol\":7251:7278  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC1155/ERC1155.sol\":6869:7290  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n      pop\n      pop\n      pop\n        /* \"ERC1155/ERC1155.sol\":6905:6908  ++i */\n      dup1\n      tag_132\n      swap1\n      tag_94\n      jump\t// in\n    tag_132:\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":6869:7290  for (uint256 i = 0; i < ids.length; ++i) {\r... */\n      jump(tag_122)\n    tag_123:\n      pop\n        /* \"ERC1155/ERC1155.sol\":7337:7339  to */\n      dup5\n        /* \"ERC1155/ERC1155.sol\":7307:7354  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155/ERC1155.sol\":7331:7335  from */\n      dup7\n        /* \"ERC1155/ERC1155.sol\":7307:7354  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155/ERC1155.sol\":7321:7329  operator */\n      dup3\n        /* \"ERC1155/ERC1155.sol\":7307:7354  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"ERC1155/ERC1155.sol\":7341:7344  ids */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":7346:7353  amounts */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":7307:7354  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_133\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC1155/ERC1155.sol\":7367:7426  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_135\n        /* \"ERC1155/ERC1155.sol\":7387:7395  operator */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":7397:7401  from */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":7403:7405  to */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":7407:7410  ids */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":7412:7419  amounts */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":7421:7425  data */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":7367:7386  _afterTokenTransfer */\n      tag_136\n        /* \"ERC1155/ERC1155.sol\":7367:7426  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_135:\n        /* \"ERC1155/ERC1155.sol\":7439:7514  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_137\n        /* \"ERC1155/ERC1155.sol\":7475:7483  operator */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":7485:7489  from */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":7491:7493  to */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":7495:7498  ids */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":7500:7507  amounts */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":7509:7513  data */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":7439:7474  _doSafeBatchTransferAcceptanceCheck */\n      tag_138\n        /* \"ERC1155/ERC1155.sol\":7439:7514  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_137:\n        /* \"ERC1155/ERC1155.sol\":6376:7522  function _safeBatchTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":13110:13441  function _setApprovalForAll(\r... */\n    tag_98:\n        /* \"ERC1155/ERC1155.sol\":13265:13273  operator */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":13256:13273  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155/ERC1155.sol\":13256:13261  owner */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":13256:13273  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155/ERC1155.sol\":13248:13319  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"ERC1155/ERC1155.sol\":13368:13376  approved */\n      dup1\n        /* \"ERC1155/ERC1155.sol\":13330:13348  _operatorApprovals */\n      0x01\n        /* \"ERC1155/ERC1155.sol\":13330:13355  _operatorApprovals[owner] */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":13349:13354  owner */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":13330:13355  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155/ERC1155.sol\":13330:13365  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":13356:13364  operator */\n      dup5\n        /* \"ERC1155/ERC1155.sol\":13330:13365  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC1155/ERC1155.sol\":13330:13376  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC1155/ERC1155.sol\":13414:13422  operator */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":13392:13433  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155/ERC1155.sol\":13407:13412  owner */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":13392:13433  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"ERC1155/ERC1155.sol\":13424:13432  approved */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":13392:13433  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC1155/ERC1155.sol\":13110:13441  function _setApprovalForAll(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":5044:6018  function _safeTransferFrom(\r... */\n    tag_109:\n        /* \"ERC1155/ERC1155.sol\":5246:5247  0 */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":5232:5248  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155/ERC1155.sol\":5232:5234  to */\n      dup5\n        /* \"ERC1155/ERC1155.sol\":5232:5248  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC1155/ERC1155.sol\":5224:5290  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_118\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"ERC1155/ERC1155.sol\":5303:5319  address operator */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":5322:5334  _msgSender() */\n      tag_147\n        /* \"ERC1155/ERC1155.sol\":5322:5332  _msgSender */\n      tag_71\n        /* \"ERC1155/ERC1155.sol\":5322:5334  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"ERC1155/ERC1155.sol\":5303:5334  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":5345:5365  uint256[] memory ids */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":5368:5389  _asSingletonArray(id) */\n      tag_148\n        /* \"ERC1155/ERC1155.sol\":5386:5388  id */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":5368:5385  _asSingletonArray */\n      tag_149\n        /* \"ERC1155/ERC1155.sol\":5368:5389  _asSingletonArray(id) */\n      jump\t// in\n    tag_148:\n        /* \"ERC1155/ERC1155.sol\":5345:5389  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":5400:5424  uint256[] memory amounts */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":5427:5452  _asSingletonArray(amount) */\n      tag_150\n        /* \"ERC1155/ERC1155.sol\":5445:5451  amount */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":5427:5444  _asSingletonArray */\n      tag_149\n        /* \"ERC1155/ERC1155.sol\":5427:5452  _asSingletonArray(amount) */\n      jump\t// in\n    tag_150:\n        /* \"ERC1155/ERC1155.sol\":5400:5452  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":5465:5525  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_151\n        /* \"ERC1155/ERC1155.sol\":5486:5494  operator */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":5496:5500  from */\n      dup10\n        /* \"ERC1155/ERC1155.sol\":5502:5504  to */\n      dup10\n        /* \"ERC1155/ERC1155.sol\":5506:5509  ids */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":5511:5518  amounts */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":5520:5524  data */\n      dup10\n        /* \"ERC1155/ERC1155.sol\":5465:5485  _beforeTokenTransfer */\n      tag_121\n        /* \"ERC1155/ERC1155.sol\":5465:5525  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_151:\n        /* \"ERC1155/ERC1155.sol\":5538:5557  uint256 fromBalance */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":5560:5569  _balances */\n      dup1\n        /* \"ERC1155/ERC1155.sol\":5560:5573  _balances[id] */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":5570:5572  id */\n      dup9\n        /* \"ERC1155/ERC1155.sol\":5560:5573  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155/ERC1155.sol\":5560:5579  _balances[id][from] */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":5574:5578  from */\n      dup11\n        /* \"ERC1155/ERC1155.sol\":5560:5579  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC1155/ERC1155.sol\":5538:5579  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":5613:5619  amount */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":5598:5609  fromBalance */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":5598:5619  fromBalance >= amount */\n      lt\n      iszero\n        /* \"ERC1155/ERC1155.sol\":5590:5666  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_129\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"ERC1155/ERC1155.sol\":5738:5744  amount */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":5724:5735  fromBalance */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":5724:5744  fromBalance - amount */\n      sub\n        /* \"ERC1155/ERC1155.sol\":5702:5711  _balances */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":5702:5715  _balances[id] */\n      dup1\n        /* \"ERC1155/ERC1155.sol\":5712:5714  id */\n      dup10\n        /* \"ERC1155/ERC1155.sol\":5702:5715  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155/ERC1155.sol\":5702:5721  _balances[id][from] */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":5716:5720  from */\n      dup12\n        /* \"ERC1155/ERC1155.sol\":5702:5721  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155/ERC1155.sol\":5702:5744  _balances[id][from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC1155/ERC1155.sol\":5787:5793  amount */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":5766:5775  _balances */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":5766:5779  _balances[id] */\n      dup1\n        /* \"ERC1155/ERC1155.sol\":5776:5778  id */\n      dup10\n        /* \"ERC1155/ERC1155.sol\":5766:5779  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC1155/ERC1155.sol\":5766:5783  _balances[id][to] */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":5780:5782  to */\n      dup11\n        /* \"ERC1155/ERC1155.sol\":5766:5783  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC1155/ERC1155.sol\":5766:5793  _balances[id][to] += amount */\n      dup3\n      dup3\n      sload\n      tag_154\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_154:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC1155/ERC1155.sol\":5842:5844  to */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":5811:5857  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155/ERC1155.sol\":5836:5840  from */\n      dup10\n        /* \"ERC1155/ERC1155.sol\":5811:5857  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC1155/ERC1155.sol\":5826:5834  operator */\n      dup6\n        /* \"ERC1155/ERC1155.sol\":5811:5857  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"ERC1155/ERC1155.sol\":5846:5848  id */\n      dup11\n        /* \"ERC1155/ERC1155.sol\":5850:5856  amount */\n      dup11\n        /* \"ERC1155/ERC1155.sol\":5811:5857  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      tag_155\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC1155/ERC1155.sol\":5870:5929  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_157\n        /* \"ERC1155/ERC1155.sol\":5890:5898  operator */\n      dup5\n        /* \"ERC1155/ERC1155.sol\":5900:5904  from */\n      dup11\n        /* \"ERC1155/ERC1155.sol\":5906:5908  to */\n      dup11\n        /* \"ERC1155/ERC1155.sol\":5910:5913  ids */\n      dup7\n        /* \"ERC1155/ERC1155.sol\":5915:5922  amounts */\n      dup7\n        /* \"ERC1155/ERC1155.sol\":5924:5928  data */\n      dup11\n        /* \"ERC1155/ERC1155.sol\":5870:5889  _afterTokenTransfer */\n      tag_136\n        /* \"ERC1155/ERC1155.sol\":5870:5929  _afterTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_157:\n        /* \"ERC1155/ERC1155.sol\":5942:6010  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_158\n        /* \"ERC1155/ERC1155.sol\":5973:5981  operator */\n      dup5\n        /* \"ERC1155/ERC1155.sol\":5983:5987  from */\n      dup11\n        /* \"ERC1155/ERC1155.sol\":5989:5991  to */\n      dup11\n        /* \"ERC1155/ERC1155.sol\":5993:5995  id */\n      dup11\n        /* \"ERC1155/ERC1155.sol\":5997:6003  amount */\n      dup11\n        /* \"ERC1155/ERC1155.sol\":6005:6009  data */\n      dup11\n        /* \"ERC1155/ERC1155.sol\":5942:5972  _doSafeTransferAcceptanceCheck */\n      tag_159\n        /* \"ERC1155/ERC1155.sol\":5942:6010  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_158:\n        /* \"ERC1155/ERC1155.sol\":5044:6018  function _safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":14397:14618  function _beforeTokenTransfer(\r... */\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":15573:15793  function _afterTokenTransfer(\r... */\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":16553:17366  function _doSafeBatchTransferAcceptanceCheck(\r... */\n    tag_138:\n        /* \"ERC1155/ERC1155.sol\":16793:16808  to.isContract() */\n      tag_163\n        /* \"ERC1155/ERC1155.sol\":16793:16795  to */\n      dup5\n        /* \"ERC1155/ERC1155.sol\":16793:16806  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_164\n        /* \"ERC1155/ERC1155.sol\":16793:16808  to.isContract() */\n      jump\t// in\n    tag_163:\n        /* \"ERC1155/ERC1155.sol\":16789:17359  if (to.isContract()) {\r... */\n      iszero\n      tag_165\n      jumpi\n        /* \"ERC1155/ERC1155.sol\":16846:16848  to */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":16829:16872  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"ERC1155/ERC1155.sol\":16873:16881  operator */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":16883:16887  from */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":16889:16892  ids */\n      dup7\n        /* \"ERC1155/ERC1155.sol\":16894:16901  amounts */\n      dup7\n        /* \"ERC1155/ERC1155.sol\":16903:16907  data */\n      dup7\n        /* \"ERC1155/ERC1155.sol\":16829:16908  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_169\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      0x01\n    tag_169:\n        /* \"ERC1155/ERC1155.sol\":16825:17348  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n      tag_172\n      jumpi\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_175\n      jumpi\n      pop\n      tag_178\n      tag_179\n      jump\t// in\n    tag_178:\n      dup1\n      tag_180\n      jumpi\n      pop\n      jump(tag_174)\n    tag_180:\n        /* \"ERC1155/ERC1155.sol\":17221:17227  reason */\n      dup1\n        /* \"ERC1155/ERC1155.sol\":17214:17228  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155/ERC1155.sol\":16825:17348  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n    tag_175:\n      pop\n    tag_174:\n        /* \"ERC1155/ERC1155.sol\":17270:17332  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155/ERC1155.sol\":16825:17348  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\r... */\n    tag_172:\n        /* \"ERC1155/ERC1155.sol\":17002:17050  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"ERC1155/ERC1155.sol\":16990:17050  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC1155/ERC1155.sol\":16990:16998  response */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":16990:17050  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC1155/ERC1155.sol\":16986:17145  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r... */\n      tag_185\n      jumpi\n        /* \"ERC1155/ERC1155.sol\":17075:17125  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155/ERC1155.sol\":16986:17145  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\r... */\n    tag_185:\n        /* \"ERC1155/ERC1155.sol\":16909:17160  returns (\r... */\n      pop\n        /* \"ERC1155/ERC1155.sol\":16789:17359  if (to.isContract()) {\r... */\n    tag_165:\n        /* \"ERC1155/ERC1155.sol\":16553:17366  function _doSafeBatchTransferAcceptanceCheck(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":17374:17572  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r... */\n    tag_149:\n        /* \"ERC1155/ERC1155.sol\":17440:17456  uint256[] memory */\n      0x60\n        /* \"ERC1155/ERC1155.sol\":17469:17491  uint256[] memory array */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":17508:17509  1 */\n      0x01\n        /* \"ERC1155/ERC1155.sol\":17494:17510  new uint256[](1) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_189\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_189:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_190\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_190:\n      pop\n        /* \"ERC1155/ERC1155.sol\":17469:17510  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"ERC1155/ERC1155.sol\":17532:17539  element */\n      dup3\n        /* \"ERC1155/ERC1155.sol\":17521:17526  array */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":17527:17528  0 */\n      0x00\n        /* \"ERC1155/ERC1155.sol\":17521:17529  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_191\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_191:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ERC1155/ERC1155.sol\":17521:17539  array[0] = element */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ERC1155/ERC1155.sol\":17559:17564  array */\n      dup1\n        /* \"ERC1155/ERC1155.sol\":17552:17564  return array */\n      swap2\n      pop\n      pop\n        /* \"ERC1155/ERC1155.sol\":17374:17572  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC1155/ERC1155.sol\":15801:16545  function _doSafeTransferAcceptanceCheck(\r... */\n    tag_159:\n        /* \"ERC1155/ERC1155.sol\":16016:16031  to.isContract() */\n      tag_193\n        /* \"ERC1155/ERC1155.sol\":16016:16018  to */\n      dup5\n        /* \"ERC1155/ERC1155.sol\":16016:16029  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_164\n        /* \"ERC1155/ERC1155.sol\":16016:16031  to.isContract() */\n      jump\t// in\n    tag_193:\n        /* \"ERC1155/ERC1155.sol\":16012:16538  if (to.isContract()) {\r... */\n      iszero\n      tag_194\n      jumpi\n        /* \"ERC1155/ERC1155.sol\":16069:16071  to */\n      dup4\n        /* \"ERC1155/ERC1155.sol\":16052:16090  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"ERC1155/ERC1155.sol\":16091:16099  operator */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":16101:16105  from */\n      dup8\n        /* \"ERC1155/ERC1155.sol\":16107:16109  id */\n      dup7\n        /* \"ERC1155/ERC1155.sol\":16111:16117  amount */\n      dup7\n        /* \"ERC1155/ERC1155.sol\":16119:16123  data */\n      dup7\n        /* \"ERC1155/ERC1155.sol\":16052:16124  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_198\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_199:\n      0x01\n    tag_198:\n        /* \"ERC1155/ERC1155.sol\":16048:16527  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r... */\n      tag_200\n      jumpi\n      tag_204\n      tag_177\n      jump\t// in\n    tag_204:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_203\n      jumpi\n      pop\n      tag_205\n      tag_179\n      jump\t// in\n    tag_205:\n      dup1\n      tag_206\n      jumpi\n      pop\n      jump(tag_202)\n    tag_206:\n        /* \"ERC1155/ERC1155.sol\":16400:16406  reason */\n      dup1\n        /* \"ERC1155/ERC1155.sol\":16393:16407  revert(reason) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155/ERC1155.sol\":16048:16527  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r... */\n    tag_203:\n      pop\n    tag_202:\n        /* \"ERC1155/ERC1155.sol\":16449:16511  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_183\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155/ERC1155.sol\":16048:16527  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\r... */\n    tag_200:\n        /* \"ERC1155/ERC1155.sol\":16186:16229  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"ERC1155/ERC1155.sol\":16174:16229  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"ERC1155/ERC1155.sol\":16174:16182  response */\n      dup2\n        /* \"ERC1155/ERC1155.sol\":16174:16229  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"ERC1155/ERC1155.sol\":16170:16324  if (response != IERC1155Receiver.onERC1155Received.selector) {\r... */\n      tag_210\n      jumpi\n        /* \"ERC1155/ERC1155.sol\":16254:16304  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_187\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC1155/ERC1155.sol\":16170:16324  if (response != IERC1155Receiver.onERC1155Received.selector) {\r... */\n    tag_210:\n        /* \"ERC1155/ERC1155.sol\":16125:16339  returns (bytes4 response) {\r... */\n      pop\n        /* \"ERC1155/ERC1155.sol\":16012:16538  if (to.isContract()) {\r... */\n    tag_194:\n        /* \"ERC1155/ERC1155.sol\":15801:16545  function _doSafeTransferAcceptanceCheck(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC1155/Address.sol\":1210:1536  function isContract(address account) internal view returns (bool) {\r... */\n    tag_164:\n        /* \"ERC1155/Address.sol\":1270:1274  bool */\n      0x00\n        /* \"ERC1155/Address.sol\":1527:1528  0 */\n      dup1\n        /* \"ERC1155/Address.sol\":1505:1512  account */\n      dup3\n        /* \"ERC1155/Address.sol\":1505:1524  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"ERC1155/Address.sol\":1505:1528  account.code.length > 0 */\n      gt\n        /* \"ERC1155/Address.sol\":1498:1528  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"ERC1155/Address.sol\":1210:1536  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:679   */\n    tag_214:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_216\n        /* \"#utility.yul\":161:225   */\n      tag_217\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":145:226   */\n      tag_219\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:352   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":414:415   */\n      0x00\n        /* \"#utility.yul\":411:412   */\n      dup1\n        /* \"#utility.yul\":404:416   */\n      revert\n        /* \"#utility.yul\":350:352   */\n    tag_220:\n        /* \"#utility.yul\":450:451   */\n      0x00\n        /* \"#utility.yul\":435:673   */\n    tag_221:\n        /* \"#utility.yul\":460:466   */\n      dup6\n        /* \"#utility.yul\":457:458   */\n      dup2\n        /* \"#utility.yul\":454:467   */\n      lt\n        /* \"#utility.yul\":435:673   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":528:531   */\n      dup2\n        /* \"#utility.yul\":557:594   */\n      tag_224\n        /* \"#utility.yul\":590:593   */\n      dup9\n        /* \"#utility.yul\":578:588   */\n      dup3\n        /* \"#utility.yul\":557:594   */\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":552:555   */\n      dup5\n        /* \"#utility.yul\":545:595   */\n      mstore\n        /* \"#utility.yul\":624:628   */\n      0x20\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":615:629   */\n      add\n        /* \"#utility.yul\":608:629   */\n      swap4\n      pop\n        /* \"#utility.yul\":658:662   */\n      0x20\n        /* \"#utility.yul\":653:656   */\n      dup4\n        /* \"#utility.yul\":649:663   */\n      add\n        /* \"#utility.yul\":642:663   */\n      swap3\n      pop\n        /* \"#utility.yul\":495:673   */\n      pop\n        /* \"#utility.yul\":482:483   */\n      0x01\n        /* \"#utility.yul\":479:480   */\n      dup2\n        /* \"#utility.yul\":475:484   */\n      add\n        /* \"#utility.yul\":470:484   */\n      swap1\n      pop\n        /* \"#utility.yul\":435:673   */\n      jump(tag_221)\n    tag_223:\n        /* \"#utility.yul\":439:453   */\n      pop\n        /* \"#utility.yul\":126:679   */\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":702:1357   */\n    tag_226:\n        /* \"#utility.yul\":798:803   */\n      0x00\n        /* \"#utility.yul\":823:904   */\n      tag_228\n        /* \"#utility.yul\":839:903   */\n      tag_229\n        /* \"#utility.yul\":896:902   */\n      dup5\n        /* \"#utility.yul\":839:903   */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":823:904   */\n      tag_219\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":814:904   */\n      swap1\n      pop\n        /* \"#utility.yul\":924:929   */\n      dup1\n        /* \"#utility.yul\":953:959   */\n      dup4\n        /* \"#utility.yul\":946:951   */\n      dup3\n        /* \"#utility.yul\":939:960   */\n      mstore\n        /* \"#utility.yul\":987:991   */\n      0x20\n        /* \"#utility.yul\":980:985   */\n      dup3\n        /* \"#utility.yul\":976:992   */\n      add\n        /* \"#utility.yul\":969:992   */\n      swap1\n      pop\n        /* \"#utility.yul\":1013:1019   */\n      dup3\n        /* \"#utility.yul\":1063:1066   */\n      dup6\n        /* \"#utility.yul\":1055:1059   */\n      0x20\n        /* \"#utility.yul\":1047:1053   */\n      dup7\n        /* \"#utility.yul\":1043:1060   */\n      mul\n        /* \"#utility.yul\":1038:1041   */\n      dup3\n        /* \"#utility.yul\":1034:1061   */\n      add\n        /* \"#utility.yul\":1031:1067   */\n      gt\n        /* \"#utility.yul\":1028:1030   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":1092:1093   */\n      0x00\n        /* \"#utility.yul\":1089:1090   */\n      dup1\n        /* \"#utility.yul\":1082:1094   */\n      revert\n        /* \"#utility.yul\":1028:1030   */\n    tag_231:\n        /* \"#utility.yul\":1128:1129   */\n      0x00\n        /* \"#utility.yul\":1113:1351   */\n    tag_232:\n        /* \"#utility.yul\":1138:1144   */\n      dup6\n        /* \"#utility.yul\":1135:1136   */\n      dup2\n        /* \"#utility.yul\":1132:1145   */\n      lt\n        /* \"#utility.yul\":1113:1351   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":1206:1209   */\n      dup2\n        /* \"#utility.yul\":1235:1272   */\n      tag_235\n        /* \"#utility.yul\":1268:1271   */\n      dup9\n        /* \"#utility.yul\":1256:1266   */\n      dup3\n        /* \"#utility.yul\":1235:1272   */\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1230:1233   */\n      dup5\n        /* \"#utility.yul\":1223:1273   */\n      mstore\n        /* \"#utility.yul\":1302:1306   */\n      0x20\n        /* \"#utility.yul\":1297:1300   */\n      dup5\n        /* \"#utility.yul\":1293:1307   */\n      add\n        /* \"#utility.yul\":1286:1307   */\n      swap4\n      pop\n        /* \"#utility.yul\":1336:1340   */\n      0x20\n        /* \"#utility.yul\":1331:1334   */\n      dup4\n        /* \"#utility.yul\":1327:1341   */\n      add\n        /* \"#utility.yul\":1320:1341   */\n      swap3\n      pop\n        /* \"#utility.yul\":1173:1351   */\n      pop\n        /* \"#utility.yul\":1160:1161   */\n      0x01\n        /* \"#utility.yul\":1157:1158   */\n      dup2\n        /* \"#utility.yul\":1153:1162   */\n      add\n        /* \"#utility.yul\":1148:1162   */\n      swap1\n      pop\n        /* \"#utility.yul\":1113:1351   */\n      jump(tag_232)\n    tag_234:\n        /* \"#utility.yul\":1117:1131   */\n      pop\n        /* \"#utility.yul\":804:1357   */\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1363:1706   */\n    tag_237:\n        /* \"#utility.yul\":1440:1445   */\n      0x00\n        /* \"#utility.yul\":1465:1530   */\n      tag_239\n        /* \"#utility.yul\":1481:1529   */\n      tag_240\n        /* \"#utility.yul\":1522:1528   */\n      dup5\n        /* \"#utility.yul\":1481:1529   */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1465:1530   */\n      tag_219\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1456:1530   */\n      swap1\n      pop\n        /* \"#utility.yul\":1553:1559   */\n      dup3\n        /* \"#utility.yul\":1546:1551   */\n      dup2\n        /* \"#utility.yul\":1539:1560   */\n      mstore\n        /* \"#utility.yul\":1591:1595   */\n      0x20\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1580:1596   */\n      add\n        /* \"#utility.yul\":1629:1632   */\n      dup5\n        /* \"#utility.yul\":1620:1626   */\n      dup5\n        /* \"#utility.yul\":1615:1618   */\n      dup5\n        /* \"#utility.yul\":1611:1627   */\n      add\n        /* \"#utility.yul\":1608:1633   */\n      gt\n        /* \"#utility.yul\":1605:1607   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":1646:1647   */\n      0x00\n        /* \"#utility.yul\":1643:1644   */\n      dup1\n        /* \"#utility.yul\":1636:1648   */\n      revert\n        /* \"#utility.yul\":1605:1607   */\n    tag_242:\n        /* \"#utility.yul\":1659:1700   */\n      tag_243\n        /* \"#utility.yul\":1693:1699   */\n      dup5\n        /* \"#utility.yul\":1688:1691   */\n      dup3\n        /* \"#utility.yul\":1683:1686   */\n      dup6\n        /* \"#utility.yul\":1659:1700   */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1446:1706   */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1712:1851   */\n    tag_225:\n        /* \"#utility.yul\":1758:1763   */\n      0x00\n        /* \"#utility.yul\":1796:1802   */\n      dup2\n        /* \"#utility.yul\":1783:1803   */\n      calldataload\n        /* \"#utility.yul\":1774:1803   */\n      swap1\n      pop\n        /* \"#utility.yul\":1812:1845   */\n      tag_246\n        /* \"#utility.yul\":1839:1844   */\n      dup2\n        /* \"#utility.yul\":1812:1845   */\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1764:1851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2177   */\n    tag_248:\n        /* \"#utility.yul\":1945:1950   */\n      0x00\n        /* \"#utility.yul\":1994:1997   */\n      dup3\n        /* \"#utility.yul\":1987:1991   */\n      0x1f\n        /* \"#utility.yul\":1979:1985   */\n      dup4\n        /* \"#utility.yul\":1975:1992   */\n      add\n        /* \"#utility.yul\":1971:1998   */\n      slt\n        /* \"#utility.yul\":1961:1963   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":2012:2013   */\n      0x00\n        /* \"#utility.yul\":2009:2010   */\n      dup1\n        /* \"#utility.yul\":2002:2014   */\n      revert\n        /* \"#utility.yul\":1961:1963   */\n    tag_250:\n        /* \"#utility.yul\":2052:2058   */\n      dup2\n        /* \"#utility.yul\":2039:2059   */\n      calldataload\n        /* \"#utility.yul\":2077:2171   */\n      tag_251\n        /* \"#utility.yul\":2167:2170   */\n      dup5\n        /* \"#utility.yul\":2159:2165   */\n      dup3\n        /* \"#utility.yul\":2152:2156   */\n      0x20\n        /* \"#utility.yul\":2144:2150   */\n      dup7\n        /* \"#utility.yul\":2140:2157   */\n      add\n        /* \"#utility.yul\":2077:2171   */\n      tag_214\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2068:2171   */\n      swap2\n      pop\n        /* \"#utility.yul\":1951:2177   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2200:2503   */\n    tag_252:\n        /* \"#utility.yul\":2271:2276   */\n      0x00\n        /* \"#utility.yul\":2320:2323   */\n      dup3\n        /* \"#utility.yul\":2313:2317   */\n      0x1f\n        /* \"#utility.yul\":2305:2311   */\n      dup4\n        /* \"#utility.yul\":2301:2318   */\n      add\n        /* \"#utility.yul\":2297:2324   */\n      slt\n        /* \"#utility.yul\":2287:2289   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":2338:2339   */\n      0x00\n        /* \"#utility.yul\":2335:2336   */\n      dup1\n        /* \"#utility.yul\":2328:2340   */\n      revert\n        /* \"#utility.yul\":2287:2289   */\n    tag_254:\n        /* \"#utility.yul\":2378:2384   */\n      dup2\n        /* \"#utility.yul\":2365:2385   */\n      calldataload\n        /* \"#utility.yul\":2403:2497   */\n      tag_255\n        /* \"#utility.yul\":2493:2496   */\n      dup5\n        /* \"#utility.yul\":2485:2491   */\n      dup3\n        /* \"#utility.yul\":2478:2482   */\n      0x20\n        /* \"#utility.yul\":2470:2476   */\n      dup7\n        /* \"#utility.yul\":2466:2483   */\n      add\n        /* \"#utility.yul\":2403:2497   */\n      tag_226\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2394:2497   */\n      swap2\n      pop\n        /* \"#utility.yul\":2277:2503   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2509:2642   */\n    tag_256:\n        /* \"#utility.yul\":2552:2557   */\n      0x00\n        /* \"#utility.yul\":2590:2596   */\n      dup2\n        /* \"#utility.yul\":2577:2597   */\n      calldataload\n        /* \"#utility.yul\":2568:2597   */\n      swap1\n      pop\n        /* \"#utility.yul\":2606:2636   */\n      tag_258\n        /* \"#utility.yul\":2630:2635   */\n      dup2\n        /* \"#utility.yul\":2606:2636   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2558:2642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2648:2785   */\n    tag_260:\n        /* \"#utility.yul\":2693:2698   */\n      0x00\n        /* \"#utility.yul\":2731:2737   */\n      dup2\n        /* \"#utility.yul\":2718:2738   */\n      calldataload\n        /* \"#utility.yul\":2709:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2747:2779   */\n      tag_262\n        /* \"#utility.yul\":2773:2778   */\n      dup2\n        /* \"#utility.yul\":2747:2779   */\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2699:2785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2932   */\n    tag_264:\n        /* \"#utility.yul\":2847:2852   */\n      0x00\n        /* \"#utility.yul\":2878:2884   */\n      dup2\n        /* \"#utility.yul\":2872:2885   */\n      mload\n        /* \"#utility.yul\":2863:2885   */\n      swap1\n      pop\n        /* \"#utility.yul\":2894:2926   */\n      tag_266\n        /* \"#utility.yul\":2920:2925   */\n      dup2\n        /* \"#utility.yul\":2894:2926   */\n      tag_263\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2853:2932   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2951:3222   */\n    tag_267:\n        /* \"#utility.yul\":3006:3011   */\n      0x00\n        /* \"#utility.yul\":3055:3058   */\n      dup3\n        /* \"#utility.yul\":3048:3052   */\n      0x1f\n        /* \"#utility.yul\":3040:3046   */\n      dup4\n        /* \"#utility.yul\":3036:3053   */\n      add\n        /* \"#utility.yul\":3032:3059   */\n      slt\n        /* \"#utility.yul\":3022:3024   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":3073:3074   */\n      0x00\n        /* \"#utility.yul\":3070:3071   */\n      dup1\n        /* \"#utility.yul\":3063:3075   */\n      revert\n        /* \"#utility.yul\":3022:3024   */\n    tag_269:\n        /* \"#utility.yul\":3113:3119   */\n      dup2\n        /* \"#utility.yul\":3100:3120   */\n      calldataload\n        /* \"#utility.yul\":3138:3216   */\n      tag_270\n        /* \"#utility.yul\":3212:3215   */\n      dup5\n        /* \"#utility.yul\":3204:3210   */\n      dup3\n        /* \"#utility.yul\":3197:3201   */\n      0x20\n        /* \"#utility.yul\":3189:3195   */\n      dup7\n        /* \"#utility.yul\":3185:3202   */\n      add\n        /* \"#utility.yul\":3138:3216   */\n      tag_237\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3129:3216   */\n      swap2\n      pop\n        /* \"#utility.yul\":3012:3222   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3228:3367   */\n    tag_236:\n        /* \"#utility.yul\":3274:3279   */\n      0x00\n        /* \"#utility.yul\":3312:3318   */\n      dup2\n        /* \"#utility.yul\":3299:3319   */\n      calldataload\n        /* \"#utility.yul\":3290:3319   */\n      swap1\n      pop\n        /* \"#utility.yul\":3328:3361   */\n      tag_272\n        /* \"#utility.yul\":3355:3360   */\n      dup2\n        /* \"#utility.yul\":3328:3361   */\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3280:3367   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3373:3780   */\n    tag_46:\n        /* \"#utility.yul\":3441:3447   */\n      0x00\n        /* \"#utility.yul\":3449:3455   */\n      dup1\n        /* \"#utility.yul\":3498:3500   */\n      0x40\n        /* \"#utility.yul\":3486:3495   */\n      dup4\n        /* \"#utility.yul\":3477:3484   */\n      dup6\n        /* \"#utility.yul\":3473:3496   */\n      sub\n        /* \"#utility.yul\":3469:3501   */\n      slt\n        /* \"#utility.yul\":3466:3468   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":3514:3515   */\n      0x00\n        /* \"#utility.yul\":3511:3512   */\n      dup1\n        /* \"#utility.yul\":3504:3516   */\n      revert\n        /* \"#utility.yul\":3466:3468   */\n    tag_275:\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3582:3635   */\n      tag_276\n        /* \"#utility.yul\":3627:3634   */\n      dup6\n        /* \"#utility.yul\":3618:3624   */\n      dup3\n        /* \"#utility.yul\":3607:3616   */\n      dup7\n        /* \"#utility.yul\":3603:3625   */\n      add\n        /* \"#utility.yul\":3582:3635   */\n      tag_225\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3572:3635   */\n      swap3\n      pop\n        /* \"#utility.yul\":3528:3645   */\n      pop\n        /* \"#utility.yul\":3684:3686   */\n      0x20\n        /* \"#utility.yul\":3710:3763   */\n      tag_277\n        /* \"#utility.yul\":3755:3762   */\n      dup6\n        /* \"#utility.yul\":3746:3752   */\n      dup3\n        /* \"#utility.yul\":3735:3744   */\n      dup7\n        /* \"#utility.yul\":3731:3753   */\n      add\n        /* \"#utility.yul\":3710:3763   */\n      tag_225\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":3700:3763   */\n      swap2\n      pop\n        /* \"#utility.yul\":3655:3773   */\n      pop\n        /* \"#utility.yul\":3456:3780   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3786:5027   */\n    tag_32:\n        /* \"#utility.yul\":3940:3946   */\n      0x00\n        /* \"#utility.yul\":3948:3954   */\n      dup1\n        /* \"#utility.yul\":3956:3962   */\n      0x00\n        /* \"#utility.yul\":3964:3970   */\n      dup1\n        /* \"#utility.yul\":3972:3978   */\n      0x00\n        /* \"#utility.yul\":4021:4024   */\n      0xa0\n        /* \"#utility.yul\":4009:4018   */\n      dup7\n        /* \"#utility.yul\":4000:4007   */\n      dup9\n        /* \"#utility.yul\":3996:4019   */\n      sub\n        /* \"#utility.yul\":3992:4025   */\n      slt\n        /* \"#utility.yul\":3989:3991   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":4038:4039   */\n      0x00\n        /* \"#utility.yul\":4035:4036   */\n      dup1\n        /* \"#utility.yul\":4028:4040   */\n      revert\n        /* \"#utility.yul\":3989:3991   */\n    tag_279:\n        /* \"#utility.yul\":4081:4082   */\n      0x00\n        /* \"#utility.yul\":4106:4159   */\n      tag_280\n        /* \"#utility.yul\":4151:4158   */\n      dup9\n        /* \"#utility.yul\":4142:4148   */\n      dup3\n        /* \"#utility.yul\":4131:4140   */\n      dup10\n        /* \"#utility.yul\":4127:4149   */\n      add\n        /* \"#utility.yul\":4106:4159   */\n      tag_225\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4096:4159   */\n      swap6\n      pop\n        /* \"#utility.yul\":4052:4169   */\n      pop\n        /* \"#utility.yul\":4208:4210   */\n      0x20\n        /* \"#utility.yul\":4234:4287   */\n      tag_281\n        /* \"#utility.yul\":4279:4286   */\n      dup9\n        /* \"#utility.yul\":4270:4276   */\n      dup3\n        /* \"#utility.yul\":4259:4268   */\n      dup10\n        /* \"#utility.yul\":4255:4277   */\n      add\n        /* \"#utility.yul\":4234:4287   */\n      tag_225\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4224:4287   */\n      swap5\n      pop\n        /* \"#utility.yul\":4179:4297   */\n      pop\n        /* \"#utility.yul\":4364:4366   */\n      0x40\n        /* \"#utility.yul\":4353:4362   */\n      dup7\n        /* \"#utility.yul\":4349:4367   */\n      add\n        /* \"#utility.yul\":4336:4368   */\n      calldataload\n        /* \"#utility.yul\":4395:4413   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4387:4393   */\n      dup2\n        /* \"#utility.yul\":4384:4414   */\n      gt\n        /* \"#utility.yul\":4381:4383   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":4427:4428   */\n      0x00\n        /* \"#utility.yul\":4424:4425   */\n      dup1\n        /* \"#utility.yul\":4417:4429   */\n      revert\n        /* \"#utility.yul\":4381:4383   */\n    tag_282:\n        /* \"#utility.yul\":4455:4533   */\n      tag_283\n        /* \"#utility.yul\":4525:4532   */\n      dup9\n        /* \"#utility.yul\":4516:4522   */\n      dup3\n        /* \"#utility.yul\":4505:4514   */\n      dup10\n        /* \"#utility.yul\":4501:4523   */\n      add\n        /* \"#utility.yul\":4455:4533   */\n      tag_252\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4445:4533   */\n      swap4\n      pop\n        /* \"#utility.yul\":4307:4543   */\n      pop\n        /* \"#utility.yul\":4610:4612   */\n      0x60\n        /* \"#utility.yul\":4599:4608   */\n      dup7\n        /* \"#utility.yul\":4595:4613   */\n      add\n        /* \"#utility.yul\":4582:4614   */\n      calldataload\n        /* \"#utility.yul\":4641:4659   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4633:4639   */\n      dup2\n        /* \"#utility.yul\":4630:4660   */\n      gt\n        /* \"#utility.yul\":4627:4629   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":4673:4674   */\n      0x00\n        /* \"#utility.yul\":4670:4671   */\n      dup1\n        /* \"#utility.yul\":4663:4675   */\n      revert\n        /* \"#utility.yul\":4627:4629   */\n    tag_284:\n        /* \"#utility.yul\":4701:4779   */\n      tag_285\n        /* \"#utility.yul\":4771:4778   */\n      dup9\n        /* \"#utility.yul\":4762:4768   */\n      dup3\n        /* \"#utility.yul\":4751:4760   */\n      dup10\n        /* \"#utility.yul\":4747:4769   */\n      add\n        /* \"#utility.yul\":4701:4779   */\n      tag_252\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":4691:4779   */\n      swap3\n      pop\n        /* \"#utility.yul\":4553:4789   */\n      pop\n        /* \"#utility.yul\":4856:4859   */\n      0x80\n        /* \"#utility.yul\":4845:4854   */\n      dup7\n        /* \"#utility.yul\":4841:4860   */\n      add\n        /* \"#utility.yul\":4828:4861   */\n      calldataload\n        /* \"#utility.yul\":4888:4906   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4880:4886   */\n      dup2\n        /* \"#utility.yul\":4877:4907   */\n      gt\n        /* \"#utility.yul\":4874:4876   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":4920:4921   */\n      0x00\n        /* \"#utility.yul\":4917:4918   */\n      dup1\n        /* \"#utility.yul\":4910:4922   */\n      revert\n        /* \"#utility.yul\":4874:4876   */\n    tag_286:\n        /* \"#utility.yul\":4948:5010   */\n      tag_287\n        /* \"#utility.yul\":5002:5009   */\n      dup9\n        /* \"#utility.yul\":4993:4999   */\n      dup3\n        /* \"#utility.yul\":4982:4991   */\n      dup10\n        /* \"#utility.yul\":4978:5000   */\n      add\n        /* \"#utility.yul\":4948:5010   */\n      tag_267\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4938:5010   */\n      swap2\n      pop\n        /* \"#utility.yul\":4799:5020   */\n      pop\n        /* \"#utility.yul\":3979:5027   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5033:5988   */\n    tag_51:\n        /* \"#utility.yul\":5137:5143   */\n      0x00\n        /* \"#utility.yul\":5145:5151   */\n      dup1\n        /* \"#utility.yul\":5153:5159   */\n      0x00\n        /* \"#utility.yul\":5161:5167   */\n      dup1\n        /* \"#utility.yul\":5169:5175   */\n      0x00\n        /* \"#utility.yul\":5218:5221   */\n      0xa0\n        /* \"#utility.yul\":5206:5215   */\n      dup7\n        /* \"#utility.yul\":5197:5204   */\n      dup9\n        /* \"#utility.yul\":5193:5216   */\n      sub\n        /* \"#utility.yul\":5189:5222   */\n      slt\n        /* \"#utility.yul\":5186:5188   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":5235:5236   */\n      0x00\n        /* \"#utility.yul\":5232:5233   */\n      dup1\n        /* \"#utility.yul\":5225:5237   */\n      revert\n        /* \"#utility.yul\":5186:5188   */\n    tag_289:\n        /* \"#utility.yul\":5278:5279   */\n      0x00\n        /* \"#utility.yul\":5303:5356   */\n      tag_290\n        /* \"#utility.yul\":5348:5355   */\n      dup9\n        /* \"#utility.yul\":5339:5345   */\n      dup3\n        /* \"#utility.yul\":5328:5337   */\n      dup10\n        /* \"#utility.yul\":5324:5346   */\n      add\n        /* \"#utility.yul\":5303:5356   */\n      tag_225\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":5293:5356   */\n      swap6\n      pop\n        /* \"#utility.yul\":5249:5366   */\n      pop\n        /* \"#utility.yul\":5405:5407   */\n      0x20\n        /* \"#utility.yul\":5431:5484   */\n      tag_291\n        /* \"#utility.yul\":5476:5483   */\n      dup9\n        /* \"#utility.yul\":5467:5473   */\n      dup3\n        /* \"#utility.yul\":5456:5465   */\n      dup10\n        /* \"#utility.yul\":5452:5474   */\n      add\n        /* \"#utility.yul\":5431:5484   */\n      tag_225\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5421:5484   */\n      swap5\n      pop\n        /* \"#utility.yul\":5376:5494   */\n      pop\n        /* \"#utility.yul\":5533:5535   */\n      0x40\n        /* \"#utility.yul\":5559:5612   */\n      tag_292\n        /* \"#utility.yul\":5604:5611   */\n      dup9\n        /* \"#utility.yul\":5595:5601   */\n      dup3\n        /* \"#utility.yul\":5584:5593   */\n      dup10\n        /* \"#utility.yul\":5580:5602   */\n      add\n        /* \"#utility.yul\":5559:5612   */\n      tag_236\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5549:5612   */\n      swap4\n      pop\n        /* \"#utility.yul\":5504:5622   */\n      pop\n        /* \"#utility.yul\":5661:5663   */\n      0x60\n        /* \"#utility.yul\":5687:5740   */\n      tag_293\n        /* \"#utility.yul\":5732:5739   */\n      dup9\n        /* \"#utility.yul\":5723:5729   */\n      dup3\n        /* \"#utility.yul\":5712:5721   */\n      dup10\n        /* \"#utility.yul\":5708:5730   */\n      add\n        /* \"#utility.yul\":5687:5740   */\n      tag_236\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5677:5740   */\n      swap3\n      pop\n        /* \"#utility.yul\":5632:5750   */\n      pop\n        /* \"#utility.yul\":5817:5820   */\n      0x80\n        /* \"#utility.yul\":5806:5815   */\n      dup7\n        /* \"#utility.yul\":5802:5821   */\n      add\n        /* \"#utility.yul\":5789:5822   */\n      calldataload\n        /* \"#utility.yul\":5849:5867   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5841:5847   */\n      dup2\n        /* \"#utility.yul\":5838:5868   */\n      gt\n        /* \"#utility.yul\":5835:5837   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":5881:5882   */\n      0x00\n        /* \"#utility.yul\":5878:5879   */\n      dup1\n        /* \"#utility.yul\":5871:5883   */\n      revert\n        /* \"#utility.yul\":5835:5837   */\n    tag_294:\n        /* \"#utility.yul\":5909:5971   */\n      tag_295\n        /* \"#utility.yul\":5963:5970   */\n      dup9\n        /* \"#utility.yul\":5954:5960   */\n      dup3\n        /* \"#utility.yul\":5943:5952   */\n      dup10\n        /* \"#utility.yul\":5939:5961   */\n      add\n        /* \"#utility.yul\":5909:5971   */\n      tag_267\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5899:5971   */\n      swap2\n      pop\n        /* \"#utility.yul\":5760:5981   */\n      pop\n        /* \"#utility.yul\":5176:5988   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5994:6395   */\n    tag_42:\n        /* \"#utility.yul\":6059:6065   */\n      0x00\n        /* \"#utility.yul\":6067:6073   */\n      dup1\n        /* \"#utility.yul\":6116:6118   */\n      0x40\n        /* \"#utility.yul\":6104:6113   */\n      dup4\n        /* \"#utility.yul\":6095:6102   */\n      dup6\n        /* \"#utility.yul\":6091:6114   */\n      sub\n        /* \"#utility.yul\":6087:6119   */\n      slt\n        /* \"#utility.yul\":6084:6086   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":6132:6133   */\n      0x00\n        /* \"#utility.yul\":6129:6130   */\n      dup1\n        /* \"#utility.yul\":6122:6134   */\n      revert\n        /* \"#utility.yul\":6084:6086   */\n    tag_297:\n        /* \"#utility.yul\":6175:6176   */\n      0x00\n        /* \"#utility.yul\":6200:6253   */\n      tag_298\n        /* \"#utility.yul\":6245:6252   */\n      dup6\n        /* \"#utility.yul\":6236:6242   */\n      dup3\n        /* \"#utility.yul\":6225:6234   */\n      dup7\n        /* \"#utility.yul\":6221:6243   */\n      add\n        /* \"#utility.yul\":6200:6253   */\n      tag_225\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":6190:6253   */\n      swap3\n      pop\n        /* \"#utility.yul\":6146:6263   */\n      pop\n        /* \"#utility.yul\":6302:6304   */\n      0x20\n        /* \"#utility.yul\":6328:6378   */\n      tag_299\n        /* \"#utility.yul\":6370:6377   */\n      dup6\n        /* \"#utility.yul\":6361:6367   */\n      dup3\n        /* \"#utility.yul\":6350:6359   */\n      dup7\n        /* \"#utility.yul\":6346:6368   */\n      add\n        /* \"#utility.yul\":6328:6378   */\n      tag_256\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":6318:6378   */\n      swap2\n      pop\n        /* \"#utility.yul\":6273:6388   */\n      pop\n        /* \"#utility.yul\":6074:6395   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6401:6808   */\n    tag_14:\n        /* \"#utility.yul\":6469:6475   */\n      0x00\n        /* \"#utility.yul\":6477:6483   */\n      dup1\n        /* \"#utility.yul\":6526:6528   */\n      0x40\n        /* \"#utility.yul\":6514:6523   */\n      dup4\n        /* \"#utility.yul\":6505:6512   */\n      dup6\n        /* \"#utility.yul\":6501:6524   */\n      sub\n        /* \"#utility.yul\":6497:6529   */\n      slt\n        /* \"#utility.yul\":6494:6496   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":6542:6543   */\n      0x00\n        /* \"#utility.yul\":6539:6540   */\n      dup1\n        /* \"#utility.yul\":6532:6544   */\n      revert\n        /* \"#utility.yul\":6494:6496   */\n    tag_301:\n        /* \"#utility.yul\":6585:6586   */\n      0x00\n        /* \"#utility.yul\":6610:6663   */\n      tag_302\n        /* \"#utility.yul\":6655:6662   */\n      dup6\n        /* \"#utility.yul\":6646:6652   */\n      dup3\n        /* \"#utility.yul\":6635:6644   */\n      dup7\n        /* \"#utility.yul\":6631:6653   */\n      add\n        /* \"#utility.yul\":6610:6663   */\n      tag_225\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6600:6663   */\n      swap3\n      pop\n        /* \"#utility.yul\":6556:6673   */\n      pop\n        /* \"#utility.yul\":6712:6714   */\n      0x20\n        /* \"#utility.yul\":6738:6791   */\n      tag_303\n        /* \"#utility.yul\":6783:6790   */\n      dup6\n        /* \"#utility.yul\":6774:6780   */\n      dup3\n        /* \"#utility.yul\":6763:6772   */\n      dup7\n        /* \"#utility.yul\":6759:6781   */\n      add\n        /* \"#utility.yul\":6738:6791   */\n      tag_236\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6728:6791   */\n      swap2\n      pop\n        /* \"#utility.yul\":6683:6801   */\n      pop\n        /* \"#utility.yul\":6484:6808   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6814:7507   */\n    tag_36:\n        /* \"#utility.yul\":6932:6938   */\n      0x00\n        /* \"#utility.yul\":6940:6946   */\n      dup1\n        /* \"#utility.yul\":6989:6991   */\n      0x40\n        /* \"#utility.yul\":6977:6986   */\n      dup4\n        /* \"#utility.yul\":6968:6975   */\n      dup6\n        /* \"#utility.yul\":6964:6987   */\n      sub\n        /* \"#utility.yul\":6960:6992   */\n      slt\n        /* \"#utility.yul\":6957:6959   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":7005:7006   */\n      0x00\n        /* \"#utility.yul\":7002:7003   */\n      dup1\n        /* \"#utility.yul\":6995:7007   */\n      revert\n        /* \"#utility.yul\":6957:6959   */\n    tag_305:\n        /* \"#utility.yul\":7076:7077   */\n      0x00\n        /* \"#utility.yul\":7065:7074   */\n      dup4\n        /* \"#utility.yul\":7061:7078   */\n      add\n        /* \"#utility.yul\":7048:7079   */\n      calldataload\n        /* \"#utility.yul\":7106:7124   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7098:7104   */\n      dup2\n        /* \"#utility.yul\":7095:7125   */\n      gt\n        /* \"#utility.yul\":7092:7094   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":7138:7139   */\n      0x00\n        /* \"#utility.yul\":7135:7136   */\n      dup1\n        /* \"#utility.yul\":7128:7140   */\n      revert\n        /* \"#utility.yul\":7092:7094   */\n    tag_306:\n        /* \"#utility.yul\":7166:7244   */\n      tag_307\n        /* \"#utility.yul\":7236:7243   */\n      dup6\n        /* \"#utility.yul\":7227:7233   */\n      dup3\n        /* \"#utility.yul\":7216:7225   */\n      dup7\n        /* \"#utility.yul\":7212:7234   */\n      add\n        /* \"#utility.yul\":7166:7244   */\n      tag_248\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7156:7244   */\n      swap3\n      pop\n        /* \"#utility.yul\":7019:7254   */\n      pop\n        /* \"#utility.yul\":7321:7323   */\n      0x20\n        /* \"#utility.yul\":7310:7319   */\n      dup4\n        /* \"#utility.yul\":7306:7324   */\n      add\n        /* \"#utility.yul\":7293:7325   */\n      calldataload\n        /* \"#utility.yul\":7352:7370   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7344:7350   */\n      dup2\n        /* \"#utility.yul\":7341:7371   */\n      gt\n        /* \"#utility.yul\":7338:7340   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":7384:7385   */\n      0x00\n        /* \"#utility.yul\":7381:7382   */\n      dup1\n        /* \"#utility.yul\":7374:7386   */\n      revert\n        /* \"#utility.yul\":7338:7340   */\n    tag_308:\n        /* \"#utility.yul\":7412:7490   */\n      tag_309\n        /* \"#utility.yul\":7482:7489   */\n      dup6\n        /* \"#utility.yul\":7473:7479   */\n      dup3\n        /* \"#utility.yul\":7462:7471   */\n      dup7\n        /* \"#utility.yul\":7458:7480   */\n      add\n        /* \"#utility.yul\":7412:7490   */\n      tag_252\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7402:7490   */\n      swap2\n      pop\n        /* \"#utility.yul\":7264:7500   */\n      pop\n        /* \"#utility.yul\":6947:7507   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7513:7773   */\n    tag_20:\n        /* \"#utility.yul\":7571:7577   */\n      0x00\n        /* \"#utility.yul\":7620:7622   */\n      0x20\n        /* \"#utility.yul\":7608:7617   */\n      dup3\n        /* \"#utility.yul\":7599:7606   */\n      dup5\n        /* \"#utility.yul\":7595:7618   */\n      sub\n        /* \"#utility.yul\":7591:7623   */\n      slt\n        /* \"#utility.yul\":7588:7590   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":7636:7637   */\n      0x00\n        /* \"#utility.yul\":7633:7634   */\n      dup1\n        /* \"#utility.yul\":7626:7638   */\n      revert\n        /* \"#utility.yul\":7588:7590   */\n    tag_311:\n        /* \"#utility.yul\":7679:7680   */\n      0x00\n        /* \"#utility.yul\":7704:7756   */\n      tag_312\n        /* \"#utility.yul\":7748:7755   */\n      dup5\n        /* \"#utility.yul\":7739:7745   */\n      dup3\n        /* \"#utility.yul\":7728:7737   */\n      dup6\n        /* \"#utility.yul\":7724:7746   */\n      add\n        /* \"#utility.yul\":7704:7756   */\n      tag_260\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7694:7756   */\n      swap2\n      pop\n        /* \"#utility.yul\":7650:7766   */\n      pop\n        /* \"#utility.yul\":7578:7773   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7779:8061   */\n    tag_171:\n        /* \"#utility.yul\":7848:7854   */\n      0x00\n        /* \"#utility.yul\":7897:7899   */\n      0x20\n        /* \"#utility.yul\":7885:7894   */\n      dup3\n        /* \"#utility.yul\":7876:7883   */\n      dup5\n        /* \"#utility.yul\":7872:7895   */\n      sub\n        /* \"#utility.yul\":7868:7900   */\n      slt\n        /* \"#utility.yul\":7865:7867   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":7913:7914   */\n      0x00\n        /* \"#utility.yul\":7910:7911   */\n      dup1\n        /* \"#utility.yul\":7903:7915   */\n      revert\n        /* \"#utility.yul\":7865:7867   */\n    tag_314:\n        /* \"#utility.yul\":7956:7957   */\n      0x00\n        /* \"#utility.yul\":7981:8044   */\n      tag_315\n        /* \"#utility.yul\":8036:8043   */\n      dup5\n        /* \"#utility.yul\":8027:8033   */\n      dup3\n        /* \"#utility.yul\":8016:8025   */\n      dup6\n        /* \"#utility.yul\":8012:8034   */\n      add\n        /* \"#utility.yul\":7981:8044   */\n      tag_264\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":7971:8044   */\n      swap2\n      pop\n        /* \"#utility.yul\":7927:8054   */\n      pop\n        /* \"#utility.yul\":7855:8061   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8067:8329   */\n    tag_26:\n        /* \"#utility.yul\":8126:8132   */\n      0x00\n        /* \"#utility.yul\":8175:8177   */\n      0x20\n        /* \"#utility.yul\":8163:8172   */\n      dup3\n        /* \"#utility.yul\":8154:8161   */\n      dup5\n        /* \"#utility.yul\":8150:8173   */\n      sub\n        /* \"#utility.yul\":8146:8178   */\n      slt\n        /* \"#utility.yul\":8143:8145   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":8191:8192   */\n      0x00\n        /* \"#utility.yul\":8188:8189   */\n      dup1\n        /* \"#utility.yul\":8181:8193   */\n      revert\n        /* \"#utility.yul\":8143:8145   */\n    tag_317:\n        /* \"#utility.yul\":8234:8235   */\n      0x00\n        /* \"#utility.yul\":8259:8312   */\n      tag_318\n        /* \"#utility.yul\":8304:8311   */\n      dup5\n        /* \"#utility.yul\":8295:8301   */\n      dup3\n        /* \"#utility.yul\":8284:8293   */\n      dup6\n        /* \"#utility.yul\":8280:8302   */\n      add\n        /* \"#utility.yul\":8259:8312   */\n      tag_236\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":8249:8312   */\n      swap2\n      pop\n        /* \"#utility.yul\":8205:8322   */\n      pop\n        /* \"#utility.yul\":8133:8329   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8335:8514   */\n    tag_319:\n        /* \"#utility.yul\":8404:8414   */\n      0x00\n        /* \"#utility.yul\":8425:8471   */\n      tag_321\n        /* \"#utility.yul\":8467:8470   */\n      dup4\n        /* \"#utility.yul\":8459:8465   */\n      dup4\n        /* \"#utility.yul\":8425:8471   */\n      tag_322\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8503:8507   */\n      0x20\n        /* \"#utility.yul\":8498:8501   */\n      dup4\n        /* \"#utility.yul\":8494:8508   */\n      add\n        /* \"#utility.yul\":8480:8508   */\n      swap1\n      pop\n        /* \"#utility.yul\":8415:8514   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8520:8638   */\n    tag_323:\n        /* \"#utility.yul\":8607:8631   */\n      tag_325\n        /* \"#utility.yul\":8625:8630   */\n      dup2\n        /* \"#utility.yul\":8607:8631   */\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":8602:8605   */\n      dup3\n        /* \"#utility.yul\":8595:8632   */\n      mstore\n        /* \"#utility.yul\":8585:8638   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8674:9406   */\n    tag_327:\n        /* \"#utility.yul\":8793:8796   */\n      0x00\n        /* \"#utility.yul\":8822:8876   */\n      tag_329\n        /* \"#utility.yul\":8870:8875   */\n      dup3\n        /* \"#utility.yul\":8822:8876   */\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":8892:8978   */\n      tag_331\n        /* \"#utility.yul\":8971:8977   */\n      dup2\n        /* \"#utility.yul\":8966:8969   */\n      dup6\n        /* \"#utility.yul\":8892:8978   */\n      tag_332\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8885:8978   */\n      swap4\n      pop\n        /* \"#utility.yul\":9002:9058   */\n      tag_333\n        /* \"#utility.yul\":9052:9057   */\n      dup4\n        /* \"#utility.yul\":9002:9058   */\n      tag_334\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":9081:9088   */\n      dup1\n        /* \"#utility.yul\":9112:9113   */\n      0x00\n        /* \"#utility.yul\":9097:9381   */\n    tag_335:\n        /* \"#utility.yul\":9122:9128   */\n      dup4\n        /* \"#utility.yul\":9119:9120   */\n      dup2\n        /* \"#utility.yul\":9116:9129   */\n      lt\n        /* \"#utility.yul\":9097:9381   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":9198:9204   */\n      dup2\n        /* \"#utility.yul\":9192:9205   */\n      mload\n        /* \"#utility.yul\":9225:9288   */\n      tag_338\n        /* \"#utility.yul\":9284:9287   */\n      dup9\n        /* \"#utility.yul\":9269:9282   */\n      dup3\n        /* \"#utility.yul\":9225:9288   */\n      tag_319\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":9218:9288   */\n      swap8\n      pop\n        /* \"#utility.yul\":9311:9371   */\n      tag_339\n        /* \"#utility.yul\":9364:9370   */\n      dup4\n        /* \"#utility.yul\":9311:9371   */\n      tag_340\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":9301:9371   */\n      swap3\n      pop\n        /* \"#utility.yul\":9157:9381   */\n      pop\n        /* \"#utility.yul\":9144:9145   */\n      0x01\n        /* \"#utility.yul\":9141:9142   */\n      dup2\n        /* \"#utility.yul\":9137:9146   */\n      add\n        /* \"#utility.yul\":9132:9146   */\n      swap1\n      pop\n        /* \"#utility.yul\":9097:9381   */\n      jump(tag_335)\n    tag_337:\n        /* \"#utility.yul\":9101:9115   */\n      pop\n        /* \"#utility.yul\":9397:9400   */\n      dup6\n        /* \"#utility.yul\":9390:9400   */\n      swap4\n      pop\n        /* \"#utility.yul\":8798:9406   */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9412:9521   */\n    tag_341:\n        /* \"#utility.yul\":9493:9514   */\n      tag_343\n        /* \"#utility.yul\":9508:9513   */\n      dup2\n        /* \"#utility.yul\":9493:9514   */\n      tag_344\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":9488:9491   */\n      dup3\n        /* \"#utility.yul\":9481:9515   */\n      mstore\n        /* \"#utility.yul\":9471:9521   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9527:9887   */\n    tag_345:\n        /* \"#utility.yul\":9613:9616   */\n      0x00\n        /* \"#utility.yul\":9641:9679   */\n      tag_347\n        /* \"#utility.yul\":9673:9678   */\n      dup3\n        /* \"#utility.yul\":9641:9679   */\n      tag_348\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":9695:9765   */\n      tag_349\n        /* \"#utility.yul\":9758:9764   */\n      dup2\n        /* \"#utility.yul\":9753:9756   */\n      dup6\n        /* \"#utility.yul\":9695:9765   */\n      tag_350\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":9688:9765   */\n      swap4\n      pop\n        /* \"#utility.yul\":9774:9826   */\n      tag_351\n        /* \"#utility.yul\":9819:9825   */\n      dup2\n        /* \"#utility.yul\":9814:9817   */\n      dup6\n        /* \"#utility.yul\":9807:9811   */\n      0x20\n        /* \"#utility.yul\":9800:9805   */\n      dup7\n        /* \"#utility.yul\":9796:9812   */\n      add\n        /* \"#utility.yul\":9774:9826   */\n      tag_352\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":9851:9880   */\n      tag_353\n        /* \"#utility.yul\":9873:9879   */\n      dup2\n        /* \"#utility.yul\":9851:9880   */\n      tag_354\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":9846:9849   */\n      dup5\n        /* \"#utility.yul\":9842:9881   */\n      add\n        /* \"#utility.yul\":9835:9881   */\n      swap2\n      pop\n        /* \"#utility.yul\":9617:9887   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9893:10257   */\n    tag_355:\n        /* \"#utility.yul\":9981:9984   */\n      0x00\n        /* \"#utility.yul\":10009:10048   */\n      tag_357\n        /* \"#utility.yul\":10042:10047   */\n      dup3\n        /* \"#utility.yul\":10009:10048   */\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":10064:10135   */\n      tag_359\n        /* \"#utility.yul\":10128:10134   */\n      dup2\n        /* \"#utility.yul\":10123:10126   */\n      dup6\n        /* \"#utility.yul\":10064:10135   */\n      tag_360\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":10057:10135   */\n      swap4\n      pop\n        /* \"#utility.yul\":10144:10196   */\n      tag_361\n        /* \"#utility.yul\":10189:10195   */\n      dup2\n        /* \"#utility.yul\":10184:10187   */\n      dup6\n        /* \"#utility.yul\":10177:10181   */\n      0x20\n        /* \"#utility.yul\":10170:10175   */\n      dup7\n        /* \"#utility.yul\":10166:10182   */\n      add\n        /* \"#utility.yul\":10144:10196   */\n      tag_352\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":10221:10250   */\n      tag_362\n        /* \"#utility.yul\":10243:10249   */\n      dup2\n        /* \"#utility.yul\":10221:10250   */\n      tag_354\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":10216:10219   */\n      dup5\n        /* \"#utility.yul\":10212:10251   */\n      add\n        /* \"#utility.yul\":10205:10251   */\n      swap2\n      pop\n        /* \"#utility.yul\":9985:10257   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10263:10629   */\n    tag_363:\n        /* \"#utility.yul\":10405:10408   */\n      0x00\n        /* \"#utility.yul\":10426:10493   */\n      tag_365\n        /* \"#utility.yul\":10490:10492   */\n      0x34\n        /* \"#utility.yul\":10485:10488   */\n      dup4\n        /* \"#utility.yul\":10426:10493   */\n      tag_360\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10419:10493   */\n      swap2\n      pop\n        /* \"#utility.yul\":10502:10595   */\n      tag_366\n        /* \"#utility.yul\":10591:10594   */\n      dup3\n        /* \"#utility.yul\":10502:10595   */\n      tag_367\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10620:10622   */\n      0x40\n        /* \"#utility.yul\":10615:10618   */\n      dup3\n        /* \"#utility.yul\":10611:10623   */\n      add\n        /* \"#utility.yul\":10604:10623   */\n      swap1\n      pop\n        /* \"#utility.yul\":10409:10629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10635:11001   */\n    tag_368:\n        /* \"#utility.yul\":10777:10780   */\n      0x00\n        /* \"#utility.yul\":10798:10865   */\n      tag_370\n        /* \"#utility.yul\":10862:10864   */\n      0x28\n        /* \"#utility.yul\":10857:10860   */\n      dup4\n        /* \"#utility.yul\":10798:10865   */\n      tag_360\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":10791:10865   */\n      swap2\n      pop\n        /* \"#utility.yul\":10874:10967   */\n      tag_371\n        /* \"#utility.yul\":10963:10966   */\n      dup3\n        /* \"#utility.yul\":10874:10967   */\n      tag_372\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10992:10994   */\n      0x40\n        /* \"#utility.yul\":10987:10990   */\n      dup3\n        /* \"#utility.yul\":10983:10995   */\n      add\n        /* \"#utility.yul\":10976:10995   */\n      swap1\n      pop\n        /* \"#utility.yul\":10781:11001   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11007:11373   */\n    tag_373:\n        /* \"#utility.yul\":11149:11152   */\n      0x00\n        /* \"#utility.yul\":11170:11237   */\n      tag_375\n        /* \"#utility.yul\":11234:11236   */\n      0x2b\n        /* \"#utility.yul\":11229:11232   */\n      dup4\n        /* \"#utility.yul\":11170:11237   */\n      tag_360\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":11163:11237   */\n      swap2\n      pop\n        /* \"#utility.yul\":11246:11339   */\n      tag_376\n        /* \"#utility.yul\":11335:11338   */\n      dup3\n        /* \"#utility.yul\":11246:11339   */\n      tag_377\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":11364:11366   */\n      0x40\n        /* \"#utility.yul\":11359:11362   */\n      dup3\n        /* \"#utility.yul\":11355:11367   */\n      add\n        /* \"#utility.yul\":11348:11367   */\n      swap1\n      pop\n        /* \"#utility.yul\":11153:11373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11379:11745   */\n    tag_378:\n        /* \"#utility.yul\":11521:11524   */\n      0x00\n        /* \"#utility.yul\":11542:11609   */\n      tag_380\n        /* \"#utility.yul\":11606:11608   */\n      0x29\n        /* \"#utility.yul\":11601:11604   */\n      dup4\n        /* \"#utility.yul\":11542:11609   */\n      tag_360\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":11535:11609   */\n      swap2\n      pop\n        /* \"#utility.yul\":11618:11711   */\n      tag_381\n        /* \"#utility.yul\":11707:11710   */\n      dup3\n        /* \"#utility.yul\":11618:11711   */\n      tag_382\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11736:11738   */\n      0x40\n        /* \"#utility.yul\":11731:11734   */\n      dup3\n        /* \"#utility.yul\":11727:11739   */\n      add\n        /* \"#utility.yul\":11720:11739   */\n      swap1\n      pop\n        /* \"#utility.yul\":11525:11745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11751:12117   */\n    tag_383:\n        /* \"#utility.yul\":11893:11896   */\n      0x00\n        /* \"#utility.yul\":11914:11981   */\n      tag_385\n        /* \"#utility.yul\":11978:11980   */\n      0x25\n        /* \"#utility.yul\":11973:11976   */\n      dup4\n        /* \"#utility.yul\":11914:11981   */\n      tag_360\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11907:11981   */\n      swap2\n      pop\n        /* \"#utility.yul\":11990:12083   */\n      tag_386\n        /* \"#utility.yul\":12079:12082   */\n      dup3\n        /* \"#utility.yul\":11990:12083   */\n      tag_387\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":12108:12110   */\n      0x40\n        /* \"#utility.yul\":12103:12106   */\n      dup3\n        /* \"#utility.yul\":12099:12111   */\n      add\n        /* \"#utility.yul\":12092:12111   */\n      swap1\n      pop\n        /* \"#utility.yul\":11897:12117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12123:12489   */\n    tag_388:\n        /* \"#utility.yul\":12265:12268   */\n      0x00\n        /* \"#utility.yul\":12286:12353   */\n      tag_390\n        /* \"#utility.yul\":12350:12352   */\n      0x32\n        /* \"#utility.yul\":12345:12348   */\n      dup4\n        /* \"#utility.yul\":12286:12353   */\n      tag_360\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":12279:12353   */\n      swap2\n      pop\n        /* \"#utility.yul\":12362:12455   */\n      tag_391\n        /* \"#utility.yul\":12451:12454   */\n      dup3\n        /* \"#utility.yul\":12362:12455   */\n      tag_392\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":12480:12482   */\n      0x40\n        /* \"#utility.yul\":12475:12478   */\n      dup3\n        /* \"#utility.yul\":12471:12483   */\n      add\n        /* \"#utility.yul\":12464:12483   */\n      swap1\n      pop\n        /* \"#utility.yul\":12269:12489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12495:12861   */\n    tag_393:\n        /* \"#utility.yul\":12637:12640   */\n      0x00\n        /* \"#utility.yul\":12658:12725   */\n      tag_395\n        /* \"#utility.yul\":12722:12724   */\n      0x2a\n        /* \"#utility.yul\":12717:12720   */\n      dup4\n        /* \"#utility.yul\":12658:12725   */\n      tag_360\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":12651:12725   */\n      swap2\n      pop\n        /* \"#utility.yul\":12734:12827   */\n      tag_396\n        /* \"#utility.yul\":12823:12826   */\n      dup3\n        /* \"#utility.yul\":12734:12827   */\n      tag_397\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":12852:12854   */\n      0x40\n        /* \"#utility.yul\":12847:12850   */\n      dup3\n        /* \"#utility.yul\":12843:12855   */\n      add\n        /* \"#utility.yul\":12836:12855   */\n      swap1\n      pop\n        /* \"#utility.yul\":12641:12861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12867:13233   */\n    tag_398:\n        /* \"#utility.yul\":13009:13012   */\n      0x00\n        /* \"#utility.yul\":13030:13097   */\n      tag_400\n        /* \"#utility.yul\":13094:13096   */\n      0x29\n        /* \"#utility.yul\":13089:13092   */\n      dup4\n        /* \"#utility.yul\":13030:13097   */\n      tag_360\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":13023:13097   */\n      swap2\n      pop\n        /* \"#utility.yul\":13106:13199   */\n      tag_401\n        /* \"#utility.yul\":13195:13198   */\n      dup3\n        /* \"#utility.yul\":13106:13199   */\n      tag_402\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":13224:13226   */\n      0x40\n        /* \"#utility.yul\":13219:13222   */\n      dup3\n        /* \"#utility.yul\":13215:13227   */\n      add\n        /* \"#utility.yul\":13208:13227   */\n      swap1\n      pop\n        /* \"#utility.yul\":13013:13233   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13239:13605   */\n    tag_403:\n        /* \"#utility.yul\":13381:13384   */\n      0x00\n        /* \"#utility.yul\":13402:13469   */\n      tag_405\n        /* \"#utility.yul\":13466:13468   */\n      0x29\n        /* \"#utility.yul\":13461:13464   */\n      dup4\n        /* \"#utility.yul\":13402:13469   */\n      tag_360\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":13395:13469   */\n      swap2\n      pop\n        /* \"#utility.yul\":13478:13571   */\n      tag_406\n        /* \"#utility.yul\":13567:13570   */\n      dup3\n        /* \"#utility.yul\":13478:13571   */\n      tag_407\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":13596:13598   */\n      0x40\n        /* \"#utility.yul\":13591:13594   */\n      dup3\n        /* \"#utility.yul\":13587:13599   */\n      add\n        /* \"#utility.yul\":13580:13599   */\n      swap1\n      pop\n        /* \"#utility.yul\":13385:13605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13611:13977   */\n    tag_408:\n        /* \"#utility.yul\":13753:13756   */\n      0x00\n        /* \"#utility.yul\":13774:13841   */\n      tag_410\n        /* \"#utility.yul\":13838:13840   */\n      0x28\n        /* \"#utility.yul\":13833:13836   */\n      dup4\n        /* \"#utility.yul\":13774:13841   */\n      tag_360\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":13767:13841   */\n      swap2\n      pop\n        /* \"#utility.yul\":13850:13943   */\n      tag_411\n        /* \"#utility.yul\":13939:13942   */\n      dup3\n        /* \"#utility.yul\":13850:13943   */\n      tag_412\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":13968:13970   */\n      0x40\n        /* \"#utility.yul\":13963:13966   */\n      dup3\n        /* \"#utility.yul\":13959:13971   */\n      add\n        /* \"#utility.yul\":13952:13971   */\n      swap1\n      pop\n        /* \"#utility.yul\":13757:13977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13983:14091   */\n    tag_322:\n        /* \"#utility.yul\":14060:14084   */\n      tag_414\n        /* \"#utility.yul\":14078:14083   */\n      dup2\n        /* \"#utility.yul\":14060:14084   */\n      tag_415\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":14055:14058   */\n      dup3\n        /* \"#utility.yul\":14048:14085   */\n      mstore\n        /* \"#utility.yul\":14038:14091   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14097:14215   */\n    tag_416:\n        /* \"#utility.yul\":14184:14208   */\n      tag_418\n        /* \"#utility.yul\":14202:14207   */\n      dup2\n        /* \"#utility.yul\":14184:14208   */\n      tag_415\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":14179:14182   */\n      dup3\n        /* \"#utility.yul\":14172:14209   */\n      mstore\n        /* \"#utility.yul\":14162:14215   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14221:15274   */\n    tag_167:\n        /* \"#utility.yul\":14544:14548   */\n      0x00\n        /* \"#utility.yul\":14582:14585   */\n      0xa0\n        /* \"#utility.yul\":14571:14580   */\n      dup3\n        /* \"#utility.yul\":14567:14586   */\n      add\n        /* \"#utility.yul\":14559:14586   */\n      swap1\n      pop\n        /* \"#utility.yul\":14596:14667   */\n      tag_420\n        /* \"#utility.yul\":14664:14665   */\n      0x00\n        /* \"#utility.yul\":14653:14662   */\n      dup4\n        /* \"#utility.yul\":14649:14666   */\n      add\n        /* \"#utility.yul\":14640:14646   */\n      dup9\n        /* \"#utility.yul\":14596:14667   */\n      tag_323\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":14677:14749   */\n      tag_421\n        /* \"#utility.yul\":14745:14747   */\n      0x20\n        /* \"#utility.yul\":14734:14743   */\n      dup4\n        /* \"#utility.yul\":14730:14748   */\n      add\n        /* \"#utility.yul\":14721:14727   */\n      dup8\n        /* \"#utility.yul\":14677:14749   */\n      tag_323\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":14796:14805   */\n      dup2\n        /* \"#utility.yul\":14790:14794   */\n      dup2\n        /* \"#utility.yul\":14786:14806   */\n      sub\n        /* \"#utility.yul\":14781:14783   */\n      0x40\n        /* \"#utility.yul\":14770:14779   */\n      dup4\n        /* \"#utility.yul\":14766:14784   */\n      add\n        /* \"#utility.yul\":14759:14807   */\n      mstore\n        /* \"#utility.yul\":14824:14932   */\n      tag_422\n        /* \"#utility.yul\":14927:14931   */\n      dup2\n        /* \"#utility.yul\":14918:14924   */\n      dup7\n        /* \"#utility.yul\":14824:14932   */\n      tag_327\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":14816:14932   */\n      swap1\n      pop\n        /* \"#utility.yul\":14979:14988   */\n      dup2\n        /* \"#utility.yul\":14973:14977   */\n      dup2\n        /* \"#utility.yul\":14969:14989   */\n      sub\n        /* \"#utility.yul\":14964:14966   */\n      0x60\n        /* \"#utility.yul\":14953:14962   */\n      dup4\n        /* \"#utility.yul\":14949:14967   */\n      add\n        /* \"#utility.yul\":14942:14990   */\n      mstore\n        /* \"#utility.yul\":15007:15115   */\n      tag_423\n        /* \"#utility.yul\":15110:15114   */\n      dup2\n        /* \"#utility.yul\":15101:15107   */\n      dup6\n        /* \"#utility.yul\":15007:15115   */\n      tag_327\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":14999:15115   */\n      swap1\n      pop\n        /* \"#utility.yul\":15163:15172   */\n      dup2\n        /* \"#utility.yul\":15157:15161   */\n      dup2\n        /* \"#utility.yul\":15153:15173   */\n      sub\n        /* \"#utility.yul\":15147:15150   */\n      0x80\n        /* \"#utility.yul\":15136:15145   */\n      dup4\n        /* \"#utility.yul\":15132:15151   */\n      add\n        /* \"#utility.yul\":15125:15174   */\n      mstore\n        /* \"#utility.yul\":15191:15267   */\n      tag_424\n        /* \"#utility.yul\":15262:15266   */\n      dup2\n        /* \"#utility.yul\":15253:15259   */\n      dup5\n        /* \"#utility.yul\":15191:15267   */\n      tag_345\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":15183:15267   */\n      swap1\n      pop\n        /* \"#utility.yul\":14549:15274   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15280:16031   */\n    tag_196:\n        /* \"#utility.yul\":15503:15507   */\n      0x00\n        /* \"#utility.yul\":15541:15544   */\n      0xa0\n        /* \"#utility.yul\":15530:15539   */\n      dup3\n        /* \"#utility.yul\":15526:15545   */\n      add\n        /* \"#utility.yul\":15518:15545   */\n      swap1\n      pop\n        /* \"#utility.yul\":15555:15626   */\n      tag_426\n        /* \"#utility.yul\":15623:15624   */\n      0x00\n        /* \"#utility.yul\":15612:15621   */\n      dup4\n        /* \"#utility.yul\":15608:15625   */\n      add\n        /* \"#utility.yul\":15599:15605   */\n      dup9\n        /* \"#utility.yul\":15555:15626   */\n      tag_323\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":15636:15708   */\n      tag_427\n        /* \"#utility.yul\":15704:15706   */\n      0x20\n        /* \"#utility.yul\":15693:15702   */\n      dup4\n        /* \"#utility.yul\":15689:15707   */\n      add\n        /* \"#utility.yul\":15680:15686   */\n      dup8\n        /* \"#utility.yul\":15636:15708   */\n      tag_323\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":15718:15790   */\n      tag_428\n        /* \"#utility.yul\":15786:15788   */\n      0x40\n        /* \"#utility.yul\":15775:15784   */\n      dup4\n        /* \"#utility.yul\":15771:15789   */\n      add\n        /* \"#utility.yul\":15762:15768   */\n      dup7\n        /* \"#utility.yul\":15718:15790   */\n      tag_416\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":15800:15872   */\n      tag_429\n        /* \"#utility.yul\":15868:15870   */\n      0x60\n        /* \"#utility.yul\":15857:15866   */\n      dup4\n        /* \"#utility.yul\":15853:15871   */\n      add\n        /* \"#utility.yul\":15844:15850   */\n      dup6\n        /* \"#utility.yul\":15800:15872   */\n      tag_416\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":15920:15929   */\n      dup2\n        /* \"#utility.yul\":15914:15918   */\n      dup2\n        /* \"#utility.yul\":15910:15930   */\n      sub\n        /* \"#utility.yul\":15904:15907   */\n      0x80\n        /* \"#utility.yul\":15893:15902   */\n      dup4\n        /* \"#utility.yul\":15889:15908   */\n      add\n        /* \"#utility.yul\":15882:15931   */\n      mstore\n        /* \"#utility.yul\":15948:16024   */\n      tag_430\n        /* \"#utility.yul\":16019:16023   */\n      dup2\n        /* \"#utility.yul\":16010:16016   */\n      dup5\n        /* \"#utility.yul\":15948:16024   */\n      tag_345\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":15940:16024   */\n      swap1\n      pop\n        /* \"#utility.yul\":15508:16031   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16037:16410   */\n    tag_39:\n        /* \"#utility.yul\":16180:16184   */\n      0x00\n        /* \"#utility.yul\":16218:16220   */\n      0x20\n        /* \"#utility.yul\":16207:16216   */\n      dup3\n        /* \"#utility.yul\":16203:16221   */\n      add\n        /* \"#utility.yul\":16195:16221   */\n      swap1\n      pop\n        /* \"#utility.yul\":16267:16276   */\n      dup2\n        /* \"#utility.yul\":16261:16265   */\n      dup2\n        /* \"#utility.yul\":16257:16277   */\n      sub\n        /* \"#utility.yul\":16253:16254   */\n      0x00\n        /* \"#utility.yul\":16242:16251   */\n      dup4\n        /* \"#utility.yul\":16238:16255   */\n      add\n        /* \"#utility.yul\":16231:16278   */\n      mstore\n        /* \"#utility.yul\":16295:16403   */\n      tag_432\n        /* \"#utility.yul\":16398:16402   */\n      dup2\n        /* \"#utility.yul\":16389:16395   */\n      dup5\n        /* \"#utility.yul\":16295:16403   */\n      tag_327\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":16287:16403   */\n      swap1\n      pop\n        /* \"#utility.yul\":16185:16410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16416:17050   */\n    tag_134:\n        /* \"#utility.yul\":16637:16641   */\n      0x00\n        /* \"#utility.yul\":16675:16677   */\n      0x40\n        /* \"#utility.yul\":16664:16673   */\n      dup3\n        /* \"#utility.yul\":16660:16678   */\n      add\n        /* \"#utility.yul\":16652:16678   */\n      swap1\n      pop\n        /* \"#utility.yul\":16724:16733   */\n      dup2\n        /* \"#utility.yul\":16718:16722   */\n      dup2\n        /* \"#utility.yul\":16714:16734   */\n      sub\n        /* \"#utility.yul\":16710:16711   */\n      0x00\n        /* \"#utility.yul\":16699:16708   */\n      dup4\n        /* \"#utility.yul\":16695:16712   */\n      add\n        /* \"#utility.yul\":16688:16735   */\n      mstore\n        /* \"#utility.yul\":16752:16860   */\n      tag_434\n        /* \"#utility.yul\":16855:16859   */\n      dup2\n        /* \"#utility.yul\":16846:16852   */\n      dup6\n        /* \"#utility.yul\":16752:16860   */\n      tag_327\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":16744:16860   */\n      swap1\n      pop\n        /* \"#utility.yul\":16907:16916   */\n      dup2\n        /* \"#utility.yul\":16901:16905   */\n      dup2\n        /* \"#utility.yul\":16897:16917   */\n      sub\n        /* \"#utility.yul\":16892:16894   */\n      0x20\n        /* \"#utility.yul\":16881:16890   */\n      dup4\n        /* \"#utility.yul\":16877:16895   */\n      add\n        /* \"#utility.yul\":16870:16918   */\n      mstore\n        /* \"#utility.yul\":16935:17043   */\n      tag_435\n        /* \"#utility.yul\":17038:17042   */\n      dup2\n        /* \"#utility.yul\":17029:17035   */\n      dup5\n        /* \"#utility.yul\":16935:17043   */\n      tag_327\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":16927:17043   */\n      swap1\n      pop\n        /* \"#utility.yul\":16642:17050   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17056:17266   */\n    tag_23:\n        /* \"#utility.yul\":17143:17147   */\n      0x00\n        /* \"#utility.yul\":17181:17183   */\n      0x20\n        /* \"#utility.yul\":17170:17179   */\n      dup3\n        /* \"#utility.yul\":17166:17184   */\n      add\n        /* \"#utility.yul\":17158:17184   */\n      swap1\n      pop\n        /* \"#utility.yul\":17194:17259   */\n      tag_437\n        /* \"#utility.yul\":17256:17257   */\n      0x00\n        /* \"#utility.yul\":17245:17254   */\n      dup4\n        /* \"#utility.yul\":17241:17258   */\n      add\n        /* \"#utility.yul\":17232:17238   */\n      dup5\n        /* \"#utility.yul\":17194:17259   */\n      tag_341\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":17148:17266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17272:17585   */\n    tag_29:\n        /* \"#utility.yul\":17385:17389   */\n      0x00\n        /* \"#utility.yul\":17423:17425   */\n      0x20\n        /* \"#utility.yul\":17412:17421   */\n      dup3\n        /* \"#utility.yul\":17408:17426   */\n      add\n        /* \"#utility.yul\":17400:17426   */\n      swap1\n      pop\n        /* \"#utility.yul\":17472:17481   */\n      dup2\n        /* \"#utility.yul\":17466:17470   */\n      dup2\n        /* \"#utility.yul\":17462:17482   */\n      sub\n        /* \"#utility.yul\":17458:17459   */\n      0x00\n        /* \"#utility.yul\":17447:17456   */\n      dup4\n        /* \"#utility.yul\":17443:17460   */\n      add\n        /* \"#utility.yul\":17436:17483   */\n      mstore\n        /* \"#utility.yul\":17500:17578   */\n      tag_439\n        /* \"#utility.yul\":17573:17577   */\n      dup2\n        /* \"#utility.yul\":17564:17570   */\n      dup5\n        /* \"#utility.yul\":17500:17578   */\n      tag_355\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":17492:17578   */\n      swap1\n      pop\n        /* \"#utility.yul\":17390:17585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17591:18010   */\n    tag_183:\n        /* \"#utility.yul\":17757:17761   */\n      0x00\n        /* \"#utility.yul\":17795:17797   */\n      0x20\n        /* \"#utility.yul\":17784:17793   */\n      dup3\n        /* \"#utility.yul\":17780:17798   */\n      add\n        /* \"#utility.yul\":17772:17798   */\n      swap1\n      pop\n        /* \"#utility.yul\":17844:17853   */\n      dup2\n        /* \"#utility.yul\":17838:17842   */\n      dup2\n        /* \"#utility.yul\":17834:17854   */\n      sub\n        /* \"#utility.yul\":17830:17831   */\n      0x00\n        /* \"#utility.yul\":17819:17828   */\n      dup4\n        /* \"#utility.yul\":17815:17832   */\n      add\n        /* \"#utility.yul\":17808:17855   */\n      mstore\n        /* \"#utility.yul\":17872:18003   */\n      tag_441\n        /* \"#utility.yul\":17998:18002   */\n      dup2\n        /* \"#utility.yul\":17872:18003   */\n      tag_363\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":17864:18003   */\n      swap1\n      pop\n        /* \"#utility.yul\":17762:18010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18016:18435   */\n    tag_187:\n        /* \"#utility.yul\":18182:18186   */\n      0x00\n        /* \"#utility.yul\":18220:18222   */\n      0x20\n        /* \"#utility.yul\":18209:18218   */\n      dup3\n        /* \"#utility.yul\":18205:18223   */\n      add\n        /* \"#utility.yul\":18197:18223   */\n      swap1\n      pop\n        /* \"#utility.yul\":18269:18278   */\n      dup2\n        /* \"#utility.yul\":18263:18267   */\n      dup2\n        /* \"#utility.yul\":18259:18279   */\n      sub\n        /* \"#utility.yul\":18255:18256   */\n      0x00\n        /* \"#utility.yul\":18244:18253   */\n      dup4\n        /* \"#utility.yul\":18240:18257   */\n      add\n        /* \"#utility.yul\":18233:18280   */\n      mstore\n        /* \"#utility.yul\":18297:18428   */\n      tag_443\n        /* \"#utility.yul\":18423:18427   */\n      dup2\n        /* \"#utility.yul\":18297:18428   */\n      tag_368\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":18289:18428   */\n      swap1\n      pop\n        /* \"#utility.yul\":18187:18435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18441:18860   */\n    tag_56:\n        /* \"#utility.yul\":18607:18611   */\n      0x00\n        /* \"#utility.yul\":18645:18647   */\n      0x20\n        /* \"#utility.yul\":18634:18643   */\n      dup3\n        /* \"#utility.yul\":18630:18648   */\n      add\n        /* \"#utility.yul\":18622:18648   */\n      swap1\n      pop\n        /* \"#utility.yul\":18694:18703   */\n      dup2\n        /* \"#utility.yul\":18688:18692   */\n      dup2\n        /* \"#utility.yul\":18684:18704   */\n      sub\n        /* \"#utility.yul\":18680:18681   */\n      0x00\n        /* \"#utility.yul\":18669:18678   */\n      dup4\n        /* \"#utility.yul\":18665:18682   */\n      add\n        /* \"#utility.yul\":18658:18705   */\n      mstore\n        /* \"#utility.yul\":18722:18853   */\n      tag_445\n        /* \"#utility.yul\":18848:18852   */\n      dup2\n        /* \"#utility.yul\":18722:18853   */\n      tag_373\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":18714:18853   */\n      swap1\n      pop\n        /* \"#utility.yul\":18612:18860   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18866:19285   */\n    tag_107:\n        /* \"#utility.yul\":19032:19036   */\n      0x00\n        /* \"#utility.yul\":19070:19072   */\n      0x20\n        /* \"#utility.yul\":19059:19068   */\n      dup3\n        /* \"#utility.yul\":19055:19073   */\n      add\n        /* \"#utility.yul\":19047:19073   */\n      swap1\n      pop\n        /* \"#utility.yul\":19119:19128   */\n      dup2\n        /* \"#utility.yul\":19113:19117   */\n      dup2\n        /* \"#utility.yul\":19109:19129   */\n      sub\n        /* \"#utility.yul\":19105:19106   */\n      0x00\n        /* \"#utility.yul\":19094:19103   */\n      dup4\n        /* \"#utility.yul\":19090:19107   */\n      add\n        /* \"#utility.yul\":19083:19130   */\n      mstore\n        /* \"#utility.yul\":19147:19278   */\n      tag_447\n        /* \"#utility.yul\":19273:19277   */\n      dup2\n        /* \"#utility.yul\":19147:19278   */\n      tag_378\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":19139:19278   */\n      swap1\n      pop\n        /* \"#utility.yul\":19037:19285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19291:19710   */\n    tag_118:\n        /* \"#utility.yul\":19457:19461   */\n      0x00\n        /* \"#utility.yul\":19495:19497   */\n      0x20\n        /* \"#utility.yul\":19484:19493   */\n      dup3\n        /* \"#utility.yul\":19480:19498   */\n      add\n        /* \"#utility.yul\":19472:19498   */\n      swap1\n      pop\n        /* \"#utility.yul\":19544:19553   */\n      dup2\n        /* \"#utility.yul\":19538:19542   */\n      dup2\n        /* \"#utility.yul\":19534:19554   */\n      sub\n        /* \"#utility.yul\":19530:19531   */\n      0x00\n        /* \"#utility.yul\":19519:19528   */\n      dup4\n        /* \"#utility.yul\":19515:19532   */\n      add\n        /* \"#utility.yul\":19508:19555   */\n      mstore\n        /* \"#utility.yul\":19572:19703   */\n      tag_449\n        /* \"#utility.yul\":19698:19702   */\n      dup2\n        /* \"#utility.yul\":19572:19703   */\n      tag_383\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":19564:19703   */\n      swap1\n      pop\n        /* \"#utility.yul\":19462:19710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19716:20135   */\n    tag_77:\n        /* \"#utility.yul\":19882:19886   */\n      0x00\n        /* \"#utility.yul\":19920:19922   */\n      0x20\n        /* \"#utility.yul\":19909:19918   */\n      dup3\n        /* \"#utility.yul\":19905:19923   */\n      add\n        /* \"#utility.yul\":19897:19923   */\n      swap1\n      pop\n        /* \"#utility.yul\":19969:19978   */\n      dup2\n        /* \"#utility.yul\":19963:19967   */\n      dup2\n        /* \"#utility.yul\":19959:19979   */\n      sub\n        /* \"#utility.yul\":19955:19956   */\n      0x00\n        /* \"#utility.yul\":19944:19953   */\n      dup4\n        /* \"#utility.yul\":19940:19957   */\n      add\n        /* \"#utility.yul\":19933:19980   */\n      mstore\n        /* \"#utility.yul\":19997:20128   */\n      tag_451\n        /* \"#utility.yul\":20123:20127   */\n      dup2\n        /* \"#utility.yul\":19997:20128   */\n      tag_388\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":19989:20128   */\n      swap1\n      pop\n        /* \"#utility.yul\":19887:20135   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20141:20560   */\n    tag_129:\n        /* \"#utility.yul\":20307:20311   */\n      0x00\n        /* \"#utility.yul\":20345:20347   */\n      0x20\n        /* \"#utility.yul\":20334:20343   */\n      dup3\n        /* \"#utility.yul\":20330:20348   */\n      add\n        /* \"#utility.yul\":20322:20348   */\n      swap1\n      pop\n        /* \"#utility.yul\":20394:20403   */\n      dup2\n        /* \"#utility.yul\":20388:20392   */\n      dup2\n        /* \"#utility.yul\":20384:20404   */\n      sub\n        /* \"#utility.yul\":20380:20381   */\n      0x00\n        /* \"#utility.yul\":20369:20378   */\n      dup4\n        /* \"#utility.yul\":20365:20382   */\n      add\n        /* \"#utility.yul\":20358:20405   */\n      mstore\n        /* \"#utility.yul\":20422:20553   */\n      tag_453\n        /* \"#utility.yul\":20548:20552   */\n      dup2\n        /* \"#utility.yul\":20422:20553   */\n      tag_393\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":20414:20553   */\n      swap1\n      pop\n        /* \"#utility.yul\":20312:20560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20566:20985   */\n    tag_142:\n        /* \"#utility.yul\":20732:20736   */\n      0x00\n        /* \"#utility.yul\":20770:20772   */\n      0x20\n        /* \"#utility.yul\":20759:20768   */\n      dup3\n        /* \"#utility.yul\":20755:20773   */\n      add\n        /* \"#utility.yul\":20747:20773   */\n      swap1\n      pop\n        /* \"#utility.yul\":20819:20828   */\n      dup2\n        /* \"#utility.yul\":20813:20817   */\n      dup2\n        /* \"#utility.yul\":20809:20829   */\n      sub\n        /* \"#utility.yul\":20805:20806   */\n      0x00\n        /* \"#utility.yul\":20794:20803   */\n      dup4\n        /* \"#utility.yul\":20790:20807   */\n      add\n        /* \"#utility.yul\":20783:20830   */\n      mstore\n        /* \"#utility.yul\":20847:20978   */\n      tag_455\n        /* \"#utility.yul\":20973:20977   */\n      dup2\n        /* \"#utility.yul\":20847:20978   */\n      tag_398\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":20839:20978   */\n      swap1\n      pop\n        /* \"#utility.yul\":20737:20985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20991:21410   */\n    tag_83:\n        /* \"#utility.yul\":21157:21161   */\n      0x00\n        /* \"#utility.yul\":21195:21197   */\n      0x20\n        /* \"#utility.yul\":21184:21193   */\n      dup3\n        /* \"#utility.yul\":21180:21198   */\n      add\n        /* \"#utility.yul\":21172:21198   */\n      swap1\n      pop\n        /* \"#utility.yul\":21244:21253   */\n      dup2\n        /* \"#utility.yul\":21238:21242   */\n      dup2\n        /* \"#utility.yul\":21234:21254   */\n      sub\n        /* \"#utility.yul\":21230:21231   */\n      0x00\n        /* \"#utility.yul\":21219:21228   */\n      dup4\n        /* \"#utility.yul\":21215:21232   */\n      add\n        /* \"#utility.yul\":21208:21255   */\n      mstore\n        /* \"#utility.yul\":21272:21403   */\n      tag_457\n        /* \"#utility.yul\":21398:21402   */\n      dup2\n        /* \"#utility.yul\":21272:21403   */\n      tag_403\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":21264:21403   */\n      swap1\n      pop\n        /* \"#utility.yul\":21162:21410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21416:21835   */\n    tag_115:\n        /* \"#utility.yul\":21582:21586   */\n      0x00\n        /* \"#utility.yul\":21620:21622   */\n      0x20\n        /* \"#utility.yul\":21609:21618   */\n      dup3\n        /* \"#utility.yul\":21605:21623   */\n      add\n        /* \"#utility.yul\":21597:21623   */\n      swap1\n      pop\n        /* \"#utility.yul\":21669:21678   */\n      dup2\n        /* \"#utility.yul\":21663:21667   */\n      dup2\n        /* \"#utility.yul\":21659:21679   */\n      sub\n        /* \"#utility.yul\":21655:21656   */\n      0x00\n        /* \"#utility.yul\":21644:21653   */\n      dup4\n        /* \"#utility.yul\":21640:21657   */\n      add\n        /* \"#utility.yul\":21633:21680   */\n      mstore\n        /* \"#utility.yul\":21697:21828   */\n      tag_459\n        /* \"#utility.yul\":21823:21827   */\n      dup2\n        /* \"#utility.yul\":21697:21828   */\n      tag_408\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":21689:21828   */\n      swap1\n      pop\n        /* \"#utility.yul\":21587:21835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21841:22063   */\n    tag_17:\n        /* \"#utility.yul\":21934:21938   */\n      0x00\n        /* \"#utility.yul\":21972:21974   */\n      0x20\n        /* \"#utility.yul\":21961:21970   */\n      dup3\n        /* \"#utility.yul\":21957:21975   */\n      add\n        /* \"#utility.yul\":21949:21975   */\n      swap1\n      pop\n        /* \"#utility.yul\":21985:22056   */\n      tag_461\n        /* \"#utility.yul\":22053:22054   */\n      0x00\n        /* \"#utility.yul\":22042:22051   */\n      dup4\n        /* \"#utility.yul\":22038:22055   */\n      add\n        /* \"#utility.yul\":22029:22035   */\n      dup5\n        /* \"#utility.yul\":21985:22056   */\n      tag_416\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":21939:22063   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22069:22401   */\n    tag_156:\n        /* \"#utility.yul\":22190:22194   */\n      0x00\n        /* \"#utility.yul\":22228:22230   */\n      0x40\n        /* \"#utility.yul\":22217:22226   */\n      dup3\n        /* \"#utility.yul\":22213:22231   */\n      add\n        /* \"#utility.yul\":22205:22231   */\n      swap1\n      pop\n        /* \"#utility.yul\":22241:22312   */\n      tag_463\n        /* \"#utility.yul\":22309:22310   */\n      0x00\n        /* \"#utility.yul\":22298:22307   */\n      dup4\n        /* \"#utility.yul\":22294:22311   */\n      add\n        /* \"#utility.yul\":22285:22291   */\n      dup6\n        /* \"#utility.yul\":22241:22312   */\n      tag_416\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":22322:22394   */\n      tag_464\n        /* \"#utility.yul\":22390:22392   */\n      0x20\n        /* \"#utility.yul\":22379:22388   */\n      dup4\n        /* \"#utility.yul\":22375:22393   */\n      add\n        /* \"#utility.yul\":22366:22372   */\n      dup5\n        /* \"#utility.yul\":22322:22394   */\n      tag_416\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":22195:22401   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22407:22536   */\n    tag_219:\n        /* \"#utility.yul\":22441:22447   */\n      0x00\n        /* \"#utility.yul\":22468:22488   */\n      tag_466\n      tag_467\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":22458:22488   */\n      swap1\n      pop\n        /* \"#utility.yul\":22497:22530   */\n      tag_468\n        /* \"#utility.yul\":22525:22529   */\n      dup3\n        /* \"#utility.yul\":22517:22523   */\n      dup3\n        /* \"#utility.yul\":22497:22530   */\n      tag_469\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":22448:22536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22542:22617   */\n    tag_467:\n        /* \"#utility.yul\":22575:22581   */\n      0x00\n        /* \"#utility.yul\":22608:22610   */\n      0x40\n        /* \"#utility.yul\":22602:22611   */\n      mload\n        /* \"#utility.yul\":22592:22611   */\n      swap1\n      pop\n        /* \"#utility.yul\":22582:22617   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":22623:22934   */\n    tag_218:\n        /* \"#utility.yul\":22700:22704   */\n      0x00\n        /* \"#utility.yul\":22790:22808   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":22782:22788   */\n      dup3\n        /* \"#utility.yul\":22779:22809   */\n      gt\n        /* \"#utility.yul\":22776:22778   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":22812:22830   */\n      tag_473\n      tag_474\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":22776:22778   */\n    tag_472:\n        /* \"#utility.yul\":22862:22866   */\n      0x20\n        /* \"#utility.yul\":22854:22860   */\n      dup3\n        /* \"#utility.yul\":22850:22867   */\n      mul\n        /* \"#utility.yul\":22842:22867   */\n      swap1\n      pop\n        /* \"#utility.yul\":22922:22926   */\n      0x20\n        /* \"#utility.yul\":22916:22920   */\n      dup2\n        /* \"#utility.yul\":22912:22927   */\n      add\n        /* \"#utility.yul\":22904:22927   */\n      swap1\n      pop\n        /* \"#utility.yul\":22705:22934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22940:23251   */\n    tag_230:\n        /* \"#utility.yul\":23017:23021   */\n      0x00\n        /* \"#utility.yul\":23107:23125   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23099:23105   */\n      dup3\n        /* \"#utility.yul\":23096:23126   */\n      gt\n        /* \"#utility.yul\":23093:23095   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":23129:23147   */\n      tag_477\n      tag_474\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":23093:23095   */\n    tag_476:\n        /* \"#utility.yul\":23179:23183   */\n      0x20\n        /* \"#utility.yul\":23171:23177   */\n      dup3\n        /* \"#utility.yul\":23167:23184   */\n      mul\n        /* \"#utility.yul\":23159:23184   */\n      swap1\n      pop\n        /* \"#utility.yul\":23239:23243   */\n      0x20\n        /* \"#utility.yul\":23233:23237   */\n      dup2\n        /* \"#utility.yul\":23229:23244   */\n      add\n        /* \"#utility.yul\":23221:23244   */\n      swap1\n      pop\n        /* \"#utility.yul\":23022:23251   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23257:23564   */\n    tag_241:\n        /* \"#utility.yul\":23318:23322   */\n      0x00\n        /* \"#utility.yul\":23408:23426   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23400:23406   */\n      dup3\n        /* \"#utility.yul\":23397:23427   */\n      gt\n        /* \"#utility.yul\":23394:23396   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":23430:23448   */\n      tag_480\n      tag_474\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":23394:23396   */\n    tag_479:\n        /* \"#utility.yul\":23468:23497   */\n      tag_481\n        /* \"#utility.yul\":23490:23496   */\n      dup3\n        /* \"#utility.yul\":23468:23497   */\n      tag_354\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":23460:23497   */\n      swap1\n      pop\n        /* \"#utility.yul\":23552:23556   */\n      0x20\n        /* \"#utility.yul\":23546:23550   */\n      dup2\n        /* \"#utility.yul\":23542:23557   */\n      add\n        /* \"#utility.yul\":23534:23557   */\n      swap1\n      pop\n        /* \"#utility.yul\":23323:23564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23570:23702   */\n    tag_334:\n        /* \"#utility.yul\":23637:23641   */\n      0x00\n        /* \"#utility.yul\":23660:23663   */\n      dup2\n        /* \"#utility.yul\":23652:23663   */\n      swap1\n      pop\n        /* \"#utility.yul\":23690:23694   */\n      0x20\n        /* \"#utility.yul\":23685:23688   */\n      dup3\n        /* \"#utility.yul\":23681:23695   */\n      add\n        /* \"#utility.yul\":23673:23695   */\n      swap1\n      pop\n        /* \"#utility.yul\":23642:23702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23708:23822   */\n    tag_330:\n        /* \"#utility.yul\":23775:23781   */\n      0x00\n        /* \"#utility.yul\":23809:23814   */\n      dup2\n        /* \"#utility.yul\":23803:23815   */\n      mload\n        /* \"#utility.yul\":23793:23815   */\n      swap1\n      pop\n        /* \"#utility.yul\":23782:23822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23828:23926   */\n    tag_348:\n        /* \"#utility.yul\":23879:23885   */\n      0x00\n        /* \"#utility.yul\":23913:23918   */\n      dup2\n        /* \"#utility.yul\":23907:23919   */\n      mload\n        /* \"#utility.yul\":23897:23919   */\n      swap1\n      pop\n        /* \"#utility.yul\":23886:23926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23932:24031   */\n    tag_358:\n        /* \"#utility.yul\":23984:23990   */\n      0x00\n        /* \"#utility.yul\":24018:24023   */\n      dup2\n        /* \"#utility.yul\":24012:24024   */\n      mload\n        /* \"#utility.yul\":24002:24024   */\n      swap1\n      pop\n        /* \"#utility.yul\":23991:24031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24037:24150   */\n    tag_340:\n        /* \"#utility.yul\":24107:24111   */\n      0x00\n        /* \"#utility.yul\":24139:24143   */\n      0x20\n        /* \"#utility.yul\":24134:24137   */\n      dup3\n        /* \"#utility.yul\":24130:24144   */\n      add\n        /* \"#utility.yul\":24122:24144   */\n      swap1\n      pop\n        /* \"#utility.yul\":24112:24150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24156:24340   */\n    tag_332:\n        /* \"#utility.yul\":24255:24266   */\n      0x00\n        /* \"#utility.yul\":24289:24295   */\n      dup3\n        /* \"#utility.yul\":24284:24287   */\n      dup3\n        /* \"#utility.yul\":24277:24296   */\n      mstore\n        /* \"#utility.yul\":24329:24333   */\n      0x20\n        /* \"#utility.yul\":24324:24327   */\n      dup3\n        /* \"#utility.yul\":24320:24334   */\n      add\n        /* \"#utility.yul\":24305:24334   */\n      swap1\n      pop\n        /* \"#utility.yul\":24267:24340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24346:24514   */\n    tag_350:\n        /* \"#utility.yul\":24429:24440   */\n      0x00\n        /* \"#utility.yul\":24463:24469   */\n      dup3\n        /* \"#utility.yul\":24458:24461   */\n      dup3\n        /* \"#utility.yul\":24451:24470   */\n      mstore\n        /* \"#utility.yul\":24503:24507   */\n      0x20\n        /* \"#utility.yul\":24498:24501   */\n      dup3\n        /* \"#utility.yul\":24494:24508   */\n      add\n        /* \"#utility.yul\":24479:24508   */\n      swap1\n      pop\n        /* \"#utility.yul\":24441:24514   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24520:24689   */\n    tag_360:\n        /* \"#utility.yul\":24604:24615   */\n      0x00\n        /* \"#utility.yul\":24638:24644   */\n      dup3\n        /* \"#utility.yul\":24633:24636   */\n      dup3\n        /* \"#utility.yul\":24626:24645   */\n      mstore\n        /* \"#utility.yul\":24678:24682   */\n      0x20\n        /* \"#utility.yul\":24673:24676   */\n      dup3\n        /* \"#utility.yul\":24669:24683   */\n      add\n        /* \"#utility.yul\":24654:24683   */\n      swap1\n      pop\n        /* \"#utility.yul\":24616:24689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24695:25000   */\n    tag_131:\n        /* \"#utility.yul\":24735:24738   */\n      0x00\n        /* \"#utility.yul\":24754:24774   */\n      tag_491\n        /* \"#utility.yul\":24772:24773   */\n      dup3\n        /* \"#utility.yul\":24754:24774   */\n      tag_415\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":24749:24774   */\n      swap2\n      pop\n        /* \"#utility.yul\":24788:24808   */\n      tag_492\n        /* \"#utility.yul\":24806:24807   */\n      dup4\n        /* \"#utility.yul\":24788:24808   */\n      tag_415\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":24783:24808   */\n      swap3\n      pop\n        /* \"#utility.yul\":24942:24943   */\n      dup3\n        /* \"#utility.yul\":24874:24940   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24870:24944   */\n      sub\n        /* \"#utility.yul\":24867:24868   */\n      dup3\n        /* \"#utility.yul\":24864:24945   */\n      gt\n        /* \"#utility.yul\":24861:24863   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":24948:24966   */\n      tag_494\n      tag_495\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":24861:24863   */\n    tag_493:\n        /* \"#utility.yul\":24992:24993   */\n      dup3\n        /* \"#utility.yul\":24989:24990   */\n      dup3\n        /* \"#utility.yul\":24985:24994   */\n      add\n        /* \"#utility.yul\":24978:24994   */\n      swap1\n      pop\n        /* \"#utility.yul\":24739:25000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25006:25102   */\n    tag_326:\n        /* \"#utility.yul\":25043:25050   */\n      0x00\n        /* \"#utility.yul\":25072:25096   */\n      tag_497\n        /* \"#utility.yul\":25090:25095   */\n      dup3\n        /* \"#utility.yul\":25072:25096   */\n      tag_498\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":25061:25096   */\n      swap1\n      pop\n        /* \"#utility.yul\":25051:25102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25108:25198   */\n    tag_344:\n        /* \"#utility.yul\":25142:25149   */\n      0x00\n        /* \"#utility.yul\":25185:25190   */\n      dup2\n        /* \"#utility.yul\":25178:25191   */\n      iszero\n        /* \"#utility.yul\":25171:25192   */\n      iszero\n        /* \"#utility.yul\":25160:25192   */\n      swap1\n      pop\n        /* \"#utility.yul\":25150:25198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25204:25353   */\n    tag_500:\n        /* \"#utility.yul\":25240:25247   */\n      0x00\n        /* \"#utility.yul\":25280:25346   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25273:25278   */\n      dup3\n        /* \"#utility.yul\":25269:25347   */\n      and\n        /* \"#utility.yul\":25258:25347   */\n      swap1\n      pop\n        /* \"#utility.yul\":25248:25353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25359:25485   */\n    tag_498:\n        /* \"#utility.yul\":25396:25403   */\n      0x00\n        /* \"#utility.yul\":25436:25478   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25429:25434   */\n      dup3\n        /* \"#utility.yul\":25425:25479   */\n      and\n        /* \"#utility.yul\":25414:25479   */\n      swap1\n      pop\n        /* \"#utility.yul\":25404:25485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25491:25568   */\n    tag_415:\n        /* \"#utility.yul\":25528:25535   */\n      0x00\n        /* \"#utility.yul\":25557:25562   */\n      dup2\n        /* \"#utility.yul\":25546:25562   */\n      swap1\n      pop\n        /* \"#utility.yul\":25536:25568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25574:25728   */\n    tag_244:\n        /* \"#utility.yul\":25658:25664   */\n      dup3\n        /* \"#utility.yul\":25653:25656   */\n      dup2\n        /* \"#utility.yul\":25648:25651   */\n      dup4\n        /* \"#utility.yul\":25635:25665   */\n      calldatacopy\n        /* \"#utility.yul\":25720:25721   */\n      0x00\n        /* \"#utility.yul\":25711:25717   */\n      dup4\n        /* \"#utility.yul\":25706:25709   */\n      dup4\n        /* \"#utility.yul\":25702:25718   */\n      add\n        /* \"#utility.yul\":25695:25722   */\n      mstore\n        /* \"#utility.yul\":25625:25728   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25734:26041   */\n    tag_352:\n        /* \"#utility.yul\":25802:25803   */\n      0x00\n        /* \"#utility.yul\":25812:25925   */\n    tag_506:\n        /* \"#utility.yul\":25826:25832   */\n      dup4\n        /* \"#utility.yul\":25823:25824   */\n      dup2\n        /* \"#utility.yul\":25820:25833   */\n      lt\n        /* \"#utility.yul\":25812:25925   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":25911:25912   */\n      dup1\n        /* \"#utility.yul\":25906:25909   */\n      dup3\n        /* \"#utility.yul\":25902:25913   */\n      add\n        /* \"#utility.yul\":25896:25914   */\n      mload\n        /* \"#utility.yul\":25892:25893   */\n      dup2\n        /* \"#utility.yul\":25887:25890   */\n      dup5\n        /* \"#utility.yul\":25883:25894   */\n      add\n        /* \"#utility.yul\":25876:25915   */\n      mstore\n        /* \"#utility.yul\":25848:25850   */\n      0x20\n        /* \"#utility.yul\":25845:25846   */\n      dup2\n        /* \"#utility.yul\":25841:25851   */\n      add\n        /* \"#utility.yul\":25836:25851   */\n      swap1\n      pop\n        /* \"#utility.yul\":25812:25925   */\n      jump(tag_506)\n    tag_508:\n        /* \"#utility.yul\":25943:25949   */\n      dup4\n        /* \"#utility.yul\":25940:25941   */\n      dup2\n        /* \"#utility.yul\":25937:25950   */\n      gt\n        /* \"#utility.yul\":25934:25936   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":26023:26024   */\n      0x00\n        /* \"#utility.yul\":26014:26020   */\n      dup5\n        /* \"#utility.yul\":26009:26012   */\n      dup5\n        /* \"#utility.yul\":26005:26021   */\n      add\n        /* \"#utility.yul\":25998:26025   */\n      mstore\n        /* \"#utility.yul\":25934:25936   */\n    tag_509:\n        /* \"#utility.yul\":25783:26041   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26047:26367   */\n    tag_64:\n        /* \"#utility.yul\":26091:26097   */\n      0x00\n        /* \"#utility.yul\":26128:26129   */\n      0x02\n        /* \"#utility.yul\":26122:26126   */\n      dup3\n        /* \"#utility.yul\":26118:26130   */\n      div\n        /* \"#utility.yul\":26108:26130   */\n      swap1\n      pop\n        /* \"#utility.yul\":26175:26176   */\n      0x01\n        /* \"#utility.yul\":26169:26173   */\n      dup3\n        /* \"#utility.yul\":26165:26177   */\n      and\n        /* \"#utility.yul\":26196:26214   */\n      dup1\n        /* \"#utility.yul\":26186:26188   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":26252:26256   */\n      0x7f\n        /* \"#utility.yul\":26244:26250   */\n      dup3\n        /* \"#utility.yul\":26240:26257   */\n      and\n        /* \"#utility.yul\":26230:26257   */\n      swap2\n      pop\n        /* \"#utility.yul\":26186:26188   */\n    tag_511:\n        /* \"#utility.yul\":26314:26316   */\n      0x20\n        /* \"#utility.yul\":26306:26312   */\n      dup3\n        /* \"#utility.yul\":26303:26317   */\n      lt\n        /* \"#utility.yul\":26283:26301   */\n      dup2\n        /* \"#utility.yul\":26280:26318   */\n      eq\n        /* \"#utility.yul\":26277:26279   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":26333:26351   */\n      tag_513\n      tag_514\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":26277:26279   */\n    tag_512:\n        /* \"#utility.yul\":26098:26367   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26373:26654   */\n    tag_469:\n        /* \"#utility.yul\":26456:26483   */\n      tag_516\n        /* \"#utility.yul\":26478:26482   */\n      dup3\n        /* \"#utility.yul\":26456:26483   */\n      tag_354\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":26448:26454   */\n      dup2\n        /* \"#utility.yul\":26444:26484   */\n      add\n        /* \"#utility.yul\":26586:26592   */\n      dup2\n        /* \"#utility.yul\":26574:26584   */\n      dup2\n        /* \"#utility.yul\":26571:26593   */\n      lt\n        /* \"#utility.yul\":26550:26568   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":26538:26548   */\n      dup3\n        /* \"#utility.yul\":26535:26569   */\n      gt\n        /* \"#utility.yul\":26532:26594   */\n      or\n        /* \"#utility.yul\":26529:26531   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":26597:26615   */\n      tag_518\n      tag_474\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":26529:26531   */\n    tag_517:\n        /* \"#utility.yul\":26637:26647   */\n      dup1\n        /* \"#utility.yul\":26633:26635   */\n      0x40\n        /* \"#utility.yul\":26626:26648   */\n      mstore\n        /* \"#utility.yul\":26416:26654   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26660:26893   */\n    tag_94:\n        /* \"#utility.yul\":26699:26702   */\n      0x00\n        /* \"#utility.yul\":26722:26746   */\n      tag_520\n        /* \"#utility.yul\":26740:26745   */\n      dup3\n        /* \"#utility.yul\":26722:26746   */\n      tag_415\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":26713:26746   */\n      swap2\n      pop\n        /* \"#utility.yul\":26768:26834   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26761:26766   */\n      dup3\n        /* \"#utility.yul\":26758:26835   */\n      eq\n        /* \"#utility.yul\":26755:26757   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":26838:26856   */\n      tag_522\n      tag_495\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":26755:26757   */\n    tag_521:\n        /* \"#utility.yul\":26885:26886   */\n      0x01\n        /* \"#utility.yul\":26878:26883   */\n      dup3\n        /* \"#utility.yul\":26874:26887   */\n      add\n        /* \"#utility.yul\":26867:26887   */\n      swap1\n      pop\n        /* \"#utility.yul\":26703:26893   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26899:27079   */\n    tag_495:\n        /* \"#utility.yul\":26947:27024   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26944:26945   */\n      0x00\n        /* \"#utility.yul\":26937:27025   */\n      mstore\n        /* \"#utility.yul\":27044:27048   */\n      0x11\n        /* \"#utility.yul\":27041:27042   */\n      0x04\n        /* \"#utility.yul\":27034:27049   */\n      mstore\n        /* \"#utility.yul\":27068:27072   */\n      0x24\n        /* \"#utility.yul\":27065:27066   */\n      0x00\n        /* \"#utility.yul\":27058:27073   */\n      revert\n        /* \"#utility.yul\":27085:27265   */\n    tag_514:\n        /* \"#utility.yul\":27133:27210   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27130:27131   */\n      0x00\n        /* \"#utility.yul\":27123:27211   */\n      mstore\n        /* \"#utility.yul\":27230:27234   */\n      0x22\n        /* \"#utility.yul\":27227:27228   */\n      0x04\n        /* \"#utility.yul\":27220:27235   */\n      mstore\n        /* \"#utility.yul\":27254:27258   */\n      0x24\n        /* \"#utility.yul\":27251:27252   */\n      0x00\n        /* \"#utility.yul\":27244:27259   */\n      revert\n        /* \"#utility.yul\":27271:27451   */\n    tag_474:\n        /* \"#utility.yul\":27319:27396   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27316:27317   */\n      0x00\n        /* \"#utility.yul\":27309:27397   */\n      mstore\n        /* \"#utility.yul\":27416:27420   */\n      0x41\n        /* \"#utility.yul\":27413:27414   */\n      0x04\n        /* \"#utility.yul\":27406:27421   */\n      mstore\n        /* \"#utility.yul\":27440:27444   */\n      0x24\n        /* \"#utility.yul\":27437:27438   */\n      0x00\n        /* \"#utility.yul\":27430:27445   */\n      revert\n        /* \"#utility.yul\":27457:27640   */\n    tag_177:\n        /* \"#utility.yul\":27492:27495   */\n      0x00\n        /* \"#utility.yul\":27530:27531   */\n      0x03\n        /* \"#utility.yul\":27512:27528   */\n      returndatasize\n        /* \"#utility.yul\":27509:27532   */\n      gt\n        /* \"#utility.yul\":27506:27508   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":27568:27569   */\n      0x04\n        /* \"#utility.yul\":27565:27566   */\n      0x00\n        /* \"#utility.yul\":27562:27563   */\n      dup1\n        /* \"#utility.yul\":27547:27570   */\n      returndatacopy\n        /* \"#utility.yul\":27590:27624   */\n      tag_528\n        /* \"#utility.yul\":27621:27622   */\n      0x00\n        /* \"#utility.yul\":27615:27623   */\n      mload\n        /* \"#utility.yul\":27590:27624   */\n      tag_529\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":27583:27624   */\n      swap1\n      pop\n        /* \"#utility.yul\":27506:27508   */\n    tag_527:\n        /* \"#utility.yul\":27496:27640   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":27646:27748   */\n    tag_354:\n        /* \"#utility.yul\":27687:27693   */\n      0x00\n        /* \"#utility.yul\":27738:27740   */\n      0x1f\n        /* \"#utility.yul\":27734:27741   */\n      not\n        /* \"#utility.yul\":27729:27731   */\n      0x1f\n        /* \"#utility.yul\":27722:27727   */\n      dup4\n        /* \"#utility.yul\":27718:27732   */\n      add\n        /* \"#utility.yul\":27714:27742   */\n      and\n        /* \"#utility.yul\":27704:27742   */\n      swap1\n      pop\n        /* \"#utility.yul\":27694:27748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27754:27860   */\n    tag_529:\n        /* \"#utility.yul\":27798:27806   */\n      0x00\n        /* \"#utility.yul\":27847:27852   */\n      dup2\n        /* \"#utility.yul\":27842:27845   */\n      0xe0\n        /* \"#utility.yul\":27838:27853   */\n      shr\n        /* \"#utility.yul\":27817:27853   */\n      swap1\n      pop\n        /* \"#utility.yul\":27807:27860   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27866:28105   */\n    tag_367:\n        /* \"#utility.yul\":28006:28040   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":28002:28003   */\n      0x00\n        /* \"#utility.yul\":27994:28000   */\n      dup3\n        /* \"#utility.yul\":27990:28004   */\n      add\n        /* \"#utility.yul\":27983:28041   */\n      mstore\n        /* \"#utility.yul\":28075:28097   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":28070:28072   */\n      0x20\n        /* \"#utility.yul\":28062:28068   */\n      dup3\n        /* \"#utility.yul\":28058:28073   */\n      add\n        /* \"#utility.yul\":28051:28098   */\n      mstore\n        /* \"#utility.yul\":27972:28105   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28111:28338   */\n    tag_372:\n        /* \"#utility.yul\":28251:28285   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":28247:28248   */\n      0x00\n        /* \"#utility.yul\":28239:28245   */\n      dup3\n        /* \"#utility.yul\":28235:28249   */\n      add\n        /* \"#utility.yul\":28228:28286   */\n      mstore\n        /* \"#utility.yul\":28320:28330   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28315:28317   */\n      0x20\n        /* \"#utility.yul\":28307:28313   */\n      dup3\n        /* \"#utility.yul\":28303:28318   */\n      add\n        /* \"#utility.yul\":28296:28331   */\n      mstore\n        /* \"#utility.yul\":28217:28338   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28344:28574   */\n    tag_377:\n        /* \"#utility.yul\":28484:28518   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":28480:28481   */\n      0x00\n        /* \"#utility.yul\":28472:28478   */\n      dup3\n        /* \"#utility.yul\":28468:28482   */\n      add\n        /* \"#utility.yul\":28461:28519   */\n      mstore\n        /* \"#utility.yul\":28553:28566   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28548:28550   */\n      0x20\n        /* \"#utility.yul\":28540:28546   */\n      dup3\n        /* \"#utility.yul\":28536:28551   */\n      add\n        /* \"#utility.yul\":28529:28567   */\n      mstore\n        /* \"#utility.yul\":28450:28574   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28580:28808   */\n    tag_382:\n        /* \"#utility.yul\":28720:28754   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":28716:28717   */\n      0x00\n        /* \"#utility.yul\":28708:28714   */\n      dup3\n        /* \"#utility.yul\":28704:28718   */\n      add\n        /* \"#utility.yul\":28697:28755   */\n      mstore\n        /* \"#utility.yul\":28789:28800   */\n      0x20617070726f7665640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28784:28786   */\n      0x20\n        /* \"#utility.yul\":28776:28782   */\n      dup3\n        /* \"#utility.yul\":28772:28787   */\n      add\n        /* \"#utility.yul\":28765:28801   */\n      mstore\n        /* \"#utility.yul\":28686:28808   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28814:29038   */\n    tag_387:\n        /* \"#utility.yul\":28954:28988   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":28950:28951   */\n      0x00\n        /* \"#utility.yul\":28942:28948   */\n      dup3\n        /* \"#utility.yul\":28938:28952   */\n      add\n        /* \"#utility.yul\":28931:28989   */\n      mstore\n        /* \"#utility.yul\":29023:29030   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29018:29020   */\n      0x20\n        /* \"#utility.yul\":29010:29016   */\n      dup3\n        /* \"#utility.yul\":29006:29021   */\n      add\n        /* \"#utility.yul\":28999:29031   */\n      mstore\n        /* \"#utility.yul\":28920:29038   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29044:29281   */\n    tag_392:\n        /* \"#utility.yul\":29184:29218   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":29180:29181   */\n      0x00\n        /* \"#utility.yul\":29172:29178   */\n      dup3\n        /* \"#utility.yul\":29168:29182   */\n      add\n        /* \"#utility.yul\":29161:29219   */\n      mstore\n        /* \"#utility.yul\":29253:29273   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":29248:29250   */\n      0x20\n        /* \"#utility.yul\":29240:29246   */\n      dup3\n        /* \"#utility.yul\":29236:29251   */\n      add\n        /* \"#utility.yul\":29229:29274   */\n      mstore\n        /* \"#utility.yul\":29150:29281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29287:29516   */\n    tag_397:\n        /* \"#utility.yul\":29427:29461   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":29423:29424   */\n      0x00\n        /* \"#utility.yul\":29415:29421   */\n      dup3\n        /* \"#utility.yul\":29411:29425   */\n      add\n        /* \"#utility.yul\":29404:29462   */\n      mstore\n        /* \"#utility.yul\":29496:29508   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29491:29493   */\n      0x20\n        /* \"#utility.yul\":29483:29489   */\n      dup3\n        /* \"#utility.yul\":29479:29494   */\n      add\n        /* \"#utility.yul\":29472:29509   */\n      mstore\n        /* \"#utility.yul\":29393:29516   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29522:29750   */\n    tag_402:\n        /* \"#utility.yul\":29662:29696   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":29658:29659   */\n      0x00\n        /* \"#utility.yul\":29650:29656   */\n      dup3\n        /* \"#utility.yul\":29646:29660   */\n      add\n        /* \"#utility.yul\":29639:29697   */\n      mstore\n        /* \"#utility.yul\":29731:29742   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29726:29728   */\n      0x20\n        /* \"#utility.yul\":29718:29724   */\n      dup3\n        /* \"#utility.yul\":29714:29729   */\n      add\n        /* \"#utility.yul\":29707:29743   */\n      mstore\n        /* \"#utility.yul\":29628:29750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29756:29984   */\n    tag_407:\n        /* \"#utility.yul\":29896:29930   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":29892:29893   */\n      0x00\n        /* \"#utility.yul\":29884:29890   */\n      dup3\n        /* \"#utility.yul\":29880:29894   */\n      add\n        /* \"#utility.yul\":29873:29931   */\n      mstore\n        /* \"#utility.yul\":29965:29976   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29960:29962   */\n      0x20\n        /* \"#utility.yul\":29952:29958   */\n      dup3\n        /* \"#utility.yul\":29948:29963   */\n      add\n        /* \"#utility.yul\":29941:29977   */\n      mstore\n        /* \"#utility.yul\":29862:29984   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29990:30217   */\n    tag_412:\n        /* \"#utility.yul\":30130:30164   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":30126:30127   */\n      0x00\n        /* \"#utility.yul\":30118:30124   */\n      dup3\n        /* \"#utility.yul\":30114:30128   */\n      add\n        /* \"#utility.yul\":30107:30165   */\n      mstore\n        /* \"#utility.yul\":30199:30209   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30194:30196   */\n      0x20\n        /* \"#utility.yul\":30186:30192   */\n      dup3\n        /* \"#utility.yul\":30182:30197   */\n      add\n        /* \"#utility.yul\":30175:30210   */\n      mstore\n        /* \"#utility.yul\":30096:30217   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30223:30934   */\n    tag_179:\n        /* \"#utility.yul\":30262:30265   */\n      0x00\n        /* \"#utility.yul\":30300:30304   */\n      0x44\n        /* \"#utility.yul\":30282:30298   */\n      returndatasize\n        /* \"#utility.yul\":30279:30305   */\n      lt\n        /* \"#utility.yul\":30276:30278   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":30308:30313   */\n      jump(tag_542)\n        /* \"#utility.yul\":30276:30278   */\n    tag_543:\n        /* \"#utility.yul\":30337:30357   */\n      tag_544\n      tag_467\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":30412:30413   */\n      0x04\n        /* \"#utility.yul\":30394:30410   */\n      returndatasize\n        /* \"#utility.yul\":30390:30414   */\n      sub\n        /* \"#utility.yul\":30387:30388   */\n      0x04\n        /* \"#utility.yul\":30381:30385   */\n      dup3\n        /* \"#utility.yul\":30366:30415   */\n      returndatacopy\n        /* \"#utility.yul\":30445:30449   */\n      dup1\n        /* \"#utility.yul\":30439:30450   */\n      mload\n        /* \"#utility.yul\":30544:30560   */\n      returndatasize\n        /* \"#utility.yul\":30537:30541   */\n      0x24\n        /* \"#utility.yul\":30529:30535   */\n      dup3\n        /* \"#utility.yul\":30525:30542   */\n      add\n        /* \"#utility.yul\":30522:30561   */\n      gt\n        /* \"#utility.yul\":30489:30507   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30481:30487   */\n      dup3\n        /* \"#utility.yul\":30478:30508   */\n      gt\n        /* \"#utility.yul\":30462:30575   */\n      or\n        /* \"#utility.yul\":30459:30461   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":30590:30595   */\n      pop\n      pop\n      jump(tag_542)\n        /* \"#utility.yul\":30459:30461   */\n    tag_545:\n        /* \"#utility.yul\":30636:30642   */\n      dup1\n        /* \"#utility.yul\":30630:30634   */\n      dup3\n        /* \"#utility.yul\":30626:30643   */\n      add\n        /* \"#utility.yul\":30672:30675   */\n      dup1\n        /* \"#utility.yul\":30666:30676   */\n      mload\n        /* \"#utility.yul\":30699:30717   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30691:30697   */\n      dup2\n        /* \"#utility.yul\":30688:30718   */\n      gt\n        /* \"#utility.yul\":30685:30687   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":30721:30726   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_542)\n        /* \"#utility.yul\":30685:30687   */\n    tag_546:\n        /* \"#utility.yul\":30769:30775   */\n      dup1\n        /* \"#utility.yul\":30762:30766   */\n      0x20\n        /* \"#utility.yul\":30757:30760   */\n      dup4\n        /* \"#utility.yul\":30753:30767   */\n      add\n        /* \"#utility.yul\":30749:30776   */\n      add\n        /* \"#utility.yul\":30828:30829   */\n      0x04\n        /* \"#utility.yul\":30810:30826   */\n      returndatasize\n        /* \"#utility.yul\":30806:30830   */\n      sub\n        /* \"#utility.yul\":30800:30804   */\n      dup6\n        /* \"#utility.yul\":30796:30831   */\n      add\n        /* \"#utility.yul\":30791:30794   */\n      dup2\n        /* \"#utility.yul\":30788:30832   */\n      gt\n        /* \"#utility.yul\":30785:30787   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":30835:30840   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_542)\n        /* \"#utility.yul\":30785:30787   */\n    tag_547:\n        /* \"#utility.yul\":30852:30909   */\n      tag_548\n        /* \"#utility.yul\":30900:30906   */\n      dup3\n        /* \"#utility.yul\":30894:30898   */\n      0x20\n        /* \"#utility.yul\":30890:30907   */\n      add\n        /* \"#utility.yul\":30882:30888   */\n      dup6\n        /* \"#utility.yul\":30878:30908   */\n      add\n        /* \"#utility.yul\":30872:30876   */\n      dup7\n        /* \"#utility.yul\":30852:30909   */\n      tag_469\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":30925:30928   */\n      dup3\n        /* \"#utility.yul\":30918:30928   */\n      swap6\n      pop\n        /* \"#utility.yul\":30266:30934   */\n      pop\n      pop\n      pop\n      pop\n      pop\n    tag_542:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":30940:31062   */\n    tag_247:\n        /* \"#utility.yul\":31013:31037   */\n      tag_550\n        /* \"#utility.yul\":31031:31036   */\n      dup2\n        /* \"#utility.yul\":31013:31037   */\n      tag_326\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":31006:31011   */\n      dup2\n        /* \"#utility.yul\":31003:31038   */\n      eq\n        /* \"#utility.yul\":30993:30995   */\n      tag_551\n      jumpi\n        /* \"#utility.yul\":31052:31053   */\n      0x00\n        /* \"#utility.yul\":31049:31050   */\n      dup1\n        /* \"#utility.yul\":31042:31054   */\n      revert\n        /* \"#utility.yul\":30993:30995   */\n    tag_551:\n        /* \"#utility.yul\":30983:31062   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31068:31184   */\n    tag_259:\n        /* \"#utility.yul\":31138:31159   */\n      tag_553\n        /* \"#utility.yul\":31153:31158   */\n      dup2\n        /* \"#utility.yul\":31138:31159   */\n      tag_344\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":31131:31136   */\n      dup2\n        /* \"#utility.yul\":31128:31160   */\n      eq\n        /* \"#utility.yul\":31118:31120   */\n      tag_554\n      jumpi\n        /* \"#utility.yul\":31174:31175   */\n      0x00\n        /* \"#utility.yul\":31171:31172   */\n      dup1\n        /* \"#utility.yul\":31164:31176   */\n      revert\n        /* \"#utility.yul\":31118:31120   */\n    tag_554:\n        /* \"#utility.yul\":31108:31184   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31190:31310   */\n    tag_263:\n        /* \"#utility.yul\":31262:31285   */\n      tag_556\n        /* \"#utility.yul\":31279:31284   */\n      dup2\n        /* \"#utility.yul\":31262:31285   */\n      tag_500\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":31255:31260   */\n      dup2\n        /* \"#utility.yul\":31252:31286   */\n      eq\n        /* \"#utility.yul\":31242:31244   */\n      tag_557\n      jumpi\n        /* \"#utility.yul\":31300:31301   */\n      0x00\n        /* \"#utility.yul\":31297:31298   */\n      dup1\n        /* \"#utility.yul\":31290:31302   */\n      revert\n        /* \"#utility.yul\":31242:31244   */\n    tag_557:\n        /* \"#utility.yul\":31232:31310   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31316:31438   */\n    tag_273:\n        /* \"#utility.yul\":31389:31413   */\n      tag_559\n        /* \"#utility.yul\":31407:31412   */\n      dup2\n        /* \"#utility.yul\":31389:31413   */\n      tag_415\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":31382:31387   */\n      dup2\n        /* \"#utility.yul\":31379:31414   */\n      eq\n        /* \"#utility.yul\":31369:31371   */\n      tag_560\n      jumpi\n        /* \"#utility.yul\":31428:31429   */\n      0x00\n        /* \"#utility.yul\":31425:31426   */\n      dup1\n        /* \"#utility.yul\":31418:31430   */\n      revert\n        /* \"#utility.yul\":31369:31371   */\n    tag_560:\n        /* \"#utility.yul\":31359:31438   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d3544c500c954d2c9148dc7934c73975c33e1c63e3c6799c9c13f50110dd6d4364736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3004:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:259:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:8"
															},
															"nodeType": "YulIf",
															"src": "262:2:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "338:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "343:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "348:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "316:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:39:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:8",
														"type": ""
													}
												],
												"src": "7:354:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "454:215:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "503:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "512:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "515:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "505:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "505:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "505:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "482:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "490:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "478:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "478:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "497:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "474:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "474:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "467:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:35:8"
															},
															"nodeType": "YulIf",
															"src": "464:2:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "528:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "548:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "542:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "532:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "564:99:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "636:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "644:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "632:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "632:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "651:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "659:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "573:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:90:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "564:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "432:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "440:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "448:5:8",
														"type": ""
													}
												],
												"src": "381:288:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "762:303:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "808:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "817:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "810:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "810:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "810:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "783:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "792:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "779:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "779:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "804:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "775:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:32:8"
															},
															"nodeType": "YulIf",
															"src": "772:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "834:224:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "849:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "884:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "863:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "863:24:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "853:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "934:16:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "943:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "946:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "936:12:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "936:12:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "906:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "914:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "903:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "903:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "900:2:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "964:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1020:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1031:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1016:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1016:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1040:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "974:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "964:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "732:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "743:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "755:6:8",
														"type": ""
													}
												],
												"src": "675:390:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1112:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1122:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1132:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1122:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1181:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1189:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1161:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1161:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1161:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1096:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1105:6:8",
														"type": ""
													}
												],
												"src": "1071:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1256:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1266:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1239:6:8",
														"type": ""
													}
												],
												"src": "1206:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1354:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1459:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1461:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1461:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1431:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1439:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1428:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:30:8"
															},
															"nodeType": "YulIf",
															"src": "1425:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1491:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1521:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1499:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1565:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1577:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1573:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1565:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1338:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1349:4:8",
														"type": ""
													}
												],
												"src": "1287:308:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1650:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1660:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1669:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1664:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1729:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1754:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1759:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1750:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1750:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1773:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1778:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1769:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1769:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1763:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1763:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1743:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1743:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1690:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1693:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1701:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1703:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1712:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1715:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1708:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1708:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1703:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1683:3:8",
																"statements": []
															},
															"src": "1679:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1826:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1876:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1881:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1872:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1872:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1890:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1865:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1865:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1865:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1807:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1810:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1804:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:13:8"
															},
															"nodeType": "YulIf",
															"src": "1801:2:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1632:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1637:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1642:6:8",
														"type": ""
													}
												],
												"src": "1601:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1965:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1975:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1989:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1995:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1975:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2006:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2036:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2042:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2010:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2083:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2097:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2111:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2119:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2107:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2107:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2097:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2063:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2056:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:26:8"
															},
															"nodeType": "YulIf",
															"src": "2053:2:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2186:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2200:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2200:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2200:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2150:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2173:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2181:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2170:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2170:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2147:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2147:38:8"
															},
															"nodeType": "YulIf",
															"src": "2144:2:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1949:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1958:6:8",
														"type": ""
													}
												],
												"src": "1914:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2283:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2293:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2315:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2345:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2323:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2323:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2311:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2311:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2297:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2462:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2464:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2464:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2464:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2405:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2417:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2402:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2402:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2441:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2453:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2438:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2438:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2399:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:62:8"
															},
															"nodeType": "YulIf",
															"src": "2396:2:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2500:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2504:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2493:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2493:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2269:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2277:4:8",
														"type": ""
													}
												],
												"src": "2240:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2555:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2572:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2575:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2565:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2565:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2669:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2672:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2662:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2662:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2693:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2696:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2686:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2686:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2686:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2527:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2741:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2758:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2761:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2751:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2751:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2855:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2858:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2848:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2879:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2882:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2872:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2713:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2947:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2957:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2975:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2982:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2971:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2971:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2991:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2987:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2987:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2967:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2967:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2957:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2930:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2940:6:8",
														"type": ""
													}
												],
												"src": "2899:102:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620029d4380380620029d483398181016040528101906200003791906200018d565b62000048816200004f60201b60201c565b5062000342565b8060029080519060200190620000679291906200006b565b5050565b828054620000799062000267565b90600052602060002090601f0160209004810192826200009d5760008555620000e9565b82601f10620000b857805160ff1916838001178555620000e9565b82800160010185558215620000e9579182015b82811115620000e8578251825591602001919060010190620000cb565b5b509050620000f89190620000fc565b5090565b5b8082111562000117576000816000905550600101620000fd565b5090565b6000620001326200012c84620001fb565b620001d2565b9050828152602081018484840111156200014b57600080fd5b6200015884828562000231565b509392505050565b600082601f8301126200017257600080fd5b8151620001848482602086016200011b565b91505092915050565b600060208284031215620001a057600080fd5b600082015167ffffffffffffffff811115620001bb57600080fd5b620001c98482850162000160565b91505092915050565b6000620001de620001f1565b9050620001ec82826200029d565b919050565b6000604051905090565b600067ffffffffffffffff82111562000219576200021862000302565b5b620002248262000331565b9050602081019050919050565b60005b838110156200025157808201518184015260208101905062000234565b8381111562000261576000848401525b50505050565b600060028204905060018216806200028057607f821691505b60208210811415620002975762000296620002d3565b5b50919050565b620002a88262000331565b810181811067ffffffffffffffff82111715620002ca57620002c962000302565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61268280620003526000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a1919061181f565b6101d0565b6040516100b39190611e5c565b60405180910390f35b6100d660048036038101906100d191906118c7565b610299565b6040516100e39190611cdf565b60405180910390f35b61010660048036038101906101019190611919565b61037b565b6040516101139190611cfa565b60405180910390f35b61013660048036038101906101319190611695565b61040f565b005b610152600480360381019061014d919061185b565b6104b0565b60405161015f9190611c86565b60405180910390f35b610182600480360381019061017d91906117e3565b610661565b005b61019e60048036038101906101999190611659565b610677565b6040516101ab9190611cdf565b60405180910390f35b6101ce60048036038101906101c99190611754565b61070b565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611d5c565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103745750610373826107ac565b5b9050919050565b60606002805461038a906120cb565b80601f01602080910402602001604051908101604052809291908181526020018280546103b6906120cb565b80156104035780601f106103d857610100808354040283529160200191610403565b820191906000526020600020905b8154815290600101906020018083116103e657829003601f168201915b50505050509050919050565b610417610816565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045d575061045c85610457610816565b610677565b5b61049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390611dbc565b60405180910390fd5b6104a9858585858561081e565b5050505050565b606081518351146104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90611e1c565b60405180910390fd5b6000835167ffffffffffffffff811115610539577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156105675781602001602082028036833780820191505090505b50905060005b8451811015610656576106008582815181106105b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518583815181106105f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516101d0565b828281518110610639577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508061064f9061212e565b905061056d565b508091505092915050565b61067361066c610816565b8383610b8c565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610713610816565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610759575061075885610753610816565b610677565b5b610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078f90611d7c565b60405180910390fd5b6107a58585858585610cf9565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b8151835114610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085990611e3c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990611d9c565b60405180910390fd5b60006108dc610816565b90506108ec818787878787610f95565b60005b8451811015610ae9576000858281518110610933577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000858381518110610978577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1090611ddc565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ace9190611fbf565b9250508190555050505080610ae29061212e565b90506108ef565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610b60929190611ca8565b60405180910390a4610b76818787878787610f9d565b610b84818787878787610fa5565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf290611dfc565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cec9190611cdf565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6090611d9c565b60405180910390fd5b6000610d73610816565b90506000610d808561118c565b90506000610d8d8561118c565b9050610d9d838989858589610f95565b600080600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2b90611ddc565b60405180910390fd5b85810360008089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508560008089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ee99190611fbf565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610f66929190611e77565b60405180910390a4610f7c848a8a86868a610f9d565b610f8a848a8a8a8a8a611252565b505050505050505050565b505050505050565b505050505050565b610fc48473ffffffffffffffffffffffffffffffffffffffff16611439565b15611184578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161100a959493929190611bc4565b602060405180830381600087803b15801561102457600080fd5b505af192505050801561105557506040513d601f19601f8201168201806040525081019061105291906118f0565b60015b6110fb57611061612204565b806308c379a014156110be575061107661255a565b8061108157506110c0565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b59190611cfa565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f290611d1c565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611182576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117990611d3c565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156111d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156111ff5781602001602082028036833780820191505090505b509050828160008151811061123d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080915050919050565b6112718473ffffffffffffffffffffffffffffffffffffffff16611439565b15611431578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016112b7959493929190611c2c565b602060405180830381600087803b1580156112d157600080fd5b505af192505050801561130257506040513d601f19601f820116820180604052508101906112ff91906118f0565b60015b6113a85761130e612204565b806308c379a0141561136b575061132361255a565b8061132e575061136d565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113629190611cfa565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139f90611d1c565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461142f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142690611d3c565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600061146f61146a84611ec5565b611ea0565b9050808382526020820190508285602086028201111561148e57600080fd5b60005b858110156114be57816114a48882611572565b845260208401935060208301925050600181019050611491565b5050509392505050565b60006114db6114d684611ef1565b611ea0565b905080838252602082019050828560208602820111156114fa57600080fd5b60005b8581101561152a57816115108882611644565b8452602084019350602083019250506001810190506114fd565b5050509392505050565b600061154761154284611f1d565b611ea0565b90508281526020810184848401111561155f57600080fd5b61156a848285612089565b509392505050565b600081359050611581816125f0565b92915050565b600082601f83011261159857600080fd5b81356115a884826020860161145c565b91505092915050565b600082601f8301126115c257600080fd5b81356115d28482602086016114c8565b91505092915050565b6000813590506115ea81612607565b92915050565b6000813590506115ff8161261e565b92915050565b6000815190506116148161261e565b92915050565b600082601f83011261162b57600080fd5b813561163b848260208601611534565b91505092915050565b60008135905061165381612635565b92915050565b6000806040838503121561166c57600080fd5b600061167a85828601611572565b925050602061168b85828601611572565b9150509250929050565b600080600080600060a086880312156116ad57600080fd5b60006116bb88828901611572565b95505060206116cc88828901611572565b945050604086013567ffffffffffffffff8111156116e957600080fd5b6116f5888289016115b1565b935050606086013567ffffffffffffffff81111561171257600080fd5b61171e888289016115b1565b925050608086013567ffffffffffffffff81111561173b57600080fd5b6117478882890161161a565b9150509295509295909350565b600080600080600060a0868803121561176c57600080fd5b600061177a88828901611572565b955050602061178b88828901611572565b945050604061179c88828901611644565b93505060606117ad88828901611644565b925050608086013567ffffffffffffffff8111156117ca57600080fd5b6117d68882890161161a565b9150509295509295909350565b600080604083850312156117f657600080fd5b600061180485828601611572565b9250506020611815858286016115db565b9150509250929050565b6000806040838503121561183257600080fd5b600061184085828601611572565b925050602061185185828601611644565b9150509250929050565b6000806040838503121561186e57600080fd5b600083013567ffffffffffffffff81111561188857600080fd5b61189485828601611587565b925050602083013567ffffffffffffffff8111156118b157600080fd5b6118bd858286016115b1565b9150509250929050565b6000602082840312156118d957600080fd5b60006118e7848285016115f0565b91505092915050565b60006020828403121561190257600080fd5b600061191084828501611605565b91505092915050565b60006020828403121561192b57600080fd5b600061193984828501611644565b91505092915050565b600061194e8383611ba6565b60208301905092915050565b61196381612015565b82525050565b600061197482611f5e565b61197e8185611f8c565b935061198983611f4e565b8060005b838110156119ba5781516119a18882611942565b97506119ac83611f7f565b92505060018101905061198d565b5085935050505092915050565b6119d081612027565b82525050565b60006119e182611f69565b6119eb8185611f9d565b93506119fb818560208601612098565b611a0481612226565b840191505092915050565b6000611a1a82611f74565b611a248185611fae565b9350611a34818560208601612098565b611a3d81612226565b840191505092915050565b6000611a55603483611fae565b9150611a6082612244565b604082019050919050565b6000611a78602883611fae565b9150611a8382612293565b604082019050919050565b6000611a9b602b83611fae565b9150611aa6826122e2565b604082019050919050565b6000611abe602983611fae565b9150611ac982612331565b604082019050919050565b6000611ae1602583611fae565b9150611aec82612380565b604082019050919050565b6000611b04603283611fae565b9150611b0f826123cf565b604082019050919050565b6000611b27602a83611fae565b9150611b328261241e565b604082019050919050565b6000611b4a602983611fae565b9150611b558261246d565b604082019050919050565b6000611b6d602983611fae565b9150611b78826124bc565b604082019050919050565b6000611b90602883611fae565b9150611b9b8261250b565b604082019050919050565b611baf8161207f565b82525050565b611bbe8161207f565b82525050565b600060a082019050611bd9600083018861195a565b611be6602083018761195a565b8181036040830152611bf88186611969565b90508181036060830152611c0c8185611969565b90508181036080830152611c2081846119d6565b90509695505050505050565b600060a082019050611c41600083018861195a565b611c4e602083018761195a565b611c5b6040830186611bb5565b611c686060830185611bb5565b8181036080830152611c7a81846119d6565b90509695505050505050565b60006020820190508181036000830152611ca08184611969565b905092915050565b60006040820190508181036000830152611cc28185611969565b90508181036020830152611cd68184611969565b90509392505050565b6000602082019050611cf460008301846119c7565b92915050565b60006020820190508181036000830152611d148184611a0f565b905092915050565b60006020820190508181036000830152611d3581611a48565b9050919050565b60006020820190508181036000830152611d5581611a6b565b9050919050565b60006020820190508181036000830152611d7581611a8e565b9050919050565b60006020820190508181036000830152611d9581611ab1565b9050919050565b60006020820190508181036000830152611db581611ad4565b9050919050565b60006020820190508181036000830152611dd581611af7565b9050919050565b60006020820190508181036000830152611df581611b1a565b9050919050565b60006020820190508181036000830152611e1581611b3d565b9050919050565b60006020820190508181036000830152611e3581611b60565b9050919050565b60006020820190508181036000830152611e5581611b83565b9050919050565b6000602082019050611e716000830184611bb5565b92915050565b6000604082019050611e8c6000830185611bb5565b611e996020830184611bb5565b9392505050565b6000611eaa611ebb565b9050611eb682826120fd565b919050565b6000604051905090565b600067ffffffffffffffff821115611ee057611edf6121d5565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611f0c57611f0b6121d5565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611f3857611f376121d5565b5b611f4182612226565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611fca8261207f565b9150611fd58361207f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561200a57612009612177565b5b828201905092915050565b60006120208261205f565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156120b657808201518184015260208101905061209b565b838111156120c5576000848401525b50505050565b600060028204905060018216806120e357607f821691505b602082108114156120f7576120f66121a6565b5b50919050565b61210682612226565b810181811067ffffffffffffffff82111715612125576121246121d5565b5b80604052505050565b60006121398261207f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561216c5761216b612177565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d11156122235760046000803e612220600051612237565b90505b90565b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b600060443d101561256a576125ed565b612572611ebb565b60043d036004823e80513d602482011167ffffffffffffffff8211171561259a5750506125ed565b808201805167ffffffffffffffff8111156125b857505050506125ed565b80602083010160043d0385018111156125d55750505050506125ed565b6125e4826020018501866120fd565b82955050505050505b90565b6125f981612015565b811461260457600080fd5b50565b61261081612027565b811461261b57600080fd5b50565b61262781612033565b811461263257600080fd5b50565b61263e8161207f565b811461264957600080fd5b5056fea2646970667358221220d3544c500c954d2c9148dc7934c73975c33e1c63e3c6799c9c13f50110dd6d4364736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x29D4 CODESIZE SUB DUP1 PUSH3 0x29D4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x18D JUMP JUMPDEST PUSH3 0x48 DUP2 PUSH3 0x4F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x342 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x67 SWAP3 SWAP2 SWAP1 PUSH3 0x6B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x79 SWAP1 PUSH3 0x267 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xF8 SWAP2 SWAP1 PUSH3 0xFC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x117 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0xFD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x132 PUSH3 0x12C DUP5 PUSH3 0x1FB JUMP JUMPDEST PUSH3 0x1D2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x158 DUP5 DUP3 DUP6 PUSH3 0x231 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x184 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x11B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1C9 DUP5 DUP3 DUP6 ADD PUSH3 0x160 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DE PUSH3 0x1F1 JUMP JUMPDEST SWAP1 POP PUSH3 0x1EC DUP3 DUP3 PUSH3 0x29D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x219 JUMPI PUSH3 0x218 PUSH3 0x302 JUMP JUMPDEST JUMPDEST PUSH3 0x224 DUP3 PUSH3 0x331 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x251 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x234 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x261 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x280 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x297 JUMPI PUSH3 0x296 PUSH3 0x2D3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2A8 DUP3 PUSH3 0x331 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2CA JUMPI PUSH3 0x2C9 PUSH3 0x302 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2682 DUP1 PUSH3 0x352 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1659 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1754 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x374 JUMPI POP PUSH2 0x373 DUP3 PUSH2 0x7AC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x20CB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B6 SWAP1 PUSH2 0x20CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x403 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x403 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 PUSH2 0x816 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45D JUMPI POP PUSH2 0x45C DUP6 PUSH2 0x457 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST JUMPDEST PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP1 PUSH2 0x1DBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x539 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x567 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x656 JUMPI PUSH2 0x600 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5B2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5F3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x639 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x64F SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 POP PUSH2 0x56D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x673 PUSH2 0x66C PUSH2 0x816 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xB8C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x713 PUSH2 0x816 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x759 JUMPI POP PUSH2 0x758 DUP6 PUSH2 0x753 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST JUMPDEST PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78F SWAP1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A5 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xCF9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x859 SWAP1 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8DC PUSH2 0x816 JUMP JUMPDEST SWAP1 POP PUSH2 0x8EC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x933 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x978 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA10 SWAP1 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xAE2 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 POP PUSH2 0x8EF JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB60 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB76 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0xB84 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFA5 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD60 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD73 PUSH2 0x816 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD80 DUP6 PUSH2 0x118C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD8D DUP6 PUSH2 0x118C JUMP JUMPDEST SWAP1 POP PUSH2 0xD9D DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xE34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2B SWAP1 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEE9 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xF66 SWAP3 SWAP2 SWAP1 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF7C DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0xF8A DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1252 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFC4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1439 JUMP JUMPDEST ISZERO PUSH2 0x1184 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1055 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1052 SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10FB JUMPI PUSH2 0x1061 PUSH2 0x2204 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x10BE JUMPI POP PUSH2 0x1076 PUSH2 0x255A JUMP JUMPDEST DUP1 PUSH2 0x1081 JUMPI POP PUSH2 0x10C0 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B5 SWAP2 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1182 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1179 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11D1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11FF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x123D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1271 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1439 JUMP JUMPDEST ISZERO PUSH2 0x1431 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1302 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12FF SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13A8 JUMPI PUSH2 0x130E PUSH2 0x2204 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x136B JUMPI POP PUSH2 0x1323 PUSH2 0x255A JUMP JUMPDEST DUP1 PUSH2 0x132E JUMPI POP PUSH2 0x136D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1362 SWAP2 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139F SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x142F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1426 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146F PUSH2 0x146A DUP5 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x148E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x14BE JUMPI DUP2 PUSH2 0x14A4 DUP9 DUP3 PUSH2 0x1572 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1491 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DB PUSH2 0x14D6 DUP5 PUSH2 0x1EF1 JUMP JUMPDEST PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x14FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x152A JUMPI DUP2 PUSH2 0x1510 DUP9 DUP3 PUSH2 0x1644 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x14FD JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1547 PUSH2 0x1542 DUP5 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x155F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156A DUP5 DUP3 DUP6 PUSH2 0x2089 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1581 DUP2 PUSH2 0x25F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15A8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x145C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15D2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x14C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15EA DUP2 PUSH2 0x2607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15FF DUP2 PUSH2 0x261E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1614 DUP2 PUSH2 0x261E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x162B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x163B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1534 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1653 DUP2 PUSH2 0x2635 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x166C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x167A DUP6 DUP3 DUP7 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x168B DUP6 DUP3 DUP7 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16BB DUP9 DUP3 DUP10 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x16CC DUP9 DUP3 DUP10 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F5 DUP9 DUP3 DUP10 ADD PUSH2 0x15B1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171E DUP9 DUP3 DUP10 ADD PUSH2 0x15B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x173B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1747 DUP9 DUP3 DUP10 ADD PUSH2 0x161A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x176C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x177A DUP9 DUP3 DUP10 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x178B DUP9 DUP3 DUP10 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x179C DUP9 DUP3 DUP10 ADD PUSH2 0x1644 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x17AD DUP9 DUP3 DUP10 ADD PUSH2 0x1644 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17D6 DUP9 DUP3 DUP10 ADD PUSH2 0x161A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1804 DUP6 DUP3 DUP7 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1815 DUP6 DUP3 DUP7 ADD PUSH2 0x15DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1840 DUP6 DUP3 DUP7 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1851 DUP6 DUP3 DUP7 ADD PUSH2 0x1644 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x186E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1894 DUP6 DUP3 DUP7 ADD PUSH2 0x1587 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18BD DUP6 DUP3 DUP7 ADD PUSH2 0x15B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18E7 DUP5 DUP3 DUP6 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1910 DUP5 DUP3 DUP6 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1939 DUP5 DUP3 DUP6 ADD PUSH2 0x1644 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194E DUP4 DUP4 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1963 DUP2 PUSH2 0x2015 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1974 DUP3 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x197E DUP2 DUP6 PUSH2 0x1F8C JUMP JUMPDEST SWAP4 POP PUSH2 0x1989 DUP4 PUSH2 0x1F4E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19BA JUMPI DUP2 MLOAD PUSH2 0x19A1 DUP9 DUP3 PUSH2 0x1942 JUMP JUMPDEST SWAP8 POP PUSH2 0x19AC DUP4 PUSH2 0x1F7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x198D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19D0 DUP2 PUSH2 0x2027 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E1 DUP3 PUSH2 0x1F69 JUMP JUMPDEST PUSH2 0x19EB DUP2 DUP6 PUSH2 0x1F9D JUMP JUMPDEST SWAP4 POP PUSH2 0x19FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2098 JUMP JUMPDEST PUSH2 0x1A04 DUP2 PUSH2 0x2226 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1A DUP3 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0x1A24 DUP2 DUP6 PUSH2 0x1FAE JUMP JUMPDEST SWAP4 POP PUSH2 0x1A34 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2098 JUMP JUMPDEST PUSH2 0x1A3D DUP2 PUSH2 0x2226 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A55 PUSH1 0x34 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1A60 DUP3 PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A78 PUSH1 0x28 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1A83 DUP3 PUSH2 0x2293 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9B PUSH1 0x2B DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA6 DUP3 PUSH2 0x22E2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABE PUSH1 0x29 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC9 DUP3 PUSH2 0x2331 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE1 PUSH1 0x25 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1AEC DUP3 PUSH2 0x2380 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B04 PUSH1 0x32 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0F DUP3 PUSH2 0x23CF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B27 PUSH1 0x2A DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B32 DUP3 PUSH2 0x241E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4A PUSH1 0x29 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B55 DUP3 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B6D PUSH1 0x29 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B78 DUP3 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B90 PUSH1 0x28 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9B DUP3 PUSH2 0x250B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BAF DUP2 PUSH2 0x207F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1BBE DUP2 PUSH2 0x207F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1BD9 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x195A JUMP JUMPDEST PUSH2 0x1BE6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x195A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1BF8 DUP2 DUP7 PUSH2 0x1969 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1C0C DUP2 DUP6 PUSH2 0x1969 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1C20 DUP2 DUP5 PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1C41 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x195A JUMP JUMPDEST PUSH2 0x1C4E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x195A JUMP JUMPDEST PUSH2 0x1C5B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x1C68 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1BB5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1C7A DUP2 DUP5 PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CA0 DUP2 DUP5 PUSH2 0x1969 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CC2 DUP2 DUP6 PUSH2 0x1969 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1CD6 DUP2 DUP5 PUSH2 0x1969 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D14 DUP2 DUP5 PUSH2 0x1A0F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D35 DUP2 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D55 DUP2 PUSH2 0x1A6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D75 DUP2 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D95 DUP2 PUSH2 0x1AB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB5 DUP2 PUSH2 0x1AD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD5 DUP2 PUSH2 0x1AF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF5 DUP2 PUSH2 0x1B1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E15 DUP2 PUSH2 0x1B3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E35 DUP2 PUSH2 0x1B60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E55 DUP2 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E71 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E8C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x1E99 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BB5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAA PUSH2 0x1EBB JUMP JUMPDEST SWAP1 POP PUSH2 0x1EB6 DUP3 DUP3 PUSH2 0x20FD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EE0 JUMPI PUSH2 0x1EDF PUSH2 0x21D5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F0C JUMPI PUSH2 0x1F0B PUSH2 0x21D5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F38 JUMPI PUSH2 0x1F37 PUSH2 0x21D5 JUMP JUMPDEST JUMPDEST PUSH2 0x1F41 DUP3 PUSH2 0x2226 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCA DUP3 PUSH2 0x207F JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD5 DUP4 PUSH2 0x207F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x200A JUMPI PUSH2 0x2009 PUSH2 0x2177 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2020 DUP3 PUSH2 0x205F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20B6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x209B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x20C5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x20E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x20F7 JUMPI PUSH2 0x20F6 PUSH2 0x21A6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2106 DUP3 PUSH2 0x2226 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2125 JUMPI PUSH2 0x2124 PUSH2 0x21D5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2139 DUP3 PUSH2 0x207F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x216C JUMPI PUSH2 0x216B PUSH2 0x2177 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2223 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2220 PUSH1 0x0 MLOAD PUSH2 0x2237 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x256A JUMPI PUSH2 0x25ED JUMP JUMPDEST PUSH2 0x2572 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x259A JUMPI POP POP PUSH2 0x25ED JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25B8 JUMPI POP POP POP POP PUSH2 0x25ED JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x25D5 JUMPI POP POP POP POP POP PUSH2 0x25ED JUMP JUMPDEST PUSH2 0x25E4 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x20FD JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x25F9 DUP2 PUSH2 0x2015 JUMP JUMPDEST DUP2 EQ PUSH2 0x2604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2610 DUP2 PUSH2 0x2027 JUMP JUMPDEST DUP2 EQ PUSH2 0x261B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2627 DUP2 PUSH2 0x2033 JUMP JUMPDEST DUP2 EQ PUSH2 0x2632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x263E DUP2 PUSH2 0x207F JUMP JUMPDEST DUP2 EQ PUSH2 0x2649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SLOAD 0x4C POP 0xC SWAP6 0x4D 0x2C SWAP2 0x48 0xDC PUSH26 0x34C73975C33E1C63E3C6799C9C13F50110DD6D4364736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "534:17041:2:-:0;;;1086:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1129:13;1137:4;1129:7;;;:13;;:::i;:::-;1086:64;534:17041;;8366:88;8440:6;8433:4;:13;;;;;;;;;;;;:::i;:::-;;8366:88;:::o;534:17041::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:8:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;381:288::-;448:5;497:3;490:4;482:6;478:17;474:27;464:2;;515:1;512;505:12;464:2;548:6;542:13;573:90;659:3;651:6;644:4;636:6;632:17;573:90;:::i;:::-;564:99;;454:215;;;;;:::o;675:390::-;755:6;804:2;792:9;783:7;779:23;775:32;772:2;;;820:1;817;810:12;772:2;884:1;873:9;869:17;863:24;914:18;906:6;903:30;900:2;;;946:1;943;936:12;900:2;974:74;1040:7;1031:6;1020:9;1016:22;974:74;:::i;:::-;964:84;;834:224;762:303;;;;:::o;1071:129::-;1105:6;1132:20;;:::i;:::-;1122:30;;1161:33;1189:4;1181:6;1161:33;:::i;:::-;1112:88;;;:::o;1206:75::-;1239:6;1272:2;1266:9;1256:19;;1246:35;:::o;1287:308::-;1349:4;1439:18;1431:6;1428:30;1425:2;;;1461:18;;:::i;:::-;1425:2;1499:29;1521:6;1499:29;:::i;:::-;1491:37;;1583:4;1577;1573:15;1565:23;;1354:241;;;:::o;1601:307::-;1669:1;1679:113;1693:6;1690:1;1687:13;1679:113;;;1778:1;1773:3;1769:11;1763:18;1759:1;1754:3;1750:11;1743:39;1715:2;1712:1;1708:10;1703:15;;1679:113;;;1810:6;1807:1;1804:13;1801:2;;;1890:1;1881:6;1876:3;1872:16;1865:27;1801:2;1650:258;;;;:::o;1914:320::-;1958:6;1995:1;1989:4;1985:12;1975:22;;2042:1;2036:4;2032:12;2063:18;2053:2;;2119:4;2111:6;2107:17;2097:27;;2053:2;2181;2173:6;2170:14;2150:18;2147:38;2144:2;;;2200:18;;:::i;:::-;2144:2;1965:269;;;;:::o;2240:281::-;2323:27;2345:4;2323:27;:::i;:::-;2315:6;2311:40;2453:6;2441:10;2438:22;2417:18;2405:10;2402:34;2399:62;2396:2;;;2464:18;;:::i;:::-;2396:2;2504:10;2500:2;2493:22;2283:238;;;:::o;2527:180::-;2575:77;2572:1;2565:88;2672:4;2669:1;2662:15;2696:4;2693:1;2686:15;2713:180;2761:77;2758:1;2751:88;2858:4;2855:1;2848:15;2882:4;2879:1;2872:15;2899:102;2940:6;2991:2;2987:7;2982:2;2975:5;2971:14;2967:28;2957:38;;2947:54;;;:::o;534:17041:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:31441:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:553:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:8",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:8",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:8"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:36:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "411:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "404:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:8"
															},
															"nodeType": "YulIf",
															"src": "350:2:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "495:178:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "510:21:8",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:8"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "514:10:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "552:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "578:10:8"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "590:3:8"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "557:20:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "557:37:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "545:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "545:50:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "545:50:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "608:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "624:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "615:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "615:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "608:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "642:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "653:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "658:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "649:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "649:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "642:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "457:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "460:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "454:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "454:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "468:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "470:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "479:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "482:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "475:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "475:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "470:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "439:14:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "441:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "450:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "445:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "435:238:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:8",
														"type": ""
													}
												],
												"src": "24:655:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "804:553:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "814:90:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "896:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "839:56:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:64:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "823:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:81:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "814:5:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "913:16:8",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "924:5:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "917:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "946:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "953:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "939:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "939:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "969:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "980:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "987:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "976:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:16:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1002:17:8",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1013:6:8"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1006:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:36:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1089:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1092:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1082:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1082:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1082:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1038:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1047:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1055:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1043:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1043:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1034:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1034:27:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1063:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1031:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1031:36:8"
															},
															"nodeType": "YulIf",
															"src": "1028:2:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1173:178:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1188:21:8",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1206:3:8"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1192:10:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1230:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1256:10:8"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1268:3:8"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "1235:20:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1235:37:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1223:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1223:50:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:50:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1286:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1297:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1302:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1293:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1293:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1286:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1320:21:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1331:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1327:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1327:14:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1320:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1135:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1138:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1132:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1146:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1148:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1157:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1160:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1153:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1153:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1148:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1117:14:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1119:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1128:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1123:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1113:238:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "774:6:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "782:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "790:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "798:5:8",
														"type": ""
													}
												],
												"src": "702:655:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:260:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1456:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1522:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1481:40:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1481:48:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1465:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1465:65:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1456:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1546:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1553:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1539:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1539:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1539:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1569:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1584:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1580:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1580:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1573:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1634:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1643:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1646:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1636:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1636:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1636:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1615:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1620:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1611:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1611:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1629:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1608:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:25:8"
															},
															"nodeType": "YulIf",
															"src": "1605:2:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1688:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1693:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1659:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1659:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1659:41:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1419:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1424:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1432:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1440:5:8",
														"type": ""
													}
												],
												"src": "1363:343:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1764:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1774:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1796:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1783:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1783:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1774:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1839:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1812:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1812:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1742:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1750:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1758:5:8",
														"type": ""
													}
												],
												"src": "1712:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1951:226:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2000:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2009:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2012:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2002:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2002:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2002:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1979:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1987:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1975:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1975:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1994:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1971:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1964:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1964:35:8"
															},
															"nodeType": "YulIf",
															"src": "1961:2:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2025:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2052:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2039:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2039:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2029:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2068:103:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2144:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2152:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2140:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2140:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2159:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2167:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2077:62:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2077:94:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2068:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1929:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1937:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1945:5:8",
														"type": ""
													}
												],
												"src": "1874:303:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2277:226:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2326:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2335:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2338:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2328:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2328:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2328:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2305:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2313:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2301:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2301:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2320:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2297:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2297:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2290:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:35:8"
															},
															"nodeType": "YulIf",
															"src": "2287:2:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2351:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2378:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2365:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2365:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2355:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2394:103:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2470:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2478:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2466:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2466:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2485:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2493:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2403:62:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2403:94:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2394:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2255:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2263:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2271:5:8",
														"type": ""
													}
												],
												"src": "2200:303:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2558:84:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2568:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2590:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2577:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2577:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2568:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2630:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2606:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2606:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2606:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2536:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2544:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2552:5:8",
														"type": ""
													}
												],
												"src": "2509:133:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2699:86:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2709:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2731:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2718:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2718:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2709:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2773:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2747:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2747:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2747:32:8"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2677:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2685:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2693:5:8",
														"type": ""
													}
												],
												"src": "2648:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2853:79:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2863:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2878:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2872:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2920:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2894:25:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2894:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2894:32:8"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2831:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2839:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2847:5:8",
														"type": ""
													}
												],
												"src": "2791:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3012:210:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3061:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3070:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3073:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3063:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3063:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3063:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3040:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3048:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3036:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3036:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3055:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3032:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3032:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:35:8"
															},
															"nodeType": "YulIf",
															"src": "3022:2:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3086:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3113:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3090:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3129:87:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3189:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3185:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3204:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3212:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3138:46:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3138:78:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3129:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2990:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2998:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3006:5:8",
														"type": ""
													}
												],
												"src": "2951:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3280:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3290:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3312:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3299:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3290:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3355:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3328:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3328:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3328:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3258:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3266:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3274:5:8",
														"type": ""
													}
												],
												"src": "3228:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3456:324:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3502:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3511:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3514:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3504:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3504:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3477:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3486:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3469:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:32:8"
															},
															"nodeType": "YulIf",
															"src": "3466:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "3528:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3543:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3557:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3547:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3572:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3607:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3618:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3603:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3603:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3627:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3582:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3582:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3572:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3655:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3670:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3684:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3674:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3700:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3735:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3746:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3731:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3731:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3755:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3710:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3710:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3700:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3418:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3429:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3441:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3449:6:8",
														"type": ""
													}
												],
												"src": "3373:407:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3979:1048:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4026:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4035:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4038:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4028:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4028:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4028:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4000:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4009:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3996:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3996:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4021:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3992:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3992:33:8"
															},
															"nodeType": "YulIf",
															"src": "3989:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "4052:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4067:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4081:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4071:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4096:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4131:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4142:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4127:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4127:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4151:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4106:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4096:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4179:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4194:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4208:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4198:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4224:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4259:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4270:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4255:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4255:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4279:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4234:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4234:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4224:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4307:236:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4322:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4353:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4364:2:8",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4349:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4349:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4336:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4336:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4326:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4415:16:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4424:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4427:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "4417:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4417:12:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4417:12:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4387:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4395:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4384:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4384:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "4381:2:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4445:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4505:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4516:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4501:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4501:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4525:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4455:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4445:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4553:236:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4568:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4599:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4610:2:8",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4595:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4595:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4582:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4582:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4572:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4661:16:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4670:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4673:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "4663:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4663:12:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4663:12:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4633:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4641:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4630:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4630:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "4627:2:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4691:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4751:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4762:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4747:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4747:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4771:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4701:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4701:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4691:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4799:221:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4814:47:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4845:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4856:3:8",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4841:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4841:19:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4828:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4828:33:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4818:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4908:16:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4917:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4920:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "4910:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4910:12:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4910:12:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4880:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4888:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4877:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4877:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "4874:2:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4938:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4982:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4993:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4978:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4978:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5002:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4948:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4948:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "4938:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3917:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3928:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3940:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3948:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3956:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3964:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3972:6:8",
														"type": ""
													}
												],
												"src": "3786:1241:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5176:812:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5223:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5232:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5235:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5225:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5225:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5225:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5197:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5206:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5193:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5193:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5218:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5189:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5189:33:8"
															},
															"nodeType": "YulIf",
															"src": "5186:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "5249:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5264:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5278:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5268:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5293:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5328:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5339:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5324:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5324:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5348:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5303:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5303:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5293:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5376:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5391:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5405:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5395:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5421:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5456:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5467:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5452:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5452:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5476:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5431:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5431:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5421:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5504:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5519:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5533:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5523:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5549:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5584:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5595:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5580:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5580:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5604:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5559:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5559:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5549:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5632:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5647:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5661:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5651:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5677:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5712:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5723:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5708:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5708:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5732:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5687:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5687:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5677:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5760:221:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5775:47:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5806:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5817:3:8",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5802:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5802:19:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5789:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5789:33:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5779:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5869:16:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5878:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5881:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "5871:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5871:12:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5871:12:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5841:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5849:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5838:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5838:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "5835:2:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5899:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5943:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5954:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5939:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5939:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5963:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5909:29:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5909:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "5899:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5114:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5125:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5137:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5145:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5153:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5161:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5169:6:8",
														"type": ""
													}
												],
												"src": "5033:955:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6074:321:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6120:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6129:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6132:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6122:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6122:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6122:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6095:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6104:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6091:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6091:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6116:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6087:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:32:8"
															},
															"nodeType": "YulIf",
															"src": "6084:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "6146:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6161:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6175:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6165:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6190:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6225:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6236:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6221:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6221:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6245:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6200:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6200:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6190:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6273:115:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6288:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6302:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6292:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6318:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6350:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6361:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6346:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6346:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6370:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6328:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6328:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6318:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6036:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6047:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6059:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6067:6:8",
														"type": ""
													}
												],
												"src": "5994:401:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6484:324:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6530:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6539:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6542:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6532:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6532:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6532:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6505:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6514:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6501:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6501:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6526:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6497:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:32:8"
															},
															"nodeType": "YulIf",
															"src": "6494:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "6556:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6571:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6575:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6600:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6635:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6646:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6631:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6631:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6655:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6610:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6610:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6600:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6683:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6698:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6712:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6702:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6728:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6763:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6774:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6759:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6759:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6783:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6738:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6738:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6728:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6446:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6457:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6469:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6477:6:8",
														"type": ""
													}
												],
												"src": "6401:407:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6947:560:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6993:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7002:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7005:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6995:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6995:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6995:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6968:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6977:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6964:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6964:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6989:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6960:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6960:32:8"
															},
															"nodeType": "YulIf",
															"src": "6957:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "7019:235:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7034:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7065:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7076:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7061:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7061:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7048:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7048:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7038:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7126:16:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7135:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7138:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "7128:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7128:12:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7128:12:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7098:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7106:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7095:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7095:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "7092:2:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7156:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7216:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7227:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7212:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7212:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7236:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7166:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7166:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7156:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7264:236:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7279:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7310:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7321:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7306:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7306:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7293:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7293:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7283:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7372:16:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7381:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7384:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "7374:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7374:12:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7374:12:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7344:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7352:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7341:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7341:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "7338:2:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7402:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7462:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7473:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7458:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7458:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7482:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7412:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7412:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7402:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6909:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6920:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6932:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6940:6:8",
														"type": ""
													}
												],
												"src": "6814:693:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7578:195:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7624:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7633:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7636:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7626:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7626:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7626:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7599:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7608:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7595:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7595:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7620:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7591:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7591:32:8"
															},
															"nodeType": "YulIf",
															"src": "7588:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "7650:116:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7665:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7679:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7669:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7694:62:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7728:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7739:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7724:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7724:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7748:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "7704:19:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7704:52:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7694:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7548:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7559:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7571:6:8",
														"type": ""
													}
												],
												"src": "7513:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7855:206:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7901:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7910:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7913:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7903:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7903:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7903:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7876:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7885:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7872:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7872:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7897:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7868:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7868:32:8"
															},
															"nodeType": "YulIf",
															"src": "7865:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "7927:127:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7942:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7956:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7946:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7971:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8016:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8027:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8012:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8012:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8036:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7981:30:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7981:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7971:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7825:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7836:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7848:6:8",
														"type": ""
													}
												],
												"src": "7779:282:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8133:196:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8179:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8188:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8191:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8181:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8181:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8181:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8154:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8163:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8150:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8150:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8175:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8146:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8146:32:8"
															},
															"nodeType": "YulIf",
															"src": "8143:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "8205:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8220:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8234:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8224:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8249:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8284:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8295:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8280:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8280:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8304:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8259:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8259:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8249:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8103:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8114:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8126:6:8",
														"type": ""
													}
												],
												"src": "8067:262:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8415:99:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8459:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8467:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8425:33:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8425:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8425:46:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8480:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8498:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8503:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8494:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8494:14:8"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "8480:10:8"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8388:6:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8396:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "8404:10:8",
														"type": ""
													}
												],
												"src": "8335:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8585:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8602:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8625:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8607:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8607:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8595:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8595:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8595:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8573:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8580:3:8",
														"type": ""
													}
												],
												"src": "8520:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8798:608:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8808:68:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8870:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8822:47:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8822:54:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8812:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8885:93:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8966:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8971:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8892:73:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8892:86:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8885:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8987:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9052:5:8"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9002:49:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9002:56:8"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "8991:7:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9067:21:8",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "9081:7:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "9071:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9157:224:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9171:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9198:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9192:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9192:13:8"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "9175:13:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9218:70:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "9269:13:8"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "9284:3:8"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "9225:43:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9225:63:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9218:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9301:70:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9364:6:8"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "9311:52:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9311:60:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9301:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9119:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9122:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9116:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9116:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9130:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9132:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9141:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9144:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9137:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9137:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9132:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9101:14:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9103:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9112:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "9107:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9097:284:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9390:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9397:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9390:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8777:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8784:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8793:3:8",
														"type": ""
													}
												],
												"src": "8674:732:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9471:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9488:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9508:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "9493:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9493:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9481:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9481:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9481:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9459:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9466:3:8",
														"type": ""
													}
												],
												"src": "9412:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9617:270:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9627:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9673:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9641:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9641:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9631:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9688:77:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9753:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9758:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9695:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9695:70:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9688:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9800:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9807:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9796:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9796:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9814:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9819:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9774:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9774:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9774:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9835:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9846:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9873:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "9851:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9851:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9842:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9842:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9835:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9598:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9605:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9613:3:8",
														"type": ""
													}
												],
												"src": "9527:360:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9985:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9995:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10042:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10009:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10009:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9999:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10057:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10123:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10128:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10064:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10064:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10057:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10170:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10177:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10166:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10166:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10184:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10189:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10144:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10144:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10144:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10205:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10216:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10243:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "10221:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10221:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10212:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10212:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10205:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9966:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9973:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9981:3:8",
														"type": ""
													}
												],
												"src": "9893:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10409:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10419:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10485:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10490:2:8",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10426:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10426:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10419:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10591:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																	"nodeType": "YulIdentifier",
																	"src": "10502:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10502:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10502:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10604:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10615:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10620:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10611:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10611:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10604:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10397:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10405:3:8",
														"type": ""
													}
												],
												"src": "10263:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10781:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10791:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10857:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10862:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10798:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10798:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10791:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10963:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																	"nodeType": "YulIdentifier",
																	"src": "10874:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10874:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10874:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10976:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10987:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10992:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10983:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10983:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10976:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10769:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10777:3:8",
														"type": ""
													}
												],
												"src": "10635:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11153:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11163:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11229:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11234:2:8",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11170:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11170:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11163:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11335:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																	"nodeType": "YulIdentifier",
																	"src": "11246:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11246:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11246:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11348:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11359:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11364:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11355:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11355:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11348:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11141:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11149:3:8",
														"type": ""
													}
												],
												"src": "11007:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11525:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11535:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11601:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11606:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11542:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11542:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11535:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11707:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																	"nodeType": "YulIdentifier",
																	"src": "11618:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11618:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11618:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11720:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11731:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11736:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11727:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11727:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11720:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11513:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11521:3:8",
														"type": ""
													}
												],
												"src": "11379:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11897:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11907:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11973:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11978:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11914:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11914:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11907:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12079:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																	"nodeType": "YulIdentifier",
																	"src": "11990:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11990:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11990:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12092:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12103:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12108:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12099:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12099:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12092:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11885:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11893:3:8",
														"type": ""
													}
												],
												"src": "11751:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12269:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12279:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12345:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12350:2:8",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12286:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12286:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12279:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12451:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																	"nodeType": "YulIdentifier",
																	"src": "12362:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12362:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12362:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12464:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12475:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12480:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12471:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12471:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12464:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12257:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12265:3:8",
														"type": ""
													}
												],
												"src": "12123:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12641:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12651:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12717:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12722:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12658:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12658:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12651:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12823:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"nodeType": "YulIdentifier",
																	"src": "12734:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12734:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12734:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12836:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12847:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12852:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12843:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12843:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12836:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12629:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12637:3:8",
														"type": ""
													}
												],
												"src": "12495:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13013:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13023:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13089:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13094:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13030:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13030:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13023:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13195:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																	"nodeType": "YulIdentifier",
																	"src": "13106:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13106:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13106:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13208:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13219:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13224:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13215:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13215:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13208:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13001:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13009:3:8",
														"type": ""
													}
												],
												"src": "12867:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13385:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13395:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13461:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13466:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13402:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13402:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13395:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13567:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																	"nodeType": "YulIdentifier",
																	"src": "13478:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13478:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13478:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13580:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13591:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13596:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13587:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13587:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13580:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13373:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13381:3:8",
														"type": ""
													}
												],
												"src": "13239:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13757:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13767:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13833:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13838:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13774:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13774:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13767:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13939:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																	"nodeType": "YulIdentifier",
																	"src": "13850:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13850:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13850:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13952:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13963:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13968:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13959:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13959:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13952:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13753:3:8",
														"type": ""
													}
												],
												"src": "13611:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14038:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14055:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14078:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "14060:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14060:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14048:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14048:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14048:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14026:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14033:3:8",
														"type": ""
													}
												],
												"src": "13983:108:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14162:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14179:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14202:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "14184:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14184:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14172:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14172:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14172:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14150:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14157:3:8",
														"type": ""
													}
												],
												"src": "14097:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14549:725:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14559:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14571:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14582:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14567:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14567:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14559:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14640:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14653:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14664:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14649:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14649:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14596:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14596:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14596:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14721:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14734:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14745:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14730:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14730:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14677:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14677:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14677:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14770:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14781:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14766:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14766:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14790:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14796:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14786:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14786:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14759:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14759:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14759:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14816:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14918:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14927:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14824:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14824:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14816:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14953:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14964:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14949:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14949:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14973:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14979:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14969:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14969:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14942:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14942:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14942:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14999:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15101:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15110:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15007:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15007:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14999:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15136:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15147:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15132:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15132:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15157:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15163:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15153:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15153:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15125:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15125:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15125:49:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15183:84:8",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "15253:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15262:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15191:61:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15191:76:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15183:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14489:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14501:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14509:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14517:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14525:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14533:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14544:4:8",
														"type": ""
													}
												],
												"src": "14221:1053:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15508:523:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15518:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15530:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15541:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15526:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15526:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15518:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15599:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15612:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15623:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15608:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15608:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15555:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15555:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15555:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15680:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15693:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15704:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15689:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15689:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15636:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15636:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15636:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15762:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15775:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15786:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15771:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15771:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15718:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15718:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15718:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15844:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15857:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15868:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15853:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15853:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15800:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15800:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15800:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15893:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15904:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15889:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15889:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15914:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15920:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15910:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15910:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15882:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15882:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15882:49:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15940:84:8",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16010:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16019:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15948:61:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15948:76:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15940:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15448:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15460:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15468:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15476:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15484:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15492:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15503:4:8",
														"type": ""
													}
												],
												"src": "15280:751:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16185:225:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16195:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16207:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16218:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16203:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16203:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16195:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16242:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16253:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16238:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16238:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16261:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16267:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16257:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16257:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16231:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16231:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16231:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16287:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16389:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16398:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16295:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16295:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16287:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16157:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16169:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16180:4:8",
														"type": ""
													}
												],
												"src": "16037:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16642:408:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16652:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16664:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16675:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16660:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16660:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16652:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16699:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16710:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16695:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16695:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16718:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16724:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16714:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16714:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16688:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16688:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16688:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16744:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16846:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16855:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16752:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16752:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16744:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16881:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16892:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16877:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16877:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16901:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16907:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16897:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16897:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16870:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16870:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16870:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16927:116:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17029:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17038:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16935:93:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16935:108:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16927:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16606:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16618:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16626:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16637:4:8",
														"type": ""
													}
												],
												"src": "16416:634:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17148:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17158:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17170:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17181:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17166:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17166:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17158:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17232:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17245:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17256:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17241:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17241:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17194:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17194:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17194:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17120:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17132:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17143:4:8",
														"type": ""
													}
												],
												"src": "17056:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17390:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17400:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17412:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17423:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17408:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17408:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17400:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17447:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17458:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17443:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17443:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17466:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17472:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17462:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17462:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17436:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17436:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17436:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17492:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17564:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17573:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17500:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17500:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17492:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17362:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17374:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17385:4:8",
														"type": ""
													}
												],
												"src": "17272:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17762:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17772:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17784:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17795:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17780:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17780:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17772:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17819:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17830:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17815:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17815:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17838:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17844:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17834:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17834:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17808:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17808:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17808:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17864:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17998:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17872:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17872:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17864:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17742:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17757:4:8",
														"type": ""
													}
												],
												"src": "17591:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18187:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18197:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18209:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18220:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18205:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18205:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18197:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18244:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18255:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18240:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18240:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18263:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18269:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18259:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18259:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18233:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18233:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18233:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18289:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18423:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18297:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18297:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18289:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18167:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18182:4:8",
														"type": ""
													}
												],
												"src": "18016:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18612:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18622:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18634:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18645:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18630:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18630:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18622:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18669:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18680:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18665:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18665:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18688:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18694:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18684:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18684:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18658:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18658:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18658:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18714:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18848:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18722:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18722:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18714:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18592:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18607:4:8",
														"type": ""
													}
												],
												"src": "18441:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19037:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19047:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19059:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19070:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19055:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19055:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19047:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19094:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19105:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19090:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19090:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19113:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19119:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19109:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19109:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19083:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19083:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19083:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19139:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19273:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19147:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19147:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19139:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19017:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19032:4:8",
														"type": ""
													}
												],
												"src": "18866:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19462:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19472:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19484:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19495:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19480:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19480:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19472:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19519:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19530:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19515:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19515:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19538:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19544:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19534:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19534:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19508:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19508:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19508:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19564:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19698:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19572:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19572:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19564:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19442:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19457:4:8",
														"type": ""
													}
												],
												"src": "19291:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19887:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19897:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19909:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19920:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19905:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19905:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19897:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19944:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19955:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19940:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19940:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19963:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19969:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19959:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19959:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19933:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19933:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19933:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19989:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20123:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19997:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19997:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19989:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19867:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19882:4:8",
														"type": ""
													}
												],
												"src": "19716:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20312:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20322:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20334:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20330:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20330:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20322:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20369:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20380:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20365:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20365:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20388:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20394:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20384:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20384:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20358:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20358:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20358:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20414:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20548:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20422:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20422:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20414:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20292:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20307:4:8",
														"type": ""
													}
												],
												"src": "20141:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20737:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20747:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20759:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20770:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20755:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20755:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20747:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20794:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20805:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20790:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20790:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20813:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20819:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20809:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20809:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20783:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20783:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20783:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20839:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20973:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20847:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20847:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20839:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20717:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20732:4:8",
														"type": ""
													}
												],
												"src": "20566:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21162:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21172:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21184:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21195:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21180:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21180:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21172:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21219:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21230:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21215:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21215:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21238:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21244:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21234:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21234:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21208:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21208:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21208:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21264:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21398:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21272:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21272:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21264:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21142:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21157:4:8",
														"type": ""
													}
												],
												"src": "20991:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21587:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21597:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21609:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21620:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21605:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21605:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21597:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21644:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21655:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21640:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21640:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21663:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21669:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21659:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21659:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21633:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21633:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21633:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21689:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21823:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21697:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21697:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21689:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21567:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21582:4:8",
														"type": ""
													}
												],
												"src": "21416:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21939:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21949:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21961:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21972:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21957:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21957:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21949:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22029:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22042:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22053:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22038:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22038:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21985:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21985:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21985:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21911:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21923:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21934:4:8",
														"type": ""
													}
												],
												"src": "21841:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22195:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22205:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22217:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22228:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22213:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22213:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22205:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22285:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22298:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22309:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22294:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22294:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22241:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22241:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22241:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22366:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22379:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22390:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22375:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22375:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22322:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22322:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22322:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22159:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22171:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22179:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22190:4:8",
														"type": ""
													}
												],
												"src": "22069:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22448:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22458:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "22468:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22468:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "22458:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "22517:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "22525:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "22497:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22497:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22497:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "22432:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22441:6:8",
														"type": ""
													}
												],
												"src": "22407:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22582:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22592:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22608:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22602:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22602:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "22592:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22575:6:8",
														"type": ""
													}
												],
												"src": "22542:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22705:229:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22810:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "22812:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22812:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22812:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22782:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22790:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22779:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22779:30:8"
															},
															"nodeType": "YulIf",
															"src": "22776:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22842:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22854:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22862:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "22850:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22850:17:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "22842:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22904:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "22916:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22922:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22912:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22912:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "22904:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22689:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "22700:4:8",
														"type": ""
													}
												],
												"src": "22623:311:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23022:229:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23127:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "23129:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23129:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23129:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23099:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23107:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23096:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23096:30:8"
															},
															"nodeType": "YulIf",
															"src": "23093:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23159:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23171:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23179:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "23167:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23167:17:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23159:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23221:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "23233:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23239:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23229:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23229:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23221:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23006:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23017:4:8",
														"type": ""
													}
												],
												"src": "22940:311:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23323:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23428:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "23430:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23430:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23430:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23400:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23408:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23397:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23397:30:8"
															},
															"nodeType": "YulIf",
															"src": "23394:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23460:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23490:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "23468:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23468:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23460:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23534:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "23546:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23552:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23542:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23542:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23534:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23307:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "23318:4:8",
														"type": ""
													}
												],
												"src": "23257:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23642:60:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23652:11:8",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "23660:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "23652:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23673:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "23685:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23690:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23681:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23681:14:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "23673:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "23629:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "23637:4:8",
														"type": ""
													}
												],
												"src": "23570:132:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23782:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23793:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23809:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23803:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23803:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "23793:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23765:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23775:6:8",
														"type": ""
													}
												],
												"src": "23708:114:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23886:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23897:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23913:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23907:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23907:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "23897:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23869:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23879:6:8",
														"type": ""
													}
												],
												"src": "23828:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23991:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24002:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24018:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24012:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24012:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24002:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23974:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23984:6:8",
														"type": ""
													}
												],
												"src": "23932:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24112:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24122:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "24134:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24139:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24130:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24130:14:8"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "24122:4:8"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "24099:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "24107:4:8",
														"type": ""
													}
												],
												"src": "24037:113:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24267:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24284:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24289:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24277:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24277:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24277:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24305:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24324:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24329:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24320:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24320:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24305:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24239:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24244:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24255:11:8",
														"type": ""
													}
												],
												"src": "24156:184:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24441:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24458:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24463:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24451:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24451:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24451:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24479:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24498:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24503:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24494:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24494:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24479:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24413:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24418:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24429:11:8",
														"type": ""
													}
												],
												"src": "24346:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24616:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24633:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24638:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24626:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24626:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24626:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24654:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24673:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24678:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24669:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24669:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24654:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24588:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24593:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24604:11:8",
														"type": ""
													}
												],
												"src": "24520:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24739:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24749:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24772:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24754:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24754:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24749:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24783:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24806:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24788:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24788:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24783:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24946:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24948:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24948:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24948:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24867:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24874:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "24942:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24870:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24870:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24864:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24864:81:8"
															},
															"nodeType": "YulIf",
															"src": "24861:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24978:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24989:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24992:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24985:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24985:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "24978:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24726:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24729:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "24735:3:8",
														"type": ""
													}
												],
												"src": "24695:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25051:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25061:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25090:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "25072:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25072:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25061:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25033:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25043:7:8",
														"type": ""
													}
												],
												"src": "25006:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25150:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25160:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25185:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "25178:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25178:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25171:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25171:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25160:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25132:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25142:7:8",
														"type": ""
													}
												],
												"src": "25108:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25248:105:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25258:89:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25273:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25280:66:8",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25269:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25269:78:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25258:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25230:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25240:7:8",
														"type": ""
													}
												],
												"src": "25204:149:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25404:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25414:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25429:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25436:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25425:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25425:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25414:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25386:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25396:7:8",
														"type": ""
													}
												],
												"src": "25359:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25536:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25546:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "25557:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25546:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25518:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25528:7:8",
														"type": ""
													}
												],
												"src": "25491:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25625:103:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "25648:3:8"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "25653:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25658:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "25635:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25635:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25635:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "25706:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "25711:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25702:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25702:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25720:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25695:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25695:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25695:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "25607:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "25612:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25617:6:8",
														"type": ""
													}
												],
												"src": "25574:154:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25783:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25793:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "25802:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "25797:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25862:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "25887:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "25892:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "25883:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25883:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "25906:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "25911:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "25902:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "25902:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "25896:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25896:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "25876:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25876:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25876:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "25823:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25826:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "25820:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25820:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "25834:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "25836:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "25845:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25848:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "25841:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25841:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "25836:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "25816:3:8",
																"statements": []
															},
															"src": "25812:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25959:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26009:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "26014:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "26005:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26005:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26023:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "25998:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25998:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25998:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "25940:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25943:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25937:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25937:13:8"
															},
															"nodeType": "YulIf",
															"src": "25934:2:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "25765:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "25770:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25775:6:8",
														"type": ""
													}
												],
												"src": "25734:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26098:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26108:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "26122:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26128:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "26118:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26118:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26108:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26139:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "26169:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26175:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "26165:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26165:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "26143:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26216:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "26230:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "26244:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26252:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "26240:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26240:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26230:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "26196:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26189:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26189:26:8"
															},
															"nodeType": "YulIf",
															"src": "26186:2:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26319:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "26333:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26333:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26333:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "26283:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26306:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26314:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "26303:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26303:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "26280:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26280:38:8"
															},
															"nodeType": "YulIf",
															"src": "26277:2:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "26082:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26091:6:8",
														"type": ""
													}
												],
												"src": "26047:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26416:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26426:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "26448:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "26478:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "26456:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26456:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26444:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26444:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "26430:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26595:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "26597:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26597:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26597:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "26538:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26550:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "26535:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26535:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "26574:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26586:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "26571:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26571:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "26532:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26532:62:8"
															},
															"nodeType": "YulIf",
															"src": "26529:2:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26633:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "26637:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26626:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26626:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26626:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26402:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "26410:4:8",
														"type": ""
													}
												],
												"src": "26373:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26703:190:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26713:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26740:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26722:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26722:24:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "26713:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26836:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26838:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26838:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26838:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26761:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26768:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "26758:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26758:77:8"
															},
															"nodeType": "YulIf",
															"src": "26755:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26867:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26878:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26885:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26874:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26874:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "26867:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26689:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "26699:3:8",
														"type": ""
													}
												],
												"src": "26660:233:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26927:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26944:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26947:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26937:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26937:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26937:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27041:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27044:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27034:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27034:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27034:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27065:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27068:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27058:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27058:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27058:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "26899:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27113:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27130:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27133:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27123:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27123:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27123:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27227:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27230:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27220:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27220:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27220:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27251:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27254:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27244:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27244:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27244:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "27085:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27299:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27316:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27319:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27309:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27309:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27309:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27413:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27416:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27406:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27406:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27406:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27437:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27440:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27430:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27430:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27430:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "27271:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27496:144:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27533:101:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27562:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27565:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27568:1:8",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "27547:14:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27547:23:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27547:23:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "27583:41:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "27621:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "27615:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27615:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_224_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "27590:24:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27590:34:8"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "27583:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "27512:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27512:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27530:1:8",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27509:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27509:23:8"
															},
															"nodeType": "YulIf",
															"src": "27506:2:8"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "27492:3:8",
														"type": ""
													}
												],
												"src": "27457:183:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27694:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27704:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27722:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27729:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27718:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27718:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27738:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "27734:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27734:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "27714:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27714:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "27704:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27677:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "27687:6:8",
														"type": ""
													}
												],
												"src": "27646:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27807:53:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27817:36:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27842:3:8",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27847:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "27838:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27838:15:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "27817:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_224_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27788:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "27798:8:8",
														"type": ""
													}
												],
												"src": "27754:106:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27972:133:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27994:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28002:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27990:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27990:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28006:34:8",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27983:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "27983:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27983:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28062:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28070:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28058:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28058:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28075:22:8",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28051:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28051:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28051:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27964:6:8",
														"type": ""
													}
												],
												"src": "27866:239:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28217:121:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28239:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28247:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28235:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28235:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28251:34:8",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28228:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28228:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28228:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28307:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28315:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28303:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28303:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28320:10:8",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28296:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28296:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28296:35:8"
														}
													]
												},
												"name": "store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28209:6:8",
														"type": ""
													}
												],
												"src": "28111:227:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28450:124:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28472:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28480:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28468:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28468:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28484:34:8",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28461:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28461:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28461:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28540:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28548:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28536:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28536:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28553:13:8",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28529:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28529:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28529:38:8"
														}
													]
												},
												"name": "store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28442:6:8",
														"type": ""
													}
												],
												"src": "28344:230:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28686:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28708:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28716:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28704:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28720:34:8",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28697:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28697:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28697:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28776:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28784:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28772:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28772:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28789:11:8",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28765:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28765:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28765:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28678:6:8",
														"type": ""
													}
												],
												"src": "28580:228:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28920:118:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28942:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28950:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28938:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28938:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28954:34:8",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28931:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28931:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28931:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29010:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29018:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29006:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29006:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29023:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28999:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "28999:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28999:32:8"
														}
													]
												},
												"name": "store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28912:6:8",
														"type": ""
													}
												],
												"src": "28814:224:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29150:131:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29172:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29180:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29168:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29168:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29184:34:8",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29161:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29161:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29161:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29240:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29248:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29236:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29236:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29253:20:8",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29229:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29229:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29229:45:8"
														}
													]
												},
												"name": "store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29142:6:8",
														"type": ""
													}
												],
												"src": "29044:237:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29393:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29415:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29423:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29411:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29411:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29427:34:8",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29404:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29404:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29404:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29483:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29491:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29479:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29479:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29496:12:8",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29472:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29472:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29472:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29385:6:8",
														"type": ""
													}
												],
												"src": "29287:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29628:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29650:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29658:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29646:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29646:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29662:34:8",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29639:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29639:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29639:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29718:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29726:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29714:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29714:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29731:11:8",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29707:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29707:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29707:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29620:6:8",
														"type": ""
													}
												],
												"src": "29522:228:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29862:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29884:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29892:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29880:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29880:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29896:34:8",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29873:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29873:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29873:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29952:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29960:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29948:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29948:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29965:11:8",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29941:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "29941:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29941:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29854:6:8",
														"type": ""
													}
												],
												"src": "29756:228:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30096:121:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30118:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30126:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30114:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30114:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30130:34:8",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30107:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30107:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30107:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30186:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30194:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30182:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30182:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30199:10:8",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30175:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30175:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30175:35:8"
														}
													]
												},
												"name": "store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30088:6:8",
														"type": ""
													}
												],
												"src": "29990:227:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30266:668:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30306:9:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30308:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "30282:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30282:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30300:4:8",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "30279:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30279:26:8"
															},
															"nodeType": "YulIf",
															"src": "30276:2:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30325:32:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "30337:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30337:20:8"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "30329:4:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30381:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30387:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "30394:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30394:16:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30412:1:8",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30390:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30390:24:8"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "30366:14:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30366:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30366:49:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30425:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30445:4:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30439:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30439:11:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "30429:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30576:29:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30590:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30481:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30489:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30478:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30478:30:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "30529:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30537:4:8",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30525:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30525:17:8"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "30544:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30544:16:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30522:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30522:39:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "30462:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30462:113:8"
															},
															"nodeType": "YulIf",
															"src": "30459:2:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30615:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30630:4:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "30636:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30626:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30626:17:8"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "30619:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30652:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "30672:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30666:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30666:10:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "30656:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30719:9:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30721:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30691:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30699:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30688:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30688:30:8"
															},
															"nodeType": "YulIf",
															"src": "30685:2:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30738:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msg",
																				"nodeType": "YulIdentifier",
																				"src": "30757:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30762:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30753:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30753:14:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30769:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30749:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30749:27:8"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "30742:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30833:9:8",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "30835:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "30791:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "30800:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "30810:14:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "30810:16:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30828:1:8",
																						"type": "",
																						"value": "4"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "30806:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30806:24:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30796:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30796:35:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30788:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30788:44:8"
															},
															"nodeType": "YulIf",
															"src": "30785:2:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "30872:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30882:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30894:4:8",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "30900:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30890:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30890:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30878:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30878:30:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "30852:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30852:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30852:57:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30918:10:8",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "30925:3:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "30918:3:8"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "30262:3:8",
														"type": ""
													}
												],
												"src": "30223:711:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30983:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31040:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31049:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31052:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31042:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31042:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31042:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31006:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "31031:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "31013:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31013:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31003:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31003:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "30996:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "30996:43:8"
															},
															"nodeType": "YulIf",
															"src": "30993:2:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30976:5:8",
														"type": ""
													}
												],
												"src": "30940:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31108:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31162:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31171:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31174:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31164:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31164:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31164:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31131:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "31153:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "31138:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31138:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31128:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31128:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31121:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31121:40:8"
															},
															"nodeType": "YulIf",
															"src": "31118:2:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31101:5:8",
														"type": ""
													}
												],
												"src": "31068:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31232:78:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31288:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31297:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31300:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31290:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31290:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31290:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31255:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "31279:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "31262:16:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31262:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31252:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31252:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31245:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31245:42:8"
															},
															"nodeType": "YulIf",
															"src": "31242:2:8"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31225:5:8",
														"type": ""
													}
												],
												"src": "31190:120:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31359:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31416:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31425:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31428:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31418:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31418:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31418:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31382:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "31407:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "31389:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31389:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31379:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31379:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31372:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "31372:43:8"
															},
															"nodeType": "YulIf",
															"src": "31369:2:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31352:5:8",
														"type": ""
													}
												],
												"src": "31316:122:8"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert(0, 0)\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert(0, 0)\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function return_data_selector() -> sig {\n        if gt(returndatasize(), 3) {\n            returndatacopy(0, 0, 4)\n            sig := shift_right_224_unsigned(mload(0))\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_224_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(224, value)\n\n    }\n\n    function store_literal_in_memory_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to non ERC1155\")\n\n        mstore(add(memPtr, 32), \"Receiver implementer\")\n\n    }\n\n    function store_literal_in_memory_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ERC1155Receiver rejecte\")\n\n        mstore(add(memPtr, 32), \"d tokens\")\n\n    }\n\n    function store_literal_in_memory_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: balance query for the z\")\n\n        mstore(add(memPtr, 32), \"ero address\")\n\n    }\n\n    function store_literal_in_memory_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: caller is not owner nor\")\n\n        mstore(add(memPtr, 32), \" approved\")\n\n    }\n\n    function store_literal_in_memory_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer to the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: transfer caller is not \")\n\n        mstore(add(memPtr, 32), \"owner nor approved\")\n\n    }\n\n    function store_literal_in_memory_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r transfer\")\n\n    }\n\n    function store_literal_in_memory_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: setting approval status\")\n\n        mstore(add(memPtr, 32), \" for self\")\n\n    }\n\n    function store_literal_in_memory_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: accounts and ids length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function store_literal_in_memory_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155: ids and amounts length \")\n\n        mstore(add(memPtr, 32), \"mismatch\")\n\n    }\n\n    function try_decode_error_message() -> ret {\n        if lt(returndatasize(), 0x44) { leave }\n\n        let data := allocate_unbounded()\n        returndatacopy(data, 4, sub(returndatasize(), 4))\n\n        let offset := mload(data)\n        if or(\n            gt(offset, 0xffffffffffffffff),\n            gt(add(offset, 0x24), returndatasize())\n            ) {\n            leave\n        }\n\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, 0xffffffffffffffff) { leave }\n\n        let end := add(add(msg, 0x20), length)\n        if gt(end, add(data, sub(returndatasize(), 4))) { leave }\n\n        finalize_allocation(data, add(offset, add(0x20, length)))\n        ret := msg\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f414610138578063a22cb46514610168578063e985e9c514610184578063f242432a146101b457610087565b8062fdd58e1461008c57806301ffc9a7146100bc5780630e89341c146100ec5780632eb2c2d61461011c575b600080fd5b6100a660048036038101906100a1919061181f565b6101d0565b6040516100b39190611e5c565b60405180910390f35b6100d660048036038101906100d191906118c7565b610299565b6040516100e39190611cdf565b60405180910390f35b61010660048036038101906101019190611919565b61037b565b6040516101139190611cfa565b60405180910390f35b61013660048036038101906101319190611695565b61040f565b005b610152600480360381019061014d919061185b565b6104b0565b60405161015f9190611c86565b60405180910390f35b610182600480360381019061017d91906117e3565b610661565b005b61019e60048036038101906101999190611659565b610677565b6040516101ab9190611cdf565b60405180910390f35b6101ce60048036038101906101c99190611754565b61070b565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890611d5c565b60405180910390fd5b60008083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061036457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103745750610373826107ac565b5b9050919050565b60606002805461038a906120cb565b80601f01602080910402602001604051908101604052809291908181526020018280546103b6906120cb565b80156104035780601f106103d857610100808354040283529160200191610403565b820191906000526020600020905b8154815290600101906020018083116103e657829003601f168201915b50505050509050919050565b610417610816565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148061045d575061045c85610457610816565b610677565b5b61049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390611dbc565b60405180910390fd5b6104a9858585858561081e565b5050505050565b606081518351146104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90611e1c565b60405180910390fd5b6000835167ffffffffffffffff811115610539577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156105675781602001602082028036833780820191505090505b50905060005b8451811015610656576106008582815181106105b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518583815181106105f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516101d0565b828281518110610639577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250508061064f9061212e565b905061056d565b508091505092915050565b61067361066c610816565b8383610b8c565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610713610816565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161480610759575061075885610753610816565b610677565b5b610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078f90611d7c565b60405180910390fd5b6107a58585858585610cf9565b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b8151835114610862576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085990611e3c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990611d9c565b60405180910390fd5b60006108dc610816565b90506108ec818787878787610f95565b60005b8451811015610ae9576000858281518110610933577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190506000858381518110610978577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519050600080600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1090611ddc565b60405180910390fd5b81810360008085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ace9190611fbf565b9250508190555050505080610ae29061212e565b90506108ef565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610b60929190611ca8565b60405180910390a4610b76818787878787610f9d565b610b84818787878787610fa5565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf290611dfc565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610cec9190611cdf565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610d69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6090611d9c565b60405180910390fd5b6000610d73610816565b90506000610d808561118c565b90506000610d8d8561118c565b9050610d9d838989858589610f95565b600080600088815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2b90611ddc565b60405180910390fd5b85810360008089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508560008089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ee99190611fbf565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610f66929190611e77565b60405180910390a4610f7c848a8a86868a610f9d565b610f8a848a8a8a8a8a611252565b505050505050505050565b505050505050565b505050505050565b610fc48473ffffffffffffffffffffffffffffffffffffffff16611439565b15611184578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161100a959493929190611bc4565b602060405180830381600087803b15801561102457600080fd5b505af192505050801561105557506040513d601f19601f8201168201806040525081019061105291906118f0565b60015b6110fb57611061612204565b806308c379a014156110be575061107661255a565b8061108157506110c0565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b59190611cfa565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f290611d1c565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611182576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117990611d3c565b60405180910390fd5b505b505050505050565b60606000600167ffffffffffffffff8111156111d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156111ff5781602001602082028036833780820191505090505b509050828160008151811061123d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080915050919050565b6112718473ffffffffffffffffffffffffffffffffffffffff16611439565b15611431578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016112b7959493929190611c2c565b602060405180830381600087803b1580156112d157600080fd5b505af192505050801561130257506040513d601f19601f820116820180604052508101906112ff91906118f0565b60015b6113a85761130e612204565b806308c379a0141561136b575061132361255a565b8061132e575061136d565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113629190611cfa565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139f90611d1c565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461142f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142690611d3c565b60405180910390fd5b505b505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600061146f61146a84611ec5565b611ea0565b9050808382526020820190508285602086028201111561148e57600080fd5b60005b858110156114be57816114a48882611572565b845260208401935060208301925050600181019050611491565b5050509392505050565b60006114db6114d684611ef1565b611ea0565b905080838252602082019050828560208602820111156114fa57600080fd5b60005b8581101561152a57816115108882611644565b8452602084019350602083019250506001810190506114fd565b5050509392505050565b600061154761154284611f1d565b611ea0565b90508281526020810184848401111561155f57600080fd5b61156a848285612089565b509392505050565b600081359050611581816125f0565b92915050565b600082601f83011261159857600080fd5b81356115a884826020860161145c565b91505092915050565b600082601f8301126115c257600080fd5b81356115d28482602086016114c8565b91505092915050565b6000813590506115ea81612607565b92915050565b6000813590506115ff8161261e565b92915050565b6000815190506116148161261e565b92915050565b600082601f83011261162b57600080fd5b813561163b848260208601611534565b91505092915050565b60008135905061165381612635565b92915050565b6000806040838503121561166c57600080fd5b600061167a85828601611572565b925050602061168b85828601611572565b9150509250929050565b600080600080600060a086880312156116ad57600080fd5b60006116bb88828901611572565b95505060206116cc88828901611572565b945050604086013567ffffffffffffffff8111156116e957600080fd5b6116f5888289016115b1565b935050606086013567ffffffffffffffff81111561171257600080fd5b61171e888289016115b1565b925050608086013567ffffffffffffffff81111561173b57600080fd5b6117478882890161161a565b9150509295509295909350565b600080600080600060a0868803121561176c57600080fd5b600061177a88828901611572565b955050602061178b88828901611572565b945050604061179c88828901611644565b93505060606117ad88828901611644565b925050608086013567ffffffffffffffff8111156117ca57600080fd5b6117d68882890161161a565b9150509295509295909350565b600080604083850312156117f657600080fd5b600061180485828601611572565b9250506020611815858286016115db565b9150509250929050565b6000806040838503121561183257600080fd5b600061184085828601611572565b925050602061185185828601611644565b9150509250929050565b6000806040838503121561186e57600080fd5b600083013567ffffffffffffffff81111561188857600080fd5b61189485828601611587565b925050602083013567ffffffffffffffff8111156118b157600080fd5b6118bd858286016115b1565b9150509250929050565b6000602082840312156118d957600080fd5b60006118e7848285016115f0565b91505092915050565b60006020828403121561190257600080fd5b600061191084828501611605565b91505092915050565b60006020828403121561192b57600080fd5b600061193984828501611644565b91505092915050565b600061194e8383611ba6565b60208301905092915050565b61196381612015565b82525050565b600061197482611f5e565b61197e8185611f8c565b935061198983611f4e565b8060005b838110156119ba5781516119a18882611942565b97506119ac83611f7f565b92505060018101905061198d565b5085935050505092915050565b6119d081612027565b82525050565b60006119e182611f69565b6119eb8185611f9d565b93506119fb818560208601612098565b611a0481612226565b840191505092915050565b6000611a1a82611f74565b611a248185611fae565b9350611a34818560208601612098565b611a3d81612226565b840191505092915050565b6000611a55603483611fae565b9150611a6082612244565b604082019050919050565b6000611a78602883611fae565b9150611a8382612293565b604082019050919050565b6000611a9b602b83611fae565b9150611aa6826122e2565b604082019050919050565b6000611abe602983611fae565b9150611ac982612331565b604082019050919050565b6000611ae1602583611fae565b9150611aec82612380565b604082019050919050565b6000611b04603283611fae565b9150611b0f826123cf565b604082019050919050565b6000611b27602a83611fae565b9150611b328261241e565b604082019050919050565b6000611b4a602983611fae565b9150611b558261246d565b604082019050919050565b6000611b6d602983611fae565b9150611b78826124bc565b604082019050919050565b6000611b90602883611fae565b9150611b9b8261250b565b604082019050919050565b611baf8161207f565b82525050565b611bbe8161207f565b82525050565b600060a082019050611bd9600083018861195a565b611be6602083018761195a565b8181036040830152611bf88186611969565b90508181036060830152611c0c8185611969565b90508181036080830152611c2081846119d6565b90509695505050505050565b600060a082019050611c41600083018861195a565b611c4e602083018761195a565b611c5b6040830186611bb5565b611c686060830185611bb5565b8181036080830152611c7a81846119d6565b90509695505050505050565b60006020820190508181036000830152611ca08184611969565b905092915050565b60006040820190508181036000830152611cc28185611969565b90508181036020830152611cd68184611969565b90509392505050565b6000602082019050611cf460008301846119c7565b92915050565b60006020820190508181036000830152611d148184611a0f565b905092915050565b60006020820190508181036000830152611d3581611a48565b9050919050565b60006020820190508181036000830152611d5581611a6b565b9050919050565b60006020820190508181036000830152611d7581611a8e565b9050919050565b60006020820190508181036000830152611d9581611ab1565b9050919050565b60006020820190508181036000830152611db581611ad4565b9050919050565b60006020820190508181036000830152611dd581611af7565b9050919050565b60006020820190508181036000830152611df581611b1a565b9050919050565b60006020820190508181036000830152611e1581611b3d565b9050919050565b60006020820190508181036000830152611e3581611b60565b9050919050565b60006020820190508181036000830152611e5581611b83565b9050919050565b6000602082019050611e716000830184611bb5565b92915050565b6000604082019050611e8c6000830185611bb5565b611e996020830184611bb5565b9392505050565b6000611eaa611ebb565b9050611eb682826120fd565b919050565b6000604051905090565b600067ffffffffffffffff821115611ee057611edf6121d5565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611f0c57611f0b6121d5565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611f3857611f376121d5565b5b611f4182612226565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611fca8261207f565b9150611fd58361207f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561200a57612009612177565b5b828201905092915050565b60006120208261205f565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156120b657808201518184015260208101905061209b565b838111156120c5576000848401525b50505050565b600060028204905060018216806120e357607f821691505b602082108114156120f7576120f66121a6565b5b50919050565b61210682612226565b810181811067ffffffffffffffff82111715612125576121246121d5565b5b80604052505050565b60006121398261207f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561216c5761216b612177565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d11156122235760046000803e612220600051612237565b90505b90565b6000601f19601f8301169050919050565b60008160e01c9050919050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2062616c616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b7f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260008201527f20617070726f7665640000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f455243313135353a207472616e736665722063616c6c6572206973206e6f742060008201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015250565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b600060443d101561256a576125ed565b612572611ebb565b60043d036004823e80513d602482011167ffffffffffffffff8211171561259a5750506125ed565b808201805167ffffffffffffffff8111156125b857505050506125ed565b80602083010160043d0385018111156125d55750505050506125ed565b6125e4826020018501866120fd565b82955050505050505b90565b6125f981612015565b811461260457600080fd5b50565b61261081612027565b811461261b57600080fd5b50565b61262781612033565b811461263257600080fd5b50565b61263e8161207f565b811461264957600080fd5b5056fea2646970667358221220d3544c500c954d2c9148dc7934c73975c33e1c63e3c6799c9c13f50110dd6d4364736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1B4 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x1E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1919 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1659 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1754 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x364 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x374 JUMPI POP PUSH2 0x373 DUP3 PUSH2 0x7AC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x20CB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B6 SWAP1 PUSH2 0x20CB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x403 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x403 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x417 PUSH2 0x816 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x45D JUMPI POP PUSH2 0x45C DUP6 PUSH2 0x457 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST JUMPDEST PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP1 PUSH2 0x1DBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1E1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x539 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x567 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x656 JUMPI PUSH2 0x600 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5B2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5F3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1D0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x639 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x64F SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 POP PUSH2 0x56D JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x673 PUSH2 0x66C PUSH2 0x816 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xB8C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x713 PUSH2 0x816 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x759 JUMPI POP PUSH2 0x758 DUP6 PUSH2 0x753 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST JUMPDEST PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78F SWAP1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A5 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xCF9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x862 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x859 SWAP1 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8DC PUSH2 0x816 JUMP JUMPDEST SWAP1 POP PUSH2 0x8EC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x933 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x978 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA10 SWAP1 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xACE SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xAE2 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 POP PUSH2 0x8EF JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB60 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB76 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0xB84 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xFA5 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF2 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD60 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD73 PUSH2 0x816 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD80 DUP6 PUSH2 0x118C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD8D DUP6 PUSH2 0x118C JUMP JUMPDEST SWAP1 POP PUSH2 0xD9D DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP6 DUP2 LT ISZERO PUSH2 0xE34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2B SWAP1 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP2 SUB PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x0 DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEE9 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0xF66 SWAP3 SWAP2 SWAP1 PUSH2 0x1E77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF7C DUP5 DUP11 DUP11 DUP7 DUP7 DUP11 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0xF8A DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1252 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFC4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1439 JUMP JUMPDEST ISZERO PUSH2 0x1184 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1055 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1052 SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x10FB JUMPI PUSH2 0x1061 PUSH2 0x2204 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x10BE JUMPI POP PUSH2 0x1076 PUSH2 0x255A JUMP JUMPDEST DUP1 PUSH2 0x1081 JUMPI POP PUSH2 0x10C0 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B5 SWAP2 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1182 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1179 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11D1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11FF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x123D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1271 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1439 JUMP JUMPDEST ISZERO PUSH2 0x1431 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1302 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12FF SWAP2 SWAP1 PUSH2 0x18F0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13A8 JUMPI PUSH2 0x130E PUSH2 0x2204 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x136B JUMPI POP PUSH2 0x1323 PUSH2 0x255A JUMP JUMPDEST DUP1 PUSH2 0x132E JUMPI POP PUSH2 0x136D JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1362 SWAP2 SWAP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139F SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x142F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1426 SWAP1 PUSH2 0x1D3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146F PUSH2 0x146A DUP5 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x148E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x14BE JUMPI DUP2 PUSH2 0x14A4 DUP9 DUP3 PUSH2 0x1572 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1491 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DB PUSH2 0x14D6 DUP5 PUSH2 0x1EF1 JUMP JUMPDEST PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x14FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x152A JUMPI DUP2 PUSH2 0x1510 DUP9 DUP3 PUSH2 0x1644 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x14FD JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1547 PUSH2 0x1542 DUP5 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x155F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156A DUP5 DUP3 DUP6 PUSH2 0x2089 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1581 DUP2 PUSH2 0x25F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1598 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15A8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x145C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x15D2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x14C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15EA DUP2 PUSH2 0x2607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15FF DUP2 PUSH2 0x261E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1614 DUP2 PUSH2 0x261E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x162B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x163B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1534 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1653 DUP2 PUSH2 0x2635 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x166C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x167A DUP6 DUP3 DUP7 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x168B DUP6 DUP3 DUP7 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16BB DUP9 DUP3 DUP10 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x16CC DUP9 DUP3 DUP10 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F5 DUP9 DUP3 DUP10 ADD PUSH2 0x15B1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x171E DUP9 DUP3 DUP10 ADD PUSH2 0x15B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x173B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1747 DUP9 DUP3 DUP10 ADD PUSH2 0x161A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x176C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x177A DUP9 DUP3 DUP10 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x178B DUP9 DUP3 DUP10 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x179C DUP9 DUP3 DUP10 ADD PUSH2 0x1644 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x17AD DUP9 DUP3 DUP10 ADD PUSH2 0x1644 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17D6 DUP9 DUP3 DUP10 ADD PUSH2 0x161A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1804 DUP6 DUP3 DUP7 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1815 DUP6 DUP3 DUP7 ADD PUSH2 0x15DB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1840 DUP6 DUP3 DUP7 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1851 DUP6 DUP3 DUP7 ADD PUSH2 0x1644 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x186E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1894 DUP6 DUP3 DUP7 ADD PUSH2 0x1587 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18BD DUP6 DUP3 DUP7 ADD PUSH2 0x15B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18E7 DUP5 DUP3 DUP6 ADD PUSH2 0x15F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1910 DUP5 DUP3 DUP6 ADD PUSH2 0x1605 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1939 DUP5 DUP3 DUP6 ADD PUSH2 0x1644 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194E DUP4 DUP4 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1963 DUP2 PUSH2 0x2015 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1974 DUP3 PUSH2 0x1F5E JUMP JUMPDEST PUSH2 0x197E DUP2 DUP6 PUSH2 0x1F8C JUMP JUMPDEST SWAP4 POP PUSH2 0x1989 DUP4 PUSH2 0x1F4E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19BA JUMPI DUP2 MLOAD PUSH2 0x19A1 DUP9 DUP3 PUSH2 0x1942 JUMP JUMPDEST SWAP8 POP PUSH2 0x19AC DUP4 PUSH2 0x1F7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x198D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19D0 DUP2 PUSH2 0x2027 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E1 DUP3 PUSH2 0x1F69 JUMP JUMPDEST PUSH2 0x19EB DUP2 DUP6 PUSH2 0x1F9D JUMP JUMPDEST SWAP4 POP PUSH2 0x19FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2098 JUMP JUMPDEST PUSH2 0x1A04 DUP2 PUSH2 0x2226 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1A DUP3 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0x1A24 DUP2 DUP6 PUSH2 0x1FAE JUMP JUMPDEST SWAP4 POP PUSH2 0x1A34 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2098 JUMP JUMPDEST PUSH2 0x1A3D DUP2 PUSH2 0x2226 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A55 PUSH1 0x34 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1A60 DUP3 PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A78 PUSH1 0x28 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1A83 DUP3 PUSH2 0x2293 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9B PUSH1 0x2B DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA6 DUP3 PUSH2 0x22E2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABE PUSH1 0x29 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC9 DUP3 PUSH2 0x2331 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AE1 PUSH1 0x25 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1AEC DUP3 PUSH2 0x2380 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B04 PUSH1 0x32 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0F DUP3 PUSH2 0x23CF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B27 PUSH1 0x2A DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B32 DUP3 PUSH2 0x241E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4A PUSH1 0x29 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B55 DUP3 PUSH2 0x246D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B6D PUSH1 0x29 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B78 DUP3 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B90 PUSH1 0x28 DUP4 PUSH2 0x1FAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9B DUP3 PUSH2 0x250B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BAF DUP2 PUSH2 0x207F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1BBE DUP2 PUSH2 0x207F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1BD9 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x195A JUMP JUMPDEST PUSH2 0x1BE6 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x195A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1BF8 DUP2 DUP7 PUSH2 0x1969 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1C0C DUP2 DUP6 PUSH2 0x1969 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1C20 DUP2 DUP5 PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1C41 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x195A JUMP JUMPDEST PUSH2 0x1C4E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x195A JUMP JUMPDEST PUSH2 0x1C5B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x1C68 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1BB5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1C7A DUP2 DUP5 PUSH2 0x19D6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CA0 DUP2 DUP5 PUSH2 0x1969 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CC2 DUP2 DUP6 PUSH2 0x1969 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1CD6 DUP2 DUP5 PUSH2 0x1969 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D14 DUP2 DUP5 PUSH2 0x1A0F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D35 DUP2 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D55 DUP2 PUSH2 0x1A6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D75 DUP2 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D95 DUP2 PUSH2 0x1AB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB5 DUP2 PUSH2 0x1AD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD5 DUP2 PUSH2 0x1AF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DF5 DUP2 PUSH2 0x1B1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E15 DUP2 PUSH2 0x1B3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E35 DUP2 PUSH2 0x1B60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E55 DUP2 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E71 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E8C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1BB5 JUMP JUMPDEST PUSH2 0x1E99 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BB5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAA PUSH2 0x1EBB JUMP JUMPDEST SWAP1 POP PUSH2 0x1EB6 DUP3 DUP3 PUSH2 0x20FD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EE0 JUMPI PUSH2 0x1EDF PUSH2 0x21D5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F0C JUMPI PUSH2 0x1F0B PUSH2 0x21D5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F38 JUMPI PUSH2 0x1F37 PUSH2 0x21D5 JUMP JUMPDEST JUMPDEST PUSH2 0x1F41 DUP3 PUSH2 0x2226 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCA DUP3 PUSH2 0x207F JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD5 DUP4 PUSH2 0x207F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x200A JUMPI PUSH2 0x2009 PUSH2 0x2177 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2020 DUP3 PUSH2 0x205F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20B6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x209B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x20C5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x20E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x20F7 JUMPI PUSH2 0x20F6 PUSH2 0x21A6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2106 DUP3 PUSH2 0x2226 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2125 JUMPI PUSH2 0x2124 PUSH2 0x21D5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2139 DUP3 PUSH2 0x207F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x216C JUMPI PUSH2 0x216B PUSH2 0x2177 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2223 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH2 0x2220 PUSH1 0x0 MLOAD PUSH2 0x2237 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x256A JUMPI PUSH2 0x25ED JUMP JUMPDEST PUSH2 0x2572 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x4 RETURNDATASIZE SUB PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x259A JUMPI POP POP PUSH2 0x25ED JUMP JUMPDEST DUP1 DUP3 ADD DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25B8 JUMPI POP POP POP POP PUSH2 0x25ED JUMP JUMPDEST DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x4 RETURNDATASIZE SUB DUP6 ADD DUP2 GT ISZERO PUSH2 0x25D5 JUMPI POP POP POP POP POP PUSH2 0x25ED JUMP JUMPDEST PUSH2 0x25E4 DUP3 PUSH1 0x20 ADD DUP6 ADD DUP7 PUSH2 0x20FD JUMP JUMPDEST DUP3 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x25F9 DUP2 PUSH2 0x2015 JUMP JUMPDEST DUP2 EQ PUSH2 0x2604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2610 DUP2 PUSH2 0x2027 JUMP JUMPDEST DUP2 EQ PUSH2 0x261B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2627 DUP2 PUSH2 0x2033 JUMP JUMPDEST DUP2 EQ PUSH2 0x2632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x263E DUP2 PUSH2 0x207F JUMP JUMPDEST DUP2 EQ PUSH2 0x2649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SLOAD 0x4C POP 0xC SWAP6 0x4D 0x2C SWAP2 0x48 0xDC PUSH26 0x34C73975C33E1C63E3C6799C9C13F50110DD6D4364736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "534:17041:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2199:231;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1222:310;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1943:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4138:442;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2596:524;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3193:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3420:168;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3660:401;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2199:231;2285:7;2332:1;2313:21;;:7;:21;;;;2305:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2400:9;:13;2410:2;2400:13;;;;;;;;;;;:22;2414:7;2400:22;;;;;;;;;;;;;;;;2393:29;;2199:231;;;;:::o;1222:310::-;1324:4;1376:26;1361:41;;;:11;:41;;;;:110;;;;1434:37;1419:52;;;:11;:52;;;;1361:110;:163;;;;1488:36;1512:11;1488:23;:36::i;:::-;1361:163;1341:183;;1222:310;;;:::o;1943:105::-;2003:13;2036:4;2029:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1943:105;;;:::o;4138:442::-;4379:12;:10;:12::i;:::-;4371:20;;:4;:20;;;:60;;;;4395:36;4412:4;4418:12;:10;:12::i;:::-;4395:16;:36::i;:::-;4371:60;4349:160;;;;;;;;;;;;:::i;:::-;;;;;;;;;4520:52;4543:4;4549:2;4553:3;4558:7;4567:4;4520:22;:52::i;:::-;4138:442;;;;;:::o;2596:524::-;2752:16;2813:3;:10;2794:8;:15;:29;2786:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;2882:30;2929:8;:15;2915:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2882:63;;2963:9;2958:122;2982:8;:15;2978:1;:19;2958:122;;;3038:30;3048:8;3057:1;3048:11;;;;;;;;;;;;;;;;;;;;;;3061:3;3065:1;3061:6;;;;;;;;;;;;;;;;;;;;;;3038:9;:30::i;:::-;3019:13;3033:1;3019:16;;;;;;;;;;;;;;;;;;;;;:49;;;;;2999:3;;;;:::i;:::-;;;2958:122;;;;3099:13;3092:20;;;2596:524;;;;:::o;3193:155::-;3288:52;3307:12;:10;:12::i;:::-;3321:8;3331;3288:18;:52::i;:::-;3193:155;;:::o;3420:168::-;3519:4;3543:18;:27;3562:7;3543:27;;;;;;;;;;;;;;;:37;3571:8;3543:37;;;;;;;;;;;;;;;;;;;;;;;;;3536:44;;3420:168;;;;:::o;3660:401::-;3876:12;:10;:12::i;:::-;3868:20;;:4;:20;;;:60;;;;3892:36;3909:4;3915:12;:10;:12::i;:::-;3892:16;:36::i;:::-;3868:60;3846:151;;;;;;;;;;;;:::i;:::-;;;;;;;;;4008:45;4026:4;4032:2;4036;4040:6;4048:4;4008:17;:45::i;:::-;3660:401;;;;;:::o;854:157:3:-;939:4;978:25;963:40;;;:11;:40;;;;956:47;;854:157;;;:::o;656:98:1:-;709:7;736:10;729:17;;656:98;:::o;6376:1146:2:-;6603:7;:14;6589:3;:10;:28;6581:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;6695:1;6681:16;;:2;:16;;;;6673:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6752:16;6771:12;:10;:12::i;:::-;6752:31;;6796:60;6817:8;6827:4;6833:2;6837:3;6842:7;6851:4;6796:20;:60::i;:::-;6874:9;6869:421;6893:3;:10;6889:1;:14;6869:421;;;6925:10;6938:3;6942:1;6938:6;;;;;;;;;;;;;;;;;;;;;;6925:19;;6959:14;6976:7;6984:1;6976:10;;;;;;;;;;;;;;;;;;;;;;6959:27;;7003:19;7025:9;:13;7035:2;7025:13;;;;;;;;;;;:19;7039:4;7025:19;;;;;;;;;;;;;;;;7003:41;;7082:6;7067:11;:21;;7059:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7215:6;7201:11;:20;7179:9;:13;7189:2;7179:13;;;;;;;;;;;:19;7193:4;7179:19;;;;;;;;;;;;;;;:42;;;;7272:6;7251:9;:13;7261:2;7251:13;;;;;;;;;;;:17;7265:2;7251:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;6869:421;;;6905:3;;;;:::i;:::-;;;6869:421;;;;7337:2;7307:47;;7331:4;7307:47;;7321:8;7307:47;;;7341:3;7346:7;7307:47;;;;;;;:::i;:::-;;;;;;;;7367:59;7387:8;7397:4;7403:2;7407:3;7412:7;7421:4;7367:19;:59::i;:::-;7439:75;7475:8;7485:4;7491:2;7495:3;7500:7;7509:4;7439:35;:75::i;:::-;6376:1146;;;;;;:::o;13110:331::-;13265:8;13256:17;;:5;:17;;;;13248:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;13368:8;13330:18;:25;13349:5;13330:25;;;;;;;;;;;;;;;:35;13356:8;13330:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13414:8;13392:41;;13407:5;13392:41;;;13424:8;13392:41;;;;;;:::i;:::-;;;;;;;;13110:331;;;:::o;5044:974::-;5246:1;5232:16;;:2;:16;;;;5224:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5303:16;5322:12;:10;:12::i;:::-;5303:31;;5345:20;5368:21;5386:2;5368:17;:21::i;:::-;5345:44;;5400:24;5427:25;5445:6;5427:17;:25::i;:::-;5400:52;;5465:60;5486:8;5496:4;5502:2;5506:3;5511:7;5520:4;5465:20;:60::i;:::-;5538:19;5560:9;:13;5570:2;5560:13;;;;;;;;;;;:19;5574:4;5560:19;;;;;;;;;;;;;;;;5538:41;;5613:6;5598:11;:21;;5590:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5738:6;5724:11;:20;5702:9;:13;5712:2;5702:13;;;;;;;;;;;:19;5716:4;5702:19;;;;;;;;;;;;;;;:42;;;;5787:6;5766:9;:13;5776:2;5766:13;;;;;;;;;;;:17;5780:2;5766:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;5842:2;5811:46;;5836:4;5811:46;;5826:8;5811:46;;;5846:2;5850:6;5811:46;;;;;;;:::i;:::-;;;;;;;;5870:59;5890:8;5900:4;5906:2;5910:3;5915:7;5924:4;5870:19;:59::i;:::-;5942:68;5973:8;5983:4;5989:2;5993;5997:6;6005:4;5942:30;:68::i;:::-;5044:974;;;;;;;;;:::o;14397:221::-;;;;;;;:::o;15573:220::-;;;;;;;:::o;16553:813::-;16793:15;:2;:13;;;:15::i;:::-;16789:570;;;16846:2;16829:43;;;16873:8;16883:4;16889:3;16894:7;16903:4;16829:79;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16825:523;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;17221:6;17214:14;;;;;;;;;;;:::i;:::-;;;;;;;;16825:523;;;17270:62;;;;;;;;;;:::i;:::-;;;;;;;;16825:523;17002:48;;;16990:60;;;:8;:60;;;;16986:159;;17075:50;;;;;;;;;;:::i;:::-;;;;;;;;16986:159;16909:251;16789:570;16553:813;;;;;;:::o;17374:198::-;17440:16;17469:22;17508:1;17494:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17469:41;;17532:7;17521:5;17527:1;17521:8;;;;;;;;;;;;;;;;;;;;;:18;;;;;17559:5;17552:12;;;17374:198;;;:::o;15801:744::-;16016:15;:2;:13;;;:15::i;:::-;16012:526;;;16069:2;16052:38;;;16091:8;16101:4;16107:2;16111:6;16119:4;16052:72;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16048:479;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16400:6;16393:14;;;;;;;;;;;:::i;:::-;;;;;;;;16048:479;;;16449:62;;;;;;;;;;:::i;:::-;;;;;;;;16048:479;16186:43;;;16174:55;;;:8;:55;;;;16170:154;;16254:50;;;;;;;;;;:::i;:::-;;;;;;;;16170:154;16125:214;16012:526;15801:744;;;;;;:::o;1210:326:0:-;1270:4;1527:1;1505:7;:19;;;:23;1498:30;;1210:326;;;:::o;24:655:8:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:2;;;414:1;411;404:12;350:2;450:1;435:238;460:6;457:1;454:13;435:238;;;528:3;557:37;590:3;578:10;557:37;:::i;:::-;552:3;545:50;624:4;619:3;615:14;608:21;;658:4;653:3;649:14;642:21;;495:178;482:1;479;475:9;470:14;;435:238;;;439:14;126:553;;;;;;;:::o;702:655::-;798:5;823:81;839:64;896:6;839:64;:::i;:::-;823:81;:::i;:::-;814:90;;924:5;953:6;946:5;939:21;987:4;980:5;976:16;969:23;;1013:6;1063:3;1055:4;1047:6;1043:17;1038:3;1034:27;1031:36;1028:2;;;1092:1;1089;1082:12;1028:2;1128:1;1113:238;1138:6;1135:1;1132:13;1113:238;;;1206:3;1235:37;1268:3;1256:10;1235:37;:::i;:::-;1230:3;1223:50;1302:4;1297:3;1293:14;1286:21;;1336:4;1331:3;1327:14;1320:21;;1173:178;1160:1;1157;1153:9;1148:14;;1113:238;;;1117:14;804:553;;;;;;;:::o;1363:343::-;1440:5;1465:65;1481:48;1522:6;1481:48;:::i;:::-;1465:65;:::i;:::-;1456:74;;1553:6;1546:5;1539:21;1591:4;1584:5;1580:16;1629:3;1620:6;1615:3;1611:16;1608:25;1605:2;;;1646:1;1643;1636:12;1605:2;1659:41;1693:6;1688:3;1683;1659:41;:::i;:::-;1446:260;;;;;;:::o;1712:139::-;1758:5;1796:6;1783:20;1774:29;;1812:33;1839:5;1812:33;:::i;:::-;1764:87;;;;:::o;1874:303::-;1945:5;1994:3;1987:4;1979:6;1975:17;1971:27;1961:2;;2012:1;2009;2002:12;1961:2;2052:6;2039:20;2077:94;2167:3;2159:6;2152:4;2144:6;2140:17;2077:94;:::i;:::-;2068:103;;1951:226;;;;;:::o;2200:303::-;2271:5;2320:3;2313:4;2305:6;2301:17;2297:27;2287:2;;2338:1;2335;2328:12;2287:2;2378:6;2365:20;2403:94;2493:3;2485:6;2478:4;2470:6;2466:17;2403:94;:::i;:::-;2394:103;;2277:226;;;;;:::o;2509:133::-;2552:5;2590:6;2577:20;2568:29;;2606:30;2630:5;2606:30;:::i;:::-;2558:84;;;;:::o;2648:137::-;2693:5;2731:6;2718:20;2709:29;;2747:32;2773:5;2747:32;:::i;:::-;2699:86;;;;:::o;2791:141::-;2847:5;2878:6;2872:13;2863:22;;2894:32;2920:5;2894:32;:::i;:::-;2853:79;;;;:::o;2951:271::-;3006:5;3055:3;3048:4;3040:6;3036:17;3032:27;3022:2;;3073:1;3070;3063:12;3022:2;3113:6;3100:20;3138:78;3212:3;3204:6;3197:4;3189:6;3185:17;3138:78;:::i;:::-;3129:87;;3012:210;;;;;:::o;3228:139::-;3274:5;3312:6;3299:20;3290:29;;3328:33;3355:5;3328:33;:::i;:::-;3280:87;;;;:::o;3373:407::-;3441:6;3449;3498:2;3486:9;3477:7;3473:23;3469:32;3466:2;;;3514:1;3511;3504:12;3466:2;3557:1;3582:53;3627:7;3618:6;3607:9;3603:22;3582:53;:::i;:::-;3572:63;;3528:117;3684:2;3710:53;3755:7;3746:6;3735:9;3731:22;3710:53;:::i;:::-;3700:63;;3655:118;3456:324;;;;;:::o;3786:1241::-;3940:6;3948;3956;3964;3972;4021:3;4009:9;4000:7;3996:23;3992:33;3989:2;;;4038:1;4035;4028:12;3989:2;4081:1;4106:53;4151:7;4142:6;4131:9;4127:22;4106:53;:::i;:::-;4096:63;;4052:117;4208:2;4234:53;4279:7;4270:6;4259:9;4255:22;4234:53;:::i;:::-;4224:63;;4179:118;4364:2;4353:9;4349:18;4336:32;4395:18;4387:6;4384:30;4381:2;;;4427:1;4424;4417:12;4381:2;4455:78;4525:7;4516:6;4505:9;4501:22;4455:78;:::i;:::-;4445:88;;4307:236;4610:2;4599:9;4595:18;4582:32;4641:18;4633:6;4630:30;4627:2;;;4673:1;4670;4663:12;4627:2;4701:78;4771:7;4762:6;4751:9;4747:22;4701:78;:::i;:::-;4691:88;;4553:236;4856:3;4845:9;4841:19;4828:33;4888:18;4880:6;4877:30;4874:2;;;4920:1;4917;4910:12;4874:2;4948:62;5002:7;4993:6;4982:9;4978:22;4948:62;:::i;:::-;4938:72;;4799:221;3979:1048;;;;;;;;:::o;5033:955::-;5137:6;5145;5153;5161;5169;5218:3;5206:9;5197:7;5193:23;5189:33;5186:2;;;5235:1;5232;5225:12;5186:2;5278:1;5303:53;5348:7;5339:6;5328:9;5324:22;5303:53;:::i;:::-;5293:63;;5249:117;5405:2;5431:53;5476:7;5467:6;5456:9;5452:22;5431:53;:::i;:::-;5421:63;;5376:118;5533:2;5559:53;5604:7;5595:6;5584:9;5580:22;5559:53;:::i;:::-;5549:63;;5504:118;5661:2;5687:53;5732:7;5723:6;5712:9;5708:22;5687:53;:::i;:::-;5677:63;;5632:118;5817:3;5806:9;5802:19;5789:33;5849:18;5841:6;5838:30;5835:2;;;5881:1;5878;5871:12;5835:2;5909:62;5963:7;5954:6;5943:9;5939:22;5909:62;:::i;:::-;5899:72;;5760:221;5176:812;;;;;;;;:::o;5994:401::-;6059:6;6067;6116:2;6104:9;6095:7;6091:23;6087:32;6084:2;;;6132:1;6129;6122:12;6084:2;6175:1;6200:53;6245:7;6236:6;6225:9;6221:22;6200:53;:::i;:::-;6190:63;;6146:117;6302:2;6328:50;6370:7;6361:6;6350:9;6346:22;6328:50;:::i;:::-;6318:60;;6273:115;6074:321;;;;;:::o;6401:407::-;6469:6;6477;6526:2;6514:9;6505:7;6501:23;6497:32;6494:2;;;6542:1;6539;6532:12;6494:2;6585:1;6610:53;6655:7;6646:6;6635:9;6631:22;6610:53;:::i;:::-;6600:63;;6556:117;6712:2;6738:53;6783:7;6774:6;6763:9;6759:22;6738:53;:::i;:::-;6728:63;;6683:118;6484:324;;;;;:::o;6814:693::-;6932:6;6940;6989:2;6977:9;6968:7;6964:23;6960:32;6957:2;;;7005:1;7002;6995:12;6957:2;7076:1;7065:9;7061:17;7048:31;7106:18;7098:6;7095:30;7092:2;;;7138:1;7135;7128:12;7092:2;7166:78;7236:7;7227:6;7216:9;7212:22;7166:78;:::i;:::-;7156:88;;7019:235;7321:2;7310:9;7306:18;7293:32;7352:18;7344:6;7341:30;7338:2;;;7384:1;7381;7374:12;7338:2;7412:78;7482:7;7473:6;7462:9;7458:22;7412:78;:::i;:::-;7402:88;;7264:236;6947:560;;;;;:::o;7513:260::-;7571:6;7620:2;7608:9;7599:7;7595:23;7591:32;7588:2;;;7636:1;7633;7626:12;7588:2;7679:1;7704:52;7748:7;7739:6;7728:9;7724:22;7704:52;:::i;:::-;7694:62;;7650:116;7578:195;;;;:::o;7779:282::-;7848:6;7897:2;7885:9;7876:7;7872:23;7868:32;7865:2;;;7913:1;7910;7903:12;7865:2;7956:1;7981:63;8036:7;8027:6;8016:9;8012:22;7981:63;:::i;:::-;7971:73;;7927:127;7855:206;;;;:::o;8067:262::-;8126:6;8175:2;8163:9;8154:7;8150:23;8146:32;8143:2;;;8191:1;8188;8181:12;8143:2;8234:1;8259:53;8304:7;8295:6;8284:9;8280:22;8259:53;:::i;:::-;8249:63;;8205:117;8133:196;;;;:::o;8335:179::-;8404:10;8425:46;8467:3;8459:6;8425:46;:::i;:::-;8503:4;8498:3;8494:14;8480:28;;8415:99;;;;:::o;8520:118::-;8607:24;8625:5;8607:24;:::i;:::-;8602:3;8595:37;8585:53;;:::o;8674:732::-;8793:3;8822:54;8870:5;8822:54;:::i;:::-;8892:86;8971:6;8966:3;8892:86;:::i;:::-;8885:93;;9002:56;9052:5;9002:56;:::i;:::-;9081:7;9112:1;9097:284;9122:6;9119:1;9116:13;9097:284;;;9198:6;9192:13;9225:63;9284:3;9269:13;9225:63;:::i;:::-;9218:70;;9311:60;9364:6;9311:60;:::i;:::-;9301:70;;9157:224;9144:1;9141;9137:9;9132:14;;9097:284;;;9101:14;9397:3;9390:10;;8798:608;;;;;;;:::o;9412:109::-;9493:21;9508:5;9493:21;:::i;:::-;9488:3;9481:34;9471:50;;:::o;9527:360::-;9613:3;9641:38;9673:5;9641:38;:::i;:::-;9695:70;9758:6;9753:3;9695:70;:::i;:::-;9688:77;;9774:52;9819:6;9814:3;9807:4;9800:5;9796:16;9774:52;:::i;:::-;9851:29;9873:6;9851:29;:::i;:::-;9846:3;9842:39;9835:46;;9617:270;;;;;:::o;9893:364::-;9981:3;10009:39;10042:5;10009:39;:::i;:::-;10064:71;10128:6;10123:3;10064:71;:::i;:::-;10057:78;;10144:52;10189:6;10184:3;10177:4;10170:5;10166:16;10144:52;:::i;:::-;10221:29;10243:6;10221:29;:::i;:::-;10216:3;10212:39;10205:46;;9985:272;;;;;:::o;10263:366::-;10405:3;10426:67;10490:2;10485:3;10426:67;:::i;:::-;10419:74;;10502:93;10591:3;10502:93;:::i;:::-;10620:2;10615:3;10611:12;10604:19;;10409:220;;;:::o;10635:366::-;10777:3;10798:67;10862:2;10857:3;10798:67;:::i;:::-;10791:74;;10874:93;10963:3;10874:93;:::i;:::-;10992:2;10987:3;10983:12;10976:19;;10781:220;;;:::o;11007:366::-;11149:3;11170:67;11234:2;11229:3;11170:67;:::i;:::-;11163:74;;11246:93;11335:3;11246:93;:::i;:::-;11364:2;11359:3;11355:12;11348:19;;11153:220;;;:::o;11379:366::-;11521:3;11542:67;11606:2;11601:3;11542:67;:::i;:::-;11535:74;;11618:93;11707:3;11618:93;:::i;:::-;11736:2;11731:3;11727:12;11720:19;;11525:220;;;:::o;11751:366::-;11893:3;11914:67;11978:2;11973:3;11914:67;:::i;:::-;11907:74;;11990:93;12079:3;11990:93;:::i;:::-;12108:2;12103:3;12099:12;12092:19;;11897:220;;;:::o;12123:366::-;12265:3;12286:67;12350:2;12345:3;12286:67;:::i;:::-;12279:74;;12362:93;12451:3;12362:93;:::i;:::-;12480:2;12475:3;12471:12;12464:19;;12269:220;;;:::o;12495:366::-;12637:3;12658:67;12722:2;12717:3;12658:67;:::i;:::-;12651:74;;12734:93;12823:3;12734:93;:::i;:::-;12852:2;12847:3;12843:12;12836:19;;12641:220;;;:::o;12867:366::-;13009:3;13030:67;13094:2;13089:3;13030:67;:::i;:::-;13023:74;;13106:93;13195:3;13106:93;:::i;:::-;13224:2;13219:3;13215:12;13208:19;;13013:220;;;:::o;13239:366::-;13381:3;13402:67;13466:2;13461:3;13402:67;:::i;:::-;13395:74;;13478:93;13567:3;13478:93;:::i;:::-;13596:2;13591:3;13587:12;13580:19;;13385:220;;;:::o;13611:366::-;13753:3;13774:67;13838:2;13833:3;13774:67;:::i;:::-;13767:74;;13850:93;13939:3;13850:93;:::i;:::-;13968:2;13963:3;13959:12;13952:19;;13757:220;;;:::o;13983:108::-;14060:24;14078:5;14060:24;:::i;:::-;14055:3;14048:37;14038:53;;:::o;14097:118::-;14184:24;14202:5;14184:24;:::i;:::-;14179:3;14172:37;14162:53;;:::o;14221:1053::-;14544:4;14582:3;14571:9;14567:19;14559:27;;14596:71;14664:1;14653:9;14649:17;14640:6;14596:71;:::i;:::-;14677:72;14745:2;14734:9;14730:18;14721:6;14677:72;:::i;:::-;14796:9;14790:4;14786:20;14781:2;14770:9;14766:18;14759:48;14824:108;14927:4;14918:6;14824:108;:::i;:::-;14816:116;;14979:9;14973:4;14969:20;14964:2;14953:9;14949:18;14942:48;15007:108;15110:4;15101:6;15007:108;:::i;:::-;14999:116;;15163:9;15157:4;15153:20;15147:3;15136:9;15132:19;15125:49;15191:76;15262:4;15253:6;15191:76;:::i;:::-;15183:84;;14549:725;;;;;;;;:::o;15280:751::-;15503:4;15541:3;15530:9;15526:19;15518:27;;15555:71;15623:1;15612:9;15608:17;15599:6;15555:71;:::i;:::-;15636:72;15704:2;15693:9;15689:18;15680:6;15636:72;:::i;:::-;15718;15786:2;15775:9;15771:18;15762:6;15718:72;:::i;:::-;15800;15868:2;15857:9;15853:18;15844:6;15800:72;:::i;:::-;15920:9;15914:4;15910:20;15904:3;15893:9;15889:19;15882:49;15948:76;16019:4;16010:6;15948:76;:::i;:::-;15940:84;;15508:523;;;;;;;;:::o;16037:373::-;16180:4;16218:2;16207:9;16203:18;16195:26;;16267:9;16261:4;16257:20;16253:1;16242:9;16238:17;16231:47;16295:108;16398:4;16389:6;16295:108;:::i;:::-;16287:116;;16185:225;;;;:::o;16416:634::-;16637:4;16675:2;16664:9;16660:18;16652:26;;16724:9;16718:4;16714:20;16710:1;16699:9;16695:17;16688:47;16752:108;16855:4;16846:6;16752:108;:::i;:::-;16744:116;;16907:9;16901:4;16897:20;16892:2;16881:9;16877:18;16870:48;16935:108;17038:4;17029:6;16935:108;:::i;:::-;16927:116;;16642:408;;;;;:::o;17056:210::-;17143:4;17181:2;17170:9;17166:18;17158:26;;17194:65;17256:1;17245:9;17241:17;17232:6;17194:65;:::i;:::-;17148:118;;;;:::o;17272:313::-;17385:4;17423:2;17412:9;17408:18;17400:26;;17472:9;17466:4;17462:20;17458:1;17447:9;17443:17;17436:47;17500:78;17573:4;17564:6;17500:78;:::i;:::-;17492:86;;17390:195;;;;:::o;17591:419::-;17757:4;17795:2;17784:9;17780:18;17772:26;;17844:9;17838:4;17834:20;17830:1;17819:9;17815:17;17808:47;17872:131;17998:4;17872:131;:::i;:::-;17864:139;;17762:248;;;:::o;18016:419::-;18182:4;18220:2;18209:9;18205:18;18197:26;;18269:9;18263:4;18259:20;18255:1;18244:9;18240:17;18233:47;18297:131;18423:4;18297:131;:::i;:::-;18289:139;;18187:248;;;:::o;18441:419::-;18607:4;18645:2;18634:9;18630:18;18622:26;;18694:9;18688:4;18684:20;18680:1;18669:9;18665:17;18658:47;18722:131;18848:4;18722:131;:::i;:::-;18714:139;;18612:248;;;:::o;18866:419::-;19032:4;19070:2;19059:9;19055:18;19047:26;;19119:9;19113:4;19109:20;19105:1;19094:9;19090:17;19083:47;19147:131;19273:4;19147:131;:::i;:::-;19139:139;;19037:248;;;:::o;19291:419::-;19457:4;19495:2;19484:9;19480:18;19472:26;;19544:9;19538:4;19534:20;19530:1;19519:9;19515:17;19508:47;19572:131;19698:4;19572:131;:::i;:::-;19564:139;;19462:248;;;:::o;19716:419::-;19882:4;19920:2;19909:9;19905:18;19897:26;;19969:9;19963:4;19959:20;19955:1;19944:9;19940:17;19933:47;19997:131;20123:4;19997:131;:::i;:::-;19989:139;;19887:248;;;:::o;20141:419::-;20307:4;20345:2;20334:9;20330:18;20322:26;;20394:9;20388:4;20384:20;20380:1;20369:9;20365:17;20358:47;20422:131;20548:4;20422:131;:::i;:::-;20414:139;;20312:248;;;:::o;20566:419::-;20732:4;20770:2;20759:9;20755:18;20747:26;;20819:9;20813:4;20809:20;20805:1;20794:9;20790:17;20783:47;20847:131;20973:4;20847:131;:::i;:::-;20839:139;;20737:248;;;:::o;20991:419::-;21157:4;21195:2;21184:9;21180:18;21172:26;;21244:9;21238:4;21234:20;21230:1;21219:9;21215:17;21208:47;21272:131;21398:4;21272:131;:::i;:::-;21264:139;;21162:248;;;:::o;21416:419::-;21582:4;21620:2;21609:9;21605:18;21597:26;;21669:9;21663:4;21659:20;21655:1;21644:9;21640:17;21633:47;21697:131;21823:4;21697:131;:::i;:::-;21689:139;;21587:248;;;:::o;21841:222::-;21934:4;21972:2;21961:9;21957:18;21949:26;;21985:71;22053:1;22042:9;22038:17;22029:6;21985:71;:::i;:::-;21939:124;;;;:::o;22069:332::-;22190:4;22228:2;22217:9;22213:18;22205:26;;22241:71;22309:1;22298:9;22294:17;22285:6;22241:71;:::i;:::-;22322:72;22390:2;22379:9;22375:18;22366:6;22322:72;:::i;:::-;22195:206;;;;;:::o;22407:129::-;22441:6;22468:20;;:::i;:::-;22458:30;;22497:33;22525:4;22517:6;22497:33;:::i;:::-;22448:88;;;:::o;22542:75::-;22575:6;22608:2;22602:9;22592:19;;22582:35;:::o;22623:311::-;22700:4;22790:18;22782:6;22779:30;22776:2;;;22812:18;;:::i;:::-;22776:2;22862:4;22854:6;22850:17;22842:25;;22922:4;22916;22912:15;22904:23;;22705:229;;;:::o;22940:311::-;23017:4;23107:18;23099:6;23096:30;23093:2;;;23129:18;;:::i;:::-;23093:2;23179:4;23171:6;23167:17;23159:25;;23239:4;23233;23229:15;23221:23;;23022:229;;;:::o;23257:307::-;23318:4;23408:18;23400:6;23397:30;23394:2;;;23430:18;;:::i;:::-;23394:2;23468:29;23490:6;23468:29;:::i;:::-;23460:37;;23552:4;23546;23542:15;23534:23;;23323:241;;;:::o;23570:132::-;23637:4;23660:3;23652:11;;23690:4;23685:3;23681:14;23673:22;;23642:60;;;:::o;23708:114::-;23775:6;23809:5;23803:12;23793:22;;23782:40;;;:::o;23828:98::-;23879:6;23913:5;23907:12;23897:22;;23886:40;;;:::o;23932:99::-;23984:6;24018:5;24012:12;24002:22;;23991:40;;;:::o;24037:113::-;24107:4;24139;24134:3;24130:14;24122:22;;24112:38;;;:::o;24156:184::-;24255:11;24289:6;24284:3;24277:19;24329:4;24324:3;24320:14;24305:29;;24267:73;;;;:::o;24346:168::-;24429:11;24463:6;24458:3;24451:19;24503:4;24498:3;24494:14;24479:29;;24441:73;;;;:::o;24520:169::-;24604:11;24638:6;24633:3;24626:19;24678:4;24673:3;24669:14;24654:29;;24616:73;;;;:::o;24695:305::-;24735:3;24754:20;24772:1;24754:20;:::i;:::-;24749:25;;24788:20;24806:1;24788:20;:::i;:::-;24783:25;;24942:1;24874:66;24870:74;24867:1;24864:81;24861:2;;;24948:18;;:::i;:::-;24861:2;24992:1;24989;24985:9;24978:16;;24739:261;;;;:::o;25006:96::-;25043:7;25072:24;25090:5;25072:24;:::i;:::-;25061:35;;25051:51;;;:::o;25108:90::-;25142:7;25185:5;25178:13;25171:21;25160:32;;25150:48;;;:::o;25204:149::-;25240:7;25280:66;25273:5;25269:78;25258:89;;25248:105;;;:::o;25359:126::-;25396:7;25436:42;25429:5;25425:54;25414:65;;25404:81;;;:::o;25491:77::-;25528:7;25557:5;25546:16;;25536:32;;;:::o;25574:154::-;25658:6;25653:3;25648;25635:30;25720:1;25711:6;25706:3;25702:16;25695:27;25625:103;;;:::o;25734:307::-;25802:1;25812:113;25826:6;25823:1;25820:13;25812:113;;;25911:1;25906:3;25902:11;25896:18;25892:1;25887:3;25883:11;25876:39;25848:2;25845:1;25841:10;25836:15;;25812:113;;;25943:6;25940:1;25937:13;25934:2;;;26023:1;26014:6;26009:3;26005:16;25998:27;25934:2;25783:258;;;;:::o;26047:320::-;26091:6;26128:1;26122:4;26118:12;26108:22;;26175:1;26169:4;26165:12;26196:18;26186:2;;26252:4;26244:6;26240:17;26230:27;;26186:2;26314;26306:6;26303:14;26283:18;26280:38;26277:2;;;26333:18;;:::i;:::-;26277:2;26098:269;;;;:::o;26373:281::-;26456:27;26478:4;26456:27;:::i;:::-;26448:6;26444:40;26586:6;26574:10;26571:22;26550:18;26538:10;26535:34;26532:62;26529:2;;;26597:18;;:::i;:::-;26529:2;26637:10;26633:2;26626:22;26416:238;;;:::o;26660:233::-;26699:3;26722:24;26740:5;26722:24;:::i;:::-;26713:33;;26768:66;26761:5;26758:77;26755:2;;;26838:18;;:::i;:::-;26755:2;26885:1;26878:5;26874:13;26867:20;;26703:190;;;:::o;26899:180::-;26947:77;26944:1;26937:88;27044:4;27041:1;27034:15;27068:4;27065:1;27058:15;27085:180;27133:77;27130:1;27123:88;27230:4;27227:1;27220:15;27254:4;27251:1;27244:15;27271:180;27319:77;27316:1;27309:88;27416:4;27413:1;27406:15;27440:4;27437:1;27430:15;27457:183;27492:3;27530:1;27512:16;27509:23;27506:2;;;27568:1;27565;27562;27547:23;27590:34;27621:1;27615:8;27590:34;:::i;:::-;27583:41;;27506:2;27496:144;:::o;27646:102::-;27687:6;27738:2;27734:7;27729:2;27722:5;27718:14;27714:28;27704:38;;27694:54;;;:::o;27754:106::-;27798:8;27847:5;27842:3;27838:15;27817:36;;27807:53;;;:::o;27866:239::-;28006:34;28002:1;27994:6;27990:14;27983:58;28075:22;28070:2;28062:6;28058:15;28051:47;27972:133;:::o;28111:227::-;28251:34;28247:1;28239:6;28235:14;28228:58;28320:10;28315:2;28307:6;28303:15;28296:35;28217:121;:::o;28344:230::-;28484:34;28480:1;28472:6;28468:14;28461:58;28553:13;28548:2;28540:6;28536:15;28529:38;28450:124;:::o;28580:228::-;28720:34;28716:1;28708:6;28704:14;28697:58;28789:11;28784:2;28776:6;28772:15;28765:36;28686:122;:::o;28814:224::-;28954:34;28950:1;28942:6;28938:14;28931:58;29023:7;29018:2;29010:6;29006:15;28999:32;28920:118;:::o;29044:237::-;29184:34;29180:1;29172:6;29168:14;29161:58;29253:20;29248:2;29240:6;29236:15;29229:45;29150:131;:::o;29287:229::-;29427:34;29423:1;29415:6;29411:14;29404:58;29496:12;29491:2;29483:6;29479:15;29472:37;29393:123;:::o;29522:228::-;29662:34;29658:1;29650:6;29646:14;29639:58;29731:11;29726:2;29718:6;29714:15;29707:36;29628:122;:::o;29756:228::-;29896:34;29892:1;29884:6;29880:14;29873:58;29965:11;29960:2;29952:6;29948:15;29941:36;29862:122;:::o;29990:227::-;30130:34;30126:1;30118:6;30114:14;30107:58;30199:10;30194:2;30186:6;30182:15;30175:35;30096:121;:::o;30223:711::-;30262:3;30300:4;30282:16;30279:26;30276:2;;;30308:5;;30276:2;30337:20;;:::i;:::-;30412:1;30394:16;30390:24;30387:1;30381:4;30366:49;30445:4;30439:11;30544:16;30537:4;30529:6;30525:17;30522:39;30489:18;30481:6;30478:30;30462:113;30459:2;;;30590:5;;;;30459:2;30636:6;30630:4;30626:17;30672:3;30666:10;30699:18;30691:6;30688:30;30685:2;;;30721:5;;;;;;30685:2;30769:6;30762:4;30757:3;30753:14;30749:27;30828:1;30810:16;30806:24;30800:4;30796:35;30791:3;30788:44;30785:2;;;30835:5;;;;;;;30785:2;30852:57;30900:6;30894:4;30890:17;30882:6;30878:30;30872:4;30852:57;:::i;:::-;30925:3;30918:10;;30266:668;;;;;;;:::o;30940:122::-;31013:24;31031:5;31013:24;:::i;:::-;31006:5;31003:35;30993:2;;31052:1;31049;31042:12;30993:2;30983:79;:::o;31068:116::-;31138:21;31153:5;31138:21;:::i;:::-;31131:5;31128:32;31118:2;;31174:1;31171;31164:12;31118:2;31108:76;:::o;31190:120::-;31262:23;31279:5;31262:23;:::i;:::-;31255:5;31252:34;31242:2;;31300:1;31297;31290:12;31242:2;31232:78;:::o;31316:122::-;31389:24;31407:5;31389:24;:::i;:::-;31382:5;31379:35;31369:2;;31428:1;31425;31418:12;31369:2;31359:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1971600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "796",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "21",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1129,
									"end": 1142,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1137,
									"end": 1141,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1129,
									"end": 1142,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1129,
									"end": 1142,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1129,
									"end": 1142,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1129,
									"end": 1142,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1129,
									"end": 1142,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1086,
									"end": 1150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8366,
									"end": 8454,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 8366,
									"end": 8454,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8440,
									"end": 8446,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 8437,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8433,
									"end": 8446,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8366,
									"end": 8454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8366,
									"end": 8454,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 361,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 7,
									"end": 361,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 262,
									"end": 264,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 262,
									"end": 264,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 262,
									"end": 264,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 303,
									"end": 304,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 301,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 293,
									"end": 305,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 262,
									"end": 264,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 262,
									"end": 264,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 316,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 348,
									"end": 354,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 343,
									"end": 346,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 338,
									"end": 341,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 316,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 316,
									"end": 355,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 316,
									"end": 355,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 316,
									"end": 355,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 102,
									"end": 361,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 102,
									"end": 361,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 102,
									"end": 361,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 381,
									"end": 669,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 381,
									"end": 669,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 448,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 490,
									"end": 494,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 482,
									"end": 488,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 478,
									"end": 495,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 474,
									"end": 501,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 464,
									"end": 466,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 464,
									"end": 466,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 515,
									"end": 516,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 513,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 505,
									"end": 517,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 464,
									"end": 466,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 464,
									"end": 466,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 548,
									"end": 554,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 542,
									"end": 555,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 573,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 659,
									"end": 662,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 651,
									"end": 657,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 644,
									"end": 648,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 636,
									"end": 642,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 632,
									"end": 649,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 573,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 573,
									"end": 663,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 573,
									"end": 663,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 573,
									"end": 663,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 564,
									"end": 663,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 564,
									"end": 663,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 454,
									"end": 669,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 454,
									"end": 669,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 454,
									"end": 669,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 454,
									"end": 669,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 454,
									"end": 669,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 454,
									"end": 669,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 675,
									"end": 1065,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 675,
									"end": 1065,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 755,
									"end": 761,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 804,
									"end": 806,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 792,
									"end": 801,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 783,
									"end": 790,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 779,
									"end": 802,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 775,
									"end": 807,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 772,
									"end": 774,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 772,
									"end": 774,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 772,
									"end": 774,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 820,
									"end": 821,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 818,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 810,
									"end": 822,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 772,
									"end": 774,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 772,
									"end": 774,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 884,
									"end": 885,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 873,
									"end": 882,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 869,
									"end": 886,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 863,
									"end": 887,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 914,
									"end": 932,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 906,
									"end": 912,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 903,
									"end": 933,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 900,
									"end": 902,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 900,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 900,
									"end": 902,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 946,
									"end": 947,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 943,
									"end": 944,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 936,
									"end": 948,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 900,
									"end": 902,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 900,
									"end": 902,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 974,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1040,
									"end": 1047,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1031,
									"end": 1037,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1020,
									"end": 1029,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1016,
									"end": 1038,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 974,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 974,
									"end": 1048,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 974,
									"end": 1048,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 974,
									"end": 1048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1048,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 964,
									"end": 1048,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 834,
									"end": 1058,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 762,
									"end": 1065,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 762,
									"end": 1065,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 762,
									"end": 1065,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 762,
									"end": 1065,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 762,
									"end": 1065,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1071,
									"end": 1200,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1071,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1105,
									"end": 1111,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1132,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1132,
									"end": 1152,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1132,
									"end": 1152,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1132,
									"end": 1152,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1152,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1152,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1194,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1189,
									"end": 1193,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1181,
									"end": 1187,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1194,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1161,
									"end": 1194,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1161,
									"end": 1194,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1161,
									"end": 1194,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1112,
									"end": 1200,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1112,
									"end": 1200,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1112,
									"end": 1200,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1112,
									"end": 1200,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1206,
									"end": 1281,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1206,
									"end": 1281,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1239,
									"end": 1245,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1272,
									"end": 1274,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1266,
									"end": 1275,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1256,
									"end": 1275,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1256,
									"end": 1275,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 1281,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1246,
									"end": 1281,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1287,
									"end": 1595,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1287,
									"end": 1595,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1349,
									"end": 1353,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1439,
									"end": 1457,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1431,
									"end": 1437,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1428,
									"end": 1458,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1425,
									"end": 1427,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1425,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1425,
									"end": 1427,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1461,
									"end": 1479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1461,
									"end": 1479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1461,
									"end": 1479,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1461,
									"end": 1479,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1461,
									"end": 1479,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1425,
									"end": 1427,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1425,
									"end": 1427,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1499,
									"end": 1528,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1521,
									"end": 1527,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1499,
									"end": 1528,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1499,
									"end": 1528,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1499,
									"end": 1528,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1499,
									"end": 1528,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1491,
									"end": 1528,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1491,
									"end": 1528,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1583,
									"end": 1587,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1577,
									"end": 1581,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1573,
									"end": 1588,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1565,
									"end": 1588,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1565,
									"end": 1588,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1595,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1595,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1595,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1595,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1601,
									"end": 1908,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1601,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1669,
									"end": 1670,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1693,
									"end": 1699,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1690,
									"end": 1691,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1687,
									"end": 1700,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1778,
									"end": 1779,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1773,
									"end": 1776,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1769,
									"end": 1780,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1763,
									"end": 1781,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1759,
									"end": 1760,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1754,
									"end": 1757,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1750,
									"end": 1761,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1743,
									"end": 1782,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1717,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1708,
									"end": 1718,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1703,
									"end": 1718,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1703,
									"end": 1718,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1679,
									"end": 1792,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1810,
									"end": 1816,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1804,
									"end": 1817,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1801,
									"end": 1803,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1801,
									"end": 1803,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1801,
									"end": 1803,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1881,
									"end": 1887,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1876,
									"end": 1879,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1872,
									"end": 1888,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1865,
									"end": 1892,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1801,
									"end": 1803,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1801,
									"end": 1803,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1650,
									"end": 1908,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1650,
									"end": 1908,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1650,
									"end": 1908,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1650,
									"end": 1908,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1650,
									"end": 1908,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1914,
									"end": 2234,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1914,
									"end": 2234,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1995,
									"end": 1996,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1989,
									"end": 1993,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1985,
									"end": 1997,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1975,
									"end": 1997,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1975,
									"end": 1997,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2042,
									"end": 2043,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2036,
									"end": 2040,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2032,
									"end": 2044,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2081,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2053,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2053,
									"end": 2055,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2119,
									"end": 2123,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2111,
									"end": 2117,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2107,
									"end": 2124,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2097,
									"end": 2124,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2097,
									"end": 2124,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2053,
									"end": 2055,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2053,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2181,
									"end": 2183,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2173,
									"end": 2179,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2170,
									"end": 2184,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2150,
									"end": 2168,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2147,
									"end": 2185,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2144,
									"end": 2146,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2144,
									"end": 2146,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2144,
									"end": 2146,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2200,
									"end": 2218,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2200,
									"end": 2218,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2200,
									"end": 2218,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2200,
									"end": 2218,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2200,
									"end": 2218,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2144,
									"end": 2146,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 2144,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 2234,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 2234,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 2234,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 2234,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1965,
									"end": 2234,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2240,
									"end": 2521,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 2240,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2323,
									"end": 2350,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2345,
									"end": 2349,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2323,
									"end": 2350,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 2323,
									"end": 2350,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2323,
									"end": 2350,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2323,
									"end": 2350,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2315,
									"end": 2321,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2311,
									"end": 2351,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2453,
									"end": 2459,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2441,
									"end": 2451,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2438,
									"end": 2460,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2417,
									"end": 2435,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2405,
									"end": 2415,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2402,
									"end": 2436,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2399,
									"end": 2461,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2396,
									"end": 2398,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2396,
									"end": 2398,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2396,
									"end": 2398,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2464,
									"end": 2482,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2396,
									"end": 2398,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2396,
									"end": 2398,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2504,
									"end": 2514,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2500,
									"end": 2502,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2493,
									"end": 2515,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2283,
									"end": 2521,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2283,
									"end": 2521,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2283,
									"end": 2521,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2283,
									"end": 2521,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2527,
									"end": 2707,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2527,
									"end": 2707,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2575,
									"end": 2652,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2572,
									"end": 2573,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2565,
									"end": 2653,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2672,
									"end": 2676,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2669,
									"end": 2670,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2662,
									"end": 2677,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2693,
									"end": 2694,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2686,
									"end": 2701,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2713,
									"end": 2893,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 2713,
									"end": 2893,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2761,
									"end": 2838,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2758,
									"end": 2759,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2751,
									"end": 2839,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2858,
									"end": 2862,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 2855,
									"end": 2856,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2848,
									"end": 2863,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2882,
									"end": 2886,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2879,
									"end": 2880,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2872,
									"end": 2887,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2899,
									"end": 3001,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 2899,
									"end": 3001,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2940,
									"end": 2946,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2991,
									"end": 2993,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2987,
									"end": 2994,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 2984,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2975,
									"end": 2980,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2971,
									"end": 2985,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2967,
									"end": 2995,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2957,
									"end": 2995,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2957,
									"end": 2995,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2947,
									"end": 3001,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2947,
									"end": 3001,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2947,
									"end": 3001,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2947,
									"end": 3001,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 534,
									"end": 17575,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d3544c500c954d2c9148dc7934c73975c33e1c63e3c6799c9c13f50110dd6d4364736f6c63430008040033",
									".code": [
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "F242432A"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "FDD58E"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "2EB2C2D6"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 534,
											"end": 17575,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2334,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2313,
											"end": 2334,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2320,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2334,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2313,
											"end": 2334,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2334,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2313,
											"end": 2334,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2305,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2413,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2400,
											"end": 2413,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2413,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2413,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2400,
											"end": 2413,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2413,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2422,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2430,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1402,
											"name": "PUSH",
											"source": 2,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1361,
											"end": 1402,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1361,
											"end": 1402,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1402,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1402,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1361,
											"end": 1402,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1402,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1402,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1361,
											"end": 1471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1471,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1419,
											"end": 1471,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1419,
											"end": 1471,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1471,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1430,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1471,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1419,
											"end": 1471,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1471,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1471,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1471,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1361,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1361,
											"end": 1524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1523,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1524,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1361,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1222,
											"end": 1532,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2016,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2036,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 2048,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4379,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4379,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4379,
											"end": 4391,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4379,
											"end": 4391,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4379,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4371,
											"end": 4391,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4371,
											"end": 4391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4371,
											"end": 4375,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4371,
											"end": 4391,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4371,
											"end": 4391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4371,
											"end": 4391,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4371,
											"end": 4431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4371,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4371,
											"end": 4431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4371,
											"end": 4431,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4395,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4412,
											"end": 4416,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4418,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4395,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4395,
											"end": 4431,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4395,
											"end": 4431,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4395,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4371,
											"end": 4431,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4371,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4349,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4520,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4543,
											"end": 4547,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4553,
											"end": 4556,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4558,
											"end": 4565,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4567,
											"end": 4571,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4520,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4520,
											"end": 4572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4520,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4520,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4138,
											"end": 4580,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2752,
											"end": 2768,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2813,
											"end": 2816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2823,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2786,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 2944,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 2945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2958,
											"end": 3080,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2958,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 2997,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3080,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2958,
											"end": 3080,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3038,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3048,
											"end": 3056,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3057,
											"end": 3058,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3064,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3038,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3038,
											"end": 3068,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3038,
											"end": 3068,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3038,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3035,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3068,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2958,
											"end": 3080,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3080,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2958,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3080,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3112,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3092,
											"end": 3112,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3092,
											"end": 3112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3092,
											"end": 3112,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 3120,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3288,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3307,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3307,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3307,
											"end": 3319,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3307,
											"end": 3319,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3307,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3321,
											"end": 3329,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3331,
											"end": 3339,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3288,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3288,
											"end": 3340,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3288,
											"end": 3340,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3288,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3348,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3523,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3561,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3569,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3570,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3579,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3543,
											"end": 3580,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3588,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3876,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3876,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3876,
											"end": 3888,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3876,
											"end": 3888,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3876,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3872,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3888,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3868,
											"end": 3928,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3892,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3915,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3915,
											"end": 3927,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3915,
											"end": 3927,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3915,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3892,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3892,
											"end": 3928,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3892,
											"end": 3928,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3892,
											"end": 3928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3868,
											"end": 3928,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3868,
											"end": 3928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3846,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4026,
											"end": 4030,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4034,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4036,
											"end": 4038,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4040,
											"end": 4046,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4052,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4008,
											"end": 4053,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4008,
											"end": 4053,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4008,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3660,
											"end": 4061,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 939,
											"end": 943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1003,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 963,
											"end": 974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 729,
											"end": 746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 729,
											"end": 746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6376,
											"end": 7522,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 6376,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6617,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6592,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6599,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6581,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6681,
											"end": 6697,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6681,
											"end": 6697,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6681,
											"end": 6683,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6681,
											"end": 6697,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6681,
											"end": 6697,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6681,
											"end": 6697,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6681,
											"end": 6697,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6673,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6752,
											"end": 6768,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6771,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6771,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 6771,
											"end": 6783,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6771,
											"end": 6783,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6771,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6752,
											"end": 6783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6752,
											"end": 6783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6817,
											"end": 6825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6827,
											"end": 6831,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6835,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6837,
											"end": 6840,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6796,
											"end": 6856,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6796,
											"end": 6856,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6796,
											"end": 6856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6874,
											"end": 6883,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6869,
											"end": 7290,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6869,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6893,
											"end": 6896,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6893,
											"end": 6903,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6889,
											"end": 6890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6889,
											"end": 6903,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6869,
											"end": 7290,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6869,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6869,
											"end": 7290,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6941,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6943,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 6973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 6983,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6984,
											"end": 6985,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 6986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6959,
											"end": 6986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7022,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7035,
											"end": 7037,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7043,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7044,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7067,
											"end": 7078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7067,
											"end": 7088,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7067,
											"end": 7088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7059,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7215,
											"end": 7221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 7212,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7201,
											"end": 7221,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7179,
											"end": 7192,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7191,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7192,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7192,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7192,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7179,
											"end": 7192,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7192,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7192,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7192,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7192,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7179,
											"end": 7192,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7179,
											"end": 7192,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7197,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7179,
											"end": 7198,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7221,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7221,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7221,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7251,
											"end": 7264,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7264,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7251,
											"end": 7264,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7264,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7264,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7251,
											"end": 7264,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7251,
											"end": 7264,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7267,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7251,
											"end": 7278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6869,
											"end": 7290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6869,
											"end": 7290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6869,
											"end": 7290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6905,
											"end": 6908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6905,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6905,
											"end": 6908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6905,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6905,
											"end": 6908,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6905,
											"end": 6908,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6905,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6905,
											"end": 6908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6905,
											"end": 6908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6869,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6869,
											"end": 7290,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6869,
											"end": 7290,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6869,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6869,
											"end": 7290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7337,
											"end": 7339,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7331,
											"end": 7335,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7321,
											"end": 7329,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7341,
											"end": 7344,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7353,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 7387,
											"end": 7395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7397,
											"end": 7401,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7403,
											"end": 7405,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7407,
											"end": 7410,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7412,
											"end": 7419,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7425,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7367,
											"end": 7426,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7367,
											"end": 7426,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 7367,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 7489,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7491,
											"end": 7493,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7495,
											"end": 7498,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7500,
											"end": 7507,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7439,
											"end": 7514,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7439,
											"end": 7514,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 7439,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 7522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 7522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 7522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 7522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 7522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 7522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 7522,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13110,
											"end": 13441,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 13110,
											"end": 13441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13265,
											"end": 13273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13256,
											"end": 13273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13256,
											"end": 13273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13256,
											"end": 13261,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13256,
											"end": 13273,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13256,
											"end": 13273,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13256,
											"end": 13273,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13256,
											"end": 13273,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 13248,
											"end": 13319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13368,
											"end": 13376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13348,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13349,
											"end": 13354,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13330,
											"end": 13355,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13356,
											"end": 13364,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13330,
											"end": 13376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13414,
											"end": 13422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13407,
											"end": 13412,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13424,
											"end": 13432,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13392,
											"end": 13433,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13110,
											"end": 13441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13110,
											"end": 13441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13110,
											"end": 13441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13110,
											"end": 13441,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5044,
											"end": 6018,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5044,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5246,
											"end": 5247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5248,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5232,
											"end": 5248,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5232,
											"end": 5234,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5232,
											"end": 5248,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5232,
											"end": 5248,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5232,
											"end": 5248,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5232,
											"end": 5248,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5224,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5322,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5322,
											"end": 5334,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5322,
											"end": 5334,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5322,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5345,
											"end": 5365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5386,
											"end": 5388,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5368,
											"end": 5389,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5389,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5368,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5345,
											"end": 5389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5345,
											"end": 5389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5400,
											"end": 5424,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5427,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5445,
											"end": 5451,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5427,
											"end": 5452,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5427,
											"end": 5452,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5427,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5400,
											"end": 5452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5400,
											"end": 5452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5486,
											"end": 5494,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5496,
											"end": 5500,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5502,
											"end": 5504,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5506,
											"end": 5509,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5511,
											"end": 5518,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5520,
											"end": 5524,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5465,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5465,
											"end": 5525,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5465,
											"end": 5525,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5465,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5538,
											"end": 5557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5572,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5573,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5573,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5560,
											"end": 5579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5538,
											"end": 5579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5538,
											"end": 5579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5613,
											"end": 5619,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5598,
											"end": 5609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5598,
											"end": 5619,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5598,
											"end": 5619,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5590,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5738,
											"end": 5744,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5724,
											"end": 5744,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5711,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5712,
											"end": 5714,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5715,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5715,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5715,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5702,
											"end": 5715,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5715,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5715,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5715,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5702,
											"end": 5715,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5715,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5715,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5716,
											"end": 5720,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5721,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5744,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5793,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5775,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5778,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5782,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5844,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5836,
											"end": 5840,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5826,
											"end": 5834,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5846,
											"end": 5848,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5850,
											"end": 5856,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5857,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5890,
											"end": 5898,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5900,
											"end": 5904,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5906,
											"end": 5908,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5910,
											"end": 5913,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5922,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5924,
											"end": 5928,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5870,
											"end": 5929,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5870,
											"end": 5929,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5870,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5973,
											"end": 5981,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5983,
											"end": 5987,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 5991,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5993,
											"end": 5995,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6003,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6005,
											"end": 6009,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5942,
											"end": 6010,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5942,
											"end": 6010,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5942,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5044,
											"end": 6018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5044,
											"end": 6018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5044,
											"end": 6018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5044,
											"end": 6018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5044,
											"end": 6018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5044,
											"end": 6018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5044,
											"end": 6018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5044,
											"end": 6018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5044,
											"end": 6018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5044,
											"end": 6018,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14397,
											"end": 14618,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 14397,
											"end": 14618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14397,
											"end": 14618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14397,
											"end": 14618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14397,
											"end": 14618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14397,
											"end": 14618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14397,
											"end": 14618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14397,
											"end": 14618,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14397,
											"end": 14618,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15573,
											"end": 15793,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 15573,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15573,
											"end": 15793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15573,
											"end": 15793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15573,
											"end": 15793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15573,
											"end": 15793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15573,
											"end": 15793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15573,
											"end": 15793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15573,
											"end": 15793,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16553,
											"end": 17366,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 16553,
											"end": 17366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16793,
											"end": 16808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 16793,
											"end": 16795,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16793,
											"end": 16806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16793,
											"end": 16806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16793,
											"end": 16806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 16793,
											"end": 16808,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16793,
											"end": 16808,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 16793,
											"end": 16808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16789,
											"end": 17359,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16789,
											"end": 17359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 16789,
											"end": 17359,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16846,
											"end": 16848,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16872,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16829,
											"end": 16872,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16872,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 16873,
											"end": 16881,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16883,
											"end": 16887,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16889,
											"end": 16892,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16894,
											"end": 16901,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16903,
											"end": 16907,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 16829,
											"end": 16908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17221,
											"end": 17227,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17214,
											"end": 17228,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17270,
											"end": 17332,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 16825,
											"end": 17348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17002,
											"end": 17050,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 17002,
											"end": 17050,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17002,
											"end": 17050,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 16990,
											"end": 17050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16990,
											"end": 17050,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16990,
											"end": 17050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16990,
											"end": 16998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16990,
											"end": 17050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16990,
											"end": 17050,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16990,
											"end": 17050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16990,
											"end": 17050,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16986,
											"end": 17145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 16986,
											"end": 17145,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17075,
											"end": 17125,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16986,
											"end": 17145,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 16986,
											"end": 17145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16909,
											"end": 17160,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16789,
											"end": 17359,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 16789,
											"end": 17359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16553,
											"end": 17366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16553,
											"end": 17366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16553,
											"end": 17366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16553,
											"end": 17366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16553,
											"end": 17366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16553,
											"end": 17366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16553,
											"end": 17366,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 17374,
											"end": 17572,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 17374,
											"end": 17572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17440,
											"end": 17456,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17469,
											"end": 17491,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17508,
											"end": 17509,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17494,
											"end": 17510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17469,
											"end": 17510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17469,
											"end": 17510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17532,
											"end": 17539,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17527,
											"end": 17528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17539,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17539,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17539,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17521,
											"end": 17539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17559,
											"end": 17564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17552,
											"end": 17564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17552,
											"end": 17564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17552,
											"end": 17564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17374,
											"end": 17572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17374,
											"end": 17572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17374,
											"end": 17572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17374,
											"end": 17572,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15801,
											"end": 16545,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 15801,
											"end": 16545,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 16016,
											"end": 16018,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16029,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16016,
											"end": 16029,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16016,
											"end": 16029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 16016,
											"end": 16031,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16016,
											"end": 16031,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 16016,
											"end": 16031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16012,
											"end": 16538,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16012,
											"end": 16538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 16012,
											"end": 16538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16069,
											"end": 16071,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16090,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16052,
											"end": 16090,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16090,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 16091,
											"end": 16099,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16101,
											"end": 16105,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16107,
											"end": 16109,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16111,
											"end": 16117,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16119,
											"end": 16123,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 16052,
											"end": 16124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16400,
											"end": 16406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16449,
											"end": 16511,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 16048,
											"end": 16527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16186,
											"end": 16229,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 16186,
											"end": 16229,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 16186,
											"end": 16229,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 16174,
											"end": 16229,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16174,
											"end": 16229,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16174,
											"end": 16229,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16174,
											"end": 16182,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16174,
											"end": 16229,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16174,
											"end": 16229,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 16174,
											"end": 16229,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16174,
											"end": 16229,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16170,
											"end": 16324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 16170,
											"end": 16324,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16254,
											"end": 16304,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16170,
											"end": 16324,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 16170,
											"end": 16324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16125,
											"end": 16339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16012,
											"end": 16538,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 16012,
											"end": 16538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15801,
											"end": 16545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15801,
											"end": 16545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15801,
											"end": 16545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15801,
											"end": 16545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15801,
											"end": 16545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15801,
											"end": 16545,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15801,
											"end": 16545,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1270,
											"end": 1274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 679,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 24,
											"end": 679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 350,
											"end": 352,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 350,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 404,
											"end": 416,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 350,
											"end": 352,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 450,
											"end": 451,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 673,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 435,
											"end": 673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 460,
											"end": 466,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 457,
											"end": 458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 454,
											"end": 467,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 435,
											"end": 673,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 435,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 435,
											"end": 673,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 528,
											"end": 531,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 557,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 590,
											"end": 593,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 578,
											"end": 588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 557,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 557,
											"end": 594,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 594,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 557,
											"end": 594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 552,
											"end": 555,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 545,
											"end": 595,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 624,
											"end": 628,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 615,
											"end": 629,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 608,
											"end": 629,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 608,
											"end": 629,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 658,
											"end": 662,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 656,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 649,
											"end": 663,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 642,
											"end": 663,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 642,
											"end": 663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 495,
											"end": 673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 482,
											"end": 483,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 479,
											"end": 480,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 475,
											"end": 484,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 470,
											"end": 484,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 435,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 435,
											"end": 673,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 435,
											"end": 673,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 435,
											"end": 673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 439,
											"end": 453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 126,
											"end": 679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 126,
											"end": 679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 126,
											"end": 679,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 126,
											"end": 679,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 126,
											"end": 679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 126,
											"end": 679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 126,
											"end": 679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 126,
											"end": 679,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 702,
											"end": 1357,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 702,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 798,
											"end": 803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 839,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 839,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 839,
											"end": 903,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 839,
											"end": 903,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 839,
											"end": 903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 823,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 823,
											"end": 904,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 823,
											"end": 904,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 823,
											"end": 904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 814,
											"end": 904,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 814,
											"end": 904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 953,
											"end": 959,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 946,
											"end": 951,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 939,
											"end": 960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 987,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 980,
											"end": 985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 976,
											"end": 992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 969,
											"end": 992,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 969,
											"end": 992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1013,
											"end": 1019,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1055,
											"end": 1059,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1053,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1043,
											"end": 1060,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1038,
											"end": 1041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1034,
											"end": 1061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1031,
											"end": 1067,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1028,
											"end": 1030,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1028,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1028,
											"end": 1030,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1092,
											"end": 1093,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1094,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1028,
											"end": 1030,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1028,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1128,
											"end": 1129,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1351,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1113,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1138,
											"end": 1144,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1136,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1351,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 1113,
											"end": 1351,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1268,
											"end": 1271,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1235,
											"end": 1272,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1235,
											"end": 1272,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1235,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1230,
											"end": 1233,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1273,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1300,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1307,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1307,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1340,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1334,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1327,
											"end": 1341,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1341,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1320,
											"end": 1341,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1351,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1160,
											"end": 1161,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1157,
											"end": 1158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1153,
											"end": 1162,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1113,
											"end": 1351,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1351,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 1113,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 804,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 804,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 804,
											"end": 1357,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 804,
											"end": 1357,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 804,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 804,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 804,
											"end": 1357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 804,
											"end": 1357,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1363,
											"end": 1706,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1363,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1440,
											"end": 1445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1522,
											"end": 1528,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1465,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1465,
											"end": 1530,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1465,
											"end": 1530,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1465,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1560,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1591,
											"end": 1595,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1580,
											"end": 1596,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1629,
											"end": 1632,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1626,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1618,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1627,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1608,
											"end": 1633,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1607,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 1605,
											"end": 1607,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1644,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1636,
											"end": 1648,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1607,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 1605,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 1693,
											"end": 1699,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1691,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1659,
											"end": 1700,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1659,
											"end": 1700,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 1659,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1706,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1706,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1706,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1712,
											"end": 1851,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1712,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1758,
											"end": 1763,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 1839,
											"end": 1844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 1812,
											"end": 1845,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1812,
											"end": 1845,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 1812,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1764,
											"end": 1851,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1764,
											"end": 1851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1764,
											"end": 1851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1764,
											"end": 1851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1764,
											"end": 1851,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1874,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1874,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1945,
											"end": 1950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 1997,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1987,
											"end": 1991,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 1998,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1961,
											"end": 1963,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2012,
											"end": 2013,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2010,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2014,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 1963,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 1961,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2058,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2039,
											"end": 2059,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2167,
											"end": 2170,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 2077,
											"end": 2171,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2171,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2077,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2068,
											"end": 2171,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2068,
											"end": 2171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 2177,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 2177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 2177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 2177,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2200,
											"end": 2503,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 2200,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2313,
											"end": 2317,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2305,
											"end": 2311,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2318,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2324,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2340,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 2287,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2385,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2493,
											"end": 2496,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2482,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2470,
											"end": 2476,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2466,
											"end": 2483,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2403,
											"end": 2497,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2403,
											"end": 2497,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2403,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2497,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2277,
											"end": 2503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2277,
											"end": 2503,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2277,
											"end": 2503,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2277,
											"end": 2503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2277,
											"end": 2503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2277,
											"end": 2503,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2509,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2509,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2596,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2597,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2568,
											"end": 2597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2568,
											"end": 2597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2630,
											"end": 2635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2606,
											"end": 2636,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2606,
											"end": 2636,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2606,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2642,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2642,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2642,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2642,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2642,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2648,
											"end": 2785,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2648,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2737,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2718,
											"end": 2738,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2709,
											"end": 2738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2747,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2773,
											"end": 2778,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2747,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 2747,
											"end": 2779,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2747,
											"end": 2779,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2747,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2785,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2785,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2785,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2785,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2785,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2791,
											"end": 2932,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 2791,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2847,
											"end": 2852,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2884,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2863,
											"end": 2885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2863,
											"end": 2885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 2920,
											"end": 2925,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 2894,
											"end": 2926,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2894,
											"end": 2926,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 2894,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2932,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2932,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2932,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2951,
											"end": 3222,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 2951,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3052,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3040,
											"end": 3046,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3036,
											"end": 3053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3032,
											"end": 3059,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 3022,
											"end": 3024,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3073,
											"end": 3074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3071,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3063,
											"end": 3075,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3022,
											"end": 3024,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 3022,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3100,
											"end": 3120,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 3212,
											"end": 3215,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3197,
											"end": 3201,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3189,
											"end": 3195,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3185,
											"end": 3202,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3138,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3138,
											"end": 3216,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3138,
											"end": 3216,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 3138,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3129,
											"end": 3216,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3129,
											"end": 3216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3222,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3222,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3012,
											"end": 3222,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3228,
											"end": 3367,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3228,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3274,
											"end": 3279,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3318,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3319,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3290,
											"end": 3319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3290,
											"end": 3319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3328,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 3355,
											"end": 3360,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3328,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 3328,
											"end": 3361,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3328,
											"end": 3361,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 3328,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3367,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3367,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3367,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3373,
											"end": 3780,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3373,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3441,
											"end": 3447,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3455,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3498,
											"end": 3500,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3495,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3501,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3468,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 3466,
											"end": 3468,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3468,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 3466,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3624,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3616,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 3582,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3572,
											"end": 3635,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3572,
											"end": 3635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3528,
											"end": 3645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3686,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3710,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 3755,
											"end": 3762,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3735,
											"end": 3744,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3731,
											"end": 3753,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3710,
											"end": 3763,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3710,
											"end": 3763,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 3710,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3700,
											"end": 3763,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3700,
											"end": 3763,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3655,
											"end": 3773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3780,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3780,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3780,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3780,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3786,
											"end": 5027,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3786,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3954,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3956,
											"end": 3962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 3978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4021,
											"end": 4024,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4000,
											"end": 4007,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 4019,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3992,
											"end": 4025,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4038,
											"end": 4039,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4028,
											"end": 4040,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4081,
											"end": 4082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 4151,
											"end": 4158,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4149,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4106,
											"end": 4159,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4106,
											"end": 4159,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 4106,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4159,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4052,
											"end": 4169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4208,
											"end": 4210,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 4279,
											"end": 4286,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4276,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4259,
											"end": 4268,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4277,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4234,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 4234,
											"end": 4287,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4234,
											"end": 4287,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 4234,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4224,
											"end": 4287,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4224,
											"end": 4287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4364,
											"end": 4366,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4353,
											"end": 4362,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4336,
											"end": 4368,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4387,
											"end": 4393,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4384,
											"end": 4414,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4381,
											"end": 4383,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4381,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 4381,
											"end": 4383,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4425,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4417,
											"end": 4429,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4381,
											"end": 4383,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 4381,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4455,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 4525,
											"end": 4532,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4522,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4505,
											"end": 4514,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4501,
											"end": 4523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4455,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 4455,
											"end": 4533,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4455,
											"end": 4533,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 4455,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4445,
											"end": 4533,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4445,
											"end": 4533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4307,
											"end": 4543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4612,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4599,
											"end": 4608,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4582,
											"end": 4614,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4641,
											"end": 4659,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4633,
											"end": 4639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4660,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4627,
											"end": 4629,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4627,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 4627,
											"end": 4629,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4673,
											"end": 4674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4671,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4675,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4627,
											"end": 4629,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 4627,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4701,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 4771,
											"end": 4778,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4762,
											"end": 4768,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4747,
											"end": 4769,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4701,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 4701,
											"end": 4779,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4701,
											"end": 4779,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 4701,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4691,
											"end": 4779,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4691,
											"end": 4779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4553,
											"end": 4789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4859,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4845,
											"end": 4854,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4841,
											"end": 4860,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4828,
											"end": 4861,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4888,
											"end": 4906,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4880,
											"end": 4886,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4877,
											"end": 4907,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4920,
											"end": 4921,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4918,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4922,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4948,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 5002,
											"end": 5009,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 4999,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4982,
											"end": 4991,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4948,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 4948,
											"end": 5010,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4948,
											"end": 5010,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 4948,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4938,
											"end": 5010,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4938,
											"end": 5010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4799,
											"end": 5020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 5027,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 5027,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 5027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 5027,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 5027,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 5027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 5027,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 5027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 5027,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5033,
											"end": 5988,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 5033,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5137,
											"end": 5143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5151,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5159,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5169,
											"end": 5175,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5221,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5197,
											"end": 5204,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5193,
											"end": 5216,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5189,
											"end": 5222,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5235,
											"end": 5236,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5225,
											"end": 5237,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 5186,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 5348,
											"end": 5355,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5339,
											"end": 5345,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 5337,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5324,
											"end": 5346,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 5303,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5356,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5293,
											"end": 5356,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5249,
											"end": 5366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5431,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 5476,
											"end": 5483,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5467,
											"end": 5473,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5452,
											"end": 5474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5431,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 5431,
											"end": 5484,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5431,
											"end": 5484,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 5431,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5484,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5421,
											"end": 5484,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5533,
											"end": 5535,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5593,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5580,
											"end": 5602,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5549,
											"end": 5612,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5549,
											"end": 5612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5622,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5661,
											"end": 5663,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5687,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 5732,
											"end": 5739,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5723,
											"end": 5729,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5712,
											"end": 5721,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5687,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 5687,
											"end": 5740,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5687,
											"end": 5740,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 5687,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5677,
											"end": 5740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5677,
											"end": 5740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5817,
											"end": 5820,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5806,
											"end": 5815,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5802,
											"end": 5821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5789,
											"end": 5822,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5849,
											"end": 5867,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5841,
											"end": 5847,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5838,
											"end": 5868,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5835,
											"end": 5837,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5835,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 5835,
											"end": 5837,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5878,
											"end": 5879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5871,
											"end": 5883,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5835,
											"end": 5837,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 5835,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5909,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 5963,
											"end": 5970,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5954,
											"end": 5960,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5939,
											"end": 5961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5909,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 5909,
											"end": 5971,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5909,
											"end": 5971,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 5909,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5971,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5760,
											"end": 5981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5176,
											"end": 5988,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5176,
											"end": 5988,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5176,
											"end": 5988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5176,
											"end": 5988,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5176,
											"end": 5988,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5176,
											"end": 5988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5176,
											"end": 5988,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5176,
											"end": 5988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5176,
											"end": 5988,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5994,
											"end": 6395,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 5994,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6059,
											"end": 6065,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6073,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6116,
											"end": 6118,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6104,
											"end": 6113,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6095,
											"end": 6102,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6091,
											"end": 6114,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6087,
											"end": 6119,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6132,
											"end": 6133,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6129,
											"end": 6130,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6200,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 6245,
											"end": 6252,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6236,
											"end": 6242,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6234,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6243,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 6200,
											"end": 6253,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6200,
											"end": 6253,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 6200,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6190,
											"end": 6253,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6190,
											"end": 6253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6263,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6302,
											"end": 6304,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6328,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 6370,
											"end": 6377,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6350,
											"end": 6359,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6346,
											"end": 6368,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 6328,
											"end": 6378,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6328,
											"end": 6378,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 6328,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6318,
											"end": 6378,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6318,
											"end": 6378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6273,
											"end": 6388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6395,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6395,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6395,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6395,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6401,
											"end": 6808,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 6401,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6475,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6483,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6526,
											"end": 6528,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6514,
											"end": 6523,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6505,
											"end": 6512,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6501,
											"end": 6524,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6497,
											"end": 6529,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6543,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6540,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6532,
											"end": 6544,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6585,
											"end": 6586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 6655,
											"end": 6662,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6646,
											"end": 6652,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6635,
											"end": 6644,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6631,
											"end": 6653,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 6610,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6600,
											"end": 6663,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6600,
											"end": 6663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6556,
											"end": 6673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6738,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6772,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6738,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 6738,
											"end": 6791,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6738,
											"end": 6791,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 6738,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6728,
											"end": 6791,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6728,
											"end": 6791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6683,
											"end": 6801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6484,
											"end": 6808,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6484,
											"end": 6808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6484,
											"end": 6808,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6484,
											"end": 6808,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6484,
											"end": 6808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6484,
											"end": 6808,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6814,
											"end": 7507,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 6814,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6932,
											"end": 6938,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6940,
											"end": 6946,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6989,
											"end": 6991,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6977,
											"end": 6986,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6968,
											"end": 6975,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6964,
											"end": 6987,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6960,
											"end": 6992,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6957,
											"end": 6959,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6957,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 6957,
											"end": 6959,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7005,
											"end": 7006,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7003,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6995,
											"end": 7007,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6957,
											"end": 6959,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 6957,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7076,
											"end": 7077,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7061,
											"end": 7078,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7048,
											"end": 7079,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7124,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7098,
											"end": 7104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7095,
											"end": 7125,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7092,
											"end": 7094,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7092,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 7092,
											"end": 7094,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7138,
											"end": 7139,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7136,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7128,
											"end": 7140,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7092,
											"end": 7094,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 7092,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7166,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 7236,
											"end": 7243,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7227,
											"end": 7233,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7166,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 7166,
											"end": 7244,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7166,
											"end": 7244,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 7166,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7156,
											"end": 7244,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7156,
											"end": 7244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7019,
											"end": 7254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7321,
											"end": 7323,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7310,
											"end": 7319,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7306,
											"end": 7324,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7293,
											"end": 7325,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7352,
											"end": 7370,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7344,
											"end": 7350,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7341,
											"end": 7371,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7338,
											"end": 7340,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7338,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 7338,
											"end": 7340,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7384,
											"end": 7385,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7381,
											"end": 7382,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7374,
											"end": 7386,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7338,
											"end": 7340,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 7338,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 7482,
											"end": 7489,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7473,
											"end": 7479,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7471,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7458,
											"end": 7480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 7412,
											"end": 7490,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7412,
											"end": 7490,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 7412,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7402,
											"end": 7490,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7402,
											"end": 7490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7264,
											"end": 7500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7507,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7507,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7507,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 7507,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7513,
											"end": 7773,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7513,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7571,
											"end": 7577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7622,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7608,
											"end": 7617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7599,
											"end": 7606,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7618,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7591,
											"end": 7623,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7588,
											"end": 7590,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7588,
											"end": 7590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 7588,
											"end": 7590,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7636,
											"end": 7637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7633,
											"end": 7634,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7638,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7588,
											"end": 7590,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 7588,
											"end": 7590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7679,
											"end": 7680,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 7748,
											"end": 7755,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7739,
											"end": 7745,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7728,
											"end": 7737,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7724,
											"end": 7746,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7704,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 7704,
											"end": 7756,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7704,
											"end": 7756,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 7704,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7694,
											"end": 7756,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7694,
											"end": 7756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7650,
											"end": 7766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7578,
											"end": 7773,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7578,
											"end": 7773,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7578,
											"end": 7773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7578,
											"end": 7773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7578,
											"end": 7773,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7779,
											"end": 8061,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 7779,
											"end": 8061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7848,
											"end": 7854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7897,
											"end": 7899,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7885,
											"end": 7894,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7876,
											"end": 7883,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7872,
											"end": 7895,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7868,
											"end": 7900,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7865,
											"end": 7867,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7865,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 7865,
											"end": 7867,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7913,
											"end": 7914,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7911,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7903,
											"end": 7915,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7865,
											"end": 7867,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 7865,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7956,
											"end": 7957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7981,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 8036,
											"end": 8043,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8027,
											"end": 8033,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8016,
											"end": 8025,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8012,
											"end": 8034,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7981,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 7981,
											"end": 8044,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7981,
											"end": 8044,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 7981,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7971,
											"end": 8044,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7971,
											"end": 8044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7927,
											"end": 8054,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 8061,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 8061,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 8061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 8061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 8061,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8067,
											"end": 8329,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 8067,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8126,
											"end": 8132,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 8177,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8163,
											"end": 8172,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8154,
											"end": 8161,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8150,
											"end": 8173,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8146,
											"end": 8178,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8143,
											"end": 8145,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8143,
											"end": 8145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 8143,
											"end": 8145,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8191,
											"end": 8192,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8188,
											"end": 8189,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8193,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8143,
											"end": 8145,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 8143,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8234,
											"end": 8235,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8259,
											"end": 8312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 8304,
											"end": 8311,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8295,
											"end": 8301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8284,
											"end": 8293,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8280,
											"end": 8302,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8259,
											"end": 8312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 8259,
											"end": 8312,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8259,
											"end": 8312,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 8259,
											"end": 8312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8249,
											"end": 8312,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8249,
											"end": 8312,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8205,
											"end": 8322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8329,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8329,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8329,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8335,
											"end": 8514,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 8335,
											"end": 8514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8404,
											"end": 8414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8425,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 8467,
											"end": 8470,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8465,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8425,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 8425,
											"end": 8471,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8425,
											"end": 8471,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 8425,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8507,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8498,
											"end": 8501,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8494,
											"end": 8508,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8480,
											"end": 8508,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8480,
											"end": 8508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8415,
											"end": 8514,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8415,
											"end": 8514,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8415,
											"end": 8514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8415,
											"end": 8514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8415,
											"end": 8514,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8520,
											"end": 8638,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 8520,
											"end": 8638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8607,
											"end": 8631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 8625,
											"end": 8630,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8607,
											"end": 8631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 8607,
											"end": 8631,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8607,
											"end": 8631,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 8607,
											"end": 8631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8602,
											"end": 8605,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8595,
											"end": 8632,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8638,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8674,
											"end": 9406,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 8674,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8793,
											"end": 8796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8822,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 8870,
											"end": 8875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8822,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 8822,
											"end": 8876,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8822,
											"end": 8876,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 8822,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8892,
											"end": 8978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8966,
											"end": 8969,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8892,
											"end": 8978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 8892,
											"end": 8978,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8892,
											"end": 8978,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 8892,
											"end": 8978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8885,
											"end": 8978,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8885,
											"end": 8978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9002,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 9052,
											"end": 9057,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9002,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 9002,
											"end": 9058,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9002,
											"end": 9058,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 9002,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9081,
											"end": 9088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9112,
											"end": 9113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9381,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 9097,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9122,
											"end": 9128,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9119,
											"end": 9120,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9116,
											"end": 9129,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9097,
											"end": 9381,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9097,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 9097,
											"end": 9381,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9198,
											"end": 9204,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9192,
											"end": 9205,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9225,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 9284,
											"end": 9287,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9269,
											"end": 9282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9225,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 9225,
											"end": 9288,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9225,
											"end": 9288,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 9225,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9218,
											"end": 9288,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 9218,
											"end": 9288,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9311,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 9364,
											"end": 9370,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9311,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 9311,
											"end": 9371,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9311,
											"end": 9371,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 9311,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9301,
											"end": 9371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9301,
											"end": 9371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9144,
											"end": 9145,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9141,
											"end": 9142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9137,
											"end": 9146,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9132,
											"end": 9146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9132,
											"end": 9146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9097,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 9097,
											"end": 9381,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9097,
											"end": 9381,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 9097,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9101,
											"end": 9115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9397,
											"end": 9400,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9390,
											"end": 9400,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9390,
											"end": 9400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8798,
											"end": 9406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8798,
											"end": 9406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8798,
											"end": 9406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8798,
											"end": 9406,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8798,
											"end": 9406,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8798,
											"end": 9406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8798,
											"end": 9406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8798,
											"end": 9406,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9412,
											"end": 9521,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 9412,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9493,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 9508,
											"end": 9513,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9493,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 9493,
											"end": 9514,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9493,
											"end": 9514,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 9493,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9488,
											"end": 9491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9481,
											"end": 9515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9471,
											"end": 9521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9471,
											"end": 9521,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9471,
											"end": 9521,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9527,
											"end": 9887,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 9527,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9613,
											"end": 9616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9641,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 9673,
											"end": 9678,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9641,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 9641,
											"end": 9679,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9641,
											"end": 9679,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 9641,
											"end": 9679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9695,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 9758,
											"end": 9764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9753,
											"end": 9756,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9695,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 9695,
											"end": 9765,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9695,
											"end": 9765,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 9695,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9688,
											"end": 9765,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9688,
											"end": 9765,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9774,
											"end": 9826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 9819,
											"end": 9825,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9814,
											"end": 9817,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9807,
											"end": 9811,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9800,
											"end": 9805,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 9812,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9774,
											"end": 9826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 9774,
											"end": 9826,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9774,
											"end": 9826,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 9774,
											"end": 9826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9851,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 9873,
											"end": 9879,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9851,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 9851,
											"end": 9880,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9851,
											"end": 9880,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 9851,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9846,
											"end": 9849,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9842,
											"end": 9881,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9881,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9617,
											"end": 9887,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9893,
											"end": 10257,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9893,
											"end": 10257,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9981,
											"end": 9984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10009,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 10042,
											"end": 10047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10009,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 10009,
											"end": 10048,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10009,
											"end": 10048,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 10009,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10064,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 10128,
											"end": 10134,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10123,
											"end": 10126,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10064,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 10064,
											"end": 10135,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10064,
											"end": 10135,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 10064,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10057,
											"end": 10135,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10057,
											"end": 10135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10184,
											"end": 10187,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10177,
											"end": 10181,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10170,
											"end": 10175,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10166,
											"end": 10182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10144,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 10144,
											"end": 10196,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10144,
											"end": 10196,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 10144,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10221,
											"end": 10250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 10243,
											"end": 10249,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10221,
											"end": 10250,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 10221,
											"end": 10250,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10221,
											"end": 10250,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 10221,
											"end": 10250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10216,
											"end": 10219,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10212,
											"end": 10251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10205,
											"end": 10251,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10205,
											"end": 10251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9985,
											"end": 10257,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9985,
											"end": 10257,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9985,
											"end": 10257,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9985,
											"end": 10257,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9985,
											"end": 10257,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9985,
											"end": 10257,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10263,
											"end": 10629,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 10263,
											"end": 10629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10405,
											"end": 10408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10426,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 10490,
											"end": 10492,
											"name": "PUSH",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 10485,
											"end": 10488,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10426,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 10426,
											"end": 10493,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10426,
											"end": 10493,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 10426,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10419,
											"end": 10493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10419,
											"end": 10493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10502,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 10591,
											"end": 10594,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10502,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 10502,
											"end": 10595,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10502,
											"end": 10595,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 10502,
											"end": 10595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10620,
											"end": 10622,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10615,
											"end": 10618,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10611,
											"end": 10623,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10604,
											"end": 10623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10604,
											"end": 10623,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10629,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10629,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10629,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10409,
											"end": 10629,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10635,
											"end": 11001,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 10635,
											"end": 11001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10777,
											"end": 10780,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10798,
											"end": 10865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 10862,
											"end": 10864,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 10857,
											"end": 10860,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10798,
											"end": 10865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 10798,
											"end": 10865,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10798,
											"end": 10865,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 10798,
											"end": 10865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10791,
											"end": 10865,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10791,
											"end": 10865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 10963,
											"end": 10966,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10874,
											"end": 10967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 10874,
											"end": 10967,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10874,
											"end": 10967,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 10874,
											"end": 10967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10992,
											"end": 10994,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10987,
											"end": 10990,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10983,
											"end": 10995,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10976,
											"end": 10995,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10976,
											"end": 10995,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 11001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 11001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 11001,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 11001,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11007,
											"end": 11373,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 11007,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11149,
											"end": 11152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11170,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 11234,
											"end": 11236,
											"name": "PUSH",
											"source": 8,
											"value": "2B"
										},
										{
											"begin": 11229,
											"end": 11232,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11170,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 11170,
											"end": 11237,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11170,
											"end": 11237,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 11170,
											"end": 11237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11163,
											"end": 11237,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11163,
											"end": 11237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11246,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 11335,
											"end": 11338,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11246,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 11246,
											"end": 11339,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11246,
											"end": 11339,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 11246,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11364,
											"end": 11366,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11359,
											"end": 11362,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11355,
											"end": 11367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11348,
											"end": 11367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11348,
											"end": 11367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11153,
											"end": 11373,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11153,
											"end": 11373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11153,
											"end": 11373,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11153,
											"end": 11373,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11379,
											"end": 11745,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 11379,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11521,
											"end": 11524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11542,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 11606,
											"end": 11608,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 11601,
											"end": 11604,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11542,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 11542,
											"end": 11609,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11542,
											"end": 11609,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 11542,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11535,
											"end": 11609,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11535,
											"end": 11609,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11618,
											"end": 11711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 11707,
											"end": 11710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11618,
											"end": 11711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 11618,
											"end": 11711,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11618,
											"end": 11711,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 11618,
											"end": 11711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11731,
											"end": 11734,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11727,
											"end": 11739,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11720,
											"end": 11739,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11720,
											"end": 11739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11525,
											"end": 11745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11525,
											"end": 11745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11525,
											"end": 11745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11525,
											"end": 11745,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11751,
											"end": 12117,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 11751,
											"end": 12117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11893,
											"end": 11896,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11914,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 11978,
											"end": 11980,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 11973,
											"end": 11976,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11914,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 11914,
											"end": 11981,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11914,
											"end": 11981,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 11914,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11907,
											"end": 11981,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11907,
											"end": 11981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11990,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 12079,
											"end": 12082,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11990,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 11990,
											"end": 12083,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11990,
											"end": 12083,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 11990,
											"end": 12083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12108,
											"end": 12110,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12103,
											"end": 12106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12092,
											"end": 12111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12092,
											"end": 12111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11897,
											"end": 12117,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11897,
											"end": 12117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11897,
											"end": 12117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11897,
											"end": 12117,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12123,
											"end": 12489,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 12123,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12265,
											"end": 12268,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 12350,
											"end": 12352,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 12345,
											"end": 12348,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12286,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 12286,
											"end": 12353,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12286,
											"end": 12353,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 12286,
											"end": 12353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12279,
											"end": 12353,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12279,
											"end": 12353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12362,
											"end": 12455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 12451,
											"end": 12454,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12362,
											"end": 12455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 12362,
											"end": 12455,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12362,
											"end": 12455,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 12362,
											"end": 12455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12480,
											"end": 12482,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12475,
											"end": 12478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12471,
											"end": 12483,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12464,
											"end": 12483,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12464,
											"end": 12483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12269,
											"end": 12489,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12269,
											"end": 12489,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12269,
											"end": 12489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12269,
											"end": 12489,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12495,
											"end": 12861,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 12495,
											"end": 12861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12637,
											"end": 12640,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12658,
											"end": 12725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 12722,
											"end": 12724,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 12717,
											"end": 12720,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12658,
											"end": 12725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 12658,
											"end": 12725,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12658,
											"end": 12725,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 12658,
											"end": 12725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12651,
											"end": 12725,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12651,
											"end": 12725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12734,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 12823,
											"end": 12826,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12734,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 12734,
											"end": 12827,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12734,
											"end": 12827,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 12734,
											"end": 12827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12852,
											"end": 12854,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12847,
											"end": 12850,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12843,
											"end": 12855,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12836,
											"end": 12855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12836,
											"end": 12855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12641,
											"end": 12861,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12641,
											"end": 12861,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12641,
											"end": 12861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12641,
											"end": 12861,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12867,
											"end": 13233,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 12867,
											"end": 13233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13009,
											"end": 13012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13030,
											"end": 13097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 13094,
											"end": 13096,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 13089,
											"end": 13092,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13030,
											"end": 13097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 13030,
											"end": 13097,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13030,
											"end": 13097,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 13030,
											"end": 13097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13023,
											"end": 13097,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13023,
											"end": 13097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13106,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 13195,
											"end": 13198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13106,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 13106,
											"end": 13199,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13106,
											"end": 13199,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 13106,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13224,
											"end": 13226,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13219,
											"end": 13222,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13215,
											"end": 13227,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13208,
											"end": 13227,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13208,
											"end": 13227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13013,
											"end": 13233,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13013,
											"end": 13233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13013,
											"end": 13233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13013,
											"end": 13233,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13239,
											"end": 13605,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 13239,
											"end": 13605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13381,
											"end": 13384,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13402,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 13466,
											"end": 13468,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 13461,
											"end": 13464,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13402,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 13402,
											"end": 13469,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13402,
											"end": 13469,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 13402,
											"end": 13469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13395,
											"end": 13469,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13395,
											"end": 13469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13478,
											"end": 13571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 13567,
											"end": 13570,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13478,
											"end": 13571,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 13478,
											"end": 13571,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13478,
											"end": 13571,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 13478,
											"end": 13571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13596,
											"end": 13598,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13591,
											"end": 13594,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13587,
											"end": 13599,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13580,
											"end": 13599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13580,
											"end": 13599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13385,
											"end": 13605,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13385,
											"end": 13605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13385,
											"end": 13605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13385,
											"end": 13605,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13611,
											"end": 13977,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 13611,
											"end": 13977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13753,
											"end": 13756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13774,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 13838,
											"end": 13840,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 13833,
											"end": 13836,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13774,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 13774,
											"end": 13841,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13774,
											"end": 13841,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 13774,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13767,
											"end": 13841,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13767,
											"end": 13841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13850,
											"end": 13943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 13939,
											"end": 13942,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13850,
											"end": 13943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 13850,
											"end": 13943,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13850,
											"end": 13943,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 13850,
											"end": 13943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13968,
											"end": 13970,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13963,
											"end": 13966,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13959,
											"end": 13971,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13952,
											"end": 13971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13952,
											"end": 13971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13757,
											"end": 13977,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13757,
											"end": 13977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13757,
											"end": 13977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13757,
											"end": 13977,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13983,
											"end": 14091,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 13983,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 14078,
											"end": 14083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14060,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 14060,
											"end": 14084,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14060,
											"end": 14084,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 14060,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14055,
											"end": 14058,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14048,
											"end": 14085,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14038,
											"end": 14091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14038,
											"end": 14091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14038,
											"end": 14091,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14097,
											"end": 14215,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 14097,
											"end": 14215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14184,
											"end": 14208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 14202,
											"end": 14207,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14184,
											"end": 14208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 14184,
											"end": 14208,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14184,
											"end": 14208,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 14184,
											"end": 14208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14179,
											"end": 14182,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14172,
											"end": 14209,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14162,
											"end": 14215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14162,
											"end": 14215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14162,
											"end": 14215,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14221,
											"end": 15274,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 14221,
											"end": 15274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14544,
											"end": 14548,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14582,
											"end": 14585,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14567,
											"end": 14586,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14559,
											"end": 14586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14559,
											"end": 14586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14596,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 14664,
											"end": 14665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14653,
											"end": 14662,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14649,
											"end": 14666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14640,
											"end": 14646,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 14596,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 14596,
											"end": 14667,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14596,
											"end": 14667,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 14596,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14677,
											"end": 14749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 14745,
											"end": 14747,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14734,
											"end": 14743,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14730,
											"end": 14748,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14721,
											"end": 14727,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 14677,
											"end": 14749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 14677,
											"end": 14749,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14677,
											"end": 14749,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 14677,
											"end": 14749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14796,
											"end": 14805,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14790,
											"end": 14794,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14786,
											"end": 14806,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14781,
											"end": 14783,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14770,
											"end": 14779,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14766,
											"end": 14784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14759,
											"end": 14807,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14824,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 14927,
											"end": 14931,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14918,
											"end": 14924,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14824,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 14824,
											"end": 14932,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14824,
											"end": 14932,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 14824,
											"end": 14932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14816,
											"end": 14932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14816,
											"end": 14932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14979,
											"end": 14988,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14973,
											"end": 14977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14969,
											"end": 14989,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14964,
											"end": 14966,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 14953,
											"end": 14962,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14949,
											"end": 14967,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14942,
											"end": 14990,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15007,
											"end": 15115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 15110,
											"end": 15114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15101,
											"end": 15107,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15007,
											"end": 15115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 15007,
											"end": 15115,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15007,
											"end": 15115,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 15007,
											"end": 15115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14999,
											"end": 15115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14999,
											"end": 15115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15163,
											"end": 15172,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15153,
											"end": 15173,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15147,
											"end": 15150,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 15136,
											"end": 15145,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15132,
											"end": 15151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15125,
											"end": 15174,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15191,
											"end": 15267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 15262,
											"end": 15266,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15253,
											"end": 15259,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15191,
											"end": 15267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 15191,
											"end": 15267,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15191,
											"end": 15267,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 15191,
											"end": 15267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15183,
											"end": 15267,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15183,
											"end": 15267,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 15274,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 15274,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 15274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 15274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 15274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 15274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 15274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 15274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 15274,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15280,
											"end": 16031,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 15280,
											"end": 16031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15503,
											"end": 15507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15541,
											"end": 15544,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 15530,
											"end": 15539,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15526,
											"end": 15545,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15518,
											"end": 15545,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15518,
											"end": 15545,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15555,
											"end": 15626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 15623,
											"end": 15624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15612,
											"end": 15621,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15608,
											"end": 15625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15599,
											"end": 15605,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 15555,
											"end": 15626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 15555,
											"end": 15626,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15555,
											"end": 15626,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 15555,
											"end": 15626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 15708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 15704,
											"end": 15706,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15693,
											"end": 15702,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15689,
											"end": 15707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15680,
											"end": 15686,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 15708,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 15636,
											"end": 15708,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15636,
											"end": 15708,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 15636,
											"end": 15708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15718,
											"end": 15790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 15786,
											"end": 15788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15775,
											"end": 15784,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15771,
											"end": 15789,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15762,
											"end": 15768,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15718,
											"end": 15790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 15718,
											"end": 15790,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15718,
											"end": 15790,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 15718,
											"end": 15790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15800,
											"end": 15872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 15868,
											"end": 15870,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 15857,
											"end": 15866,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15853,
											"end": 15871,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15844,
											"end": 15850,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15800,
											"end": 15872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 15800,
											"end": 15872,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15800,
											"end": 15872,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 15800,
											"end": 15872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15920,
											"end": 15929,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15914,
											"end": 15918,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15910,
											"end": 15930,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15904,
											"end": 15907,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 15893,
											"end": 15902,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15889,
											"end": 15908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15882,
											"end": 15931,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15948,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 16019,
											"end": 16023,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16010,
											"end": 16016,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15948,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 15948,
											"end": 16024,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15948,
											"end": 16024,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 15948,
											"end": 16024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15940,
											"end": 16024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15940,
											"end": 16024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15508,
											"end": 16031,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 15508,
											"end": 16031,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 15508,
											"end": 16031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15508,
											"end": 16031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15508,
											"end": 16031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15508,
											"end": 16031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15508,
											"end": 16031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15508,
											"end": 16031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15508,
											"end": 16031,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16037,
											"end": 16410,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 16037,
											"end": 16410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16180,
											"end": 16184,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16218,
											"end": 16220,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16207,
											"end": 16216,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16203,
											"end": 16221,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16195,
											"end": 16221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16267,
											"end": 16276,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16261,
											"end": 16265,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16257,
											"end": 16277,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16253,
											"end": 16254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16242,
											"end": 16251,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16238,
											"end": 16255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16231,
											"end": 16278,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16295,
											"end": 16403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 16398,
											"end": 16402,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16389,
											"end": 16395,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16295,
											"end": 16403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 16295,
											"end": 16403,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16295,
											"end": 16403,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 16295,
											"end": 16403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16287,
											"end": 16403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16287,
											"end": 16403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16185,
											"end": 16410,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16185,
											"end": 16410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16185,
											"end": 16410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16185,
											"end": 16410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16185,
											"end": 16410,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16416,
											"end": 17050,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 16416,
											"end": 17050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16637,
											"end": 16641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16675,
											"end": 16677,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16664,
											"end": 16673,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16660,
											"end": 16678,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16652,
											"end": 16678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16652,
											"end": 16678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16724,
											"end": 16733,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16718,
											"end": 16722,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16714,
											"end": 16734,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16710,
											"end": 16711,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16699,
											"end": 16708,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16695,
											"end": 16712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16688,
											"end": 16735,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16752,
											"end": 16860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 16855,
											"end": 16859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16846,
											"end": 16852,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16752,
											"end": 16860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 16752,
											"end": 16860,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16752,
											"end": 16860,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 16752,
											"end": 16860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16744,
											"end": 16860,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16744,
											"end": 16860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16907,
											"end": 16916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16901,
											"end": 16905,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16897,
											"end": 16917,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16892,
											"end": 16894,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16881,
											"end": 16890,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16877,
											"end": 16895,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16870,
											"end": 16918,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16935,
											"end": 17043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 17038,
											"end": 17042,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17029,
											"end": 17035,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16935,
											"end": 17043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 16935,
											"end": 17043,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16935,
											"end": 17043,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 16935,
											"end": 17043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16927,
											"end": 17043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16927,
											"end": 17043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16642,
											"end": 17050,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16642,
											"end": 17050,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16642,
											"end": 17050,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16642,
											"end": 17050,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16642,
											"end": 17050,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16642,
											"end": 17050,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17056,
											"end": 17266,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 17056,
											"end": 17266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17143,
											"end": 17147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17181,
											"end": 17183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17170,
											"end": 17179,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17166,
											"end": 17184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17158,
											"end": 17184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17158,
											"end": 17184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17194,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 17256,
											"end": 17257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17245,
											"end": 17254,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17258,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17232,
											"end": 17238,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17194,
											"end": 17259,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 17194,
											"end": 17259,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17194,
											"end": 17259,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 17194,
											"end": 17259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17148,
											"end": 17266,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17148,
											"end": 17266,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17148,
											"end": 17266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17148,
											"end": 17266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17148,
											"end": 17266,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17272,
											"end": 17585,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 17272,
											"end": 17585,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17385,
											"end": 17389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17423,
											"end": 17425,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17412,
											"end": 17421,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17408,
											"end": 17426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17400,
											"end": 17426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17400,
											"end": 17426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17472,
											"end": 17481,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17466,
											"end": 17470,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17462,
											"end": 17482,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17458,
											"end": 17459,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17447,
											"end": 17456,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17443,
											"end": 17460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17436,
											"end": 17483,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17500,
											"end": 17578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 17573,
											"end": 17577,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17564,
											"end": 17570,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17500,
											"end": 17578,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 17500,
											"end": 17578,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17500,
											"end": 17578,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 17500,
											"end": 17578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17492,
											"end": 17578,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17492,
											"end": 17578,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17390,
											"end": 17585,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17390,
											"end": 17585,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17390,
											"end": 17585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17390,
											"end": 17585,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17390,
											"end": 17585,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17591,
											"end": 18010,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 17591,
											"end": 18010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17757,
											"end": 17761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17795,
											"end": 17797,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17784,
											"end": 17793,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17780,
											"end": 17798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17772,
											"end": 17798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17772,
											"end": 17798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17844,
											"end": 17853,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17838,
											"end": 17842,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17834,
											"end": 17854,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17830,
											"end": 17831,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17819,
											"end": 17828,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17815,
											"end": 17832,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17808,
											"end": 17855,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17872,
											"end": 18003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 17998,
											"end": 18002,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17872,
											"end": 18003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 17872,
											"end": 18003,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17872,
											"end": 18003,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 17872,
											"end": 18003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17864,
											"end": 18003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17864,
											"end": 18003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17762,
											"end": 18010,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17762,
											"end": 18010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17762,
											"end": 18010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17762,
											"end": 18010,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18016,
											"end": 18435,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 18016,
											"end": 18435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18182,
											"end": 18186,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18220,
											"end": 18222,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18209,
											"end": 18218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18205,
											"end": 18223,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18197,
											"end": 18223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18197,
											"end": 18223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18269,
											"end": 18278,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18263,
											"end": 18267,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18259,
											"end": 18279,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18255,
											"end": 18256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18244,
											"end": 18253,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18240,
											"end": 18257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18233,
											"end": 18280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18297,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 18423,
											"end": 18427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18297,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 18297,
											"end": 18428,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18297,
											"end": 18428,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 18297,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18289,
											"end": 18428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18289,
											"end": 18428,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18187,
											"end": 18435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18187,
											"end": 18435,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18187,
											"end": 18435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18187,
											"end": 18435,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18441,
											"end": 18860,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 18441,
											"end": 18860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18607,
											"end": 18611,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18645,
											"end": 18647,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18634,
											"end": 18643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18630,
											"end": 18648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18622,
											"end": 18648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18622,
											"end": 18648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18694,
											"end": 18703,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18688,
											"end": 18692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18684,
											"end": 18704,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18680,
											"end": 18681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18669,
											"end": 18678,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18665,
											"end": 18682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18658,
											"end": 18705,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18722,
											"end": 18853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 18848,
											"end": 18852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18722,
											"end": 18853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 18722,
											"end": 18853,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18722,
											"end": 18853,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 18722,
											"end": 18853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18714,
											"end": 18853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18714,
											"end": 18853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18612,
											"end": 18860,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18612,
											"end": 18860,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18612,
											"end": 18860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18612,
											"end": 18860,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18866,
											"end": 19285,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 18866,
											"end": 19285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19032,
											"end": 19036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19070,
											"end": 19072,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19059,
											"end": 19068,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19055,
											"end": 19073,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19047,
											"end": 19073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19047,
											"end": 19073,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19119,
											"end": 19128,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19113,
											"end": 19117,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19109,
											"end": 19129,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19105,
											"end": 19106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19094,
											"end": 19103,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19090,
											"end": 19107,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19083,
											"end": 19130,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19147,
											"end": 19278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 19273,
											"end": 19277,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19147,
											"end": 19278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 19147,
											"end": 19278,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19147,
											"end": 19278,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 19147,
											"end": 19278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19139,
											"end": 19278,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19139,
											"end": 19278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19037,
											"end": 19285,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19037,
											"end": 19285,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19037,
											"end": 19285,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19037,
											"end": 19285,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19291,
											"end": 19710,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 19291,
											"end": 19710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19457,
											"end": 19461,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19495,
											"end": 19497,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19484,
											"end": 19493,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19480,
											"end": 19498,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19472,
											"end": 19498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19472,
											"end": 19498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19544,
											"end": 19553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19538,
											"end": 19542,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19534,
											"end": 19554,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19530,
											"end": 19531,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19519,
											"end": 19528,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19515,
											"end": 19532,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19508,
											"end": 19555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19572,
											"end": 19703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 19698,
											"end": 19702,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19572,
											"end": 19703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 19572,
											"end": 19703,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19572,
											"end": 19703,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 19572,
											"end": 19703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19564,
											"end": 19703,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19564,
											"end": 19703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19462,
											"end": 19710,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19462,
											"end": 19710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19462,
											"end": 19710,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19462,
											"end": 19710,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19716,
											"end": 20135,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 19716,
											"end": 20135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19882,
											"end": 19886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19920,
											"end": 19922,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19909,
											"end": 19918,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19905,
											"end": 19923,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19897,
											"end": 19923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19897,
											"end": 19923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19969,
											"end": 19978,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19963,
											"end": 19967,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19959,
											"end": 19979,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 19955,
											"end": 19956,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19944,
											"end": 19953,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19940,
											"end": 19957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19933,
											"end": 19980,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19997,
											"end": 20128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 20123,
											"end": 20127,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19997,
											"end": 20128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 19997,
											"end": 20128,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19997,
											"end": 20128,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 19997,
											"end": 20128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19989,
											"end": 20128,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19989,
											"end": 20128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19887,
											"end": 20135,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19887,
											"end": 20135,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19887,
											"end": 20135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19887,
											"end": 20135,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20141,
											"end": 20560,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 20141,
											"end": 20560,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20307,
											"end": 20311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20345,
											"end": 20347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20334,
											"end": 20343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20330,
											"end": 20348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20322,
											"end": 20348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20322,
											"end": 20348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20394,
											"end": 20403,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20388,
											"end": 20392,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20384,
											"end": 20404,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20380,
											"end": 20381,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20369,
											"end": 20378,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20365,
											"end": 20382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20358,
											"end": 20405,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20422,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 20548,
											"end": 20552,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20422,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 20422,
											"end": 20553,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20422,
											"end": 20553,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 20422,
											"end": 20553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20414,
											"end": 20553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20414,
											"end": 20553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20312,
											"end": 20560,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20312,
											"end": 20560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20312,
											"end": 20560,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20312,
											"end": 20560,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20566,
											"end": 20985,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 20566,
											"end": 20985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20732,
											"end": 20736,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20770,
											"end": 20772,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20759,
											"end": 20768,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20755,
											"end": 20773,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20747,
											"end": 20773,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20747,
											"end": 20773,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20819,
											"end": 20828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20813,
											"end": 20817,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20809,
											"end": 20829,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20805,
											"end": 20806,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20794,
											"end": 20803,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20790,
											"end": 20807,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20783,
											"end": 20830,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20847,
											"end": 20978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 20973,
											"end": 20977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20847,
											"end": 20978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 20847,
											"end": 20978,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20847,
											"end": 20978,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 20847,
											"end": 20978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20839,
											"end": 20978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20839,
											"end": 20978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20737,
											"end": 20985,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20737,
											"end": 20985,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20737,
											"end": 20985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20737,
											"end": 20985,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20991,
											"end": 21410,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 20991,
											"end": 21410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21157,
											"end": 21161,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21195,
											"end": 21197,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21184,
											"end": 21193,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21180,
											"end": 21198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21172,
											"end": 21198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21172,
											"end": 21198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21244,
											"end": 21253,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21238,
											"end": 21242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21234,
											"end": 21254,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21230,
											"end": 21231,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21219,
											"end": 21228,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21215,
											"end": 21232,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21208,
											"end": 21255,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21272,
											"end": 21403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 21398,
											"end": 21402,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21272,
											"end": 21403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 21272,
											"end": 21403,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21272,
											"end": 21403,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 21272,
											"end": 21403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21264,
											"end": 21403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21264,
											"end": 21403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21162,
											"end": 21410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21162,
											"end": 21410,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21162,
											"end": 21410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21162,
											"end": 21410,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21416,
											"end": 21835,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 21416,
											"end": 21835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21582,
											"end": 21586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21620,
											"end": 21622,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21609,
											"end": 21618,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21605,
											"end": 21623,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21597,
											"end": 21623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21597,
											"end": 21623,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21669,
											"end": 21678,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21663,
											"end": 21667,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21659,
											"end": 21679,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21655,
											"end": 21656,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21644,
											"end": 21653,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21640,
											"end": 21657,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21633,
											"end": 21680,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21697,
											"end": 21828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 21823,
											"end": 21827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21697,
											"end": 21828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 21697,
											"end": 21828,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21697,
											"end": 21828,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 21697,
											"end": 21828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21689,
											"end": 21828,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21689,
											"end": 21828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21587,
											"end": 21835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21587,
											"end": 21835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21587,
											"end": 21835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21587,
											"end": 21835,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21841,
											"end": 22063,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 21841,
											"end": 22063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21934,
											"end": 21938,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21972,
											"end": 21974,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21961,
											"end": 21970,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21957,
											"end": 21975,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21949,
											"end": 21975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21949,
											"end": 21975,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21985,
											"end": 22056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 22053,
											"end": 22054,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22042,
											"end": 22051,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22038,
											"end": 22055,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22029,
											"end": 22035,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21985,
											"end": 22056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 21985,
											"end": 22056,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21985,
											"end": 22056,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 21985,
											"end": 22056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22063,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22063,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 22063,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22069,
											"end": 22401,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 22069,
											"end": 22401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22190,
											"end": 22194,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22228,
											"end": 22230,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22217,
											"end": 22226,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22213,
											"end": 22231,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22205,
											"end": 22231,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22205,
											"end": 22231,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22241,
											"end": 22312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 22309,
											"end": 22310,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22298,
											"end": 22307,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22294,
											"end": 22311,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22285,
											"end": 22291,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 22241,
											"end": 22312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 22241,
											"end": 22312,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22241,
											"end": 22312,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 22241,
											"end": 22312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22322,
											"end": 22394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 22390,
											"end": 22392,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22379,
											"end": 22388,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22375,
											"end": 22393,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22366,
											"end": 22372,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22322,
											"end": 22394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 22322,
											"end": 22394,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22322,
											"end": 22394,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 22322,
											"end": 22394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22195,
											"end": 22401,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 22195,
											"end": 22401,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 22195,
											"end": 22401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22195,
											"end": 22401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22195,
											"end": 22401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22195,
											"end": 22401,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22407,
											"end": 22536,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 22407,
											"end": 22536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22441,
											"end": 22447,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22468,
											"end": 22488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 22468,
											"end": 22488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 22468,
											"end": 22488,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22468,
											"end": 22488,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 22468,
											"end": 22488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22458,
											"end": 22488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22458,
											"end": 22488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22497,
											"end": 22530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 22525,
											"end": 22529,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22517,
											"end": 22523,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22497,
											"end": 22530,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 22497,
											"end": 22530,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22497,
											"end": 22530,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 22497,
											"end": 22530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22448,
											"end": 22536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22448,
											"end": 22536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22448,
											"end": 22536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22448,
											"end": 22536,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22542,
											"end": 22617,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 22542,
											"end": 22617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22575,
											"end": 22581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22608,
											"end": 22610,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22602,
											"end": 22611,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 22592,
											"end": 22611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22592,
											"end": 22611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22582,
											"end": 22617,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22582,
											"end": 22617,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22623,
											"end": 22934,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 22623,
											"end": 22934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22700,
											"end": 22704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22790,
											"end": 22808,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22782,
											"end": 22788,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22779,
											"end": 22809,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 22776,
											"end": 22778,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 22776,
											"end": 22778,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 22776,
											"end": 22778,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22812,
											"end": 22830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 22812,
											"end": 22830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 22812,
											"end": 22830,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22812,
											"end": 22830,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 22812,
											"end": 22830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22776,
											"end": 22778,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 22776,
											"end": 22778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22862,
											"end": 22866,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22854,
											"end": 22860,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22850,
											"end": 22867,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 22842,
											"end": 22867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22842,
											"end": 22867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22922,
											"end": 22926,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 22916,
											"end": 22920,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22912,
											"end": 22927,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22904,
											"end": 22927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22904,
											"end": 22927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22705,
											"end": 22934,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22705,
											"end": 22934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22705,
											"end": 22934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22705,
											"end": 22934,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22940,
											"end": 23251,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 22940,
											"end": 23251,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23017,
											"end": 23021,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23107,
											"end": 23125,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23099,
											"end": 23105,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23096,
											"end": 23126,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 23093,
											"end": 23095,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23093,
											"end": 23095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 23093,
											"end": 23095,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23129,
											"end": 23147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 23129,
											"end": 23147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 23129,
											"end": 23147,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23129,
											"end": 23147,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 23129,
											"end": 23147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23093,
											"end": 23095,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 23093,
											"end": 23095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23179,
											"end": 23183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23171,
											"end": 23177,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23167,
											"end": 23184,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 23159,
											"end": 23184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23159,
											"end": 23184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23239,
											"end": 23243,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23233,
											"end": 23237,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23229,
											"end": 23244,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23221,
											"end": 23244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23221,
											"end": 23244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23022,
											"end": 23251,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23022,
											"end": 23251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23022,
											"end": 23251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23022,
											"end": 23251,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23257,
											"end": 23564,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 23257,
											"end": 23564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23318,
											"end": 23322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23408,
											"end": 23426,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23400,
											"end": 23406,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23397,
											"end": 23427,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 23394,
											"end": 23396,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23394,
											"end": 23396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 23394,
											"end": 23396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23430,
											"end": 23448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 23430,
											"end": 23448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 23430,
											"end": 23448,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23430,
											"end": 23448,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 23430,
											"end": 23448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23394,
											"end": 23396,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 23394,
											"end": 23396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23468,
											"end": 23497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 23490,
											"end": 23496,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23468,
											"end": 23497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 23468,
											"end": 23497,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 23468,
											"end": 23497,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 23468,
											"end": 23497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23460,
											"end": 23497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23460,
											"end": 23497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23552,
											"end": 23556,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23546,
											"end": 23550,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23542,
											"end": 23557,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23534,
											"end": 23557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23534,
											"end": 23557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23323,
											"end": 23564,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23323,
											"end": 23564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23323,
											"end": 23564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23323,
											"end": 23564,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23570,
											"end": 23702,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 23570,
											"end": 23702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23637,
											"end": 23641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23660,
											"end": 23663,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23652,
											"end": 23663,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23652,
											"end": 23663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23690,
											"end": 23694,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23685,
											"end": 23688,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23681,
											"end": 23695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23673,
											"end": 23695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23673,
											"end": 23695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23642,
											"end": 23702,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23642,
											"end": 23702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23642,
											"end": 23702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23642,
											"end": 23702,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23708,
											"end": 23822,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 23708,
											"end": 23822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23775,
											"end": 23781,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23809,
											"end": 23814,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23803,
											"end": 23815,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23793,
											"end": 23815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23793,
											"end": 23815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23782,
											"end": 23822,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23782,
											"end": 23822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23782,
											"end": 23822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23782,
											"end": 23822,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23828,
											"end": 23926,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 23828,
											"end": 23926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23879,
											"end": 23885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23913,
											"end": 23918,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23907,
											"end": 23919,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 23897,
											"end": 23919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23897,
											"end": 23919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23886,
											"end": 23926,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23886,
											"end": 23926,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23886,
											"end": 23926,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23886,
											"end": 23926,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23932,
											"end": 24031,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 23932,
											"end": 24031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23984,
											"end": 23990,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24018,
											"end": 24023,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24012,
											"end": 24024,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 24002,
											"end": 24024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24002,
											"end": 24024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23991,
											"end": 24031,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 23991,
											"end": 24031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23991,
											"end": 24031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23991,
											"end": 24031,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24037,
											"end": 24150,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 24037,
											"end": 24150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24107,
											"end": 24111,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24139,
											"end": 24143,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24134,
											"end": 24137,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24130,
											"end": 24144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24122,
											"end": 24144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24122,
											"end": 24144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24112,
											"end": 24150,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24112,
											"end": 24150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24112,
											"end": 24150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24112,
											"end": 24150,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24156,
											"end": 24340,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 24156,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24255,
											"end": 24266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24289,
											"end": 24295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24284,
											"end": 24287,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24277,
											"end": 24296,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24329,
											"end": 24333,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24324,
											"end": 24327,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24320,
											"end": 24334,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24305,
											"end": 24334,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24305,
											"end": 24334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24267,
											"end": 24340,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24267,
											"end": 24340,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24267,
											"end": 24340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24267,
											"end": 24340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24267,
											"end": 24340,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24346,
											"end": 24514,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 24346,
											"end": 24514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24429,
											"end": 24440,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24463,
											"end": 24469,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24458,
											"end": 24461,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24451,
											"end": 24470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24503,
											"end": 24507,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24498,
											"end": 24501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24494,
											"end": 24508,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24479,
											"end": 24508,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24479,
											"end": 24508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24441,
											"end": 24514,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24441,
											"end": 24514,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24441,
											"end": 24514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24441,
											"end": 24514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24441,
											"end": 24514,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24520,
											"end": 24689,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 24520,
											"end": 24689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24604,
											"end": 24615,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24638,
											"end": 24644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24633,
											"end": 24636,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24626,
											"end": 24645,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24678,
											"end": 24682,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24673,
											"end": 24676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24669,
											"end": 24683,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24654,
											"end": 24683,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24654,
											"end": 24683,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24616,
											"end": 24689,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24616,
											"end": 24689,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24616,
											"end": 24689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24616,
											"end": 24689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24616,
											"end": 24689,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24695,
											"end": 25000,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 24695,
											"end": 25000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24735,
											"end": 24738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24754,
											"end": 24774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 24772,
											"end": 24773,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24754,
											"end": 24774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 24754,
											"end": 24774,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24754,
											"end": 24774,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 24754,
											"end": 24774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24749,
											"end": 24774,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24749,
											"end": 24774,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24788,
											"end": 24808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 24806,
											"end": 24807,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24788,
											"end": 24808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 24788,
											"end": 24808,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24788,
											"end": 24808,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 24788,
											"end": 24808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24783,
											"end": 24808,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24783,
											"end": 24808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24942,
											"end": 24943,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24874,
											"end": 24940,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24870,
											"end": 24944,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 24867,
											"end": 24868,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24864,
											"end": 24945,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 24861,
											"end": 24863,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 24861,
											"end": 24863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 24861,
											"end": 24863,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24948,
											"end": 24966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 24948,
											"end": 24966,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 24948,
											"end": 24966,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 24948,
											"end": 24966,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 24948,
											"end": 24966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24861,
											"end": 24863,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 24861,
											"end": 24863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24992,
											"end": 24993,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24989,
											"end": 24990,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24985,
											"end": 24994,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24978,
											"end": 24994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24978,
											"end": 24994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24739,
											"end": 25000,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24739,
											"end": 25000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24739,
											"end": 25000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24739,
											"end": 25000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24739,
											"end": 25000,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25006,
											"end": 25102,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 25006,
											"end": 25102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25043,
											"end": 25050,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25072,
											"end": 25096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 25090,
											"end": 25095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25072,
											"end": 25096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 25072,
											"end": 25096,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 25072,
											"end": 25096,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 25072,
											"end": 25096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25061,
											"end": 25096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25061,
											"end": 25096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25051,
											"end": 25102,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25051,
											"end": 25102,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25051,
											"end": 25102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25051,
											"end": 25102,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25108,
											"end": 25198,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 25108,
											"end": 25198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25142,
											"end": 25149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25185,
											"end": 25190,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25178,
											"end": 25191,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25171,
											"end": 25192,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25160,
											"end": 25192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25160,
											"end": 25192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25150,
											"end": 25198,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25150,
											"end": 25198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25150,
											"end": 25198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25150,
											"end": 25198,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25204,
											"end": 25353,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 25204,
											"end": 25353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25240,
											"end": 25247,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25280,
											"end": 25346,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25273,
											"end": 25278,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25269,
											"end": 25347,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 25258,
											"end": 25347,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25258,
											"end": 25347,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25248,
											"end": 25353,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25248,
											"end": 25353,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25248,
											"end": 25353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25248,
											"end": 25353,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25359,
											"end": 25485,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 25359,
											"end": 25485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25396,
											"end": 25403,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25436,
											"end": 25478,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25429,
											"end": 25434,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25425,
											"end": 25479,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 25414,
											"end": 25479,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25414,
											"end": 25479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25404,
											"end": 25485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25404,
											"end": 25485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25404,
											"end": 25485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25404,
											"end": 25485,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25491,
											"end": 25568,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 25491,
											"end": 25568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25528,
											"end": 25535,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25557,
											"end": 25562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25546,
											"end": 25562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25546,
											"end": 25562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25536,
											"end": 25568,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25536,
											"end": 25568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25536,
											"end": 25568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25536,
											"end": 25568,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25574,
											"end": 25728,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 25574,
											"end": 25728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25658,
											"end": 25664,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25653,
											"end": 25656,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25648,
											"end": 25651,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25635,
											"end": 25665,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 25720,
											"end": 25721,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25711,
											"end": 25717,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25706,
											"end": 25709,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25702,
											"end": 25718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25695,
											"end": 25722,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25625,
											"end": 25728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25625,
											"end": 25728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25625,
											"end": 25728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25625,
											"end": 25728,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25734,
											"end": 26041,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 25734,
											"end": 26041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25802,
											"end": 25803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25812,
											"end": 25925,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 25812,
											"end": 25925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25826,
											"end": 25832,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25823,
											"end": 25824,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25820,
											"end": 25833,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 25812,
											"end": 25925,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25812,
											"end": 25925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 25812,
											"end": 25925,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25911,
											"end": 25912,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25906,
											"end": 25909,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25902,
											"end": 25913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25896,
											"end": 25914,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 25892,
											"end": 25893,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25887,
											"end": 25890,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25883,
											"end": 25894,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25876,
											"end": 25915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25848,
											"end": 25850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25845,
											"end": 25846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25841,
											"end": 25851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25836,
											"end": 25851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25836,
											"end": 25851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25812,
											"end": 25925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 25812,
											"end": 25925,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25812,
											"end": 25925,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 25812,
											"end": 25925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25943,
											"end": 25949,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25940,
											"end": 25941,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25937,
											"end": 25950,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 25934,
											"end": 25936,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25934,
											"end": 25936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 25934,
											"end": 25936,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 26023,
											"end": 26024,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26014,
											"end": 26020,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26009,
											"end": 26012,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 26005,
											"end": 26021,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25998,
											"end": 26025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25934,
											"end": 25936,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 25934,
											"end": 25936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25783,
											"end": 26041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25783,
											"end": 26041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25783,
											"end": 26041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25783,
											"end": 26041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25783,
											"end": 26041,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26047,
											"end": 26367,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 26047,
											"end": 26367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26091,
											"end": 26097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26128,
											"end": 26129,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 26122,
											"end": 26126,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26118,
											"end": 26130,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 26108,
											"end": 26130,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26108,
											"end": 26130,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26175,
											"end": 26176,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 26169,
											"end": 26173,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26165,
											"end": 26177,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 26196,
											"end": 26214,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 26186,
											"end": 26188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 26186,
											"end": 26188,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 26252,
											"end": 26256,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 26244,
											"end": 26250,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26240,
											"end": 26257,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 26230,
											"end": 26257,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26230,
											"end": 26257,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26186,
											"end": 26188,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 26186,
											"end": 26188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26314,
											"end": 26316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26306,
											"end": 26312,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26303,
											"end": 26317,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 26283,
											"end": 26301,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26280,
											"end": 26318,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 26277,
											"end": 26279,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 26277,
											"end": 26279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 26277,
											"end": 26279,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 26333,
											"end": 26351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 26333,
											"end": 26351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 26333,
											"end": 26351,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26333,
											"end": 26351,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 26333,
											"end": 26351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26277,
											"end": 26279,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 26277,
											"end": 26279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26098,
											"end": 26367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26098,
											"end": 26367,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26098,
											"end": 26367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26098,
											"end": 26367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26098,
											"end": 26367,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26373,
											"end": 26654,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 26373,
											"end": 26654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26456,
											"end": 26483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 26478,
											"end": 26482,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26456,
											"end": 26483,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 26456,
											"end": 26483,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26456,
											"end": 26483,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 26456,
											"end": 26483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26448,
											"end": 26454,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26444,
											"end": 26484,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26586,
											"end": 26592,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26574,
											"end": 26584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26571,
											"end": 26593,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 26550,
											"end": 26568,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26538,
											"end": 26548,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26535,
											"end": 26569,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 26532,
											"end": 26594,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 26529,
											"end": 26531,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 26529,
											"end": 26531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 26529,
											"end": 26531,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 26597,
											"end": 26615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 26597,
											"end": 26615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 26597,
											"end": 26615,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26597,
											"end": 26615,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 26597,
											"end": 26615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26529,
											"end": 26531,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 26529,
											"end": 26531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26637,
											"end": 26647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 26633,
											"end": 26635,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 26626,
											"end": 26648,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26416,
											"end": 26654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26416,
											"end": 26654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26416,
											"end": 26654,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26416,
											"end": 26654,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26660,
											"end": 26893,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 26660,
											"end": 26893,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26699,
											"end": 26702,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26722,
											"end": 26746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 26740,
											"end": 26745,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26722,
											"end": 26746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 26722,
											"end": 26746,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26722,
											"end": 26746,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 26722,
											"end": 26746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26713,
											"end": 26746,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26713,
											"end": 26746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26768,
											"end": 26834,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26761,
											"end": 26766,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26758,
											"end": 26835,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 26755,
											"end": 26757,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 26755,
											"end": 26757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 26755,
											"end": 26757,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26755,
											"end": 26757,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 26755,
											"end": 26757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26885,
											"end": 26886,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 26878,
											"end": 26883,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26874,
											"end": 26887,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26867,
											"end": 26887,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26867,
											"end": 26887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26703,
											"end": 26893,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 26703,
											"end": 26893,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 26703,
											"end": 26893,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26703,
											"end": 26893,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26899,
											"end": 27079,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 26899,
											"end": 27079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26947,
											"end": 27024,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26944,
											"end": 26945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26937,
											"end": 27025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27044,
											"end": 27048,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 27041,
											"end": 27042,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 27034,
											"end": 27049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27068,
											"end": 27072,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 27065,
											"end": 27066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27058,
											"end": 27073,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 27085,
											"end": 27265,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 27085,
											"end": 27265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27133,
											"end": 27210,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27130,
											"end": 27131,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27123,
											"end": 27211,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27230,
											"end": 27234,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 27227,
											"end": 27228,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 27220,
											"end": 27235,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27254,
											"end": 27258,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 27251,
											"end": 27252,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27244,
											"end": 27259,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 27271,
											"end": 27451,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 27271,
											"end": 27451,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27319,
											"end": 27396,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27316,
											"end": 27317,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27309,
											"end": 27397,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27416,
											"end": 27420,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 27413,
											"end": 27414,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 27406,
											"end": 27421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27440,
											"end": 27444,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 27437,
											"end": 27438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27430,
											"end": 27445,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 27457,
											"end": 27640,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 27457,
											"end": 27640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27492,
											"end": 27495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27530,
											"end": 27531,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 27512,
											"end": 27528,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 27509,
											"end": 27532,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 27506,
											"end": 27508,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 27506,
											"end": 27508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 27506,
											"end": 27508,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 27568,
											"end": 27569,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 27565,
											"end": 27566,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27562,
											"end": 27563,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 27547,
											"end": 27570,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 27590,
											"end": 27624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 27621,
											"end": 27622,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27615,
											"end": 27623,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 27590,
											"end": 27624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 27590,
											"end": 27624,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 27590,
											"end": 27624,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 27590,
											"end": 27624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27583,
											"end": 27624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27583,
											"end": 27624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27506,
											"end": 27508,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 27506,
											"end": 27508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27496,
											"end": 27640,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27496,
											"end": 27640,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 27646,
											"end": 27748,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 27646,
											"end": 27748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27687,
											"end": 27693,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27738,
											"end": 27740,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 27734,
											"end": 27741,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 27729,
											"end": 27731,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 27722,
											"end": 27727,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 27718,
											"end": 27732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27714,
											"end": 27742,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 27704,
											"end": 27742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27704,
											"end": 27742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27694,
											"end": 27748,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27694,
											"end": 27748,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27694,
											"end": 27748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27694,
											"end": 27748,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 27754,
											"end": 27860,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 27754,
											"end": 27860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 27798,
											"end": 27806,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27847,
											"end": 27852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 27842,
											"end": 27845,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 27838,
											"end": 27853,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 27817,
											"end": 27853,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27817,
											"end": 27853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27807,
											"end": 27860,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 27807,
											"end": 27860,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 27807,
											"end": 27860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27807,
											"end": 27860,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 27866,
											"end": 28105,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 27866,
											"end": 28105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28006,
											"end": 28040,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 28002,
											"end": 28003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27994,
											"end": 28000,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 27990,
											"end": 28004,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27983,
											"end": 28041,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28075,
											"end": 28097,
											"name": "PUSH",
											"source": 8,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 28070,
											"end": 28072,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28062,
											"end": 28068,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28058,
											"end": 28073,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28051,
											"end": 28098,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 27972,
											"end": 28105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 27972,
											"end": 28105,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 28111,
											"end": 28338,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 28111,
											"end": 28338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28251,
											"end": 28285,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 28247,
											"end": 28248,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28239,
											"end": 28245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28235,
											"end": 28249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28228,
											"end": 28286,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28320,
											"end": 28330,
											"name": "PUSH",
											"source": 8,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28315,
											"end": 28317,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28307,
											"end": 28313,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28303,
											"end": 28318,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28296,
											"end": 28331,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28217,
											"end": 28338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28217,
											"end": 28338,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 28344,
											"end": 28574,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 28344,
											"end": 28574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28484,
											"end": 28518,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 28480,
											"end": 28481,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28472,
											"end": 28478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28468,
											"end": 28482,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28461,
											"end": 28519,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28553,
											"end": 28566,
											"name": "PUSH",
											"source": 8,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 28548,
											"end": 28550,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28540,
											"end": 28546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28536,
											"end": 28551,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28529,
											"end": 28567,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28450,
											"end": 28574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28450,
											"end": 28574,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 28580,
											"end": 28808,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 28580,
											"end": 28808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28720,
											"end": 28754,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 28716,
											"end": 28717,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28708,
											"end": 28714,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28704,
											"end": 28718,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28697,
											"end": 28755,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28789,
											"end": 28800,
											"name": "PUSH",
											"source": 8,
											"value": "20617070726F7665640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28784,
											"end": 28786,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28776,
											"end": 28782,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28772,
											"end": 28787,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28765,
											"end": 28801,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28686,
											"end": 28808,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28686,
											"end": 28808,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 28814,
											"end": 29038,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 28814,
											"end": 29038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28954,
											"end": 28988,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 28950,
											"end": 28951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 28942,
											"end": 28948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 28938,
											"end": 28952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28931,
											"end": 28989,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29023,
											"end": 29030,
											"name": "PUSH",
											"source": 8,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29018,
											"end": 29020,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 29010,
											"end": 29016,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29006,
											"end": 29021,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28999,
											"end": 29031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28920,
											"end": 29038,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28920,
											"end": 29038,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 29044,
											"end": 29281,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 29044,
											"end": 29281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29184,
											"end": 29218,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 29180,
											"end": 29181,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29172,
											"end": 29178,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29168,
											"end": 29182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29161,
											"end": 29219,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29253,
											"end": 29273,
											"name": "PUSH",
											"source": 8,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 29248,
											"end": 29250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 29240,
											"end": 29246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29236,
											"end": 29251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29229,
											"end": 29274,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29150,
											"end": 29281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29150,
											"end": 29281,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 29287,
											"end": 29516,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 29287,
											"end": 29516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29427,
											"end": 29461,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 29423,
											"end": 29424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29415,
											"end": 29421,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29411,
											"end": 29425,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29404,
											"end": 29462,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29496,
											"end": 29508,
											"name": "PUSH",
											"source": 8,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 29491,
											"end": 29493,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 29483,
											"end": 29489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29479,
											"end": 29494,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29472,
											"end": 29509,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29393,
											"end": 29516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29393,
											"end": 29516,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 29522,
											"end": 29750,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 29522,
											"end": 29750,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29662,
											"end": 29696,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 29658,
											"end": 29659,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29650,
											"end": 29656,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29646,
											"end": 29660,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29639,
											"end": 29697,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29731,
											"end": 29742,
											"name": "PUSH",
											"source": 8,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29726,
											"end": 29728,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 29718,
											"end": 29724,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29714,
											"end": 29729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29707,
											"end": 29743,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29628,
											"end": 29750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29628,
											"end": 29750,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 29756,
											"end": 29984,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 29756,
											"end": 29984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 29896,
											"end": 29930,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 29892,
											"end": 29893,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29884,
											"end": 29890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29880,
											"end": 29894,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29873,
											"end": 29931,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29965,
											"end": 29976,
											"name": "PUSH",
											"source": 8,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29960,
											"end": 29962,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 29952,
											"end": 29958,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 29948,
											"end": 29963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29941,
											"end": 29977,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29862,
											"end": 29984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 29862,
											"end": 29984,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 29990,
											"end": 30217,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 29990,
											"end": 30217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30130,
											"end": 30164,
											"name": "PUSH",
											"source": 8,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 30126,
											"end": 30127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30118,
											"end": 30124,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30114,
											"end": 30128,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30107,
											"end": 30165,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30199,
											"end": 30209,
											"name": "PUSH",
											"source": 8,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30194,
											"end": 30196,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 30186,
											"end": 30192,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30182,
											"end": 30197,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30175,
											"end": 30210,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 30096,
											"end": 30217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30096,
											"end": 30217,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 30223,
											"end": 30934,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 30223,
											"end": 30934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30262,
											"end": 30265,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30300,
											"end": 30304,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 30282,
											"end": 30298,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 30279,
											"end": 30305,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 30276,
											"end": 30278,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 30276,
											"end": 30278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 30276,
											"end": 30278,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 30308,
											"end": 30313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 30308,
											"end": 30313,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30276,
											"end": 30278,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 30276,
											"end": 30278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30337,
											"end": 30357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 30337,
											"end": 30357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 30337,
											"end": 30357,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 30337,
											"end": 30357,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 30337,
											"end": 30357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30412,
											"end": 30413,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 30394,
											"end": 30410,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 30390,
											"end": 30414,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 30387,
											"end": 30388,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 30381,
											"end": 30385,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30366,
											"end": 30415,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 30445,
											"end": 30449,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 30439,
											"end": 30450,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 30544,
											"end": 30560,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 30537,
											"end": 30541,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 30529,
											"end": 30535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30525,
											"end": 30542,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30522,
											"end": 30561,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 30489,
											"end": 30507,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30481,
											"end": 30487,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30478,
											"end": 30508,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 30462,
											"end": 30575,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 30459,
											"end": 30461,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 30459,
											"end": 30461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 30459,
											"end": 30461,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 30590,
											"end": 30595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30590,
											"end": 30595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30590,
											"end": 30595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 30590,
											"end": 30595,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30459,
											"end": 30461,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 30459,
											"end": 30461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30636,
											"end": 30642,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 30630,
											"end": 30634,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30626,
											"end": 30643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30672,
											"end": 30675,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 30666,
											"end": 30676,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 30699,
											"end": 30717,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30691,
											"end": 30697,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30688,
											"end": 30718,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 30685,
											"end": 30687,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 30685,
											"end": 30687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 30685,
											"end": 30687,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 30721,
											"end": 30726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30721,
											"end": 30726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30721,
											"end": 30726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30721,
											"end": 30726,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30721,
											"end": 30726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 30721,
											"end": 30726,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30685,
											"end": 30687,
											"name": "tag",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 30685,
											"end": 30687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30769,
											"end": 30775,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 30762,
											"end": 30766,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 30757,
											"end": 30760,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 30753,
											"end": 30767,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30749,
											"end": 30776,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30828,
											"end": 30829,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 30810,
											"end": 30826,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 30806,
											"end": 30830,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 30800,
											"end": 30804,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 30796,
											"end": 30831,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30791,
											"end": 30794,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 30788,
											"end": 30832,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 30785,
											"end": 30787,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 30785,
											"end": 30787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 30785,
											"end": 30787,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 30835,
											"end": 30840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30835,
											"end": 30840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30835,
											"end": 30840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30835,
											"end": 30840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30835,
											"end": 30840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30835,
											"end": 30840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 30835,
											"end": 30840,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 30785,
											"end": 30787,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 30785,
											"end": 30787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30852,
											"end": 30909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 30900,
											"end": 30906,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30894,
											"end": 30898,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 30890,
											"end": 30907,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30882,
											"end": 30888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 30878,
											"end": 30908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 30872,
											"end": 30876,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 30852,
											"end": 30909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 30852,
											"end": 30909,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 30852,
											"end": 30909,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 30852,
											"end": 30909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30925,
											"end": 30928,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30918,
											"end": 30928,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 30918,
											"end": 30928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30266,
											"end": 30934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30266,
											"end": 30934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30266,
											"end": 30934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30266,
											"end": 30934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30266,
											"end": 30934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30266,
											"end": 30934,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 30266,
											"end": 30934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30266,
											"end": 30934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 30266,
											"end": 30934,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 30940,
											"end": 31062,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 30940,
											"end": 31062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31013,
											"end": 31037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 31031,
											"end": 31036,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31013,
											"end": 31037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 31013,
											"end": 31037,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 31013,
											"end": 31037,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 31013,
											"end": 31037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31006,
											"end": 31011,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31003,
											"end": 31038,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 30993,
											"end": 30995,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 30993,
											"end": 30995,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 31052,
											"end": 31053,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31049,
											"end": 31050,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 31042,
											"end": 31054,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 30993,
											"end": 30995,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 30993,
											"end": 30995,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30983,
											"end": 31062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30983,
											"end": 31062,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 31068,
											"end": 31184,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 31068,
											"end": 31184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31138,
											"end": 31159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 31153,
											"end": 31158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31138,
											"end": 31159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 31138,
											"end": 31159,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 31138,
											"end": 31159,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 31138,
											"end": 31159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31131,
											"end": 31136,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31128,
											"end": 31160,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 31118,
											"end": 31120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 31118,
											"end": 31120,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 31174,
											"end": 31175,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31171,
											"end": 31172,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 31164,
											"end": 31176,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 31118,
											"end": 31120,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 31118,
											"end": 31120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31108,
											"end": 31184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31108,
											"end": 31184,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 31190,
											"end": 31310,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 31190,
											"end": 31310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31262,
											"end": 31285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 31279,
											"end": 31284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31262,
											"end": 31285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 31262,
											"end": 31285,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 31262,
											"end": 31285,
											"name": "tag",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 31262,
											"end": 31285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31255,
											"end": 31260,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31252,
											"end": 31286,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 31242,
											"end": 31244,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 31242,
											"end": 31244,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 31300,
											"end": 31301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31297,
											"end": 31298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 31290,
											"end": 31302,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 31242,
											"end": 31244,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 31242,
											"end": 31244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31232,
											"end": 31310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31232,
											"end": 31310,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 31316,
											"end": 31438,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 31316,
											"end": 31438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31389,
											"end": 31413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 31407,
											"end": 31412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31389,
											"end": 31413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 31389,
											"end": 31413,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 31389,
											"end": 31413,
											"name": "tag",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 31389,
											"end": 31413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31382,
											"end": 31387,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31379,
											"end": 31414,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 31369,
											"end": 31371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 31369,
											"end": 31371,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 31428,
											"end": 31429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 31425,
											"end": 31426,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 31418,
											"end": 31430,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 31369,
											"end": 31371,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 31369,
											"end": 31371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 31359,
											"end": 31438,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 31359,
											"end": 31438,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1155/Address.sol\":{\"keccak256\":\"0x3b74e064b6da34a7f0fb2118e56ce114bb40cb9658c6899c82e9b82e9051315e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a1f21cffab948ce9c49bfe9e017e00d77bd3c72e092b5169d3c2df5e33dc19\",\"dweb:/ipfs/QmRxYsuC1YzFZ76fsADhMwQdGdN9BGHZnws3PcboiDuEXT\"]},\"ERC1155/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"ERC1155/ERC1155.sol\":{\"keccak256\":\"0x92b32512307b31b2a329585485a0501b59598e3e9376fe121d67c01505c2e37d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c11019c746a1c7ee86feae5a0ca052969e9e5f26fd7e15a451e8f37b54bb88fa\",\"dweb:/ipfs/QmaRYGfmauFSxBTwRqnZhkUAF5kw7tavUgmNchLLsVcJRD\"]},\"ERC1155/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf52272689086dc9d257ad7a7933a794991c38f9d43d5301f9848223d19356b07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167588b93bb2e0fa8258cd1f101f5105ce045636df4dc39525186cf50f0394df\",\"dweb:/ipfs/QmVrHgCXvLmw4hdgXsqzWL3KHhZnkFgsDU5h1n5PXWLUp6\"]},\"ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x745a9a0f7b50bcc511f403bec236cae8d561dd73c08428e3ad0ac66c1c441c56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a919c492a0d32f4cfd9bb685d048857967fda19a7d681e4bf1db2c7c4e446d1\",\"dweb:/ipfs/Qmco96PfKfpXVXzfuursxr9sSWUVNSrXoboY1LJe2SevLP\"]},\"ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc48cda1346a8428f774c22cf73103051524df9eb54aa8617727890a10400e4f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f4f8461733f286b4b9092ecdcfc4af12624f38e841f04c42aa718361eaf92a3\",\"dweb:/ipfs/QmXbUpLdRVwsDhckEXiRKSZgQjEPsDgr1vfA92rfRfcvNb\"]},\"ERC1155/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 342,
								"contract": "ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 348,
								"contract": "ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 350,
								"contract": "ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1155/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"ERC1155/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf52272689086dc9d257ad7a7933a794991c38f9d43d5301f9848223d19356b07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167588b93bb2e0fa8258cd1f101f5105ce045636df4dc39525186cf50f0394df\",\"dweb:/ipfs/QmVrHgCXvLmw4hdgXsqzWL3KHhZnkFgsDU5h1n5PXWLUp6\"]},\"ERC1155/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf52272689086dc9d257ad7a7933a794991c38f9d43d5301f9848223d19356b07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://167588b93bb2e0fa8258cd1f101f5105ce045636df4dc39525186cf50f0394df\",\"dweb:/ipfs/QmVrHgCXvLmw4hdgXsqzWL3KHhZnkFgsDU5h1n5PXWLUp6\"]},\"ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x745a9a0f7b50bcc511f403bec236cae8d561dd73c08428e3ad0ac66c1c441c56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a919c492a0d32f4cfd9bb685d048857967fda19a7d681e4bf1db2c7c4e446d1\",\"dweb:/ipfs/Qmco96PfKfpXVXzfuursxr9sSWUVNSrXoboY1LJe2SevLP\"]},\"ERC1155/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc48cda1346a8428f774c22cf73103051524df9eb54aa8617727890a10400e4f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f4f8461733f286b4b9092ecdcfc4af12624f38e841f04c42aa718361eaf92a3\",\"dweb:/ipfs/QmXbUpLdRVwsDhckEXiRKSZgQjEPsDgr1vfA92rfRfcvNb\"]},\"ERC1155/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC1155/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC1155/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC1155/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC1155/Address.sol": {
				"ast": {
					"absolutePath": "ERC1155/Address.sol",
					"exportedSymbols": {
						"Address": [
							294
						]
					},
					"id": 295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294
							],
							"name": "Address",
							"nameLocation": "210:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1276:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1505:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1505:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1505:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1527:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1505:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1498:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1219:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1238:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1230:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1270:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1270:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:6:0"
									},
									"scope": 294,
									"src": "1210:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2542:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2569:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2561:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2561:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2561:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2561:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2586:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2561:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2594:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2553:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2645:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2640:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2640:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2688:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2658:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2658:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2680:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2658:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2658:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2639:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2710:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2719:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2702:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2702:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2702:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1544:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2480:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2506:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2490:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2525:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2517:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2489:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2542:0:0"
									},
									"scope": 294,
									"src": "2471:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "3639:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3670:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3678:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3684:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															68,
															88
														],
														"referencedDeclaration": 88,
														"src": "3657:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 66,
												"nodeType": "Return",
												"src": "3650:67:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2796:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3559:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3580:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3572:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3601:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3588:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3588:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3571:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3625:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3625:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:14:0"
									},
									"scope": 294,
									"src": "3550:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "4106:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 81,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "4146:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "4154:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4160:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 84,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4163:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 80,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4124:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4124:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 79,
												"id": 86,
												"nodeType": "Return",
												"src": "4117:59:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3733:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3964:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3995:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3987:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4025:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4012:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 72,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4012:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4054:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4040:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 74,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4040:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3976:97:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4092:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4092:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4091:14:0"
									},
									"scope": 294,
									"src": "3955:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "4706:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4746:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4754:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 103,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4760:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4767:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 100,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4724:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4724:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 99,
												"id": 106,
												"nodeType": "Return",
												"src": "4717:94:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4192:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4568:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4608:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4600:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4638:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4625:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4625:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4661:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4653:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4589:84:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4692:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4692:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4691:14:0"
									},
									"scope": 294,
									"src": "4559:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "5259:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 125,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5286:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5278:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 123,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5278:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5278:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5278:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 128,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5303:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5278:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5310:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5270:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5270:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "5270:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 135,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "5381:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 134,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "5370:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5370:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5390:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5362:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "5362:60:0"
											},
											{
												"assignments": [
													141,
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5441:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5436:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 140,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5436:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5463:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5450:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 142,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5450:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"arguments": [
														{
															"id": 148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "5503:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 144,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "5477:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5477:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5496:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5477:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5477:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5435:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5543:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 153,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5552:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 154,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "5564:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 151,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "5526:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5526:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 121,
												"id": 156,
												"nodeType": "Return",
												"src": "5519:58:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4827:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5084:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5154:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5141:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5141:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5177:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5169:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5207:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5193:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:121:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5245:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5244:14:0"
									},
									"scope": 294,
									"src": "5075:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "5870:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5907:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5915:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5921:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 168,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															175,
															210
														],
														"referencedDeclaration": 210,
														"src": "5888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5888:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 167,
												"id": 173,
												"nodeType": "Return",
												"src": "5881:80:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5593:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5779:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5806:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5798:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5827:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5814:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5814:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5797:35:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5856:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5855:14:0"
									},
									"scope": 294,
									"src": "5770:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "6323:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 189,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "6353:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 188,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "6342:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6342:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6362:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6334:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6334:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "6334:67:0"
											},
											{
												"assignments": [
													195,
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6420:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6415:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 194,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6415:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6442:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6429:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 196,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6429:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6474:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 198,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "6456:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6456:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6456:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6414:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6514:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 205,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6523:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6535:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 203,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "6497:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6497:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 186,
												"id": 208,
												"nodeType": "Return",
												"src": "6490:58:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5977:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6170:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6207:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6199:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6237:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6224:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6224:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6266:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6252:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6252:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6188:97:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6309:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6309:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6308:14:0"
									},
									"scope": 294,
									"src": "6161:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6840:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6879:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6887:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6893:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 220,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															227,
															262
														],
														"referencedDeclaration": 262,
														"src": "6858:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6858:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 219,
												"id": 225,
												"nodeType": "Return",
												"src": "6851:84:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "6564:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6752:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6781:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6773:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6802:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6789:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6789:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6772:35:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6826:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6826:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6825:14:0"
									},
									"scope": 294,
									"src": "6743:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7296:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 241,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "7326:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 240,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "7315:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7315:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7335:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7307:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "7307:69:0"
											},
											{
												"assignments": [
													247,
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7395:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7390:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 246,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7390:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7417:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7404:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 248,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7404:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"arguments": [
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7451:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7431:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7431:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7431:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7389:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7491:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 257,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7500:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 258,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7512:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 255,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "7474:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7474:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 238,
												"id": 260,
												"nodeType": "Return",
												"src": "7467:58:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6951:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7146:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7185:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7177:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7215:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7202:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7202:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7244:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7230:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7230:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7166:97:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7282:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7282:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7281:14:0"
									},
									"scope": 294,
									"src": "7137:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "7925:548:0",
										"statements": [
											{
												"condition": {
													"id": 274,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "7940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "7999:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 278,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "8085:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8085:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8105:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8085:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 288,
																"nodeType": "Block",
																"src": "8400:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 285,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "8426:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 284,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8419:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8419:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 287,
																		"nodeType": "ExpressionStatement",
																		"src": "8419:20:0"
																	}
																]
															},
															"id": 289,
															"nodeType": "IfStatement",
															"src": "8081:374:0",
															"trueBody": {
																"id": 283,
																"nodeType": "Block",
																"src": "8108:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8231:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8254:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8283:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8277:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8277:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8258:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8327:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8331:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8323:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8323:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8344:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8316:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8316:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8316:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8283:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8331:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 282,
																		"nodeType": "InlineAssembly",
																		"src": "8222:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "7936:530:0",
												"trueBody": {
													"id": 277,
													"nodeType": "Block",
													"src": "7949:44:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7971:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 273,
															"id": 276,
															"nodeType": "Return",
															"src": "7964:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "7541:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7770:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7802:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7797:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7797:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7833:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7820:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7820:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7868:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7854:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7854:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7786:101:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7911:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7911:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7910:14:0"
									},
									"scope": 294,
									"src": "7761:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 295,
							"src": "202:8274:0",
							"usedErrors": []
						}
					],
					"src": "104:8374:0"
				},
				"id": 0
			},
			"ERC1155/Context.sol": {
				"ast": {
					"absolutePath": "ERC1155/Context.sol",
					"exportedSymbols": {
						"Context": [
							316
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 297,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "Context",
							"nameLocation": "641:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "718:36:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 302,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 301,
												"id": 304,
												"nodeType": "Return",
												"src": "729:17:1"
											}
										]
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 316,
									"src": "656:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "829:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 311,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 310,
												"id": 313,
												"nodeType": "Return",
												"src": "840:15:1"
											}
										]
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "813:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:1"
									},
									"scope": 316,
									"src": "762:101:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 317,
							"src": "623:243:1",
							"usedErrors": []
						}
					],
					"src": "89:779:1"
				},
				"id": 1
			},
			"ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"Context": [
							316
						],
						"ERC1155": [
							1539
						],
						"ERC165": [
							1563
						],
						"IERC1155": [
							1685
						],
						"IERC1155MetadataURI": [
							1700
						],
						"IERC1155Receiver": [
							1741
						],
						"IERC165": [
							1753
						]
					},
					"id": 1540,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1540,
							"sourceUnit": 1686,
							"src": "139:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1540,
							"sourceUnit": 1742,
							"src": "165:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC1155/IERC1155MetadataURI.sol",
							"file": "./IERC1155MetadataURI.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1540,
							"sourceUnit": 1701,
							"src": "199:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC1155/Address.sol",
							"file": "./Address.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1540,
							"sourceUnit": 295,
							"src": "236:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC1155/Context.sol",
							"file": "./Context.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1540,
							"sourceUnit": 317,
							"src": "261:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC1155/ERC165.sol",
							"file": "./ERC165.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1540,
							"sourceUnit": 1564,
							"src": "286:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 326,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 316,
										"src": "554:7:2"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "554:7:2"
								},
								{
									"baseName": {
										"id": 328,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1563,
										"src": "563:6:2"
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "563:6:2"
								},
								{
									"baseName": {
										"id": 330,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1685,
										"src": "571:8:2"
									},
									"id": 331,
									"nodeType": "InheritanceSpecifier",
									"src": "571:8:2"
								},
								{
									"baseName": {
										"id": 332,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1700,
										"src": "581:19:2"
									},
									"id": 333,
									"nodeType": "InheritanceSpecifier",
									"src": "581:19:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 325,
								"nodeType": "StructuredDocumentation",
								"src": "312:220:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1539,
							"linearizedBaseContracts": [
								1539,
								1700,
								1685,
								1563,
								1753,
								316
							],
							"name": "ERC1155",
							"nameLocation": "543:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 336,
									"libraryName": {
										"id": 334,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 294,
										"src": "614:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "608:26:2",
									"typeName": {
										"id": 335,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "626:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 342,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "748:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1539,
									"src": "692:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 341,
										"keyType": {
											"id": 337,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "700:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "692:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 340,
											"keyType": {
												"id": 338,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "719:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "711:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 339,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "730:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 348,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "870:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1539,
									"src": "817:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 347,
										"keyType": {
											"id": 343,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "817:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 346,
											"keyType": {
												"id": 344,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "844:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "836:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 345,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "855:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 350,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1027:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1539,
									"src": "1012:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 349,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1012:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "1118:32:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 357,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "1137:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 356,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "1129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1129:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1129:13:2"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "1040:40:2",
										"text": " @dev See {_setURI}."
									},
									"id": 361,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1098:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 352,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1098:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1097:20:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1118:0:2"
									},
									"scope": 1539,
									"src": "1086:64:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1562,
										1752
									],
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "1330:202:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 372,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "1361:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 374,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1685,
																			"src": "1381:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1685_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1685_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 373,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1376:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1685",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1376:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1361:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 378,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "1419:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 380,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1700,
																			"src": "1439:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1700_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1700_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 379,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1434:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1434:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1700",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1434:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1419:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1361:110:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 387,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "1512:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 385,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1488:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1539_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1562,
															"src": "1488:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1488:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1361:163:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 371,
												"id": 390,
												"nodeType": "Return",
												"src": "1341:183:2"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "1158:58:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1231:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 368,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 366,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1563,
												"src": "1298:6:2"
											},
											{
												"id": 367,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1753,
												"src": "1306:7:2"
											}
										],
										"src": "1289:25:2"
									},
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1256:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1249:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 363,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1249:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:20:2"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1324:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1324:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:6:2"
									},
									"scope": 1539,
									"src": "1222:310:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1699
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2018:30:2",
										"statements": [
											{
												"expression": {
													"id": 401,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 350,
													"src": "2036:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 400,
												"id": 402,
												"nodeType": "Return",
												"src": "2029:11:2"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1540:397:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1952:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 397,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1985:8:2"
									},
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1956:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:9:2"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2003:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 398,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2003:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2002:15:2"
									},
									"scope": 1539,
									"src": "1943:105:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1623
									],
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "2294:136:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 416,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "2313:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2332:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2324:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 417,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2324:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2324:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2313:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2305:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2305:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "2305:77:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 425,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2400:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 427,
														"indexExpression": {
															"id": 426,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "2410:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2400:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 429,
													"indexExpression": {
														"id": 428,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "2414:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2400:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 414,
												"id": 430,
												"nodeType": "Return",
												"src": "2393:29:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "2056:137:2",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2208:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 411,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2267:8:2"
									},
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2226:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "2218:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2243:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "2235:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2235:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2217:29:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "2285:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:9:2"
									},
									"scope": 1539,
									"src": "2199:231:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1636
									],
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2775:345:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 447,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "2794:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2794:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 449,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "2813:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2813:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2794:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2825:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2786:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2786:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "2786:83:2"
											},
											{
												"assignments": [
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2899:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "2882:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 457,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2882:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 458,
															"nodeType": "ArrayTypeName",
															"src": "2882:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 463,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "2929:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2929:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2915:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 460,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2919:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 461,
															"nodeType": "ArrayTypeName",
															"src": "2919:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2915:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2882:63:2"
											},
											{
												"body": {
													"id": 491,
													"nodeType": "Block",
													"src": "3004:76:2",
													"statements": [
														{
															"expression": {
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 478,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "3019:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 480,
																	"indexExpression": {
																		"id": 479,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "3033:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3019:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 482,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 436,
																				"src": "3048:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 484,
																			"indexExpression": {
																				"id": 483,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 468,
																				"src": "3057:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3048:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 485,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 439,
																				"src": "3061:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 487,
																			"indexExpression": {
																				"id": 486,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 468,
																				"src": "3065:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3061:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 481,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "3038:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3038:30:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3019:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 490,
															"nodeType": "ExpressionStatement",
															"src": "3019:49:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 471,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "2978:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 472,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "2982:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2982:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2978:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"initializationExpression": {
													"assignments": [
														468
													],
													"declarations": [
														{
															"constant": false,
															"id": 468,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2971:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 492,
															"src": "2963:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 467,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2963:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 470,
													"initialValue": {
														"hexValue": "30",
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2975:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2963:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2999:3:2",
														"subExpression": {
															"id": 475,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "3001:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 477,
													"nodeType": "ExpressionStatement",
													"src": "2999:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2958:122:2"
											},
											{
												"expression": {
													"id": 493,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 459,
													"src": "3099:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 445,
												"id": 494,
												"nodeType": "Return",
												"src": "3092:20:2"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "2438:152:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2605:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 441,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2725:8:2"
									},
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2637:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2620:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 434,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2620:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 435,
													"nodeType": "ArrayTypeName",
													"src": "2620:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2664:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2647:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 437,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2647:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 438,
													"nodeType": "ArrayTypeName",
													"src": "2647:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2619:49:2"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2752:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 442,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2752:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 443,
													"nodeType": "ArrayTypeName",
													"src": "2752:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2751:18:2"
									},
									"scope": 1539,
									"src": "2596:524:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1644
									],
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "3277:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 506,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "3307:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "3321:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "3331:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 505,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "3288:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3288:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "3288:52:2"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "3128:59:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3202:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 503,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3268:8:2"
									},
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3228:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3220:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3243:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3238:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3238:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:33:2"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:2"
									},
									"scope": 1539,
									"src": "3193:155:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1654
									],
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "3525:63:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 524,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "3543:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 526,
														"indexExpression": {
															"id": 525,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3562:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3543:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 528,
													"indexExpression": {
														"id": 527,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "3571:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3543:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 523,
												"id": 529,
												"nodeType": "Return",
												"src": "3536:44:2"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "3356:58:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3429:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 520,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3501:8:2"
									},
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3454:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "3446:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3471:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "3463:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:35:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "3519:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3519:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3518:6:2"
									},
									"scope": 1539,
									"src": "3420:168:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1668
									],
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "3835:226:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 547,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "3868:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 548,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "3876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3876:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3868:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 552,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "3909:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 553,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 306,
																			"src": "3915:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3915:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 551,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "3892:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3892:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3868:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3943:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3846:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3846:151:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "3846:151:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "4026:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "4032:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "4036:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 564,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "4040:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4048:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 560,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "4008:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4008:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "4008:45:2"
											}
										]
									},
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "3596:58:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3669:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 544,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3826:8:2"
									},
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "3696:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3727:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "3719:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3748:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "3740:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3740:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3769:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "3761:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3761:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3799:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "3786:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3786:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3685:125:2"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3835:0:2"
									},
									"scope": 1539,
									"src": "3660:401:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1684
									],
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "4338:242:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 587,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "4371:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 588,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "4379:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4379:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4371:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "4412:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 593,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 306,
																			"src": "4418:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4418:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 591,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "4395:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4395:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4371:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4446:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4349:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4349:160:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "4349:160:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "4543:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "4549:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "4553:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 604,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "4558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 605,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "4567:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 600,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "4520:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4520:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "4520:52:2"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "4069:63:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4147:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 584,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4329:8:2"
									},
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4187:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4179:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4210:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4202:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4202:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4240:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4223:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 575,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4223:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 576,
													"nodeType": "ArrayTypeName",
													"src": "4223:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4271:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4254:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 578,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4254:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 579,
													"nodeType": "ArrayTypeName",
													"src": "4254:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4289:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4289:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4168:145:2"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4338:0:2"
									},
									"scope": 1539,
									"src": "4138:442:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "5213:805:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 624,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "5232:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5246:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5238:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 625,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5238:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5238:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5232:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5250:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5224:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5224:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "5224:66:2"
											},
											{
												"assignments": [
													634
												],
												"declarations": [
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5311:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "5303:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 633,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5303:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 637,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 635,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "5322:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5322:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5303:31:2"
											},
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5362:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "5345:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 640,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5345:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 641,
															"nodeType": "ArrayTypeName",
															"src": "5345:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 646,
												"initialValue": {
													"arguments": [
														{
															"id": 644,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "5386:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 643,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "5368:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5368:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5345:44:2"
											},
											{
												"assignments": [
													651
												],
												"declarations": [
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5417:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "5400:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 649,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5400:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 650,
															"nodeType": "ArrayTypeName",
															"src": "5400:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 655,
												"initialValue": {
													"arguments": [
														{
															"id": 653,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "5445:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 652,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "5427:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5427:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5400:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "5486:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 658,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5496:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "5502:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 660,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "5506:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 661,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "5511:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 662,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "5520:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 656,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "5465:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5465:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "5465:60:2"
											},
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5546:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "5538:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 665,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5538:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 672,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 667,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "5560:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 669,
														"indexExpression": {
															"id": 668,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "5570:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5560:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 671,
													"indexExpression": {
														"id": 670,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "5574:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5560:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5538:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 674,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "5598:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 675,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "5613:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5598:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5621:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5590:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5590:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "5590:76:2"
											},
											{
												"id": 690,
												"nodeType": "UncheckedBlock",
												"src": "5677:79:2",
												"statements": [
													{
														"expression": {
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 680,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "5702:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 683,
																	"indexExpression": {
																		"id": 681,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "5712:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5702:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 684,
																"indexExpression": {
																	"id": 682,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "5716:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5702:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 685,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "5724:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 686,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "5738:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5724:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5702:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 689,
														"nodeType": "ExpressionStatement",
														"src": "5702:42:2"
													}
												]
											},
											{
												"expression": {
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 691,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "5766:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 694,
															"indexExpression": {
																"id": 692,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "5776:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5766:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 695,
														"indexExpression": {
															"id": 693,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "5780:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5766:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 696,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5787:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5766:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "5766:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 700,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "5826:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5836:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "5842:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 703,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "5846:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 704,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "5850:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 699,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "5811:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5811:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "EmitStatement",
												"src": "5806:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 708,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "5890:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5900:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "5906:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "5910:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 712,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "5915:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 713,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "5924:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 707,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "5870:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5870:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "5870:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "5973:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5983:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "5989:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "5993:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 721,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "5997:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 722,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "6005:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "5942:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5942:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "5942:68:2"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "4588:450:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5053:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5089:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5081:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5081:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5112:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5104:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5133:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5125:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5125:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5154:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5146:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5184:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5171:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5171:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5070:125:2"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5213:0:2"
									},
									"scope": 1539,
									"src": "5044:974:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "6570:952:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 743,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "6589:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6589:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 745,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "6603:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6603:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6589:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6619:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6581:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6581:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "6581:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 752,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "6681:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6695:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6687:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 753,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6687:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6687:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6681:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6699:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6673:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6673:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "6673:66:2"
											},
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6760:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 860,
														"src": "6752:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 761,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6752:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 763,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "6771:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6771:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6752:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 767,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "6817:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "6827:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "6833:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "6837:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 771,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "6842:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 772,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "6851:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 766,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "6796:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6796:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "6796:60:2"
											},
											{
												"body": {
													"id": 832,
													"nodeType": "Block",
													"src": "6910:380:2",
													"statements": [
														{
															"assignments": [
																787
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 787,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6933:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 832,
																	"src": "6925:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 786,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6925:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 791,
															"initialValue": {
																"baseExpression": {
																	"id": 788,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "6938:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 790,
																"indexExpression": {
																	"id": 789,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "6942:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6938:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6925:19:2"
														},
														{
															"assignments": [
																793
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 793,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6967:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 832,
																	"src": "6959:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 792,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6959:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 797,
															"initialValue": {
																"baseExpression": {
																	"id": 794,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "6976:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 796,
																"indexExpression": {
																	"id": 795,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "6984:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6976:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6959:27:2"
														},
														{
															"assignments": [
																799
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 799,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7011:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 832,
																	"src": "7003:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 798,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7003:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 805,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 800,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "7025:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 802,
																	"indexExpression": {
																		"id": 801,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "7035:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7025:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 804,
																"indexExpression": {
																	"id": 803,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "7039:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7025:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7003:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 807,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "7067:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 808,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 793,
																			"src": "7082:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7067:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7090:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 806,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7059:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7059:76:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 812,
															"nodeType": "ExpressionStatement",
															"src": "7059:76:2"
														},
														{
															"id": 823,
															"nodeType": "UncheckedBlock",
															"src": "7150:87:2",
															"statements": [
																{
																	"expression": {
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 813,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 342,
																					"src": "7179:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 816,
																				"indexExpression": {
																					"id": 814,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 787,
																					"src": "7189:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7179:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 817,
																			"indexExpression": {
																				"id": 815,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 729,
																				"src": "7193:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7179:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 818,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "7201:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 819,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "7215:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7201:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7179:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 822,
																	"nodeType": "ExpressionStatement",
																	"src": "7179:42:2"
																}
															]
														},
														{
															"expression": {
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 824,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "7251:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 827,
																		"indexExpression": {
																			"id": 825,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 787,
																			"src": "7261:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7251:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 828,
																	"indexExpression": {
																		"id": 826,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 731,
																		"src": "7265:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7251:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 829,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "7272:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 831,
															"nodeType": "ExpressionStatement",
															"src": "7251:27:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 779,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "6889:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 780,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "6893:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6893:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6889:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 833,
												"initializationExpression": {
													"assignments": [
														776
													],
													"declarations": [
														{
															"constant": false,
															"id": 776,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6882:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 833,
															"src": "6874:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 775,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6874:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 778,
													"initialValue": {
														"hexValue": "30",
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6886:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6874:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6905:3:2",
														"subExpression": {
															"id": 783,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "6907:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 785,
													"nodeType": "ExpressionStatement",
													"src": "6905:3:2"
												},
												"nodeType": "ForStatement",
												"src": "6869:421:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 835,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "7321:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "7331:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 837,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "7337:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "7341:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 839,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "7346:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 834,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "7307:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "EmitStatement",
												"src": "7302:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 843,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "7387:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "7397:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "7403:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "7407:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 847,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "7412:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 848,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7421:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 842,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "7367:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7367:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "7367:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 852,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "7475:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "7485:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "7491:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "7495:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 856,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "7500:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 857,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7509:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 851,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "7439:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7439:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "7439:75:2"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "6026:344:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6385:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6426:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "6418:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6449:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "6441:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6441:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6479:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "6462:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 732,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6462:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 733,
													"nodeType": "ArrayTypeName",
													"src": "6462:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6510:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "6493:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 735,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 736,
													"nodeType": "ArrayTypeName",
													"src": "6493:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6541:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "6528:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6528:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6407:145:2"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6570:0:2"
									},
									"scope": 1539,
									"src": "6376:1146:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "8422:32:2",
										"statements": [
											{
												"expression": {
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 867,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "8433:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 868,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "8440:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8433:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "8433:13:2"
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "7530:830:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8375:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8397:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "8383:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 863,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8383:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8382:22:2"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8422:0:2"
									},
									"scope": 1539,
									"src": "8366:88:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "8974:595:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 885,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "8993:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9007:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8999:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 886,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8999:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8999:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8993:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9011:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8985:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "8985:62:2"
											},
											{
												"assignments": [
													895
												],
												"declarations": [
													{
														"constant": false,
														"id": 895,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9068:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 972,
														"src": "9060:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 894,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9060:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 898,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 896,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "9079:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9079:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9060:31:2"
											},
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "9119:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 972,
														"src": "9102:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 901,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9102:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 902,
															"nodeType": "ArrayTypeName",
															"src": "9102:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"initialValue": {
													"arguments": [
														{
															"id": 905,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "9143:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 904,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "9125:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9125:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9102:44:2"
											},
											{
												"assignments": [
													912
												],
												"declarations": [
													{
														"constant": false,
														"id": 912,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "9174:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 972,
														"src": "9157:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 910,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9157:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 911,
															"nodeType": "ArrayTypeName",
															"src": "9157:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"arguments": [
														{
															"id": 914,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9202:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 913,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "9184:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9184:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9157:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 918,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9243:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9261:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9253:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 919,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9253:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9253:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9265:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "9269:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 925,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "9274:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 926,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "9283:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 917,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "9222:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9222:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "9222:66:2"
											},
											{
												"expression": {
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 929,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "9301:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 932,
															"indexExpression": {
																"id": 930,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "9311:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9301:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 933,
														"indexExpression": {
															"id": 931,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9315:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9301:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 934,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "9322:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9301:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "9301:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 938,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9359:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9377:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9369:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 939,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9369:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9369:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9381:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "9385:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 945,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9389:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 937,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "9344:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9344:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "EmitStatement",
												"src": "9339:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 949,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9429:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9447:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9439:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9439:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9439:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9451:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "9455:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 956,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "9460:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 957,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "9469:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 948,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "9409:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9409:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "9409:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 961,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9518:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9536:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9528:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9528:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9528:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9540:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "9544:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 968,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9548:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 969,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "9556:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 960,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "9487:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9487:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "9487:74:2"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "8462:372:2",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8849:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8873:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "8865:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8894:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "8886:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8915:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "8907:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8907:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8945:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "8932:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 880,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8932:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:102:2"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8974:0:2"
									},
									"scope": 1539,
									"src": "8840:729:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "10084:654:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 988,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "10103:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10117:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10109:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 989,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10109:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10109:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10103:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10121:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 987,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10095:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10095:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "10095:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 998,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "10176:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10176:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1000,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "10190:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10190:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10176:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10206:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 997,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10168:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10168:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "10168:81:2"
											},
											{
												"assignments": [
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10270:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1083,
														"src": "10262:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1006,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10262:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1010,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1008,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "10281:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10281:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10262:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1012,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "10327:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10345:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10337:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1013,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10337:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10337:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1017,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "10349:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1018,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "10353:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1019,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "10358:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1020,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1011,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "10306:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10306:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "10306:66:2"
											},
											{
												"body": {
													"id": 1046,
													"nodeType": "Block",
													"src": "10426:62:2",
													"statements": [
														{
															"expression": {
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1034,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "10441:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1039,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1035,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 979,
																				"src": "10451:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1037,
																			"indexExpression": {
																				"id": 1036,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1024,
																				"src": "10455:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10451:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10441:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1040,
																	"indexExpression": {
																		"id": 1038,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "10459:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10441:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1041,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 982,
																		"src": "10466:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1043,
																	"indexExpression": {
																		"id": 1042,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "10474:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10466:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10441:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1045,
															"nodeType": "ExpressionStatement",
															"src": "10441:35:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1027,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "10405:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1028,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "10409:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10409:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10405:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1047,
												"initializationExpression": {
													"assignments": [
														1024
													],
													"declarations": [
														{
															"constant": false,
															"id": 1024,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10398:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1047,
															"src": "10390:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1023,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10390:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1026,
													"initialValue": {
														"hexValue": "30",
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10402:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10390:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10421:3:2",
														"subExpression": {
															"id": 1031,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "10421:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1033,
													"nodeType": "ExpressionStatement",
													"src": "10421:3:2"
												},
												"nodeType": "ForStatement",
												"src": "10385:103:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1049,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "10519:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10537:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10529:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1050,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10529:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10529:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "10541:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "10545:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1056,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "10550:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1048,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "10505:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10505:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "EmitStatement",
												"src": "10500:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1060,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "10591:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10609:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10601:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1061,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10601:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10601:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1065,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "10613:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "10617:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1067,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "10622:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1068,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10631:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1059,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "10571:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10571:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "10571:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1072,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "10685:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10703:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10695:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1073,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10695:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10695:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "10707:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "10711:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1079,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "10716:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1080,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10725:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1071,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "10649:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10649:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "10649:81:2"
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "9577:342:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9934:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9963:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "9955:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9955:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9993:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "9976:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 977,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9976:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 978,
													"nodeType": "ArrayTypeName",
													"src": "9976:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "10024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "10007:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 980,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10007:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 981,
													"nodeType": "ArrayTypeName",
													"src": "10007:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10055:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "10042:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 983,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10042:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9944:122:2"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10084:0:2"
									},
									"scope": 1539,
									"src": "9925:813:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "11096:700:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1095,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "11115:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11131:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11123:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1096,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11123:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11123:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11115:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11135:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11107:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11107:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "11107:66:2"
											},
											{
												"assignments": [
													1105
												],
												"declarations": [
													{
														"constant": false,
														"id": 1105,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11194:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1188,
														"src": "11186:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1104,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11186:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1106,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "11205:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11186:31:2"
											},
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "11245:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1188,
														"src": "11228:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1111,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11228:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1112,
															"nodeType": "ArrayTypeName",
															"src": "11228:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"arguments": [
														{
															"id": 1115,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "11269:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1114,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "11251:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11251:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11228:44:2"
											},
											{
												"assignments": [
													1122
												],
												"declarations": [
													{
														"constant": false,
														"id": 1122,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11300:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1188,
														"src": "11283:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1120,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11283:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1121,
															"nodeType": "ArrayTypeName",
															"src": "11283:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1126,
												"initialValue": {
													"arguments": [
														{
															"id": 1124,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "11328:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1123,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "11310:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11310:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11283:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1128,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "11369:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "11379:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11393:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11385:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11385:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11385:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "11397:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1135,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "11402:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11411:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1127,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "11348:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11348:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "11348:66:2"
											},
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11435:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1188,
														"src": "11427:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11427:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1146,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1141,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "11449:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1143,
														"indexExpression": {
															"id": 1142,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "11459:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11449:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1145,
													"indexExpression": {
														"id": 1144,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "11463:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11449:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11427:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1148,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "11487:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1149,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1091,
																"src": "11502:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11487:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11510:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11479:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11479:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "11479:70:2"
											},
											{
												"id": 1164,
												"nodeType": "UncheckedBlock",
												"src": "11560:79:2",
												"statements": [
													{
														"expression": {
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1154,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "11585:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1157,
																	"indexExpression": {
																		"id": 1155,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "11595:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11585:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1158,
																"indexExpression": {
																	"id": 1156,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "11599:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11585:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1159,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "11607:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1160,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "11621:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11607:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11585:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1163,
														"nodeType": "ExpressionStatement",
														"src": "11585:42:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1166,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "11671:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1167,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "11681:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11695:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11687:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1168,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11687:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11687:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1172,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "11699:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1173,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "11703:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1165,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "11656:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11656:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "EmitStatement",
												"src": "11651:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1177,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "11743:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1178,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "11753:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11767:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11759:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1179,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11759:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11759:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "11771:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1184,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "11776:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11785:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1176,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "11723:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11723:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "11723:65:2"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "10746:236:2",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10997:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11021:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "11013:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11013:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "11044:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "11036:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11065:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "11057:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11057:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11002:76:2"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11096:0:2"
									},
									"scope": 1539,
									"src": "10988:808:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "12132:836:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1202,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "12151:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12167:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12159:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1203,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12159:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12159:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12151:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12171:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12143:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12143:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "12143:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1212,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "12228:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12228:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1214,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "12242:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12242:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12228:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12258:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12220:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12220:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "12220:81:2"
											},
											{
												"assignments": [
													1221
												],
												"declarations": [
													{
														"constant": false,
														"id": 1221,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12322:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1311,
														"src": "12314:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1220,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12314:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1224,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1222,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "12333:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12333:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12314:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "12379:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "12389:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12403:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12395:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1228,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12395:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12395:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "12407:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1233,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "12412:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12421:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1225,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "12358:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12358:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "12358:66:2"
											},
											{
												"body": {
													"id": 1286,
													"nodeType": "Block",
													"src": "12478:332:2",
													"statements": [
														{
															"assignments": [
																1249
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1249,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12501:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1286,
																	"src": "12493:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1248,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12493:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1253,
															"initialValue": {
																"baseExpression": {
																	"id": 1250,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "12506:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1252,
																"indexExpression": {
																	"id": 1251,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "12510:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12506:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12493:19:2"
														},
														{
															"assignments": [
																1255
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1255,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12535:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1286,
																	"src": "12527:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1254,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12527:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1259,
															"initialValue": {
																"baseExpression": {
																	"id": 1256,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "12544:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1258,
																"indexExpression": {
																	"id": 1257,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "12552:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12544:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12527:27:2"
														},
														{
															"assignments": [
																1261
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1261,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12579:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1286,
																	"src": "12571:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1260,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12571:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1267,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1262,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "12593:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1264,
																	"indexExpression": {
																		"id": 1263,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "12603:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12593:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1266,
																"indexExpression": {
																	"id": 1265,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "12607:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12593:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12571:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1269,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "12635:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1270,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "12650:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12635:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12658:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1268,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12627:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12627:70:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1274,
															"nodeType": "ExpressionStatement",
															"src": "12627:70:2"
														},
														{
															"id": 1285,
															"nodeType": "UncheckedBlock",
															"src": "12712:87:2",
															"statements": [
																{
																	"expression": {
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1275,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 342,
																					"src": "12741:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1278,
																				"indexExpression": {
																					"id": 1276,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1249,
																					"src": "12751:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12741:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1279,
																			"indexExpression": {
																				"id": 1277,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1192,
																				"src": "12755:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12741:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1280,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1261,
																				"src": "12763:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1281,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "12777:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12763:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12741:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1284,
																	"nodeType": "ExpressionStatement",
																	"src": "12741:42:2"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1241,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "12457:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1242,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "12461:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12461:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12457:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1287,
												"initializationExpression": {
													"assignments": [
														1238
													],
													"declarations": [
														{
															"constant": false,
															"id": 1238,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12450:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1287,
															"src": "12442:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1237,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12442:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1240,
													"initialValue": {
														"hexValue": "30",
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12454:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12442:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12473:3:2",
														"subExpression": {
															"id": 1245,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "12473:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1247,
													"nodeType": "ExpressionStatement",
													"src": "12473:3:2"
												},
												"nodeType": "ForStatement",
												"src": "12437:373:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1289,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "12841:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "12851:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12865:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12857:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1291,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12857:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12857:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1295,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "12869:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1296,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "12874:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1288,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "12827:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12827:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "EmitStatement",
												"src": "12822:60:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1300,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "12915:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1301,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "12925:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12939:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12931:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1302,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12931:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12931:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1306,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "12943:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1307,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "12948:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12957:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1299,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "12895:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12895:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "12895:65:2"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "11804:189:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12008:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12037:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "12029:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12069:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "12052:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1193,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12052:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1194,
													"nodeType": "ArrayTypeName",
													"src": "12052:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "12100:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "12083:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1196,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12083:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1197,
													"nodeType": "ArrayTypeName",
													"src": "12083:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12018:96:2"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12132:0:2"
									},
									"scope": 1539,
									"src": "11999:969:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "13237:204:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1323,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "13256:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1324,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1317,
																"src": "13265:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13256:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13275:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13248:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13248:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "13248:71:2"
											},
											{
												"expression": {
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1329,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "13330:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1332,
															"indexExpression": {
																"id": 1330,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "13349:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13330:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1333,
														"indexExpression": {
															"id": 1331,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "13356:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13330:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1334,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "13368:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13330:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "13330:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1338,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "13407:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1339,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "13414:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1340,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "13424:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1337,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "13392:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13392:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "EmitStatement",
												"src": "13387:46:2"
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "12976:128:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13119:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13156:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "13148:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13148:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13180:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "13172:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13204:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "13199:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13199:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13137:82:2"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13237:0:2"
									},
									"scope": 1539,
									"src": "13110:331:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "14616:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "13449:942:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14406:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14445:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "14437:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14437:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14472:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "14464:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14464:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14495:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "14487:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14525:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "14508:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1352,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14508:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1353,
													"nodeType": "ArrayTypeName",
													"src": "14508:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14556:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "14539:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1355,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14539:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1356,
													"nodeType": "ArrayTypeName",
													"src": "14539:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14587:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "14574:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14574:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14426:172:2"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14616:0:2"
									},
									"scope": 1539,
									"src": "14397:221:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "15791:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "14626:941:2",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15582:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15620:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "15612:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15612:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15647:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "15639:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15639:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15670:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "15662:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15662:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15700:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "15683:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1371,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15683:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1372,
													"nodeType": "ArrayTypeName",
													"src": "15683:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15731:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "15714:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1374,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15714:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1375,
													"nodeType": "ArrayTypeName",
													"src": "15714:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15762:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "15749:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15749:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15601:172:2"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15791:0:2"
									},
									"scope": 1539,
									"src": "15573:220:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "16001:544:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1397,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "16016:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "16016:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16016:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1443,
												"nodeType": "IfStatement",
												"src": "16012:526:2",
												"trueBody": {
													"id": 1442,
													"nodeType": "Block",
													"src": "16033:505:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1424,
																		"nodeType": "Block",
																		"src": "16151:188:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1417,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1413,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1411,
																						"src": "16174:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1414,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1741,
																								"src": "16186:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1741_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1415,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1722,
																							"src": "16186:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1416,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16186:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16174:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1423,
																				"nodeType": "IfStatement",
																				"src": "16170:154:2",
																				"trueBody": {
																					"id": 1422,
																					"nodeType": "Block",
																					"src": "16231:93:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1419,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16261:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1418,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16254:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1420,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16254:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1421,
																							"nodeType": "ExpressionStatement",
																							"src": "16254:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1425,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1412,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1411,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16141:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1425,
																				"src": "16134:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1410,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16134:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16133:17:2"
																	},
																	"src": "16125:214:2"
																},
																{
																	"block": {
																		"id": 1433,
																		"nodeType": "Block",
																		"src": "16374:49:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1430,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1427,
																							"src": "16400:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1429,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16393:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1431,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16393:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1432,
																				"nodeType": "ExpressionStatement",
																				"src": "16393:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1434,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1428,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1427,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16366:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1434,
																				"src": "16352:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1426,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16352:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16351:22:2"
																	},
																	"src": "16340:83:2"
																},
																{
																	"block": {
																		"id": 1439,
																		"nodeType": "Block",
																		"src": "16430:97:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1436,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16456:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1435,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16449:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16449:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1438,
																				"nodeType": "ExpressionStatement",
																				"src": "16449:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1440,
																	"nodeType": "TryCatchClause",
																	"src": "16424:103:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1404,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "16091:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1405,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "16101:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1406,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "16107:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1407,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1392,
																		"src": "16111:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1408,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "16119:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1401,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1388,
																				"src": "16069:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1400,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1741,
																			"src": "16052:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1741_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16052:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1741",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1722,
																	"src": "16052:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16052:72:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1441,
															"nodeType": "TryStatement",
															"src": "16048:479:2"
														}
													]
												}
											}
										]
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15810:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15859:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "15851:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15886:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "15878:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15878:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15909:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "15901:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15901:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15930:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "15922:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15922:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15951:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "15943:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15943:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15981:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "15968:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15968:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15840:152:2"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16001:0:2"
									},
									"scope": 1539,
									"src": "15801:744:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "16778:588:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1462,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "16793:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "16793:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16793:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1508,
												"nodeType": "IfStatement",
												"src": "16789:570:2",
												"trueBody": {
													"id": 1507,
													"nodeType": "Block",
													"src": "16810:549:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1489,
																		"nodeType": "Block",
																		"src": "16967:193:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1482,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1478,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1476,
																						"src": "16990:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1479,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1741,
																								"src": "17002:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1741_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1480,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1740,
																							"src": "17002:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1481,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17002:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16990:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1488,
																				"nodeType": "IfStatement",
																				"src": "16986:159:2",
																				"trueBody": {
																					"id": 1487,
																					"nodeType": "Block",
																					"src": "17052:93:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1484,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "17082:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1483,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "17075:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1485,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17075:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1486,
																							"nodeType": "ExpressionStatement",
																							"src": "17075:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1490,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1477,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1476,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16943:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1490,
																				"src": "16936:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1475,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16936:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16917:49:2"
																	},
																	"src": "16909:251:2"
																},
																{
																	"block": {
																		"id": 1498,
																		"nodeType": "Block",
																		"src": "17195:49:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1495,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1492,
																							"src": "17221:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1494,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17214:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1496,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17214:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1497,
																				"nodeType": "ExpressionStatement",
																				"src": "17214:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1499,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1493,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1492,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17187:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1499,
																				"src": "17173:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1491,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "17173:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17172:22:2"
																	},
																	"src": "17161:83:2"
																},
																{
																	"block": {
																		"id": 1504,
																		"nodeType": "Block",
																		"src": "17251:97:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1501,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17277:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1500,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17270:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1502,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17270:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1503,
																				"nodeType": "ExpressionStatement",
																				"src": "17270:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1505,
																	"nodeType": "TryCatchClause",
																	"src": "17245:103:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1469,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "16873:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1470,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "16883:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1471,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "16889:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1472,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "16894:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1473,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1459,
																		"src": "16903:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1466,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1451,
																				"src": "16846:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1465,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1741,
																			"src": "16829:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1741_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16829:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1741",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1740,
																	"src": "16829:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16829:79:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1506,
															"nodeType": "TryStatement",
															"src": "16825:523:2"
														}
													]
												}
											}
										]
									},
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16562:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16616:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "16608:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16608:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16643:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "16635:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16666:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "16658:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16696:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "16679:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1452,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16679:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1453,
													"nodeType": "ArrayTypeName",
													"src": "16679:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16727:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "16710:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1455,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16710:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1456,
													"nodeType": "ArrayTypeName",
													"src": "16710:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16758:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "16745:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16745:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16597:172:2"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16778:0:2"
									},
									"scope": 1539,
									"src": "16553:813:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "17458:114:2",
										"statements": [
											{
												"assignments": [
													1522
												],
												"declarations": [
													{
														"constant": false,
														"id": 1522,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17486:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "17469:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1520,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17469:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1521,
															"nodeType": "ArrayTypeName",
															"src": "17469:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1528,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17508:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17494:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1523,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17498:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1524,
															"nodeType": "ArrayTypeName",
															"src": "17498:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17494:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17469:41:2"
											},
											{
												"expression": {
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1529,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "17521:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1531,
														"indexExpression": {
															"hexValue": "30",
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17527:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1532,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "17532:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17521:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "17521:18:2"
											},
											{
												"expression": {
													"id": 1535,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1522,
													"src": "17559:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1517,
												"id": 1536,
												"nodeType": "Return",
												"src": "17552:12:2"
											}
										]
									},
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "17383:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "17409:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "17401:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17401:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17400:17:2"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "17440:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1514,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17440:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1515,
													"nodeType": "ArrayTypeName",
													"src": "17440:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17439:18:2"
									},
									"scope": 1539,
									"src": "17374:198:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1540,
							"src": "534:17041:2",
							"usedErrors": []
						}
					],
					"src": "112:17463:2"
				},
				"id": 2
			},
			"ERC1155/ERC165.sol": {
				"ast": {
					"absolutePath": "ERC1155/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1563
						],
						"IERC165": [
							1753
						]
					},
					"id": 1564,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1541,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:3"
						},
						{
							"absolutePath": "ERC1155/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1542,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1564,
							"sourceUnit": 1754,
							"src": "129:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1544,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1753,
										"src": "775:7:3"
									},
									"id": 1545,
									"nodeType": "InheritanceSpecifier",
									"src": "775:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1543,
								"nodeType": "StructuredDocumentation",
								"src": "156:589:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1563,
							"linearizedBaseContracts": [
								1563,
								1753
							],
							"name": "ERC165",
							"nameLocation": "765:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1752
									],
									"body": {
										"id": 1561,
										"nodeType": "Block",
										"src": "945:66:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1554,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "963:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1556,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1753,
																	"src": "983:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1753_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1753_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1555,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "978:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "978:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1753",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "978:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "963:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1553,
												"id": 1560,
												"nodeType": "Return",
												"src": "956:47:3"
											}
										]
									},
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "790:58:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "863:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1550,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "921:8:3"
									},
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "888:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "881:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1547,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "881:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:20:3"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "939:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1551,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "939:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:6:3"
									},
									"scope": 1563,
									"src": "854:157:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1564,
							"src": "747:267:3",
							"usedErrors": []
						}
					],
					"src": "102:914:3"
				},
				"id": 3
			},
			"ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1685
						],
						"IERC165": [
							1753
						]
					},
					"id": 1686,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1565,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "98:23:4"
						},
						{
							"absolutePath": "ERC1155/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1566,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1686,
							"sourceUnit": 1754,
							"src": "125:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1568,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1753,
										"src": "346:7:4"
									},
									"id": 1569,
									"nodeType": "InheritanceSpecifier",
									"src": "346:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1567,
								"nodeType": "StructuredDocumentation",
								"src": "152:170:4",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1685,
							"linearizedBaseContracts": [
								1685,
								1753
							],
							"name": "IERC1155",
							"nameLocation": "334:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "361:123:4",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1582,
									"name": "TransferSingle",
									"nameLocation": "496:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "527:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "511:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "553:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "537:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "575:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "559:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "587:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "579:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "599:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "591:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:95:4"
									},
									"src": "490:116:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1583,
										"nodeType": "StructuredDocumentation",
										"src": "614:147:4",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1597,
									"name": "TransferBatch",
									"nameLocation": "773:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "797:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "848:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "832:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "879:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "863:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "902:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "892:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1590,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "892:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1591,
													"nodeType": "ArrayTypeName",
													"src": "892:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "926:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "916:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1593,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "916:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1594,
													"nodeType": "ArrayTypeName",
													"src": "916:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:153:4"
									},
									"src": "767:173:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "948:150:4",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1606,
									"name": "ApprovalForAll",
									"nameLocation": "1110:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1141:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "1125:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1166:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "1150:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1181:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "1176:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1176:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:66:4"
									},
									"src": "1104:87:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "1199:349:4",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1613,
									"name": "URI",
									"nameLocation": "1560:3:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1571:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "1564:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1608,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1564:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1594:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "1578:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1578:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:34:4"
									},
									"src": "1554:44:4"
								},
								{
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "1606:179:4",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1623,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1800:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1818:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "1810:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1810:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1835:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "1827:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1809:29:4"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "1862:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1861:9:4"
									},
									"scope": 1685,
									"src": "1791:80:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "1879:194:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1636,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2088:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2122:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "2103:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1625,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2103:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1626,
													"nodeType": "ArrayTypeName",
													"src": "2103:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2151:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "2132:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1628,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2132:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1629,
													"nodeType": "ArrayTypeName",
													"src": "2132:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2102:53:4"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "2206:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1632,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2206:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1633,
													"nodeType": "ArrayTypeName",
													"src": "2206:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:18:4"
									},
									"scope": 1685,
									"src": "2079:145:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1637,
										"nodeType": "StructuredDocumentation",
										"src": "2232:256:4",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2503:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2529:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "2521:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2521:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2544:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "2539:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2539:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2520:33:4"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2562:0:4"
									},
									"scope": 1685,
									"src": "2494:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "2571:139:4",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2725:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2750:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2742:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2767:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2759:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:35:4"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "2800:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1651,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2800:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2799:6:4"
									},
									"scope": 1685,
									"src": "2716:90:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "2814:571:4",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1668,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3400:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3435:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "3427:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3458:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "3450:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3450:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3479:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "3471:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3471:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3500:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "3492:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3532:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "3517:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3517:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3416:127:4"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3552:0:4"
									},
									"scope": 1685,
									"src": "3391:162:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "3561:400:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3976:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4016:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "4008:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4039:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "4031:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4071:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "4052:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1674,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4052:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1675,
													"nodeType": "ArrayTypeName",
													"src": "4052:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4104:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "4085:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1677,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4085:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1678,
													"nodeType": "ArrayTypeName",
													"src": "4085:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4137:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "4122:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1680,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4122:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3997:151:4"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4157:0:4"
									},
									"scope": 1685,
									"src": "3967:191:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1686,
							"src": "324:3837:4",
							"usedErrors": []
						}
					],
					"src": "98:4065:4"
				},
				"id": 4
			},
			"ERC1155/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "ERC1155/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1685
						],
						"IERC1155MetadataURI": [
							1700
						],
						"IERC165": [
							1753
						]
					},
					"id": 1701,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1687,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "120:23:5"
						},
						{
							"absolutePath": "ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 1688,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1701,
							"sourceUnit": 1686,
							"src": "147:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1690,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1685,
										"src": "409:8:5"
									},
									"id": 1691,
									"nodeType": "InheritanceSpecifier",
									"src": "409:8:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1689,
								"nodeType": "StructuredDocumentation",
								"src": "175:199:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1700,
							"linearizedBaseContracts": [
								1700,
								1685,
								1753
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "386:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "425:197:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1699,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "637:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "649:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "641:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:12:5"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "676:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1696,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "676:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "675:15:5"
									},
									"scope": 1700,
									"src": "628:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1701,
							"src": "376:318:5",
							"usedErrors": []
						}
					],
					"src": "120:576:5"
				},
				"id": 5
			},
			"ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1741
						],
						"IERC165": [
							1753
						]
					},
					"id": 1742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1702,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:6"
						},
						{
							"absolutePath": "ERC1155/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1703,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 1754,
							"src": "148:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1705,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1753,
										"src": "248:7:6"
									},
									"id": 1706,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1704,
								"nodeType": "StructuredDocumentation",
								"src": "175:41:6",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1741,
							"linearizedBaseContracts": [
								1741,
								1753
							],
							"name": "IERC1155Receiver",
							"nameLocation": "228:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "263:840:6",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1118:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1154:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "1146:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1181:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "1173:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1204:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "1196:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1225:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "1217:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1256:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "1241:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1716,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1241:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:132:6"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "1286:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1719,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1286:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:8:6"
									},
									"scope": 1741,
									"src": "1109:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "1302:1009:6",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2326:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2367:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2359:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2359:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2394:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2386:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2428:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2409:22:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1728,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2409:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1729,
													"nodeType": "ArrayTypeName",
													"src": "2409:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2461:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2442:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1731,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2442:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1732,
													"nodeType": "ArrayTypeName",
													"src": "2442:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2493:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2478:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1734,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2478:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2348:156:6"
									},
									"returnParameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2523:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1737,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2523:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2522:8:6"
									},
									"scope": 1741,
									"src": "2317:214:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1742,
							"src": "218:2316:6",
							"usedErrors": []
						}
					],
					"src": "121:2415:6"
				},
				"id": 6
			},
			"ERC1155/IERC165.sol": {
				"ast": {
					"absolutePath": "ERC1155/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1753
						]
					},
					"id": 1754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1743,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1744,
								"nodeType": "StructuredDocumentation",
								"src": "130:287:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1753,
							"linearizedBaseContracts": [
								1753
							],
							"name": "IERC165",
							"nameLocation": "429:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1745,
										"nodeType": "StructuredDocumentation",
										"src": "444:347:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "806:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "831:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "824:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1746,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:20:7"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "867:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:6:7"
									},
									"scope": 1753,
									"src": "797:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1754,
							"src": "419:457:7",
							"usedErrors": []
						}
					],
					"src": "103:775:7"
				},
				"id": 7
			}
		}
	}
}