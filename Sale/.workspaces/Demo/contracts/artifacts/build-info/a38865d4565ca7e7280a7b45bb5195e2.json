{
	"id": "a38865d4565ca7e7280a7b45bb5195e2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/1_Storage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./TransferHelper.sol\";\n\ncontract Storage {\n    function send(address token, uint256 amount) public {\n        TransferHelper.safeTransfer(\n            address(token),\n            msg.sender,\n            amount\n        );\n    }\n\n    function approveToken(address token, uint256 amount) public {\n        TransferHelper.safeApprove(\n            address(token),\n            msg.sender,\n            amount\n        );\n    } \n\n    function getDataTime() public view returns(uint256) {\n        return block.timestamp;\n    }\n}"
			},
			"contracts/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n    helper methods for interacting with ERC20 tokens that do not consistently return true/false\r\n    with the addition of a transfer function to send eth or an erc20 token\r\n*/\r\nlibrary TransferHelper {\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x095ea7b3, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: APPROVE_FAILED\"\r\n        );\r\n    }\r\n \r\n    function safeTransfer(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0xa9059cbb, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FAILED\"\r\n        );\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FROM_FAILED\"\r\n        );\r\n    }\r\n\r\n    // sends ETH or an erc20 token\r\n    function safeTransferBaseToken(\r\n        address token,\r\n        address payable to,\r\n        uint256 value,\r\n        bool isERC20\r\n    ) internal {\r\n        if (!isERC20) {\r\n            to.transfer(value);\r\n        } else {\r\n            (bool success, bytes memory data) = token.call(\r\n                abi.encodeWithSelector(0xa9059cbb, to, value)\r\n            );\r\n            require(\r\n                success && (data.length == 0 || abi.decode(data, (bool))),\r\n                \"TransferHelper: TRANSFER_FAILED\"\r\n            );\r\n        }\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/1_Storage.sol": {
				"Storage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approveToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDataTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/1_Storage.sol\":102:594  contract Storage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/1_Storage.sol\":102:594  contract Storage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x022fc88b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2503c65c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd0679d34\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/1_Storage.sol\":309:494  function approveToken(address token, uint256 amount) public {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/1_Storage.sol\":501:592  function getDataTime() public view returns(uint256) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_Storage.sol\":125:303  function send(address token, uint256 amount) public {... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_15:\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/1_Storage.sol\":309:494  function approveToken(address token, uint256 amount) public {... */\n    tag_9:\n        /* \"contracts/1_Storage.sol\":379:487  TransferHelper.safeApprove(... */\n      tag_18\n        /* \"contracts/1_Storage.sol\":427:432  token */\n      dup3\n        /* \"contracts/1_Storage.sol\":447:457  msg.sender */\n      caller\n        /* \"contracts/1_Storage.sol\":471:477  amount */\n      dup4\n        /* \"contracts/1_Storage.sol\":379:405  TransferHelper.safeApprove */\n      tag_19\n        /* \"contracts/1_Storage.sol\":379:487  TransferHelper.safeApprove(... */\n      jump\t// in\n    tag_18:\n        /* \"contracts/1_Storage.sol\":309:494  function approveToken(address token, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":501:592  function getDataTime() public view returns(uint256) {... */\n    tag_11:\n        /* \"contracts/1_Storage.sol\":544:551  uint256 */\n      0x00\n        /* \"contracts/1_Storage.sol\":570:585  block.timestamp */\n      timestamp\n        /* \"contracts/1_Storage.sol\":563:585  return block.timestamp */\n      swap1\n      pop\n        /* \"contracts/1_Storage.sol\":501:592  function getDataTime() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":125:303  function send(address token, uint256 amount) public {... */\n    tag_16:\n        /* \"contracts/1_Storage.sol\":187:296  TransferHelper.safeTransfer(... */\n      tag_22\n        /* \"contracts/1_Storage.sol\":236:241  token */\n      dup3\n        /* \"contracts/1_Storage.sol\":256:266  msg.sender */\n      caller\n        /* \"contracts/1_Storage.sol\":280:286  amount */\n      dup4\n        /* \"contracts/1_Storage.sol\":187:214  TransferHelper.safeTransfer */\n      tag_23\n        /* \"contracts/1_Storage.sol\":187:296  TransferHelper.safeTransfer(... */\n      jump\t// in\n    tag_22:\n        /* \"contracts/1_Storage.sol\":125:303  function send(address token, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TransferHelper.sol\":274:664  function safeApprove(\r... */\n    tag_19:\n        /* \"contracts/TransferHelper.sol\":392:404  bool success */\n      0x00\n        /* \"contracts/TransferHelper.sol\":406:423  bytes memory data */\n      dup1\n        /* \"contracts/TransferHelper.sol\":427:432  token */\n      dup5\n        /* \"contracts/TransferHelper.sol\":427:437  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TransferHelper.sol\":475:485  0x095ea7b3 */\n      0x095ea7b3\n        /* \"contracts/TransferHelper.sol\":487:489  to */\n      dup6\n        /* \"contracts/TransferHelper.sol\":491:496  value */\n      dup6\n        /* \"contracts/TransferHelper.sol\":452:497  abi.encodeWithSelector(0x095ea7b3, to, value) */\n      add(0x24, mload(0x40))\n      tag_25\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TransferHelper.sol\":427:508  token.call(\r... */\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_31\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_30)\n    tag_31:\n      0x60\n      swap2\n      pop\n    tag_30:\n      pop\n        /* \"contracts/TransferHelper.sol\":391:508  (bool success, bytes memory data) = token.call(\r... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/TransferHelper.sol\":541:548  success */\n      dup2\n        /* \"contracts/TransferHelper.sol\":541:598  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_32\n      jumpi\n      pop\n        /* \"contracts/TransferHelper.sol\":568:569  0 */\n      0x00\n        /* \"contracts/TransferHelper.sol\":553:557  data */\n      dup2\n        /* \"contracts/TransferHelper.sol\":553:564  data.length */\n      mload\n        /* \"contracts/TransferHelper.sol\":553:569  data.length == 0 */\n      eq\n        /* \"contracts/TransferHelper.sol\":553:597  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_33\n      jumpi\n      pop\n        /* \"contracts/TransferHelper.sol\":584:588  data */\n      dup1\n        /* \"contracts/TransferHelper.sol\":573:597  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"contracts/TransferHelper.sol\":553:597  data.length == 0 || abi.decode(data, (bool)) */\n    tag_33:\n        /* \"contracts/TransferHelper.sol\":541:598  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_32:\n        /* \"contracts/TransferHelper.sol\":519:656  require(\r... */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"contracts/TransferHelper.sol\":274:664  function safeApprove(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TransferHelper.sol\":673:1065  function safeTransfer(\r... */\n    tag_23:\n        /* \"contracts/TransferHelper.sol\":792:804  bool success */\n      0x00\n        /* \"contracts/TransferHelper.sol\":806:823  bytes memory data */\n      dup1\n        /* \"contracts/TransferHelper.sol\":827:832  token */\n      dup5\n        /* \"contracts/TransferHelper.sol\":827:837  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TransferHelper.sol\":875:885  0xa9059cbb */\n      0xa9059cbb\n        /* \"contracts/TransferHelper.sol\":887:889  to */\n      dup6\n        /* \"contracts/TransferHelper.sol\":891:896  value */\n      dup6\n        /* \"contracts/TransferHelper.sol\":852:897  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      add(0x24, mload(0x40))\n      tag_40\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/TransferHelper.sol\":827:908  token.call(\r... */\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_41:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_44\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_43)\n    tag_44:\n      0x60\n      swap2\n      pop\n    tag_43:\n      pop\n        /* \"contracts/TransferHelper.sol\":791:908  (bool success, bytes memory data) = token.call(\r... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/TransferHelper.sol\":941:948  success */\n      dup2\n        /* \"contracts/TransferHelper.sol\":941:998  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_45\n      jumpi\n      pop\n        /* \"contracts/TransferHelper.sol\":968:969  0 */\n      0x00\n        /* \"contracts/TransferHelper.sol\":953:957  data */\n      dup2\n        /* \"contracts/TransferHelper.sol\":953:964  data.length */\n      mload\n        /* \"contracts/TransferHelper.sol\":953:969  data.length == 0 */\n      eq\n        /* \"contracts/TransferHelper.sol\":953:997  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_46\n      jumpi\n      pop\n        /* \"contracts/TransferHelper.sol\":984:988  data */\n      dup1\n        /* \"contracts/TransferHelper.sol\":973:997  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_47:\n        /* \"contracts/TransferHelper.sol\":953:997  data.length == 0 || abi.decode(data, (bool)) */\n    tag_46:\n        /* \"contracts/TransferHelper.sol\":941:998  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_45:\n        /* \"contracts/TransferHelper.sol\":919:1057  require(\r... */\n      tag_48\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"contracts/TransferHelper.sol\":673:1065  function safeTransfer(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_52:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_54\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_56:\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_58\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":212:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_60:\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_62\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":347:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:847   */\n    tag_8:\n      0x00\n      dup1\n        /* \"#utility.yul\":565:567   */\n      0x40\n        /* \"#utility.yul\":553:562   */\n      dup4\n        /* \"#utility.yul\":544:551   */\n      dup6\n        /* \"#utility.yul\":540:563   */\n      sub\n        /* \"#utility.yul\":536:568   */\n      slt\n        /* \"#utility.yul\":533:535   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":581:582   */\n      0x00\n        /* \"#utility.yul\":578:579   */\n      dup1\n        /* \"#utility.yul\":571:583   */\n      revert\n        /* \"#utility.yul\":533:535   */\n    tag_65:\n        /* \"#utility.yul\":624:625   */\n      0x00\n        /* \"#utility.yul\":649:702   */\n      tag_66\n        /* \"#utility.yul\":694:701   */\n      dup6\n        /* \"#utility.yul\":685:691   */\n      dup3\n        /* \"#utility.yul\":674:683   */\n      dup7\n        /* \"#utility.yul\":670:692   */\n      add\n        /* \"#utility.yul\":649:702   */\n      tag_52\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":639:702   */\n      swap3\n      pop\n        /* \"#utility.yul\":595:712   */\n      pop\n        /* \"#utility.yul\":751:753   */\n      0x20\n        /* \"#utility.yul\":777:830   */\n      tag_67\n        /* \"#utility.yul\":822:829   */\n      dup6\n        /* \"#utility.yul\":813:819   */\n      dup3\n        /* \"#utility.yul\":802:811   */\n      dup7\n        /* \"#utility.yul\":798:820   */\n      add\n        /* \"#utility.yul\":777:830   */\n      tag_60\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":767:830   */\n      swap2\n      pop\n        /* \"#utility.yul\":722:840   */\n      pop\n        /* \"#utility.yul\":523:847   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":853:1131   */\n    tag_35:\n      0x00\n        /* \"#utility.yul\":969:971   */\n      0x20\n        /* \"#utility.yul\":957:966   */\n      dup3\n        /* \"#utility.yul\":948:955   */\n      dup5\n        /* \"#utility.yul\":944:967   */\n      sub\n        /* \"#utility.yul\":940:972   */\n      slt\n        /* \"#utility.yul\":937:939   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":985:986   */\n      0x00\n        /* \"#utility.yul\":982:983   */\n      dup1\n        /* \"#utility.yul\":975:987   */\n      revert\n        /* \"#utility.yul\":937:939   */\n    tag_69:\n        /* \"#utility.yul\":1028:1029   */\n      0x00\n        /* \"#utility.yul\":1053:1114   */\n      tag_70\n        /* \"#utility.yul\":1106:1113   */\n      dup5\n        /* \"#utility.yul\":1097:1103   */\n      dup3\n        /* \"#utility.yul\":1086:1095   */\n      dup6\n        /* \"#utility.yul\":1082:1104   */\n      add\n        /* \"#utility.yul\":1053:1114   */\n      tag_56\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1043:1114   */\n      swap2\n      pop\n        /* \"#utility.yul\":999:1124   */\n      pop\n        /* \"#utility.yul\":927:1131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1137:1255   */\n    tag_71:\n        /* \"#utility.yul\":1224:1248   */\n      tag_73\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1224:1248   */\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1219:1222   */\n      dup3\n        /* \"#utility.yul\":1212:1249   */\n      mstore\n        /* \"#utility.yul\":1202:1255   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1261:1634   */\n    tag_75:\n      0x00\n        /* \"#utility.yul\":1393:1431   */\n      tag_77\n        /* \"#utility.yul\":1425:1430   */\n      dup3\n        /* \"#utility.yul\":1393:1431   */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1447:1535   */\n      tag_79\n        /* \"#utility.yul\":1528:1534   */\n      dup2\n        /* \"#utility.yul\":1523:1526   */\n      dup6\n        /* \"#utility.yul\":1447:1535   */\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1440:1535   */\n      swap4\n      pop\n        /* \"#utility.yul\":1544:1596   */\n      tag_81\n        /* \"#utility.yul\":1589:1595   */\n      dup2\n        /* \"#utility.yul\":1584:1587   */\n      dup6\n        /* \"#utility.yul\":1577:1581   */\n      0x20\n        /* \"#utility.yul\":1570:1575   */\n      dup7\n        /* \"#utility.yul\":1566:1582   */\n      add\n        /* \"#utility.yul\":1544:1596   */\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1621:1627   */\n      dup1\n        /* \"#utility.yul\":1616:1619   */\n      dup5\n        /* \"#utility.yul\":1612:1628   */\n      add\n        /* \"#utility.yul\":1605:1628   */\n      swap2\n      pop\n        /* \"#utility.yul\":1369:1634   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1640:1969   */\n    tag_83:\n      0x00\n        /* \"#utility.yul\":1803:1870   */\n      tag_85\n        /* \"#utility.yul\":1867:1869   */\n      0x1f\n        /* \"#utility.yul\":1862:1865   */\n      dup4\n        /* \"#utility.yul\":1803:1870   */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1796:1870   */\n      swap2\n      pop\n        /* \"#utility.yul\":1900:1933   */\n      0x5472616e7366657248656c7065723a205452414e534645525f4641494c454400\n        /* \"#utility.yul\":1896:1897   */\n      0x00\n        /* \"#utility.yul\":1891:1894   */\n      dup4\n        /* \"#utility.yul\":1887:1898   */\n      add\n        /* \"#utility.yul\":1880:1934   */\n      mstore\n        /* \"#utility.yul\":1960:1962   */\n      0x20\n        /* \"#utility.yul\":1955:1958   */\n      dup3\n        /* \"#utility.yul\":1951:1963   */\n      add\n        /* \"#utility.yul\":1944:1963   */\n      swap1\n      pop\n        /* \"#utility.yul\":1786:1969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1975:2303   */\n    tag_87:\n      0x00\n        /* \"#utility.yul\":2138:2205   */\n      tag_89\n        /* \"#utility.yul\":2202:2204   */\n      0x1e\n        /* \"#utility.yul\":2197:2200   */\n      dup4\n        /* \"#utility.yul\":2138:2205   */\n      tag_86\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2131:2205   */\n      swap2\n      pop\n        /* \"#utility.yul\":2235:2267   */\n      0x5472616e7366657248656c7065723a20415050524f56455f4641494c45440000\n        /* \"#utility.yul\":2231:2232   */\n      0x00\n        /* \"#utility.yul\":2226:2229   */\n      dup4\n        /* \"#utility.yul\":2222:2233   */\n      add\n        /* \"#utility.yul\":2215:2268   */\n      mstore\n        /* \"#utility.yul\":2294:2296   */\n      0x20\n        /* \"#utility.yul\":2289:2292   */\n      dup3\n        /* \"#utility.yul\":2285:2297   */\n      add\n        /* \"#utility.yul\":2278:2297   */\n      swap1\n      pop\n        /* \"#utility.yul\":2121:2303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2309:2427   */\n    tag_90:\n        /* \"#utility.yul\":2396:2420   */\n      tag_92\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2396:2420   */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2391:2394   */\n      dup3\n        /* \"#utility.yul\":2384:2421   */\n      mstore\n        /* \"#utility.yul\":2374:2427   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2704   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":2585:2678   */\n      tag_95\n        /* \"#utility.yul\":2674:2677   */\n      dup3\n        /* \"#utility.yul\":2665:2671   */\n      dup5\n        /* \"#utility.yul\":2585:2678   */\n      tag_75\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2578:2678   */\n      swap2\n      pop\n        /* \"#utility.yul\":2695:2698   */\n      dup2\n        /* \"#utility.yul\":2688:2698   */\n      swap1\n      pop\n        /* \"#utility.yul\":2567:2704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2710:3042   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":2869:2871   */\n      0x40\n        /* \"#utility.yul\":2858:2867   */\n      dup3\n        /* \"#utility.yul\":2854:2872   */\n      add\n        /* \"#utility.yul\":2846:2872   */\n      swap1\n      pop\n        /* \"#utility.yul\":2882:2953   */\n      tag_97\n        /* \"#utility.yul\":2950:2951   */\n      0x00\n        /* \"#utility.yul\":2939:2948   */\n      dup4\n        /* \"#utility.yul\":2935:2952   */\n      add\n        /* \"#utility.yul\":2926:2932   */\n      dup6\n        /* \"#utility.yul\":2882:2953   */\n      tag_71\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2963:3035   */\n      tag_98\n        /* \"#utility.yul\":3031:3033   */\n      0x20\n        /* \"#utility.yul\":3020:3029   */\n      dup4\n        /* \"#utility.yul\":3016:3034   */\n      add\n        /* \"#utility.yul\":3007:3013   */\n      dup5\n        /* \"#utility.yul\":2963:3035   */\n      tag_90\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2836:3042   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3048:3467   */\n    tag_50:\n      0x00\n        /* \"#utility.yul\":3252:3254   */\n      0x20\n        /* \"#utility.yul\":3241:3250   */\n      dup3\n        /* \"#utility.yul\":3237:3255   */\n      add\n        /* \"#utility.yul\":3229:3255   */\n      swap1\n      pop\n        /* \"#utility.yul\":3301:3310   */\n      dup2\n        /* \"#utility.yul\":3295:3299   */\n      dup2\n        /* \"#utility.yul\":3291:3311   */\n      sub\n        /* \"#utility.yul\":3287:3288   */\n      0x00\n        /* \"#utility.yul\":3276:3285   */\n      dup4\n        /* \"#utility.yul\":3272:3289   */\n      add\n        /* \"#utility.yul\":3265:3312   */\n      mstore\n        /* \"#utility.yul\":3329:3460   */\n      tag_100\n        /* \"#utility.yul\":3455:3459   */\n      dup2\n        /* \"#utility.yul\":3329:3460   */\n      tag_83\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3321:3460   */\n      swap1\n      pop\n        /* \"#utility.yul\":3219:3467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3473:3892   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":3677:3679   */\n      0x20\n        /* \"#utility.yul\":3666:3675   */\n      dup3\n        /* \"#utility.yul\":3662:3680   */\n      add\n        /* \"#utility.yul\":3654:3680   */\n      swap1\n      pop\n        /* \"#utility.yul\":3726:3735   */\n      dup2\n        /* \"#utility.yul\":3720:3724   */\n      dup2\n        /* \"#utility.yul\":3716:3736   */\n      sub\n        /* \"#utility.yul\":3712:3713   */\n      0x00\n        /* \"#utility.yul\":3701:3710   */\n      dup4\n        /* \"#utility.yul\":3697:3714   */\n      add\n        /* \"#utility.yul\":3690:3737   */\n      mstore\n        /* \"#utility.yul\":3754:3885   */\n      tag_102\n        /* \"#utility.yul\":3880:3884   */\n      dup2\n        /* \"#utility.yul\":3754:3885   */\n      tag_87\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3746:3885   */\n      swap1\n      pop\n        /* \"#utility.yul\":3644:3892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3898:4120   */\n    tag_13:\n      0x00\n        /* \"#utility.yul\":4029:4031   */\n      0x20\n        /* \"#utility.yul\":4018:4027   */\n      dup3\n        /* \"#utility.yul\":4014:4032   */\n      add\n        /* \"#utility.yul\":4006:4032   */\n      swap1\n      pop\n        /* \"#utility.yul\":4042:4113   */\n      tag_104\n        /* \"#utility.yul\":4110:4111   */\n      0x00\n        /* \"#utility.yul\":4099:4108   */\n      dup4\n        /* \"#utility.yul\":4095:4112   */\n      add\n        /* \"#utility.yul\":4086:4092   */\n      dup5\n        /* \"#utility.yul\":4042:4113   */\n      tag_90\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3996:4120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4126:4224   */\n    tag_78:\n      0x00\n        /* \"#utility.yul\":4211:4216   */\n      dup2\n        /* \"#utility.yul\":4205:4217   */\n      mload\n        /* \"#utility.yul\":4195:4217   */\n      swap1\n      pop\n        /* \"#utility.yul\":4184:4224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4230:4377   */\n    tag_80:\n      0x00\n        /* \"#utility.yul\":4368:4371   */\n      dup2\n        /* \"#utility.yul\":4353:4371   */\n      swap1\n      pop\n        /* \"#utility.yul\":4343:4377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4383:4552   */\n    tag_86:\n      0x00\n        /* \"#utility.yul\":4501:4507   */\n      dup3\n        /* \"#utility.yul\":4496:4499   */\n      dup3\n        /* \"#utility.yul\":4489:4508   */\n      mstore\n        /* \"#utility.yul\":4541:4545   */\n      0x20\n        /* \"#utility.yul\":4536:4539   */\n      dup3\n        /* \"#utility.yul\":4532:4546   */\n      add\n        /* \"#utility.yul\":4517:4546   */\n      swap1\n      pop\n        /* \"#utility.yul\":4479:4552   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4558:4654   */\n    tag_74:\n      0x00\n        /* \"#utility.yul\":4624:4648   */\n      tag_109\n        /* \"#utility.yul\":4642:4647   */\n      dup3\n        /* \"#utility.yul\":4624:4648   */\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":4613:4648   */\n      swap1\n      pop\n        /* \"#utility.yul\":4603:4654   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4660:4750   */\n    tag_111:\n      0x00\n        /* \"#utility.yul\":4737:4742   */\n      dup2\n        /* \"#utility.yul\":4730:4743   */\n      iszero\n        /* \"#utility.yul\":4723:4744   */\n      iszero\n        /* \"#utility.yul\":4712:4744   */\n      swap1\n      pop\n        /* \"#utility.yul\":4702:4750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4756:4882   */\n    tag_110:\n      0x00\n        /* \"#utility.yul\":4833:4875   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4826:4831   */\n      dup3\n        /* \"#utility.yul\":4822:4876   */\n      and\n        /* \"#utility.yul\":4811:4876   */\n      swap1\n      pop\n        /* \"#utility.yul\":4801:4882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4888:4965   */\n    tag_93:\n      0x00\n        /* \"#utility.yul\":4954:4959   */\n      dup2\n        /* \"#utility.yul\":4943:4959   */\n      swap1\n      pop\n        /* \"#utility.yul\":4933:4965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4971:5278   */\n    tag_82:\n        /* \"#utility.yul\":5039:5040   */\n      0x00\n        /* \"#utility.yul\":5049:5162   */\n    tag_116:\n        /* \"#utility.yul\":5063:5069   */\n      dup4\n        /* \"#utility.yul\":5060:5061   */\n      dup2\n        /* \"#utility.yul\":5057:5070   */\n      lt\n        /* \"#utility.yul\":5049:5162   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":5148:5149   */\n      dup1\n        /* \"#utility.yul\":5143:5146   */\n      dup3\n        /* \"#utility.yul\":5139:5150   */\n      add\n        /* \"#utility.yul\":5133:5151   */\n      mload\n        /* \"#utility.yul\":5129:5130   */\n      dup2\n        /* \"#utility.yul\":5124:5127   */\n      dup5\n        /* \"#utility.yul\":5120:5131   */\n      add\n        /* \"#utility.yul\":5113:5152   */\n      mstore\n        /* \"#utility.yul\":5085:5087   */\n      0x20\n        /* \"#utility.yul\":5082:5083   */\n      dup2\n        /* \"#utility.yul\":5078:5088   */\n      add\n        /* \"#utility.yul\":5073:5088   */\n      swap1\n      pop\n        /* \"#utility.yul\":5049:5162   */\n      jump(tag_116)\n    tag_118:\n        /* \"#utility.yul\":5180:5186   */\n      dup4\n        /* \"#utility.yul\":5177:5178   */\n      dup2\n        /* \"#utility.yul\":5174:5187   */\n      gt\n        /* \"#utility.yul\":5171:5173   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":5260:5261   */\n      0x00\n        /* \"#utility.yul\":5251:5257   */\n      dup5\n        /* \"#utility.yul\":5246:5249   */\n      dup5\n        /* \"#utility.yul\":5242:5258   */\n      add\n        /* \"#utility.yul\":5235:5262   */\n      mstore\n        /* \"#utility.yul\":5171:5173   */\n    tag_119:\n        /* \"#utility.yul\":5020:5278   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5284:5406   */\n    tag_55:\n        /* \"#utility.yul\":5357:5381   */\n      tag_121\n        /* \"#utility.yul\":5375:5380   */\n      dup2\n        /* \"#utility.yul\":5357:5381   */\n      tag_74\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":5350:5355   */\n      dup2\n        /* \"#utility.yul\":5347:5382   */\n      eq\n        /* \"#utility.yul\":5337:5339   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":5396:5397   */\n      0x00\n        /* \"#utility.yul\":5393:5394   */\n      dup1\n        /* \"#utility.yul\":5386:5398   */\n      revert\n        /* \"#utility.yul\":5337:5339   */\n    tag_122:\n        /* \"#utility.yul\":5327:5406   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5412:5528   */\n    tag_59:\n        /* \"#utility.yul\":5482:5503   */\n      tag_124\n        /* \"#utility.yul\":5497:5502   */\n      dup2\n        /* \"#utility.yul\":5482:5503   */\n      tag_111\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":5475:5480   */\n      dup2\n        /* \"#utility.yul\":5472:5504   */\n      eq\n        /* \"#utility.yul\":5462:5464   */\n      tag_125\n      jumpi\n        /* \"#utility.yul\":5518:5519   */\n      0x00\n        /* \"#utility.yul\":5515:5516   */\n      dup1\n        /* \"#utility.yul\":5508:5520   */\n      revert\n        /* \"#utility.yul\":5462:5464   */\n    tag_125:\n        /* \"#utility.yul\":5452:5528   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5534:5656   */\n    tag_63:\n        /* \"#utility.yul\":5607:5631   */\n      tag_127\n        /* \"#utility.yul\":5625:5630   */\n      dup2\n        /* \"#utility.yul\":5607:5631   */\n      tag_93\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5600:5605   */\n      dup2\n        /* \"#utility.yul\":5597:5632   */\n      eq\n        /* \"#utility.yul\":5587:5589   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":5646:5647   */\n      0x00\n        /* \"#utility.yul\":5643:5644   */\n      dup1\n        /* \"#utility.yul\":5636:5648   */\n      revert\n        /* \"#utility.yul\":5587:5589   */\n    tag_128:\n        /* \"#utility.yul\":5577:5656   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203de7000e4ab05fad16c8ab36ea8c72aaedff4ffe7686449cdcab92f5776d1f5b64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610659806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063022fc88b146100465780632503c65c14610062578063d0679d3414610080575b600080fd5b610060600480360381019061005b919061036d565b61009c565b005b61006a6100ab565b6040516100779190610521565b60405180910390f35b61009a6004803603810190610095919061036d565b6100b3565b005b6100a78233836100c2565b5050565b600042905090565b6100be8233836101f8565b5050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b385856040516024016100f49291906104b8565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161014291906104a1565b6000604051808303816000865af19150503d806000811461017f576040519150601f19603f3d011682016040523d82523d6000602084013e610184565b606091505b50915091508180156101b257506000815114806101b15750808060200190518101906101b091906103a9565b5b5b6101f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e890610501565b60405180910390fd5b5050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161022a9291906104b8565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161027891906104a1565b6000604051808303816000865af19150503d80600081146102b5576040519150601f19603f3d011682016040523d82523d6000602084013e6102ba565b606091505b50915091508180156102e857506000815114806102e75750808060200190518101906102e691906103a9565b5b5b610327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031e906104e1565b60405180910390fd5b5050505050565b60008135905061033d816105de565b92915050565b600081519050610352816105f5565b92915050565b6000813590506103678161060c565b92915050565b6000806040838503121561038057600080fd5b600061038e8582860161032e565b925050602061039f85828601610358565b9150509250929050565b6000602082840312156103bb57600080fd5b60006103c984828501610343565b91505092915050565b6103db81610563565b82525050565b60006103ec8261053c565b6103f68185610547565b93506104068185602086016105ab565b80840191505092915050565b600061041f601f83610552565b91507f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006000830152602082019050919050565b600061045f601e83610552565b91507f5472616e7366657248656c7065723a20415050524f56455f4641494c454400006000830152602082019050919050565b61049b816105a1565b82525050565b60006104ad82846103e1565b915081905092915050565b60006040820190506104cd60008301856103d2565b6104da6020830184610492565b9392505050565b600060208201905081810360008301526104fa81610412565b9050919050565b6000602082019050818103600083015261051a81610452565b9050919050565b60006020820190506105366000830184610492565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061056e82610581565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156105c95780820151818401526020810190506105ae565b838111156105d8576000848401525b50505050565b6105e781610563565b81146105f257600080fd5b50565b6105fe81610575565b811461060957600080fd5b50565b610615816105a1565b811461062057600080fd5b5056fea26469706673582212203de7000e4ab05fad16c8ab36ea8c72aaedff4ffe7686449cdcab92f5776d1f5b64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x659 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x22FC88B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x2503C65C EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xD0679D34 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x36D JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x36D JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 DUP3 CALLER DUP4 PUSH2 0xC2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBE DUP3 CALLER DUP4 PUSH2 0x1F8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF4 SWAP3 SWAP2 SWAP1 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x184 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1B2 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1B1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x3A9 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x1F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8 SWAP1 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x22A SWAP3 SWAP2 SWAP1 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2B5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x2E8 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x2E7 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x3A9 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x327 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31E SWAP1 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33D DUP2 PUSH2 0x5DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x352 DUP2 PUSH2 0x5F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x367 DUP2 PUSH2 0x60C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38E DUP6 DUP3 DUP7 ADD PUSH2 0x32E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x39F DUP6 DUP3 DUP7 ADD PUSH2 0x358 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C9 DUP5 DUP3 DUP6 ADD PUSH2 0x343 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3DB DUP2 PUSH2 0x563 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC DUP3 PUSH2 0x53C JUMP JUMPDEST PUSH2 0x3F6 DUP2 DUP6 PUSH2 0x547 JUMP JUMPDEST SWAP4 POP PUSH2 0x406 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5AB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41F PUSH1 0x1F DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F4641494C454400 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45F PUSH1 0x1E DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH32 0x5472616E7366657248656C7065723A20415050524F56455F4641494C45440000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49B DUP2 PUSH2 0x5A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AD DUP3 DUP5 PUSH2 0x3E1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4CD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3D2 JUMP JUMPDEST PUSH2 0x4DA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x492 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FA DUP2 PUSH2 0x412 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x51A DUP2 PUSH2 0x452 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x536 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x492 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56E DUP3 PUSH2 0x581 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5C9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5AE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5E7 DUP2 PUSH2 0x563 JUMP JUMPDEST DUP2 EQ PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5FE DUP2 PUSH2 0x575 JUMP JUMPDEST DUP2 EQ PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x615 DUP2 PUSH2 0x5A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xE7 STOP 0xE 0x4A 0xB0 0x5F 0xAD AND 0xC8 0xAB CALLDATASIZE 0xEA DUP13 PUSH19 0xAAEDFF4FFE7686449CDCAB92F5776D1F5B6473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "102:492:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5659:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:2",
														"type": ""
													}
												],
												"src": "152:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:2",
														"type": ""
													}
												],
												"src": "295:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "523:324:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "569:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "578:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "581:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "571:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "571:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "571:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "544:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "553:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "540:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "540:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "536:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:32:2"
															},
															"nodeType": "YulIf",
															"src": "533:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "595:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "610:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "614:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "639:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "674:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "685:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "670:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "694:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "649:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "649:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "639:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "722:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "737:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "751:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "741:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "767:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "802:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "798:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "798:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "822:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "777:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "777:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "767:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "485:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "496:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "508:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "516:6:2",
														"type": ""
													}
												],
												"src": "440:407:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "927:204:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "973:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "982:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "985:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "975:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "975:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "948:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "957:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "944:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "944:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "969:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "940:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "940:32:2"
															},
															"nodeType": "YulIf",
															"src": "937:2:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "999:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1014:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1028:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1018:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1043:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1086:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1097:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1082:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1082:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1106:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1053:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1053:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1043:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "897:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "908:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "920:6:2",
														"type": ""
													}
												],
												"src": "853:278:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1219:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1242:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1224:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1224:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1212:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1212:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1190:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1197:3:2",
														"type": ""
													}
												],
												"src": "1137:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1369:265:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:52:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1425:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1393:31:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:38:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1383:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1440:95:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1523:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1528:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1447:75:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1447:88:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1440:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1570:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1577:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1566:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1566:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1584:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1589:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1544:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1544:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1605:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1616:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1621:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1612:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:16:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1605:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1350:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1357:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1365:3:2",
														"type": ""
													}
												],
												"src": "1261:373:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1786:183:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1796:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1862:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1867:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1803:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1803:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1796:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1891:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1896:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1887:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1887:11:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1900:33:2",
																		"type": "",
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1880:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1880:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1880:54:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1944:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1955:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1960:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1951:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1944:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1774:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1782:3:2",
														"type": ""
													}
												],
												"src": "1640:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2121:182:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2131:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2197:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2202:2:2",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2138:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2131:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2226:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2231:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2222:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2222:11:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2235:32:2",
																		"type": "",
																		"value": "TransferHelper: APPROVE_FAILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2215:53:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2215:53:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2278:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2289:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2294:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2285:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2285:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2278:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2109:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2117:3:2",
														"type": ""
													}
												],
												"src": "1975:328:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2374:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2391:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2414:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2396:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2384:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2384:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2362:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2369:3:2",
														"type": ""
													}
												],
												"src": "2309:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2567:137:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2578:100:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2665:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2674:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2585:79:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:93:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2578:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2688:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2695:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2688:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2546:3:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2552:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2563:3:2",
														"type": ""
													}
												],
												"src": "2433:271:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2836:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2846:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2858:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2869:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2854:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2846:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2926:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2939:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2950:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2935:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2935:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2882:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2882:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2882:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3020:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3031:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3016:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3016:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2963:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2963:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2963:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2800:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2812:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2820:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2831:4:2",
														"type": ""
													}
												],
												"src": "2710:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3219:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3229:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3241:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3252:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3237:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3229:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3276:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3287:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3272:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3272:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3295:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3301:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3291:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3291:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3265:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3265:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3265:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3321:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3455:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3329:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3329:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3321:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3199:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3214:4:2",
														"type": ""
													}
												],
												"src": "3048:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3644:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3654:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3666:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3677:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3662:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3662:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3654:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3701:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3712:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3697:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3697:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3720:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3726:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3716:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3690:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3690:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3690:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3746:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3880:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3754:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3754:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3746:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3624:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3639:4:2",
														"type": ""
													}
												],
												"src": "3473:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3996:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4006:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4018:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4029:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4014:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4014:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4006:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4086:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4099:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4110:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4095:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4095:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4042:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4042:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4042:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3968:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3980:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3991:4:2",
														"type": ""
													}
												],
												"src": "3898:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4184:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4195:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4211:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4205:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4205:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4167:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4177:6:2",
														"type": ""
													}
												],
												"src": "4126:98:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4343:34:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4353:18:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4368:3:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4353:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4315:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4320:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4331:11:2",
														"type": ""
													}
												],
												"src": "4230:147:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4479:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4496:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4501:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4489:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4489:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4489:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4517:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4536:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4541:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4532:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4517:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4451:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4456:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4467:11:2",
														"type": ""
													}
												],
												"src": "4383:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4603:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4613:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4642:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4624:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4624:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4613:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4585:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4595:7:2",
														"type": ""
													}
												],
												"src": "4558:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4702:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4712:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4737:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4730:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4730:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4723:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4723:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4712:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4684:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4694:7:2",
														"type": ""
													}
												],
												"src": "4660:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4801:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4811:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4826:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4822:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4822:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4811:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4783:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4793:7:2",
														"type": ""
													}
												],
												"src": "4756:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4933:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4943:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4954:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4943:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4915:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4925:7:2",
														"type": ""
													}
												],
												"src": "4888:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5020:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5030:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5039:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5034:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5099:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5124:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5129:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5120:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5120:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5143:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5148:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5139:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5139:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5133:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5133:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5113:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5113:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5113:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5060:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5063:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5057:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5057:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5071:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5073:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5082:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5085:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5078:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5078:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5073:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5053:3:2",
																"statements": []
															},
															"src": "5049:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5196:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5246:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5251:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5242:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5242:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5260:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5235:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5235:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5235:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5177:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5180:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5174:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5174:13:2"
															},
															"nodeType": "YulIf",
															"src": "5171:2:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5002:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5007:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5012:6:2",
														"type": ""
													}
												],
												"src": "4971:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5327:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5384:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5393:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5396:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5386:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5386:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5386:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5350:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5375:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5357:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5357:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5347:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5347:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5340:43:2"
															},
															"nodeType": "YulIf",
															"src": "5337:2:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5320:5:2",
														"type": ""
													}
												],
												"src": "5284:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5452:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5506:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5515:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5518:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5508:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5508:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5508:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5475:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5497:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5482:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5482:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5472:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5472:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5465:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5465:40:2"
															},
															"nodeType": "YulIf",
															"src": "5462:2:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5445:5:2",
														"type": ""
													}
												],
												"src": "5412:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5577:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5634:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5643:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5646:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5636:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5636:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5636:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5600:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5625:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5607:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5607:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5597:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5597:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5590:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:43:2"
															},
															"nodeType": "YulIf",
															"src": "5587:2:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5570:5:2",
														"type": ""
													}
												],
												"src": "5534:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n\n        mstore(add(pos, 0), \"TransferHelper: TRANSFER_FAILED\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n\n        mstore(add(pos, 0), \"TransferHelper: APPROVE_FAILED\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063022fc88b146100465780632503c65c14610062578063d0679d3414610080575b600080fd5b610060600480360381019061005b919061036d565b61009c565b005b61006a6100ab565b6040516100779190610521565b60405180910390f35b61009a6004803603810190610095919061036d565b6100b3565b005b6100a78233836100c2565b5050565b600042905090565b6100be8233836101f8565b5050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b385856040516024016100f49291906104b8565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161014291906104a1565b6000604051808303816000865af19150503d806000811461017f576040519150601f19603f3d011682016040523d82523d6000602084013e610184565b606091505b50915091508180156101b257506000815114806101b15750808060200190518101906101b091906103a9565b5b5b6101f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e890610501565b60405180910390fd5b5050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161022a9291906104b8565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161027891906104a1565b6000604051808303816000865af19150503d80600081146102b5576040519150601f19603f3d011682016040523d82523d6000602084013e6102ba565b606091505b50915091508180156102e857506000815114806102e75750808060200190518101906102e691906103a9565b5b5b610327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031e906104e1565b60405180910390fd5b5050505050565b60008135905061033d816105de565b92915050565b600081519050610352816105f5565b92915050565b6000813590506103678161060c565b92915050565b6000806040838503121561038057600080fd5b600061038e8582860161032e565b925050602061039f85828601610358565b9150509250929050565b6000602082840312156103bb57600080fd5b60006103c984828501610343565b91505092915050565b6103db81610563565b82525050565b60006103ec8261053c565b6103f68185610547565b93506104068185602086016105ab565b80840191505092915050565b600061041f601f83610552565b91507f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006000830152602082019050919050565b600061045f601e83610552565b91507f5472616e7366657248656c7065723a20415050524f56455f4641494c454400006000830152602082019050919050565b61049b816105a1565b82525050565b60006104ad82846103e1565b915081905092915050565b60006040820190506104cd60008301856103d2565b6104da6020830184610492565b9392505050565b600060208201905081810360008301526104fa81610412565b9050919050565b6000602082019050818103600083015261051a81610452565b9050919050565b60006020820190506105366000830184610492565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061056e82610581565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156105c95780820151818401526020810190506105ae565b838111156105d8576000848401525b50505050565b6105e781610563565b81146105f257600080fd5b50565b6105fe81610575565b811461060957600080fd5b50565b610615816105a1565b811461062057600080fd5b5056fea26469706673582212203de7000e4ab05fad16c8ab36ea8c72aaedff4ffe7686449cdcab92f5776d1f5b64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x22FC88B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x2503C65C EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xD0679D34 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x36D JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x36D JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 DUP3 CALLER DUP4 PUSH2 0xC2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBE DUP3 CALLER DUP4 PUSH2 0x1F8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF4 SWAP3 SWAP2 SWAP1 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x184 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1B2 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1B1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x3A9 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x1F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8 SWAP1 PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x22A SWAP3 SWAP2 SWAP1 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2B5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x2E8 JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x2E7 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x3A9 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x327 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31E SWAP1 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33D DUP2 PUSH2 0x5DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x352 DUP2 PUSH2 0x5F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x367 DUP2 PUSH2 0x60C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38E DUP6 DUP3 DUP7 ADD PUSH2 0x32E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x39F DUP6 DUP3 DUP7 ADD PUSH2 0x358 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C9 DUP5 DUP3 DUP6 ADD PUSH2 0x343 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3DB DUP2 PUSH2 0x563 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC DUP3 PUSH2 0x53C JUMP JUMPDEST PUSH2 0x3F6 DUP2 DUP6 PUSH2 0x547 JUMP JUMPDEST SWAP4 POP PUSH2 0x406 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5AB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41F PUSH1 0x1F DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F4641494C454400 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45F PUSH1 0x1E DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH32 0x5472616E7366657248656C7065723A20415050524F56455F4641494C45440000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49B DUP2 PUSH2 0x5A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AD DUP3 DUP5 PUSH2 0x3E1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4CD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3D2 JUMP JUMPDEST PUSH2 0x4DA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x492 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4FA DUP2 PUSH2 0x412 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x51A DUP2 PUSH2 0x452 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x536 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x492 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56E DUP3 PUSH2 0x581 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5C9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5AE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5E7 DUP2 PUSH2 0x563 JUMP JUMPDEST DUP2 EQ PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5FE DUP2 PUSH2 0x575 JUMP JUMPDEST DUP2 EQ PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x615 DUP2 PUSH2 0x5A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xE7 STOP 0xE 0x4A 0xB0 0x5F 0xAD AND 0xC8 0xAB CALLDATASIZE 0xEA DUP13 PUSH19 0xAAEDFF4FFE7686449CDCAB92F5776D1F5B6473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "102:492:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;309:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;501:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;125:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;309:185;379:108;427:5;447:10;471:6;379:26;:108::i;:::-;309:185;;:::o;501:91::-;544:7;570:15;563:22;;501:91;:::o;125:178::-;187:109;236:5;256:10;280:6;187:27;:109::i;:::-;125:178;;:::o;274:390:1:-;392:12;406:17;427:5;:10;;475;487:2;491:5;452:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;427:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;391:117;;;;541:7;:57;;;;;568:1;553:4;:11;:16;:44;;;;584:4;573:24;;;;;;;;;;;;:::i;:::-;553:44;541:57;519:137;;;;;;;;;;;;:::i;:::-;;;;;;;;;274:390;;;;;:::o;673:392::-;792:12;806:17;827:5;:10;;875;887:2;891:5;852:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;827:81;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;791:117;;;;941:7;:57;;;;;968:1;953:4;:11;:16;:44;;;;984:4;973:24;;;;;;;;;;;;:::i;:::-;953:44;941:57;919:138;;;;;;;;;;;;:::i;:::-;;;;;;;;;673:392;;;;;:::o;7:139:2:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:407::-;;;565:2;553:9;544:7;540:23;536:32;533:2;;;581:1;578;571:12;533:2;624:1;649:53;694:7;685:6;674:9;670:22;649:53;:::i;:::-;639:63;;595:117;751:2;777:53;822:7;813:6;802:9;798:22;777:53;:::i;:::-;767:63;;722:118;523:324;;;;;:::o;853:278::-;;969:2;957:9;948:7;944:23;940:32;937:2;;;985:1;982;975:12;937:2;1028:1;1053:61;1106:7;1097:6;1086:9;1082:22;1053:61;:::i;:::-;1043:71;;999:125;927:204;;;;:::o;1137:118::-;1224:24;1242:5;1224:24;:::i;:::-;1219:3;1212:37;1202:53;;:::o;1261:373::-;;1393:38;1425:5;1393:38;:::i;:::-;1447:88;1528:6;1523:3;1447:88;:::i;:::-;1440:95;;1544:52;1589:6;1584:3;1577:4;1570:5;1566:16;1544:52;:::i;:::-;1621:6;1616:3;1612:16;1605:23;;1369:265;;;;;:::o;1640:329::-;;1803:67;1867:2;1862:3;1803:67;:::i;:::-;1796:74;;1900:33;1896:1;1891:3;1887:11;1880:54;1960:2;1955:3;1951:12;1944:19;;1786:183;;;:::o;1975:328::-;;2138:67;2202:2;2197:3;2138:67;:::i;:::-;2131:74;;2235:32;2231:1;2226:3;2222:11;2215:53;2294:2;2289:3;2285:12;2278:19;;2121:182;;;:::o;2309:118::-;2396:24;2414:5;2396:24;:::i;:::-;2391:3;2384:37;2374:53;;:::o;2433:271::-;;2585:93;2674:3;2665:6;2585:93;:::i;:::-;2578:100;;2695:3;2688:10;;2567:137;;;;:::o;2710:332::-;;2869:2;2858:9;2854:18;2846:26;;2882:71;2950:1;2939:9;2935:17;2926:6;2882:71;:::i;:::-;2963:72;3031:2;3020:9;3016:18;3007:6;2963:72;:::i;:::-;2836:206;;;;;:::o;3048:419::-;;3252:2;3241:9;3237:18;3229:26;;3301:9;3295:4;3291:20;3287:1;3276:9;3272:17;3265:47;3329:131;3455:4;3329:131;:::i;:::-;3321:139;;3219:248;;;:::o;3473:419::-;;3677:2;3666:9;3662:18;3654:26;;3726:9;3720:4;3716:20;3712:1;3701:9;3697:17;3690:47;3754:131;3880:4;3754:131;:::i;:::-;3746:139;;3644:248;;;:::o;3898:222::-;;4029:2;4018:9;4014:18;4006:26;;4042:71;4110:1;4099:9;4095:17;4086:6;4042:71;:::i;:::-;3996:124;;;;:::o;4126:98::-;;4211:5;4205:12;4195:22;;4184:40;;;:::o;4230:147::-;;4368:3;4353:18;;4343:34;;;;:::o;4383:169::-;;4501:6;4496:3;4489:19;4541:4;4536:3;4532:14;4517:29;;4479:73;;;;:::o;4558:96::-;;4624:24;4642:5;4624:24;:::i;:::-;4613:35;;4603:51;;;:::o;4660:90::-;;4737:5;4730:13;4723:21;4712:32;;4702:48;;;:::o;4756:126::-;;4833:42;4826:5;4822:54;4811:65;;4801:81;;;:::o;4888:77::-;;4954:5;4943:16;;4933:32;;;:::o;4971:307::-;5039:1;5049:113;5063:6;5060:1;5057:13;5049:113;;;5148:1;5143:3;5139:11;5133:18;5129:1;5124:3;5120:11;5113:39;5085:2;5082:1;5078:10;5073:15;;5049:113;;;5180:6;5177:1;5174:13;5171:2;;;5260:1;5251:6;5246:3;5242:16;5235:27;5171:2;5020:258;;;;:::o;5284:122::-;5357:24;5375:5;5357:24;:::i;:::-;5350:5;5347:35;5337:2;;5396:1;5393;5386:12;5337:2;5327:79;:::o;5412:116::-;5482:21;5497:5;5482:21;:::i;:::-;5475:5;5472:32;5462:2;;5518:1;5515;5508:12;5462:2;5452:76;:::o;5534:122::-;5607:24;5625:5;5607:24;:::i;:::-;5600:5;5597:35;5587:2;;5646:1;5643;5636:12;5587:2;5577:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "325000",
								"executionCost": "362",
								"totalCost": "325362"
							},
							"external": {
								"approveToken(address,uint256)": "infinite",
								"getDataTime()": "336",
								"send(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 102,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 102,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 594,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 102,
									"end": 594,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 102,
									"end": 594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 102,
									"end": 594,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 102,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 594,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 102,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 102,
									"end": 594,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 102,
									"end": 594,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 594,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 102,
									"end": 594,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 102,
									"end": 594,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 102,
									"end": 594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 102,
									"end": 594,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 102,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 594,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 102,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 594,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203de7000e4ab05fad16c8ab36ea8c72aaedff4ffe7686449cdcab92f5776d1f5b64736f6c63430008000033",
									".code": [
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "22FC88B"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "2503C65C"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "D0679D34"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 594,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 309,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 309,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 309,
											"end": 494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 309,
											"end": 494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 309,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 309,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 309,
											"end": 494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 309,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 309,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 125,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 125,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 125,
											"end": 303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 125,
											"end": 303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 125,
											"end": 303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 125,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 125,
											"end": 303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 125,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 309,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 379,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 427,
											"end": 432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 447,
											"end": 457,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 471,
											"end": 477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 379,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 379,
											"end": 487,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 379,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 379,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 309,
											"end": 494,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 501,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 544,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 585,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 563,
											"end": 585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 563,
											"end": 585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 501,
											"end": 592,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 125,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 125,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 187,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 236,
											"end": 241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 256,
											"end": 266,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 280,
											"end": 286,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 187,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 187,
											"end": 296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 187,
											"end": 296,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 187,
											"end": 296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 125,
											"end": 303,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 274,
											"end": 664,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 274,
											"end": 664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 427,
											"end": 432,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 427,
											"end": 437,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 427,
											"end": 437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 475,
											"end": 485,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 487,
											"end": 489,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 491,
											"end": 496,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 452,
											"end": 497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 452,
											"end": 497,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 452,
											"end": 497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 497,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 452,
											"end": 497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 452,
											"end": 497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 452,
											"end": 497,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 452,
											"end": 497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 452,
											"end": 497,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 452,
											"end": 497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 427,
											"end": 508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 427,
											"end": 508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 391,
											"end": 508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 391,
											"end": 508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 391,
											"end": 508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 541,
											"end": 548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 541,
											"end": 598,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 541,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 541,
											"end": 598,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 541,
											"end": 598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 564,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 569,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 553,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 553,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 553,
											"end": 597,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 553,
											"end": 597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 584,
											"end": 588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 573,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 573,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 573,
											"end": 597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 573,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 573,
											"end": 597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 573,
											"end": 597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 573,
											"end": 597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 573,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 573,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 573,
											"end": 597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 573,
											"end": 597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 573,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 573,
											"end": 597,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 597,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 573,
											"end": 597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 553,
											"end": 597,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 553,
											"end": 597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 541,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 519,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 519,
											"end": 656,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 519,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 656,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 519,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 519,
											"end": 656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 519,
											"end": 656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 519,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 519,
											"end": 656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 519,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 519,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 519,
											"end": 656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 519,
											"end": 656,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 519,
											"end": 656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 519,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 656,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 519,
											"end": 656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 519,
											"end": 656,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 519,
											"end": 656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 656,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 519,
											"end": 656,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 519,
											"end": 656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 274,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 274,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 274,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 274,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 274,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 274,
											"end": 664,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 673,
											"end": 1065,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 673,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 792,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 832,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 827,
											"end": 837,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 827,
											"end": 837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 875,
											"end": 885,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 887,
											"end": 889,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 891,
											"end": 896,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 827,
											"end": 908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 791,
											"end": 908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 791,
											"end": 908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 791,
											"end": 908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 941,
											"end": 948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 941,
											"end": 998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 941,
											"end": 998,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 941,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 941,
											"end": 998,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 941,
											"end": 998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 968,
											"end": 969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 953,
											"end": 964,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 953,
											"end": 969,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 953,
											"end": 997,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 953,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 953,
											"end": 997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 953,
											"end": 997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 984,
											"end": 988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 973,
											"end": 997,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 973,
											"end": 997,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 973,
											"end": 997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 973,
											"end": 997,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 973,
											"end": 997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 973,
											"end": 997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 973,
											"end": 997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 973,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 973,
											"end": 997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 973,
											"end": 997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 973,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 973,
											"end": 997,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 997,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 973,
											"end": 997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 953,
											"end": 997,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 953,
											"end": 997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 998,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 941,
											"end": 998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 919,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 673,
											"end": 1065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 1065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 1065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 1065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 1065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 673,
											"end": 1065,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 212,
											"end": 289,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 295,
											"end": 434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 347,
											"end": 434,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 847,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 440,
											"end": 847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 440,
											"end": 847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 847,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 565,
											"end": 567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 562,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 544,
											"end": 551,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 540,
											"end": 563,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 536,
											"end": 568,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 533,
											"end": 535,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 533,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 533,
											"end": 535,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 581,
											"end": 582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 571,
											"end": 583,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 533,
											"end": 535,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 533,
											"end": 535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 624,
											"end": 625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 694,
											"end": 701,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 685,
											"end": 691,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 674,
											"end": 683,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 670,
											"end": 692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 649,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 649,
											"end": 702,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 649,
											"end": 702,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 649,
											"end": 702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 639,
											"end": 702,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 639,
											"end": 702,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 595,
											"end": 712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 751,
											"end": 753,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 822,
											"end": 829,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 813,
											"end": 819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 798,
											"end": 820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 777,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 777,
											"end": 830,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 777,
											"end": 830,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 777,
											"end": 830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 830,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 523,
											"end": 847,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 523,
											"end": 847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 523,
											"end": 847,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 523,
											"end": 847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 523,
											"end": 847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 523,
											"end": 847,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 853,
											"end": 1131,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 853,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 853,
											"end": 1131,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 969,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 948,
											"end": 955,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 944,
											"end": 967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 940,
											"end": 972,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 937,
											"end": 939,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 937,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 937,
											"end": 939,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 985,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 983,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 975,
											"end": 987,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 937,
											"end": 939,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 937,
											"end": 939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1106,
											"end": 1113,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1103,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1095,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1104,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1053,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1053,
											"end": 1114,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1053,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1053,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1043,
											"end": 1114,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1043,
											"end": 1114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 999,
											"end": 1124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1131,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1131,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1131,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1137,
											"end": 1255,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1137,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1224,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1222,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1255,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1261,
											"end": 1634,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1261,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1261,
											"end": 1634,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1425,
											"end": 1430,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1393,
											"end": 1431,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1431,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1393,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1526,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1447,
											"end": 1535,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1447,
											"end": 1535,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1447,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1535,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1589,
											"end": 1595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1584,
											"end": 1587,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1581,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1575,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 1582,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1544,
											"end": 1596,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1544,
											"end": 1596,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1544,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1619,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1634,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1369,
											"end": 1634,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1640,
											"end": 1969,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1640,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1640,
											"end": 1969,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1867,
											"end": 1869,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1862,
											"end": 1865,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1803,
											"end": 1870,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1803,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1803,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1870,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1900,
											"end": 1933,
											"name": "PUSH",
											"source": 2,
											"value": "5472616E7366657248656C7065723A205452414E534645525F4641494C454400"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1887,
											"end": 1898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1934,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1955,
											"end": 1958,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1944,
											"end": 1963,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1969,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1975,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1975,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2202,
											"end": 2204,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 2197,
											"end": 2200,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2138,
											"end": 2205,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2138,
											"end": 2205,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2138,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2205,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2267,
											"name": "PUSH",
											"source": 2,
											"value": "5472616E7366657248656C7065723A20415050524F56455F4641494C45440000"
										},
										{
											"begin": 2231,
											"end": 2232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2229,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2222,
											"end": 2233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2294,
											"end": 2296,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 2292,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2297,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2303,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2309,
											"end": 2427,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2309,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2396,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2396,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2396,
											"end": 2420,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2396,
											"end": 2420,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2396,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2391,
											"end": 2394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2427,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2427,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2427,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2704,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2433,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2674,
											"end": 2677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2665,
											"end": 2671,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2585,
											"end": 2678,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2678,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2585,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2578,
											"end": 2678,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2578,
											"end": 2678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2695,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2704,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2710,
											"end": 3042,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2710,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2858,
											"end": 2867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2950,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2935,
											"end": 2952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2882,
											"end": 2953,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2882,
											"end": 2953,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2882,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3031,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3029,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3016,
											"end": 3034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2963,
											"end": 3035,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2963,
											"end": 3035,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2963,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3042,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3042,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 3042,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3048,
											"end": 3467,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3048,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3252,
											"end": 3254,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3241,
											"end": 3250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3255,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3229,
											"end": 3255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3301,
											"end": 3310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3295,
											"end": 3299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3285,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3272,
											"end": 3289,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3265,
											"end": 3312,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3455,
											"end": 3459,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3329,
											"end": 3460,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3329,
											"end": 3460,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3329,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3321,
											"end": 3460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3321,
											"end": 3460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3219,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3219,
											"end": 3467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3219,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3219,
											"end": 3467,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3473,
											"end": 3892,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3473,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3666,
											"end": 3675,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3662,
											"end": 3680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3680,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3726,
											"end": 3735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3720,
											"end": 3724,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3716,
											"end": 3736,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3712,
											"end": 3713,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3710,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3697,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3690,
											"end": 3737,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3880,
											"end": 3884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3754,
											"end": 3885,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3754,
											"end": 3885,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3754,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3746,
											"end": 3885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3746,
											"end": 3885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3644,
											"end": 3892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3644,
											"end": 3892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3644,
											"end": 3892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3644,
											"end": 3892,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3898,
											"end": 4120,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3898,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3898,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4031,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4006,
											"end": 4032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4006,
											"end": 4032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4042,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4110,
											"end": 4111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4108,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4086,
											"end": 4092,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4042,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4042,
											"end": 4113,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4042,
											"end": 4113,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4042,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3996,
											"end": 4120,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3996,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3996,
											"end": 4120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3996,
											"end": 4120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3996,
											"end": 4120,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4126,
											"end": 4224,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4126,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4126,
											"end": 4224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4205,
											"end": 4217,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4195,
											"end": 4217,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4195,
											"end": 4217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4184,
											"end": 4224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4184,
											"end": 4224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4184,
											"end": 4224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4184,
											"end": 4224,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4230,
											"end": 4377,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4230,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4230,
											"end": 4377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4353,
											"end": 4371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4353,
											"end": 4371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4377,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4383,
											"end": 4552,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4383,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4383,
											"end": 4552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4501,
											"end": 4507,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4489,
											"end": 4508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4541,
											"end": 4545,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4536,
											"end": 4539,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4532,
											"end": 4546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4517,
											"end": 4546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4517,
											"end": 4546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4479,
											"end": 4552,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4479,
											"end": 4552,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4479,
											"end": 4552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4479,
											"end": 4552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4479,
											"end": 4552,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4558,
											"end": 4654,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4558,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4558,
											"end": 4654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4642,
											"end": 4647,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4624,
											"end": 4648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4613,
											"end": 4648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4613,
											"end": 4648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4654,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4660,
											"end": 4750,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4660,
											"end": 4750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4660,
											"end": 4750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4737,
											"end": 4742,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4730,
											"end": 4743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4723,
											"end": 4744,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4712,
											"end": 4744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4712,
											"end": 4744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4702,
											"end": 4750,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4702,
											"end": 4750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4702,
											"end": 4750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4702,
											"end": 4750,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4756,
											"end": 4882,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4756,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4756,
											"end": 4882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4875,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4826,
											"end": 4831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4822,
											"end": 4876,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4811,
											"end": 4876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4888,
											"end": 4965,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4888,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4888,
											"end": 4965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 4959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4943,
											"end": 4959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4943,
											"end": 4959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4933,
											"end": 4965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4933,
											"end": 4965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4933,
											"end": 4965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4933,
											"end": 4965,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4971,
											"end": 5278,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4971,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5049,
											"end": 5162,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5049,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5057,
											"end": 5070,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5049,
											"end": 5162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5049,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5049,
											"end": 5162,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5148,
											"end": 5149,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5146,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5150,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5129,
											"end": 5130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5124,
											"end": 5127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5120,
											"end": 5131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5152,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5085,
											"end": 5087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5078,
											"end": 5088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5049,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5049,
											"end": 5162,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5049,
											"end": 5162,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5049,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5177,
											"end": 5178,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5174,
											"end": 5187,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5171,
											"end": 5173,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5171,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5171,
											"end": 5173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5260,
											"end": 5261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5251,
											"end": 5257,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5246,
											"end": 5249,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5242,
											"end": 5258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5235,
											"end": 5262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5171,
											"end": 5173,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5171,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5020,
											"end": 5278,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5284,
											"end": 5406,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5284,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5375,
											"end": 5380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5350,
											"end": 5355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5347,
											"end": 5382,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5337,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5337,
											"end": 5339,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5337,
											"end": 5339,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5337,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5327,
											"end": 5406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5327,
											"end": 5406,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5412,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5412,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5497,
											"end": 5502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5482,
											"end": 5503,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5482,
											"end": 5503,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5482,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5504,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5462,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5462,
											"end": 5464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5508,
											"end": 5520,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5462,
											"end": 5464,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5462,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5452,
											"end": 5528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5452,
											"end": 5528,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5534,
											"end": 5656,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5534,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5607,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5625,
											"end": 5630,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5607,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5607,
											"end": 5631,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5607,
											"end": 5631,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5607,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5605,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5597,
											"end": 5632,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5587,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5587,
											"end": 5589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5646,
											"end": 5647,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5643,
											"end": 5644,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5636,
											"end": 5648,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5587,
											"end": 5589,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5587,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5577,
											"end": 5656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5577,
											"end": 5656,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approveToken(address,uint256)": "022fc88b",
							"getDataTime()": "2503c65c",
							"send(address,uint256)": "d0679d34"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDataTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/1_Storage.sol\":\"Storage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/1_Storage.sol\":{\"keccak256\":\"0xd81f213a66bdbd03b9bb83e75811d354fc596adae3d11cace6357a98f3da6e32\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://68c2e8670bad7918b7dc65a5dbfddbf78d4e9edc36b72e87cfc6b9489f552008\",\"dweb:/ipfs/QmWqPftSQW2KBhFsTWdf3DH8z4h2zvCKXHgApoKuUWk9h1\"]},\"contracts/TransferHelper.sol\":{\"keccak256\":\"0xf64de8bda44d6e6a0ef231b637d0d6c78522fd561464c547eeca34f1a8e0482c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e8e7a9c1c50e24298b33bbde7e9d74998b58c889b706c80f95d130952d9e7\",\"dweb:/ipfs/QmP5sAxCH4LFZFJ9uxtFdCdZ3DPJJfv1iU6cHY19urExxw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TransferHelper.sol\":244:2097  library TransferHelper {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TransferHelper.sol\":244:2097  library TransferHelper {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b995f6b6d1d9c8f70c78ebdec14c30c8a1b248808c4f21334d84afe0db6af0e364736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b995f6b6d1d9c8f70c78ebdec14c30c8a1b248808c4f21334d84afe0db6af0e364736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 SWAP6 0xF6 0xB6 0xD1 0xD9 0xC8 0xF7 0xC PUSH25 0xEBDEC14C30C8A1B248808C4F21334D84AFE0DB6AF0E364736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "244:1853:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b995f6b6d1d9c8f70c78ebdec14c30c8a1b248808c4f21334d84afe0db6af0e364736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 SWAP6 0xF6 0xB6 0xD1 0xD9 0xC8 0xF7 0xC PUSH25 0xEBDEC14C30C8A1B248808C4F21334D84AFE0DB6AF0E364736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "244:1853:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferBaseToken(address,address payable,uint256,bool)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b995f6b6d1d9c8f70c78ebdec14c30c8a1b248808c4f21334d84afe0db6af0e364736f6c63430008000033",
									".code": [
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TransferHelper.sol\":{\"keccak256\":\"0xf64de8bda44d6e6a0ef231b637d0d6c78522fd561464c547eeca34f1a8e0482c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e8e7a9c1c50e24298b33bbde7e9d74998b58c889b706c80f95d130952d9e7\",\"dweb:/ipfs/QmP5sAxCH4LFZFJ9uxtFdCdZ3DPJJfv1iU6cHY19urExxw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/1_Storage.sol": {
				"ast": {
					"absolutePath": "contracts/1_Storage.sol",
					"exportedSymbols": {
						"Storage": [
							52
						],
						"TransferHelper": [
							244
						]
					},
					"id": 53,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "contracts/TransferHelper.sol",
							"file": "./TransferHelper.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 53,
							"sourceUnit": 245,
							"src": "70:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "Storage",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "177:126:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 14,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "236:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "228:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 12,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "228:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "228:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 16,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "256:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "256:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 18,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "280:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 9,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "187:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$244_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 141,
														"src": "187:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "187:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "187:109:0"
											}
										]
									},
									"functionSelector": "d0679d34",
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "139:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "154:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "138:31:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "177:0:0"
									},
									"scope": 52,
									"src": "125:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "369:125:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 34,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "427:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "419:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 32,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "419:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "419:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 36,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "447:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "447:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 38,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "471:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 29,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "379:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$244_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "379:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "379:108:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "379:108:0"
											}
										]
									},
									"functionSelector": "022fc88b",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "331:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "346:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:31:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "369:0:0"
									},
									"scope": 52,
									"src": "309:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "553:39:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 47,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "570:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "570:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 46,
												"id": 49,
												"nodeType": "Return",
												"src": "563:22:0"
											}
										]
									},
									"functionSelector": "2503c65c",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDataTime",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "521:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "544:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:9:0"
									},
									"scope": 52,
									"src": "501:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 53,
							"src": "102:492:0"
						}
					],
					"src": "37:557:0"
				},
				"id": 0
			},
			"contracts/TransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							244
						]
					},
					"id": 245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 54,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 55,
								"nodeType": "StructuredDocumentation",
								"src": "62:180:1",
								"text": "helper methods for interacting with ERC20 tokens that do not consistently return true/false\nwith the addition of a transfer function to send eth or an erc20 token"
							},
							"fullyImplemented": true,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "TransferHelper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "380:284:1",
										"statements": [
											{
												"assignments": [
													65,
													67
												],
												"declarations": [
													{
														"constant": false,
														"id": 65,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 97,
														"src": "392:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 64,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "392:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 67,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 97,
														"src": "406:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 66,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "406:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 77,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "475:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 73,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "487:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 74,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "491:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 70,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "452:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "452:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "452:45:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 68,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "427:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "427:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "427:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "391:117:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 79,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "541:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 91,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 83,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 80,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 67,
																					"src": "553:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 81,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "553:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 82,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "568:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "553:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 86,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 67,
																					"src": "584:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 88,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "591:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 87,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "591:4:1",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 89,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "590:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 84,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "573:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 85,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "573:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 90,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "573:24:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "553:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 92,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "552:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "541:57:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "613:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 78,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "519:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "519:137:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "519:137:1"
											}
										]
									},
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "305:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "329:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "350:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:76:1"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:1"
									},
									"scope": 244,
									"src": "274:390:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "780:285:1",
										"statements": [
											{
												"assignments": [
													108,
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 108,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 140,
														"src": "792:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 107,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "792:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 140,
														"src": "806:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 109,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "806:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "875:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 116,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 102,
																	"src": "887:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 117,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "891:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 113,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "852:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "852:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "852:45:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 111,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "827:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "827:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "827:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "791:117:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 122,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "941:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 123,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 110,
																					"src": "953:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "953:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "968:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "953:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 129,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 110,
																					"src": "984:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 131,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "991:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 130,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "991:4:1",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 132,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "990:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 127,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "973:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "973:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "973:24:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "953:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "952:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "941:57:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1013:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "919:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "919:138:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "919:138:1"
											}
										]
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "705:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "729:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "750:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:76:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:0:1"
									},
									"scope": 244,
									"src": "673:392:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1207:296:1",
										"statements": [
											{
												"assignments": [
													153,
													155
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 186,
														"src": "1219:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 152,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1219:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 155,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 186,
														"src": "1233:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 154,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1233:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 166,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1302:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 161,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "1314:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 162,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 147,
																	"src": "1320:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 163,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "1324:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 158,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1279:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1279:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1279:51:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 156,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1254:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1254:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1254:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1218:123:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 168,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 153,
																"src": "1374:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 169,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 155,
																					"src": "1386:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1386:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1401:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1386:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 175,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 155,
																					"src": "1417:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 177,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1424:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 176,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1424:4:1",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 178,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1423:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 173,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1406:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1406:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1406:24:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1386:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 181,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1385:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1374:57:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1446:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1352:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:143:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "1352:143:1"
											}
										]
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1109:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1133:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1156:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1177:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:99:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1207:0:1"
									},
									"scope": 244,
									"src": "1073:430:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "1694:400:1",
										"statements": [
											{
												"condition": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1709:8:1",
													"subExpression": {
														"id": 198,
														"name": "isERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1710:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 240,
													"nodeType": "Block",
													"src": "1770:317:1",
													"statements": [
														{
															"assignments": [
																208,
																210
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 208,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"scope": 240,
																	"src": "1786:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 207,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1786:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 210,
																	"mutability": "mutable",
																	"name": "data",
																	"nodeType": "VariableDeclaration",
																	"scope": 240,
																	"src": "1800:17:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 209,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1800:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 220,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30786139303539636262",
																				"id": 215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1873:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				"value": "0xa9059cbb"
																			},
																			{
																				"id": 216,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 191,
																				"src": "1885:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 217,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 193,
																				"src": "1889:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 213,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1850:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "1850:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1850:45:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 211,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "1821:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "1821:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1821:89:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1785:125:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 222,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 208,
																			"src": "1951:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 234,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 226,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 223,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 210,
																								"src": "1963:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							"id": 224,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "1963:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 225,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1978:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "1963:16:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "||",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 229,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 210,
																								"src": "1994:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							{
																								"components": [
																									{
																										"id": 231,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "2001:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_bool_$",
																											"typeString": "type(bool)"
																										},
																										"typeName": {
																											"id": 230,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "2001:4:1",
																											"typeDescriptions": {}
																										}
																									}
																								],
																								"id": 232,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2000:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								},
																								{
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							],
																							"expression": {
																								"id": 227,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "1983:3:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 228,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "decode",
																							"nodeType": "MemberAccess",
																							"src": "1983:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 233,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1983:24:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "1963:44:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 235,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1962:46:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1951:57:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2027:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		},
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		}
																	],
																	"id": 221,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1925:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1925:150:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 239,
															"nodeType": "ExpressionStatement",
															"src": "1925:150:1"
														}
													]
												},
												"id": 241,
												"nodeType": "IfStatement",
												"src": "1705:382:1",
												"trueBody": {
													"id": 206,
													"nodeType": "Block",
													"src": "1719:45:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 203,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "1746:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 200,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 191,
																		"src": "1734:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1734:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1734:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 205,
															"nodeType": "ExpressionStatement",
															"src": "1734:18:1"
														}
													]
												}
											}
										]
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferBaseToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1588:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1612:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1612:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1641:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "isERC20",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1665:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1665:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:107:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:0:1"
									},
									"scope": 244,
									"src": "1547:547:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 245,
							"src": "244:1853:1"
						}
					],
					"src": "35:2064:1"
				},
				"id": 1
			}
		}
	}
}