{
	"id": "bc1844fd2d1cc376a9d2985e626400a2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/1_Storage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"./TransferHelper.sol\";\n\ncontract Storage {\n    \n\n    function sendData(uint256 real_amount_in) public payable {\n        payable(msg.sender).transfer(msg.value - real_amount_in);\n    }\n\n    function getBalance(address _address) external view returns(uint256) {\n        return _address.balance;\n    }\n   \n    function backToken() external payable {\n        payable(msg.sender).transfer(1 ether);\n        payable(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016).transfer(2 ether);\n    }\n}"
			},
			"contracts/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n    helper methods for interacting with ERC20 tokens that do not consistently return true/false\r\n    with the addition of a transfer function to send eth or an erc20 token\r\n*/\r\nlibrary TransferHelper {\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x095ea7b3, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: APPROVE_FAILED\"\r\n        );\r\n    }\r\n \r\n    function safeTransfer(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0xa9059cbb, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FAILED\"\r\n        );\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FROM_FAILED\"\r\n        );\r\n    }\r\n\r\n    // sends ETH or an erc20 token\r\n    function safeTransferBaseToken(\r\n        address token,\r\n        address payable to,\r\n        uint256 value,\r\n        bool isERC20\r\n    ) internal {\r\n        if (!isERC20) {\r\n            to.transfer(value);\r\n        } else {\r\n            (bool success, bytes memory data) = token.call(\r\n                abi.encodeWithSelector(0xa9059cbb, to, value)\r\n            );\r\n            require(\r\n                success && (data.length == 0 || abi.decode(data, (bool))),\r\n                \"TransferHelper: TRANSFER_FAILED\"\r\n            );\r\n        }\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/1_Storage.sol": {
				"Storage": {
					"abi": [
						{
							"inputs": [],
							"name": "backToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "real_amount_in",
									"type": "uint256"
								}
							],
							"name": "sendData",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/1_Storage.sol\":102:558  contract Storage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/1_Storage.sol\":102:558  contract Storage {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x861faf5f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xdcad35c7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/1_Storage.sol\":385:556  function backToken() external payable {... */\n    tag_2:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/1_Storage.sol\":131:261  function sendData(uint256 real_amount_in) public payable {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/1_Storage.sol\":267:376  function getBalance(address _address) external view returns(uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_Storage.sol\":385:556  function backToken() external payable {... */\n    tag_6:\n        /* \"contracts/1_Storage.sol\":441:451  msg.sender */\n      caller\n        /* \"contracts/1_Storage.sol\":433:461  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_Storage.sol\":433:470  payable(msg.sender).transfer(1 ether) */\n      0x08fc\n        /* \"contracts/1_Storage.sol\":462:469  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/1_Storage.sol\":433:470  payable(msg.sender).transfer(1 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_20:\n      pop\n        /* \"contracts/1_Storage.sol\":488:530  0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016 */\n      0x4f0b12bbf40fc182559822a5b1db6d34dbc3e016\n        /* \"contracts/1_Storage.sol\":480:540  payable(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_Storage.sol\":480:549  payable(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016).transfer(2 ether) */\n      0x08fc\n        /* \"contracts/1_Storage.sol\":541:548  2 ether */\n      0x1bc16d674ec80000\n        /* \"contracts/1_Storage.sol\":480:549  payable(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016).transfer(2 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n        /* \"contracts/1_Storage.sol\":385:556  function backToken() external payable {... */\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":131:261  function sendData(uint256 real_amount_in) public payable {... */\n    tag_10:\n        /* \"contracts/1_Storage.sol\":206:216  msg.sender */\n      caller\n        /* \"contracts/1_Storage.sol\":198:226  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_Storage.sol\":198:254  payable(msg.sender).transfer(msg.value - real_amount_in) */\n      0x08fc\n        /* \"contracts/1_Storage.sol\":239:253  real_amount_in */\n      dup3\n        /* \"contracts/1_Storage.sol\":227:236  msg.value */\n      callvalue\n        /* \"contracts/1_Storage.sol\":227:253  msg.value - real_amount_in */\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"contracts/1_Storage.sol\":198:254  payable(msg.sender).transfer(msg.value - real_amount_in) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_27:\n      pop\n        /* \"contracts/1_Storage.sol\":131:261  function sendData(uint256 real_amount_in) public payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":267:376  function getBalance(address _address) external view returns(uint256) {... */\n    tag_15:\n        /* \"contracts/1_Storage.sol\":327:334  uint256 */\n      0x00\n        /* \"contracts/1_Storage.sol\":353:361  _address */\n      dup2\n        /* \"contracts/1_Storage.sol\":353:369  _address.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/1_Storage.sol\":346:369  return _address.balance */\n      swap1\n      pop\n        /* \"contracts/1_Storage.sol\":267:376  function getBalance(address _address) external view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_30:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_32:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_33:\n        /* \"#utility.yul\":490:514   */\n      tag_47\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_32\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_48:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_34:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_50\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_33\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_9:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_53\n      tag_30\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":766:885   */\n    tag_52:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_54\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_34\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_35:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_36:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_57\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_35\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_37:\n        /* \"#utility.yul\":1332:1356   */\n      tag_59\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_36\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_60:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_38:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_62\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_37\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1861   */\n    tag_14:\n        /* \"#utility.yul\":1591:1597   */\n      0x00\n        /* \"#utility.yul\":1640:1642   */\n      0x20\n        /* \"#utility.yul\":1628:1637   */\n      dup3\n        /* \"#utility.yul\":1619:1626   */\n      dup5\n        /* \"#utility.yul\":1615:1638   */\n      sub\n        /* \"#utility.yul\":1611:1643   */\n      slt\n        /* \"#utility.yul\":1608:1727   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":1646:1725   */\n      tag_65\n      tag_30\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1608:1727   */\n    tag_64:\n        /* \"#utility.yul\":1766:1767   */\n      0x00\n        /* \"#utility.yul\":1791:1844   */\n      tag_66\n        /* \"#utility.yul\":1836:1843   */\n      dup5\n        /* \"#utility.yul\":1827:1833   */\n      dup3\n        /* \"#utility.yul\":1816:1825   */\n      dup6\n        /* \"#utility.yul\":1812:1834   */\n      add\n        /* \"#utility.yul\":1791:1844   */\n      tag_38\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1781:1844   */\n      swap2\n      pop\n        /* \"#utility.yul\":1737:1854   */\n      pop\n        /* \"#utility.yul\":1532:1861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1867:1985   */\n    tag_39:\n        /* \"#utility.yul\":1954:1978   */\n      tag_68\n        /* \"#utility.yul\":1972:1977   */\n      dup2\n        /* \"#utility.yul\":1954:1978   */\n      tag_32\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1949:1952   */\n      dup3\n        /* \"#utility.yul\":1942:1979   */\n      mstore\n        /* \"#utility.yul\":1867:1985   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1991:2213   */\n    tag_17:\n        /* \"#utility.yul\":2084:2088   */\n      0x00\n        /* \"#utility.yul\":2122:2124   */\n      0x20\n        /* \"#utility.yul\":2111:2120   */\n      dup3\n        /* \"#utility.yul\":2107:2125   */\n      add\n        /* \"#utility.yul\":2099:2125   */\n      swap1\n      pop\n        /* \"#utility.yul\":2135:2206   */\n      tag_70\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2192:2201   */\n      dup4\n        /* \"#utility.yul\":2188:2205   */\n      add\n        /* \"#utility.yul\":2179:2185   */\n      dup5\n        /* \"#utility.yul\":2135:2206   */\n      tag_39\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1991:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2399   */\n    tag_40:\n        /* \"#utility.yul\":2267:2344   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2264:2265   */\n      0x00\n        /* \"#utility.yul\":2257:2345   */\n      mstore\n        /* \"#utility.yul\":2364:2368   */\n      0x11\n        /* \"#utility.yul\":2361:2362   */\n      0x04\n        /* \"#utility.yul\":2354:2369   */\n      mstore\n        /* \"#utility.yul\":2388:2392   */\n      0x24\n        /* \"#utility.yul\":2385:2386   */\n      0x00\n        /* \"#utility.yul\":2378:2393   */\n      revert\n        /* \"#utility.yul\":2405:2596   */\n    tag_25:\n        /* \"#utility.yul\":2445:2449   */\n      0x00\n        /* \"#utility.yul\":2465:2485   */\n      tag_73\n        /* \"#utility.yul\":2483:2484   */\n      dup3\n        /* \"#utility.yul\":2465:2485   */\n      tag_32\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2460:2485   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2519   */\n      tag_74\n        /* \"#utility.yul\":2517:2518   */\n      dup4\n        /* \"#utility.yul\":2499:2519   */\n      tag_32\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2494:2519   */\n      swap3\n      pop\n        /* \"#utility.yul\":2538:2539   */\n      dup3\n        /* \"#utility.yul\":2535:2536   */\n      dup3\n        /* \"#utility.yul\":2532:2540   */\n      lt\n        /* \"#utility.yul\":2529:2563   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":2543:2561   */\n      tag_76\n      tag_40\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2529:2563   */\n    tag_75:\n        /* \"#utility.yul\":2588:2589   */\n      dup3\n        /* \"#utility.yul\":2585:2586   */\n      dup3\n        /* \"#utility.yul\":2581:2590   */\n      sub\n        /* \"#utility.yul\":2573:2590   */\n      swap1\n      pop\n        /* \"#utility.yul\":2405:2596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206eaf000b233f2723d08244cf890f8bb82dd23e73526f77c98834839cd4af7fe864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061037c806100206000396000f3fe6080604052600436106100345760003560e01c8063861faf5f14610039578063dcad35c714610043578063f8b2cb4f1461005f575b600080fd5b61004161009c565b005b61005d60048036038101906100589190610201565b610150565b005b34801561006b57600080fd5b506100866004803603810190610081919061028c565b6101a5565b60405161009391906102c8565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400009081150290604051600060405180830381858888f193505050501580156100ea573d6000803e3d6000fd5b50734f0b12bbf40fc182559822a5b1db6d34dbc3e01673ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec800009081150290604051600060405180830381858888f1935050505015801561014d573d6000803e3d6000fd5b50565b3373ffffffffffffffffffffffffffffffffffffffff166108fc82346101769190610312565b9081150290604051600060405180830381858888f193505050501580156101a1573d6000803e3d6000fd5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b600080fd5b6000819050919050565b6101de816101cb565b81146101e957600080fd5b50565b6000813590506101fb816101d5565b92915050565b600060208284031215610217576102166101c6565b5b6000610225848285016101ec565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102598261022e565b9050919050565b6102698161024e565b811461027457600080fd5b50565b60008135905061028681610260565b92915050565b6000602082840312156102a2576102a16101c6565b5b60006102b084828501610277565b91505092915050565b6102c2816101cb565b82525050565b60006020820190506102dd60008301846102b9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061031d826101cb565b9150610328836101cb565b92508282101561033b5761033a6102e3565b5b82820390509291505056fea26469706673582212206eaf000b233f2723d08244cf890f8bb82dd23e73526f77c98834839cd4af7fe864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xDCAD35C7 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41 PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x201 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x28C JUMP JUMPDEST PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH20 0x4F0B12BBF40FC182559822A5B1DB6D34DBC3E016 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x1BC16D674EC80000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 CALLVALUE PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x312 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP2 EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FB DUP2 PUSH2 0x1D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x217 JUMPI PUSH2 0x216 PUSH2 0x1C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x225 DUP5 DUP3 DUP6 ADD PUSH2 0x1EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259 DUP3 PUSH2 0x22E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x269 DUP2 PUSH2 0x24E JUMP JUMPDEST DUP2 EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x286 DUP2 PUSH2 0x260 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A2 JUMPI PUSH2 0x2A1 PUSH2 0x1C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B0 DUP5 DUP3 DUP6 ADD PUSH2 0x277 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C2 DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x31D DUP3 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP PUSH2 0x328 DUP4 PUSH2 0x1CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x33B JUMPI PUSH2 0x33A PUSH2 0x2E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xAF000B233F2723D08244CF890F8BB8 0x2D 0xD2 RETURNDATACOPY PUSH20 0x526F77C98834839CD4AF7FE864736F6C63430008 0xD STOP CALLER ",
							"sourceMap": "102:456:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@backToken_52": {
									"entryPoint": 156,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_31": {
									"entryPoint": 421,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sendData_20": {
									"entryPoint": 336,
									"id": 20,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2599:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:2"
															},
															"nodeType": "YulIf",
															"src": "766:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:2",
														"type": ""
													}
												],
												"src": "690:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1052:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1062:7:2",
														"type": ""
													}
												],
												"src": "1025:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1184:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1194:7:2",
														"type": ""
													}
												],
												"src": "1157:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1302:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1359:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:43:2"
															},
															"nodeType": "YulIf",
															"src": "1312:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1295:5:2",
														"type": ""
													}
												],
												"src": "1259:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1439:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1449:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1417:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1425:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1433:5:2",
														"type": ""
													}
												],
												"src": "1387:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1598:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1646:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1646:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1646:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1619:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1628:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1611:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:32:2"
															},
															"nodeType": "YulIf",
															"src": "1608:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1737:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1752:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1756:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1781:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1816:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1827:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1812:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1812:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1791:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1781:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1568:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1579:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1591:6:2",
														"type": ""
													}
												],
												"src": "1532:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1972:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1954:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1954:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1942:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1920:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1927:3:2",
														"type": ""
													}
												],
												"src": "1867:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2089:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2099:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2122:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2099:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2135:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2135:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2061:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2073:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2084:4:2",
														"type": ""
													}
												],
												"src": "1991:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2247:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2264:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2267:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2257:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2257:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2361:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2364:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2354:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2354:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2354:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2385:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2388:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2378:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2378:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2378:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2219:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2450:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2460:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2483:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2465:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2460:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2494:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2517:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2499:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2499:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2494:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2541:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2543:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2543:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2543:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2535:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2538:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2532:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2532:8:2"
															},
															"nodeType": "YulIf",
															"src": "2529:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2573:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2585:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2588:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2581:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2581:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2573:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2436:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2439:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2445:4:2",
														"type": ""
													}
												],
												"src": "2405:191:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c8063861faf5f14610039578063dcad35c714610043578063f8b2cb4f1461005f575b600080fd5b61004161009c565b005b61005d60048036038101906100589190610201565b610150565b005b34801561006b57600080fd5b506100866004803603810190610081919061028c565b6101a5565b60405161009391906102c8565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400009081150290604051600060405180830381858888f193505050501580156100ea573d6000803e3d6000fd5b50734f0b12bbf40fc182559822a5b1db6d34dbc3e01673ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec800009081150290604051600060405180830381858888f1935050505015801561014d573d6000803e3d6000fd5b50565b3373ffffffffffffffffffffffffffffffffffffffff166108fc82346101769190610312565b9081150290604051600060405180830381858888f193505050501580156101a1573d6000803e3d6000fd5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff16319050919050565b600080fd5b6000819050919050565b6101de816101cb565b81146101e957600080fd5b50565b6000813590506101fb816101d5565b92915050565b600060208284031215610217576102166101c6565b5b6000610225848285016101ec565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102598261022e565b9050919050565b6102698161024e565b811461027457600080fd5b50565b60008135905061028681610260565b92915050565b6000602082840312156102a2576102a16101c6565b5b60006102b084828501610277565b91505092915050565b6102c2816101cb565b82525050565b60006020820190506102dd60008301846102b9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061031d826101cb565b9150610328836101cb565b92508282101561033b5761033a6102e3565b5b82820390509291505056fea26469706673582212206eaf000b233f2723d08244cf890f8bb82dd23e73526f77c98834839cd4af7fe864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xDCAD35C7 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41 PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x201 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x28C JUMP JUMPDEST PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH20 0x4F0B12BBF40FC182559822A5B1DB6D34DBC3E016 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x1BC16D674EC80000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 CALLVALUE PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x312 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP2 EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FB DUP2 PUSH2 0x1D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x217 JUMPI PUSH2 0x216 PUSH2 0x1C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x225 DUP5 DUP3 DUP6 ADD PUSH2 0x1EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259 DUP3 PUSH2 0x22E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x269 DUP2 PUSH2 0x24E JUMP JUMPDEST DUP2 EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x286 DUP2 PUSH2 0x260 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A2 JUMPI PUSH2 0x2A1 PUSH2 0x1C6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B0 DUP5 DUP3 DUP6 ADD PUSH2 0x277 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C2 DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x31D DUP3 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP PUSH2 0x328 DUP4 PUSH2 0x1CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x33B JUMPI PUSH2 0x33A PUSH2 0x2E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xAF000B233F2723D08244CF890F8BB8 0x2D 0xD2 RETURNDATACOPY PUSH20 0x526F77C98834839CD4AF7FE864736F6C63430008 0xD STOP CALLER ",
							"sourceMap": "102:456:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;385:171;;;:::i;:::-;;131:130;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;267:109;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;385:171;441:10;433:28;;:37;462:7;433:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;488:42;480:60;;:69;541:7;480:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;385:171::o;131:130::-;206:10;198:28;;:56;239:14;227:9;:26;;;;:::i;:::-;198:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;131:130;:::o;267:109::-;327:7;353:8;:16;;;346:23;;267:109;;;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:118::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1867:118;;:::o;1991:222::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;1991:222;;;;:::o;2219:180::-;2267:77;2264:1;2257:88;2364:4;2361:1;2354:15;2388:4;2385:1;2378:15;2405:191;2445:4;2465:20;2483:1;2465:20;:::i;:::-;2460:25;;2499:20;2517:1;2499:20;:::i;:::-;2494:25;;2538:1;2535;2532:8;2529:34;;;2543:18;;:::i;:::-;2529:34;2588:1;2585;2581:9;2573:17;;2405:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "178400",
								"executionCost": "220",
								"totalCost": "178620"
							},
							"external": {
								"backToken()": "infinite",
								"getBalance(address)": "3279",
								"sendData(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 102,
									"end": 558,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 102,
									"end": 558,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 102,
									"end": 558,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 102,
									"end": 558,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 102,
									"end": 558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 102,
									"end": 558,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 102,
									"end": 558,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 558,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 102,
									"end": 558,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 102,
									"end": 558,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 102,
									"end": 558,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 102,
									"end": 558,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 102,
									"end": 558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 102,
									"end": 558,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 102,
									"end": 558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 102,
									"end": 558,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 102,
									"end": 558,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 558,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 102,
									"end": 558,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 102,
									"end": 558,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206eaf000b233f2723d08244cf890f8bb82dd23e73526f77c98834839cd4af7fe864736f6c634300080d0033",
									".code": [
										{
											"begin": 102,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 102,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 558,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 558,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 102,
											"end": 558,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "861FAF5F"
										},
										{
											"begin": 102,
											"end": 558,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 102,
											"end": 558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "DCAD35C7"
										},
										{
											"begin": 102,
											"end": 558,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 102,
											"end": 558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "F8B2CB4F"
										},
										{
											"begin": 102,
											"end": 558,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 102,
											"end": 558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 558,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 385,
											"end": 556,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 385,
											"end": 556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 385,
											"end": 556,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 556,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 261,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 131,
											"end": 261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 261,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 131,
											"end": 261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 261,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 131,
											"end": 261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 131,
											"end": 261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 131,
											"end": 261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 131,
											"end": 261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 131,
											"end": 261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 131,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 131,
											"end": 261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 131,
											"end": 261,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 131,
											"end": 261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 131,
											"end": 261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 131,
											"end": 261,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 261,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 385,
											"end": 556,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 385,
											"end": 556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 451,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 433,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 433,
											"end": 461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 462,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 433,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 470,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 433,
											"end": 470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 488,
											"end": 530,
											"name": "PUSH",
											"source": 0,
											"value": "4F0B12BBF40FC182559822A5B1DB6D34DBC3E016"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 541,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "1BC16D674EC80000"
										},
										{
											"begin": 480,
											"end": 549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 480,
											"end": 549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 549,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 480,
											"end": 549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 480,
											"end": 549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 556,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 261,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 131,
											"end": 261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 206,
											"end": 216,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 198,
											"end": 226,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 198,
											"end": 226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 239,
											"end": 253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 227,
											"end": 236,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 227,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 227,
											"end": 253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 227,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 198,
											"end": 254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 254,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 198,
											"end": 254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 131,
											"end": 261,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 267,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 353,
											"end": 369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 353,
											"end": 369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 353,
											"end": 369,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 346,
											"end": 369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 267,
											"end": 376,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1638,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1952,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2124,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 2125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2205,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2219,
											"end": 2399,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2344,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2264,
											"end": 2265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2345,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2368,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2361,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2354,
											"end": 2369,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2392,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2385,
											"end": 2386,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2393,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2596,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2405,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2483,
											"end": 2484,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2499,
											"end": 2519,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2499,
											"end": 2519,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2499,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2519,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2539,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2540,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2529,
											"end": 2563,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2529,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2529,
											"end": 2563,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2543,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2561,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2543,
											"end": 2561,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2543,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2529,
											"end": 2563,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2529,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2590,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2596,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2596,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2405,
											"end": 2596,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"backToken()": "861faf5f",
							"getBalance(address)": "f8b2cb4f",
							"sendData(uint256)": "dcad35c7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"backToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"real_amount_in\",\"type\":\"uint256\"}],\"name\":\"sendData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/1_Storage.sol\":\"Storage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/1_Storage.sol\":{\"keccak256\":\"0x3b983ca9dbe09c84ca6dc155a4115b79f8f7916db6c150fcbe65e6922502fca7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fbbbb04f47641b7e8c9c2a30f284dfa6df151c0ab4bd9d36a7d1a2d6db82d441\",\"dweb:/ipfs/QmP5KHCUV9E8K4aoN8Doqg5PAcnPPXsp3UQBK5BruGtZi6\"]},\"contracts/TransferHelper.sol\":{\"keccak256\":\"0xf64de8bda44d6e6a0ef231b637d0d6c78522fd561464c547eeca34f1a8e0482c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e8e7a9c1c50e24298b33bbde7e9d74998b58c889b706c80f95d130952d9e7\",\"dweb:/ipfs/QmP5sAxCH4LFZFJ9uxtFdCdZ3DPJJfv1iU6cHY19urExxw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TransferHelper.sol\":244:2097  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TransferHelper.sol\":244:2097  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220af0a167c932741e9b03cfbb8929af060ebbb4da24b367e4f297d54806804e58464736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af0a167c932741e9b03cfbb8929af060ebbb4da24b367e4f297d54806804e58464736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF EXP AND PUSH29 0x932741E9B03CFBB8929AF060EBBB4DA24B367E4F297D54806804E58464 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "244:1853:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af0a167c932741e9b03cfbb8929af060ebbb4da24b367e4f297d54806804e58464736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF EXP AND PUSH29 0x932741E9B03CFBB8929AF060EBBB4DA24B367E4F297D54806804E58464 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "244:1853:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferBaseToken(address,address payable,uint256,bool)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220af0a167c932741e9b03cfbb8929af060ebbb4da24b367e4f297d54806804e58464736f6c634300080d0033",
									".code": [
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TransferHelper.sol\":{\"keccak256\":\"0xf64de8bda44d6e6a0ef231b637d0d6c78522fd561464c547eeca34f1a8e0482c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e8e7a9c1c50e24298b33bbde7e9d74998b58c889b706c80f95d130952d9e7\",\"dweb:/ipfs/QmP5sAxCH4LFZFJ9uxtFdCdZ3DPJJfv1iU6cHY19urExxw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/1_Storage.sol": {
				"ast": {
					"absolutePath": "contracts/1_Storage.sol",
					"exportedSymbols": {
						"Storage": [
							53
						],
						"TransferHelper": [
							245
						]
					},
					"id": 54,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "contracts/TransferHelper.sol",
							"file": "./TransferHelper.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 54,
							"sourceUnit": 246,
							"src": "70:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Storage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 53,
							"linearizedBaseContracts": [
								53
							],
							"name": "Storage",
							"nameLocation": "111:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "188:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 13,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "227:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "227:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 15,
																"name": "real_amount_in",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "239:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "227:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 9,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "206:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 10,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "206:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 8,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "198:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 7,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "198:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "198:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "198:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "198:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "198:56:0"
											}
										]
									},
									"functionSelector": "dcad35c7",
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendData",
									"nameLocation": "140:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "real_amount_in",
												"nameLocation": "157:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "149:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "148:24:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:0:0"
									},
									"scope": 53,
									"src": "131:130:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "336:40:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 27,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "353:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "353:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 26,
												"id": 29,
												"nodeType": "Return",
												"src": "346:23:0"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "276:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "295:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "287:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:18:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "327:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:0"
									},
									"scope": 53,
									"src": "267:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "423:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "462:7:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 36,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "441:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "441:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "433:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 34,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "433:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "433:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "433:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "433:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "433:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "541:7:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "307834663042313262424634304663313832353539383232413562316442364433346462433345303136",
																	"id": 45,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "488:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "480:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 43,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "480:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "480:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "480:60:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "480:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "480:69:0"
											}
										]
									},
									"functionSelector": "861faf5f",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "backToken",
									"nameLocation": "394:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:0:0"
									},
									"scope": 53,
									"src": "385:171:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 54,
							"src": "102:456:0",
							"usedErrors": []
						}
					],
					"src": "37:521:0"
				},
				"id": 0
			},
			"contracts/TransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							245
						]
					},
					"id": 246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 55,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 56,
								"nodeType": "StructuredDocumentation",
								"src": "62:180:1",
								"text": "helper methods for interacting with ERC20 tokens that do not consistently return true/false\nwith the addition of a transfer function to send eth or an erc20 token"
							},
							"fullyImplemented": true,
							"id": 245,
							"linearizedBaseContracts": [
								245
							],
							"name": "TransferHelper",
							"nameLocation": "252:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "380:284:1",
										"statements": [
											{
												"assignments": [
													66,
													68
												],
												"declarations": [
													{
														"constant": false,
														"id": 66,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "397:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 98,
														"src": "392:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 65,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "392:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 68,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "419:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 98,
														"src": "406:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 67,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "406:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 78,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 73,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "475:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 74,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "487:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 75,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "491:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 71,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "452:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "452:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "452:45:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 69,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "427:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "427:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "427:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "391:117:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 80,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "541:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 81,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 68,
																					"src": "553:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 82,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "553:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 83,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "568:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "553:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 87,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 68,
																					"src": "584:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 89,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "591:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 88,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "591:4:1",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 90,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "590:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 85,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "573:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 86,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "573:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 91,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "573:24:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "553:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 93,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "552:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "541:57:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "613:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 79,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "519:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "519:137:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "519:137:1"
											}
										]
									},
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "283:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "313:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "305:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "337:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "329:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "358:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "350:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:76:1"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:1"
									},
									"scope": 245,
									"src": "274:390:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "780:285:1",
										"statements": [
											{
												"assignments": [
													109,
													111
												],
												"declarations": [
													{
														"constant": false,
														"id": 109,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "797:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 141,
														"src": "792:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 108,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "792:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 111,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "819:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 141,
														"src": "806:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 110,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "806:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 121,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "875:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 117,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "887:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 118,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "891:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 114,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "852:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "852:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "852:45:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 112,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "827:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "827:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "827:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "791:117:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "941:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 124,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 111,
																					"src": "953:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "953:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "968:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "953:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 130,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 111,
																					"src": "984:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 132,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "991:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 131,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "991:4:1",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 133,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "990:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 128,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "973:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "973:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "973:24:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "953:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 136,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "952:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "941:57:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1013:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "919:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "919:138:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "919:138:1"
											}
										]
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "682:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "713:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "705:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "737:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "729:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "758:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "750:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:76:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:0:1"
									},
									"scope": 245,
									"src": "673:392:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1207:296:1",
										"statements": [
											{
												"assignments": [
													154,
													156
												],
												"declarations": [
													{
														"constant": false,
														"id": 154,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1224:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 187,
														"src": "1219:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 153,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1219:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 156,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1246:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 187,
														"src": "1233:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 155,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1233:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 167,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1302:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 162,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "1314:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 163,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "1320:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 164,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "1324:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 159,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1279:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1279:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1279:51:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 157,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "1254:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1254:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1254:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1218:123:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 169,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "1374:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 170,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 156,
																					"src": "1386:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1386:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1401:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1386:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 176,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 156,
																					"src": "1417:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 178,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1424:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 177,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1424:4:1",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 179,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1423:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 174,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1406:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1406:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1406:24:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1386:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 182,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1385:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1374:57:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1446:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1352:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:143:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1352:143:1"
											}
										]
									},
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1082:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1117:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1109:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1141:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1133:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1164:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1156:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1185:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1177:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:99:1"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1207:0:1"
									},
									"scope": 245,
									"src": "1073:430:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "1694:400:1",
										"statements": [
											{
												"condition": {
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1709:8:1",
													"subExpression": {
														"id": 199,
														"name": "isERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "1710:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 241,
													"nodeType": "Block",
													"src": "1770:317:1",
													"statements": [
														{
															"assignments": [
																209,
																211
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 209,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "1791:7:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 241,
																	"src": "1786:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 208,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1786:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 211,
																	"mutability": "mutable",
																	"name": "data",
																	"nameLocation": "1813:4:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 241,
																	"src": "1800:17:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 210,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1800:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 221,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30786139303539636262",
																				"id": 216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1873:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				"value": "0xa9059cbb"
																			},
																			{
																				"id": 217,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 192,
																				"src": "1885:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 218,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 194,
																				"src": "1889:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 214,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1850:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "1850:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1850:45:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 212,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 190,
																		"src": "1821:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "1821:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1821:89:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1785:125:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 223,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 209,
																			"src": "1951:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 235,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 227,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 224,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 211,
																								"src": "1963:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							"id": 225,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "1963:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 226,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1978:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "1963:16:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "||",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 230,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 211,
																								"src": "1994:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							{
																								"components": [
																									{
																										"id": 232,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "2001:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_bool_$",
																											"typeString": "type(bool)"
																										},
																										"typeName": {
																											"id": 231,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "2001:4:1",
																											"typeDescriptions": {}
																										}
																									}
																								],
																								"id": 233,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2000:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								},
																								{
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							],
																							"expression": {
																								"id": 228,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "1983:3:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 229,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "decode",
																							"nodeType": "MemberAccess",
																							"src": "1983:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 234,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1983:24:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "1963:44:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 236,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1962:46:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1951:57:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"id": 238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2027:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		},
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		}
																	],
																	"id": 222,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1925:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1925:150:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "1925:150:1"
														}
													]
												},
												"id": 242,
												"nodeType": "IfStatement",
												"src": "1705:382:1",
												"trueBody": {
													"id": 207,
													"nodeType": "Block",
													"src": "1719:45:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 204,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "1746:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 201,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "1734:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1734:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1734:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 206,
															"nodeType": "ExpressionStatement",
															"src": "1734:18:1"
														}
													]
												}
											}
										]
									},
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferBaseToken",
									"nameLocation": "1556:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1596:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "1588:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1628:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "1612:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1612:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1649:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "1641:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "isERC20",
												"nameLocation": "1670:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "1665:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1665:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:107:1"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:0:1"
									},
									"scope": 245,
									"src": "1547:547:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 246,
							"src": "244:1853:1",
							"usedErrors": []
						}
					],
					"src": "35:2064:1"
				},
				"id": 1
			}
		}
	}
}