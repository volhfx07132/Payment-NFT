{
	"id": "2f7ac9240d720d0fc761752aa8a39251",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./IERC20Metadata.sol\";\r\nimport \"../Utils/Context.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n        }\r\n        _balances[to] += amount;\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}"
			},
			"Utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"ERC20/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"
			},
			"ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20/ERC20.sol\":1423:12994  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  mstore(0x40, 0x80)\n    /* \"ERC20/ERC20.sol\":2017:2133  constructor(string memory name_, string memory symbol_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC20/ERC20.sol\":2092:2097  name_ */\n  dup2\n    /* \"ERC20/ERC20.sol\":2084:2089  _name */\n  0x03\n    /* \"ERC20/ERC20.sol\":2084:2097  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ERC20/ERC20.sol\":2118:2125  symbol_ */\n  dup1\n    /* \"ERC20/ERC20.sol\":2108:2115  _symbol */\n  0x04\n    /* \"ERC20/ERC20.sol\":2108:2125  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC20/ERC20.sol\":2017:2133  constructor(string memory name_, string memory symbol_) {\r... */\n  pop\n  pop\n    /* \"ERC20/ERC20.sol\":1423:12994  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:360   */\ntag_22:\n  0x00\n    /* \"#utility.yul\":121:186   */\n  tag_24\n    /* \"#utility.yul\":136:185   */\n  tag_25\n    /* \"#utility.yul\":178:184   */\n  dup5\n    /* \"#utility.yul\":136:185   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":121:186   */\n  tag_27\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":112:186   */\n  swap1\n  pop\n    /* \"#utility.yul\":209:215   */\n  dup3\n    /* \"#utility.yul\":202:207   */\n  dup2\n    /* \"#utility.yul\":195:216   */\n  mstore\n    /* \"#utility.yul\":247:251   */\n  0x20\n    /* \"#utility.yul\":240:245   */\n  dup2\n    /* \"#utility.yul\":236:252   */\n  add\n    /* \"#utility.yul\":285:288   */\n  dup5\n    /* \"#utility.yul\":276:282   */\n  dup5\n    /* \"#utility.yul\":271:274   */\n  dup5\n    /* \"#utility.yul\":267:283   */\n  add\n    /* \"#utility.yul\":264:289   */\n  gt\n    /* \"#utility.yul\":261:263   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":302:303   */\n  0x00\n    /* \"#utility.yul\":299:300   */\n  dup1\n    /* \"#utility.yul\":292:304   */\n  revert\n    /* \"#utility.yul\":261:263   */\ntag_28:\n    /* \"#utility.yul\":315:354   */\n  tag_29\n    /* \"#utility.yul\":347:353   */\n  dup5\n    /* \"#utility.yul\":342:345   */\n  dup3\n    /* \"#utility.yul\":337:340   */\n  dup6\n    /* \"#utility.yul\":315:354   */\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":102:360   */\n  pop\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":380:668   */\ntag_31:\n  0x00\n    /* \"#utility.yul\":496:499   */\n  dup3\n    /* \"#utility.yul\":489:493   */\n  0x1f\n    /* \"#utility.yul\":481:487   */\n  dup4\n    /* \"#utility.yul\":477:494   */\n  add\n    /* \"#utility.yul\":473:500   */\n  slt\n    /* \"#utility.yul\":463:465   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":514:515   */\n  0x00\n    /* \"#utility.yul\":511:512   */\n  dup1\n    /* \"#utility.yul\":504:516   */\n  revert\n    /* \"#utility.yul\":463:465   */\ntag_33:\n    /* \"#utility.yul\":547:553   */\n  dup2\n    /* \"#utility.yul\":541:554   */\n  mload\n    /* \"#utility.yul\":572:662   */\n  tag_34\n    /* \"#utility.yul\":658:661   */\n  dup5\n    /* \"#utility.yul\":650:656   */\n  dup3\n    /* \"#utility.yul\":643:647   */\n  0x20\n    /* \"#utility.yul\":635:641   */\n  dup7\n    /* \"#utility.yul\":631:648   */\n  add\n    /* \"#utility.yul\":572:662   */\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":563:662   */\n  swap2\n  pop\n    /* \"#utility.yul\":453:668   */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":674:1326   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":830:832   */\n  0x40\n    /* \"#utility.yul\":818:827   */\n  dup4\n    /* \"#utility.yul\":809:816   */\n  dup6\n    /* \"#utility.yul\":805:828   */\n  sub\n    /* \"#utility.yul\":801:833   */\n  slt\n    /* \"#utility.yul\":798:800   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":846:847   */\n  0x00\n    /* \"#utility.yul\":843:844   */\n  dup1\n    /* \"#utility.yul\":836:848   */\n  revert\n    /* \"#utility.yul\":798:800   */\ntag_36:\n    /* \"#utility.yul\":910:911   */\n  0x00\n    /* \"#utility.yul\":899:908   */\n  dup4\n    /* \"#utility.yul\":895:912   */\n  add\n    /* \"#utility.yul\":889:913   */\n  mload\n    /* \"#utility.yul\":940:958   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":932:938   */\n  dup2\n    /* \"#utility.yul\":929:959   */\n  gt\n    /* \"#utility.yul\":926:928   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":972:973   */\n  0x00\n    /* \"#utility.yul\":969:970   */\n  dup1\n    /* \"#utility.yul\":962:974   */\n  revert\n    /* \"#utility.yul\":926:928   */\ntag_37:\n    /* \"#utility.yul\":1000:1074   */\n  tag_38\n    /* \"#utility.yul\":1066:1073   */\n  dup6\n    /* \"#utility.yul\":1057:1063   */\n  dup3\n    /* \"#utility.yul\":1046:1055   */\n  dup7\n    /* \"#utility.yul\":1042:1064   */\n  add\n    /* \"#utility.yul\":1000:1074   */\n  tag_31\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":990:1074   */\n  swap3\n  pop\n    /* \"#utility.yul\":860:1084   */\n  pop\n    /* \"#utility.yul\":1144:1146   */\n  0x20\n    /* \"#utility.yul\":1133:1142   */\n  dup4\n    /* \"#utility.yul\":1129:1147   */\n  add\n    /* \"#utility.yul\":1123:1148   */\n  mload\n    /* \"#utility.yul\":1175:1193   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1167:1173   */\n  dup2\n    /* \"#utility.yul\":1164:1194   */\n  gt\n    /* \"#utility.yul\":1161:1163   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1207:1208   */\n  0x00\n    /* \"#utility.yul\":1204:1205   */\n  dup1\n    /* \"#utility.yul\":1197:1209   */\n  revert\n    /* \"#utility.yul\":1161:1163   */\ntag_39:\n    /* \"#utility.yul\":1235:1309   */\n  tag_40\n    /* \"#utility.yul\":1301:1308   */\n  dup6\n    /* \"#utility.yul\":1292:1298   */\n  dup3\n    /* \"#utility.yul\":1281:1290   */\n  dup7\n    /* \"#utility.yul\":1277:1299   */\n  add\n    /* \"#utility.yul\":1235:1309   */\n  tag_31\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1225:1309   */\n  swap2\n  pop\n    /* \"#utility.yul\":1094:1319   */\n  pop\n    /* \"#utility.yul\":788:1326   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1332:1615   */\ntag_27:\n  0x00\n    /* \"#utility.yul\":1398:1400   */\n  0x40\n    /* \"#utility.yul\":1392:1401   */\n  mload\n    /* \"#utility.yul\":1382:1401   */\n  swap1\n  pop\n    /* \"#utility.yul\":1440:1444   */\n  dup2\n    /* \"#utility.yul\":1432:1438   */\n  dup2\n    /* \"#utility.yul\":1428:1445   */\n  add\n    /* \"#utility.yul\":1547:1553   */\n  dup2\n    /* \"#utility.yul\":1535:1545   */\n  dup2\n    /* \"#utility.yul\":1532:1554   */\n  lt\n    /* \"#utility.yul\":1511:1529   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1499:1509   */\n  dup3\n    /* \"#utility.yul\":1496:1530   */\n  gt\n    /* \"#utility.yul\":1493:1555   */\n  or\n    /* \"#utility.yul\":1490:1492   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1558:1576   */\n  tag_43\n  tag_44\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1490:1492   */\ntag_42:\n    /* \"#utility.yul\":1598:1608   */\n  dup1\n    /* \"#utility.yul\":1594:1596   */\n  0x40\n    /* \"#utility.yul\":1587:1609   */\n  mstore\n    /* \"#utility.yul\":1372:1615   */\n  pop\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1621:1953   */\ntag_26:\n  0x00\n    /* \"#utility.yul\":1773:1791   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1765:1771   */\n  dup3\n    /* \"#utility.yul\":1762:1792   */\n  gt\n    /* \"#utility.yul\":1759:1761   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1795:1813   */\n  tag_47\n  tag_44\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1759:1761   */\ntag_46:\n    /* \"#utility.yul\":1880:1884   */\n  0x1f\n    /* \"#utility.yul\":1876:1885   */\n  not\n    /* \"#utility.yul\":1869:1873   */\n  0x1f\n    /* \"#utility.yul\":1861:1867   */\n  dup4\n    /* \"#utility.yul\":1857:1874   */\n  add\n    /* \"#utility.yul\":1853:1886   */\n  and\n    /* \"#utility.yul\":1845:1886   */\n  swap1\n  pop\n    /* \"#utility.yul\":1941:1945   */\n  0x20\n    /* \"#utility.yul\":1935:1939   */\n  dup2\n    /* \"#utility.yul\":1931:1946   */\n  add\n    /* \"#utility.yul\":1923:1946   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1953   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1959:2266   */\ntag_30:\n    /* \"#utility.yul\":2027:2028   */\n  0x00\n    /* \"#utility.yul\":2037:2150   */\ntag_49:\n    /* \"#utility.yul\":2051:2057   */\n  dup4\n    /* \"#utility.yul\":2048:2049   */\n  dup2\n    /* \"#utility.yul\":2045:2058   */\n  lt\n    /* \"#utility.yul\":2037:2150   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2136:2137   */\n  dup1\n    /* \"#utility.yul\":2131:2134   */\n  dup3\n    /* \"#utility.yul\":2127:2138   */\n  add\n    /* \"#utility.yul\":2121:2139   */\n  mload\n    /* \"#utility.yul\":2117:2118   */\n  dup2\n    /* \"#utility.yul\":2112:2115   */\n  dup5\n    /* \"#utility.yul\":2108:2119   */\n  add\n    /* \"#utility.yul\":2101:2140   */\n  mstore\n    /* \"#utility.yul\":2073:2075   */\n  0x20\n    /* \"#utility.yul\":2070:2071   */\n  dup2\n    /* \"#utility.yul\":2066:2076   */\n  add\n    /* \"#utility.yul\":2061:2076   */\n  swap1\n  pop\n    /* \"#utility.yul\":2037:2150   */\n  jump(tag_49)\ntag_51:\n    /* \"#utility.yul\":2168:2174   */\n  dup4\n    /* \"#utility.yul\":2165:2166   */\n  dup2\n    /* \"#utility.yul\":2162:2175   */\n  gt\n    /* \"#utility.yul\":2159:2161   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2248:2249   */\n  0x00\n    /* \"#utility.yul\":2239:2245   */\n  dup5\n    /* \"#utility.yul\":2234:2237   */\n  dup5\n    /* \"#utility.yul\":2230:2246   */\n  add\n    /* \"#utility.yul\":2223:2250   */\n  mstore\n    /* \"#utility.yul\":2159:2161   */\ntag_52:\n    /* \"#utility.yul\":2008:2266   */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2272:2592   */\ntag_11:\n  0x00\n    /* \"#utility.yul\":2353:2354   */\n  0x02\n    /* \"#utility.yul\":2347:2351   */\n  dup3\n    /* \"#utility.yul\":2343:2355   */\n  div\n    /* \"#utility.yul\":2333:2355   */\n  swap1\n  pop\n    /* \"#utility.yul\":2400:2401   */\n  0x01\n    /* \"#utility.yul\":2394:2398   */\n  dup3\n    /* \"#utility.yul\":2390:2402   */\n  and\n    /* \"#utility.yul\":2421:2439   */\n  dup1\n    /* \"#utility.yul\":2411:2413   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":2477:2481   */\n  0x7f\n    /* \"#utility.yul\":2469:2475   */\n  dup3\n    /* \"#utility.yul\":2465:2482   */\n  and\n    /* \"#utility.yul\":2455:2482   */\n  swap2\n  pop\n    /* \"#utility.yul\":2411:2413   */\ntag_54:\n    /* \"#utility.yul\":2539:2541   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup3\n    /* \"#utility.yul\":2528:2542   */\n  lt\n    /* \"#utility.yul\":2508:2526   */\n  dup2\n    /* \"#utility.yul\":2505:2543   */\n  eq\n    /* \"#utility.yul\":2502:2504   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2558:2576   */\n  tag_56\n  tag_57\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2502:2504   */\ntag_55:\n    /* \"#utility.yul\":2323:2592   */\n  pop\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2598:2778   */\ntag_57:\n    /* \"#utility.yul\":2646:2723   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2643:2644   */\n  0x00\n    /* \"#utility.yul\":2636:2724   */\n  mstore\n    /* \"#utility.yul\":2743:2747   */\n  0x22\n    /* \"#utility.yul\":2740:2741   */\n  0x04\n    /* \"#utility.yul\":2733:2748   */\n  mstore\n    /* \"#utility.yul\":2767:2771   */\n  0x24\n    /* \"#utility.yul\":2764:2765   */\n  0x00\n    /* \"#utility.yul\":2757:2772   */\n  revert\n    /* \"#utility.yul\":2784:2964   */\ntag_44:\n    /* \"#utility.yul\":2832:2909   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2829:2830   */\n  0x00\n    /* \"#utility.yul\":2822:2910   */\n  mstore\n    /* \"#utility.yul\":2929:2933   */\n  0x41\n    /* \"#utility.yul\":2926:2927   */\n  0x04\n    /* \"#utility.yul\":2919:2934   */\n  mstore\n    /* \"#utility.yul\":2953:2957   */\n  0x24\n    /* \"#utility.yul\":2950:2951   */\n  0x00\n    /* \"#utility.yul\":2943:2958   */\n  revert\n    /* \"ERC20/ERC20.sol\":1423:12994  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20/ERC20.sol\":1423:12994  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20/ERC20.sol\":2203:2303  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":4554:4755  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":3323:3431  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":5335:5630  function transferFrom(\r... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":3165:3258  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":6039:6277  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":3494:3621  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":2422:2526  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":6780:7216  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":3827:4020  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":4083:4234  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":2203:2303  function name() public view virtual override returns (string memory) {\r... */\n    tag_16:\n        /* \"ERC20/ERC20.sol\":2257:2270  string memory */\n      0x60\n        /* \"ERC20/ERC20.sol\":2290:2295  _name */\n      0x03\n        /* \"ERC20/ERC20.sol\":2283:2295  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":2203:2303  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":4554:4755  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_22:\n        /* \"ERC20/ERC20.sol\":4637:4641  bool */\n      0x00\n        /* \"ERC20/ERC20.sol\":4654:4667  address owner */\n      dup1\n        /* \"ERC20/ERC20.sol\":4670:4682  _msgSender() */\n      tag_71\n        /* \"ERC20/ERC20.sol\":4670:4680  _msgSender */\n      tag_72\n        /* \"ERC20/ERC20.sol\":4670:4682  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"ERC20/ERC20.sol\":4654:4682  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":4693:4725  _approve(owner, spender, amount) */\n      tag_73\n        /* \"ERC20/ERC20.sol\":4702:4707  owner */\n      dup2\n        /* \"ERC20/ERC20.sol\":4709:4716  spender */\n      dup6\n        /* \"ERC20/ERC20.sol\":4718:4724  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":4693:4701  _approve */\n      tag_74\n        /* \"ERC20/ERC20.sol\":4693:4725  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"ERC20/ERC20.sol\":4743:4747  true */\n      0x01\n        /* \"ERC20/ERC20.sol\":4736:4747  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20/ERC20.sol\":4554:4755  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":3323:3431  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_26:\n        /* \"ERC20/ERC20.sol\":3384:3391  uint256 */\n      0x00\n        /* \"ERC20/ERC20.sol\":3411:3423  _totalSupply */\n      sload(0x02)\n        /* \"ERC20/ERC20.sol\":3404:3423  return _totalSupply */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":3323:3431  function totalSupply() public view virtual override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":5335:5630  function transferFrom(\r... */\n    tag_32:\n        /* \"ERC20/ERC20.sol\":5466:5470  bool */\n      0x00\n        /* \"ERC20/ERC20.sol\":5483:5498  address spender */\n      dup1\n        /* \"ERC20/ERC20.sol\":5501:5513  _msgSender() */\n      tag_77\n        /* \"ERC20/ERC20.sol\":5501:5511  _msgSender */\n      tag_72\n        /* \"ERC20/ERC20.sol\":5501:5513  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"ERC20/ERC20.sol\":5483:5513  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":5524:5562  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"ERC20/ERC20.sol\":5540:5544  from */\n      dup6\n        /* \"ERC20/ERC20.sol\":5546:5553  spender */\n      dup3\n        /* \"ERC20/ERC20.sol\":5555:5561  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":5524:5539  _spendAllowance */\n      tag_79\n        /* \"ERC20/ERC20.sol\":5524:5562  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"ERC20/ERC20.sol\":5573:5600  _transfer(from, to, amount) */\n      tag_80\n        /* \"ERC20/ERC20.sol\":5583:5587  from */\n      dup6\n        /* \"ERC20/ERC20.sol\":5589:5591  to */\n      dup6\n        /* \"ERC20/ERC20.sol\":5593:5599  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":5573:5582  _transfer */\n      tag_81\n        /* \"ERC20/ERC20.sol\":5573:5600  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n        /* \"ERC20/ERC20.sol\":5618:5622  true */\n      0x01\n        /* \"ERC20/ERC20.sol\":5611:5622  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20/ERC20.sol\":5335:5630  function transferFrom(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":3165:3258  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_35:\n        /* \"ERC20/ERC20.sol\":3223:3228  uint8 */\n      0x00\n        /* \"ERC20/ERC20.sol\":3248:3250  18 */\n      0x12\n        /* \"ERC20/ERC20.sol\":3241:3250  return 18 */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":3165:3258  function decimals() public view virtual override returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":6039:6277  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_40:\n        /* \"ERC20/ERC20.sol\":6127:6131  bool */\n      0x00\n        /* \"ERC20/ERC20.sol\":6144:6157  address owner */\n      dup1\n        /* \"ERC20/ERC20.sol\":6160:6172  _msgSender() */\n      tag_84\n        /* \"ERC20/ERC20.sol\":6160:6170  _msgSender */\n      tag_72\n        /* \"ERC20/ERC20.sol\":6160:6172  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"ERC20/ERC20.sol\":6144:6172  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":6183:6247  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_85\n        /* \"ERC20/ERC20.sol\":6192:6197  owner */\n      dup2\n        /* \"ERC20/ERC20.sol\":6199:6206  spender */\n      dup6\n        /* \"ERC20/ERC20.sol\":6236:6246  addedValue */\n      dup6\n        /* \"ERC20/ERC20.sol\":6208:6233  allowance(owner, spender) */\n      tag_86\n        /* \"ERC20/ERC20.sol\":6218:6223  owner */\n      dup6\n        /* \"ERC20/ERC20.sol\":6225:6232  spender */\n      dup10\n        /* \"ERC20/ERC20.sol\":6208:6217  allowance */\n      tag_61\n        /* \"ERC20/ERC20.sol\":6208:6233  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"ERC20/ERC20.sol\":6208:6246  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"ERC20/ERC20.sol\":6183:6191  _approve */\n      tag_74\n        /* \"ERC20/ERC20.sol\":6183:6247  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_85:\n        /* \"ERC20/ERC20.sol\":6265:6269  true */\n      0x01\n        /* \"ERC20/ERC20.sol\":6258:6269  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20/ERC20.sol\":6039:6277  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":3494:3621  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_45:\n        /* \"ERC20/ERC20.sol\":3568:3575  uint256 */\n      0x00\n        /* \"ERC20/ERC20.sol\":3595:3604  _balances */\n      dup1\n        /* \"ERC20/ERC20.sol\":3595:3613  _balances[account] */\n      0x00\n        /* \"ERC20/ERC20.sol\":3605:3612  account */\n      dup4\n        /* \"ERC20/ERC20.sol\":3595:3613  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20/ERC20.sol\":3588:3613  return _balances[account] */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":3494:3621  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":2422:2526  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_48:\n        /* \"ERC20/ERC20.sol\":2478:2491  string memory */\n      0x60\n        /* \"ERC20/ERC20.sol\":2511:2518  _symbol */\n      0x04\n        /* \"ERC20/ERC20.sol\":2504:2518  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":2422:2526  function symbol() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":6780:7216  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_52:\n        /* \"ERC20/ERC20.sol\":6873:6877  bool */\n      0x00\n        /* \"ERC20/ERC20.sol\":6890:6903  address owner */\n      dup1\n        /* \"ERC20/ERC20.sol\":6906:6918  _msgSender() */\n      tag_97\n        /* \"ERC20/ERC20.sol\":6906:6916  _msgSender */\n      tag_72\n        /* \"ERC20/ERC20.sol\":6906:6918  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"ERC20/ERC20.sol\":6890:6918  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":6929:6953  uint256 currentAllowance */\n      0x00\n        /* \"ERC20/ERC20.sol\":6956:6981  allowance(owner, spender) */\n      tag_98\n        /* \"ERC20/ERC20.sol\":6966:6971  owner */\n      dup3\n        /* \"ERC20/ERC20.sol\":6973:6980  spender */\n      dup7\n        /* \"ERC20/ERC20.sol\":6956:6965  allowance */\n      tag_61\n        /* \"ERC20/ERC20.sol\":6956:6981  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"ERC20/ERC20.sol\":6929:6981  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":7020:7035  subtractedValue */\n      dup4\n        /* \"ERC20/ERC20.sol\":7000:7016  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":7000:7035  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":6992:7077  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"ERC20/ERC20.sol\":7113:7173  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_102\n        /* \"ERC20/ERC20.sol\":7122:7127  owner */\n      dup3\n        /* \"ERC20/ERC20.sol\":7129:7136  spender */\n      dup7\n        /* \"ERC20/ERC20.sol\":7157:7172  subtractedValue */\n      dup7\n        /* \"ERC20/ERC20.sol\":7138:7154  currentAllowance */\n      dup5\n        /* \"ERC20/ERC20.sol\":7138:7172  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20/ERC20.sol\":7113:7121  _approve */\n      tag_74\n        /* \"ERC20/ERC20.sol\":7113:7173  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_102:\n        /* \"ERC20/ERC20.sol\":7204:7208  true */\n      0x01\n        /* \"ERC20/ERC20.sol\":7197:7208  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"ERC20/ERC20.sol\":6780:7216  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":3827:4020  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_56:\n        /* \"ERC20/ERC20.sol\":3906:3910  bool */\n      0x00\n        /* \"ERC20/ERC20.sol\":3923:3936  address owner */\n      dup1\n        /* \"ERC20/ERC20.sol\":3939:3951  _msgSender() */\n      tag_104\n        /* \"ERC20/ERC20.sol\":3939:3949  _msgSender */\n      tag_72\n        /* \"ERC20/ERC20.sol\":3939:3951  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"ERC20/ERC20.sol\":3923:3951  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":3962:3990  _transfer(owner, to, amount) */\n      tag_105\n        /* \"ERC20/ERC20.sol\":3972:3977  owner */\n      dup2\n        /* \"ERC20/ERC20.sol\":3979:3981  to */\n      dup6\n        /* \"ERC20/ERC20.sol\":3983:3989  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":3962:3971  _transfer */\n      tag_81\n        /* \"ERC20/ERC20.sol\":3962:3990  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_105:\n        /* \"ERC20/ERC20.sol\":4008:4012  true */\n      0x01\n        /* \"ERC20/ERC20.sol\":4001:4012  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20/ERC20.sol\":3827:4020  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":4083:4234  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_61:\n        /* \"ERC20/ERC20.sol\":4172:4179  uint256 */\n      0x00\n        /* \"ERC20/ERC20.sol\":4199:4210  _allowances */\n      0x01\n        /* \"ERC20/ERC20.sol\":4199:4217  _allowances[owner] */\n      0x00\n        /* \"ERC20/ERC20.sol\":4211:4216  owner */\n      dup5\n        /* \"ERC20/ERC20.sol\":4199:4217  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/ERC20.sol\":4199:4226  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20/ERC20.sol\":4218:4225  spender */\n      dup4\n        /* \"ERC20/ERC20.sol\":4199:4226  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20/ERC20.sol\":4192:4226  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":4083:4234  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_72:\n        /* \"Utils/Context.sol\":709:716  address */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Context.sol\":729:746  return msg.sender */\n      swap1\n      pop\n        /* \"Utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":10414:10794  function _approve(\r... */\n    tag_74:\n        /* \"ERC20/ERC20.sol\":10567:10568  0 */\n      0x00\n        /* \"ERC20/ERC20.sol\":10550:10569  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/ERC20.sol\":10550:10555  owner */\n      dup4\n        /* \"ERC20/ERC20.sol\":10550:10569  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20/ERC20.sol\":10542:10610  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"ERC20/ERC20.sol\":10648:10649  0 */\n      0x00\n        /* \"ERC20/ERC20.sol\":10629:10650  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/ERC20.sol\":10629:10636  spender */\n      dup3\n        /* \"ERC20/ERC20.sol\":10629:10650  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20/ERC20.sol\":10621:10689  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"ERC20/ERC20.sol\":10732:10738  amount */\n      dup1\n        /* \"ERC20/ERC20.sol\":10702:10713  _allowances */\n      0x01\n        /* \"ERC20/ERC20.sol\":10702:10720  _allowances[owner] */\n      0x00\n        /* \"ERC20/ERC20.sol\":10714:10719  owner */\n      dup6\n        /* \"ERC20/ERC20.sol\":10702:10720  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/ERC20.sol\":10702:10729  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20/ERC20.sol\":10721:10728  spender */\n      dup5\n        /* \"ERC20/ERC20.sol\":10702:10729  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/ERC20.sol\":10702:10738  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20/ERC20.sol\":10770:10777  spender */\n      dup2\n        /* \"ERC20/ERC20.sol\":10754:10786  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/ERC20.sol\":10763:10768  owner */\n      dup4\n        /* \"ERC20/ERC20.sol\":10754:10786  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC20/ERC20.sol\":10779:10785  amount */\n      dup4\n        /* \"ERC20/ERC20.sol\":10754:10786  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20/ERC20.sol\":10414:10794  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":11085:11538  function _spendAllowance(\r... */\n    tag_79:\n        /* \"ERC20/ERC20.sol\":11220:11244  uint256 currentAllowance */\n      0x00\n        /* \"ERC20/ERC20.sol\":11247:11272  allowance(owner, spender) */\n      tag_117\n        /* \"ERC20/ERC20.sol\":11257:11262  owner */\n      dup5\n        /* \"ERC20/ERC20.sol\":11264:11271  spender */\n      dup5\n        /* \"ERC20/ERC20.sol\":11247:11256  allowance */\n      tag_61\n        /* \"ERC20/ERC20.sol\":11247:11272  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"ERC20/ERC20.sol\":11220:11272  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":11307:11324  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"ERC20/ERC20.sol\":11287:11303  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":11287:11324  currentAllowance != type(uint256).max */\n      eq\n        /* \"ERC20/ERC20.sol\":11283:11531  if (currentAllowance != type(uint256).max) {\r... */\n      tag_118\n      jumpi\n        /* \"ERC20/ERC20.sol\":11369:11375  amount */\n      dup2\n        /* \"ERC20/ERC20.sol\":11349:11365  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":11349:11375  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":11341:11409  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"ERC20/ERC20.sol\":11453:11504  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"ERC20/ERC20.sol\":11462:11467  owner */\n      dup5\n        /* \"ERC20/ERC20.sol\":11469:11476  spender */\n      dup5\n        /* \"ERC20/ERC20.sol\":11497:11503  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":11478:11494  currentAllowance */\n      dup5\n        /* \"ERC20/ERC20.sol\":11478:11503  currentAllowance - amount */\n      sub\n        /* \"ERC20/ERC20.sol\":11453:11461  _approve */\n      tag_74\n        /* \"ERC20/ERC20.sol\":11453:11504  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"ERC20/ERC20.sol\":11283:11531  if (currentAllowance != type(uint256).max) {\r... */\n    tag_118:\n        /* \"ERC20/ERC20.sol\":11085:11538  function _spendAllowance(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":7695:8366  function _transfer(\r... */\n    tag_81:\n        /* \"ERC20/ERC20.sol\":7842:7843  0 */\n      0x00\n        /* \"ERC20/ERC20.sol\":7826:7844  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/ERC20.sol\":7826:7830  from */\n      dup4\n        /* \"ERC20/ERC20.sol\":7826:7844  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20/ERC20.sol\":7818:7886  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"ERC20/ERC20.sol\":7919:7920  0 */\n      0x00\n        /* \"ERC20/ERC20.sol\":7905:7921  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/ERC20.sol\":7905:7907  to */\n      dup3\n        /* \"ERC20/ERC20.sol\":7905:7921  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20/ERC20.sol\":7897:7961  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"ERC20/ERC20.sol\":7974:8012  _beforeTokenTransfer(from, to, amount) */\n      tag_130\n        /* \"ERC20/ERC20.sol\":7995:7999  from */\n      dup4\n        /* \"ERC20/ERC20.sol\":8001:8003  to */\n      dup4\n        /* \"ERC20/ERC20.sol\":8005:8011  amount */\n      dup4\n        /* \"ERC20/ERC20.sol\":7974:7994  _beforeTokenTransfer */\n      tag_131\n        /* \"ERC20/ERC20.sol\":7974:8012  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"ERC20/ERC20.sol\":8025:8044  uint256 fromBalance */\n      0x00\n        /* \"ERC20/ERC20.sol\":8047:8056  _balances */\n      dup1\n        /* \"ERC20/ERC20.sol\":8047:8062  _balances[from] */\n      0x00\n        /* \"ERC20/ERC20.sol\":8057:8061  from */\n      dup6\n        /* \"ERC20/ERC20.sol\":8047:8062  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20/ERC20.sol\":8025:8062  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":8096:8102  amount */\n      dup2\n        /* \"ERC20/ERC20.sol\":8081:8092  fromBalance */\n      dup2\n        /* \"ERC20/ERC20.sol\":8081:8102  fromBalance >= amount */\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":8073:8145  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"ERC20/ERC20.sol\":8213:8219  amount */\n      dup2\n        /* \"ERC20/ERC20.sol\":8199:8210  fromBalance */\n      dup2\n        /* \"ERC20/ERC20.sol\":8199:8219  fromBalance - amount */\n      sub\n        /* \"ERC20/ERC20.sol\":8181:8190  _balances */\n      0x00\n        /* \"ERC20/ERC20.sol\":8181:8196  _balances[from] */\n      dup1\n        /* \"ERC20/ERC20.sol\":8191:8195  from */\n      dup7\n        /* \"ERC20/ERC20.sol\":8181:8196  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20/ERC20.sol\":8181:8219  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20/ERC20.sol\":8258:8264  amount */\n      dup2\n        /* \"ERC20/ERC20.sol\":8241:8250  _balances */\n      0x00\n        /* \"ERC20/ERC20.sol\":8241:8254  _balances[to] */\n      dup1\n        /* \"ERC20/ERC20.sol\":8251:8253  to */\n      dup6\n        /* \"ERC20/ERC20.sol\":8241:8254  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20/ERC20.sol\":8241:8264  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_135\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20/ERC20.sol\":8297:8299  to */\n      dup3\n        /* \"ERC20/ERC20.sol\":8282:8308  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20/ERC20.sol\":8291:8295  from */\n      dup5\n        /* \"ERC20/ERC20.sol\":8282:8308  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20/ERC20.sol\":8301:8307  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":8282:8308  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20/ERC20.sol\":8321:8358  _afterTokenTransfer(from, to, amount) */\n      tag_137\n        /* \"ERC20/ERC20.sol\":8341:8345  from */\n      dup5\n        /* \"ERC20/ERC20.sol\":8347:8349  to */\n      dup5\n        /* \"ERC20/ERC20.sol\":8351:8357  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":8321:8340  _afterTokenTransfer */\n      tag_138\n        /* \"ERC20/ERC20.sol\":8321:8358  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_137:\n        /* \"ERC20/ERC20.sol\":7695:8366  function _transfer(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":12138:12263  function _beforeTokenTransfer(\r... */\n    tag_131:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":12867:12991  function _afterTokenTransfer(\r... */\n    tag_138:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_142:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_144\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_146:\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_148\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:559   */\n    tag_44:\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:375   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":418:419   */\n      dup1\n        /* \"#utility.yul\":411:423   */\n      revert\n        /* \"#utility.yul\":373:375   */\n    tag_151:\n        /* \"#utility.yul\":464:465   */\n      0x00\n        /* \"#utility.yul\":489:542   */\n      tag_152\n        /* \"#utility.yul\":534:541   */\n      dup5\n        /* \"#utility.yul\":525:531   */\n      dup3\n        /* \"#utility.yul\":514:523   */\n      dup6\n        /* \"#utility.yul\":510:532   */\n      add\n        /* \"#utility.yul\":489:542   */\n      tag_142\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":479:542   */\n      swap2\n      pop\n        /* \"#utility.yul\":435:552   */\n      pop\n        /* \"#utility.yul\":363:559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:972   */\n    tag_60:\n      0x00\n      dup1\n        /* \"#utility.yul\":690:692   */\n      0x40\n        /* \"#utility.yul\":678:687   */\n      dup4\n        /* \"#utility.yul\":669:676   */\n      dup6\n        /* \"#utility.yul\":665:688   */\n      sub\n        /* \"#utility.yul\":661:693   */\n      slt\n        /* \"#utility.yul\":658:660   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":706:707   */\n      0x00\n        /* \"#utility.yul\":703:704   */\n      dup1\n        /* \"#utility.yul\":696:708   */\n      revert\n        /* \"#utility.yul\":658:660   */\n    tag_154:\n        /* \"#utility.yul\":749:750   */\n      0x00\n        /* \"#utility.yul\":774:827   */\n      tag_155\n        /* \"#utility.yul\":819:826   */\n      dup6\n        /* \"#utility.yul\":810:816   */\n      dup3\n        /* \"#utility.yul\":799:808   */\n      dup7\n        /* \"#utility.yul\":795:817   */\n      add\n        /* \"#utility.yul\":774:827   */\n      tag_142\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":764:827   */\n      swap3\n      pop\n        /* \"#utility.yul\":720:837   */\n      pop\n        /* \"#utility.yul\":876:878   */\n      0x20\n        /* \"#utility.yul\":902:955   */\n      tag_156\n        /* \"#utility.yul\":947:954   */\n      dup6\n        /* \"#utility.yul\":938:944   */\n      dup3\n        /* \"#utility.yul\":927:936   */\n      dup7\n        /* \"#utility.yul\":923:945   */\n      add\n        /* \"#utility.yul\":902:955   */\n      tag_142\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":892:955   */\n      swap2\n      pop\n        /* \"#utility.yul\":847:965   */\n      pop\n        /* \"#utility.yul\":648:972   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":978:1530   */\n    tag_31:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1120:1122   */\n      0x60\n        /* \"#utility.yul\":1108:1117   */\n      dup5\n        /* \"#utility.yul\":1099:1106   */\n      dup7\n        /* \"#utility.yul\":1095:1118   */\n      sub\n        /* \"#utility.yul\":1091:1123   */\n      slt\n        /* \"#utility.yul\":1088:1090   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":1136:1137   */\n      0x00\n        /* \"#utility.yul\":1133:1134   */\n      dup1\n        /* \"#utility.yul\":1126:1138   */\n      revert\n        /* \"#utility.yul\":1088:1090   */\n    tag_158:\n        /* \"#utility.yul\":1179:1180   */\n      0x00\n        /* \"#utility.yul\":1204:1257   */\n      tag_159\n        /* \"#utility.yul\":1249:1256   */\n      dup7\n        /* \"#utility.yul\":1240:1246   */\n      dup3\n        /* \"#utility.yul\":1229:1238   */\n      dup8\n        /* \"#utility.yul\":1225:1247   */\n      add\n        /* \"#utility.yul\":1204:1257   */\n      tag_142\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1194:1257   */\n      swap4\n      pop\n        /* \"#utility.yul\":1150:1267   */\n      pop\n        /* \"#utility.yul\":1306:1308   */\n      0x20\n        /* \"#utility.yul\":1332:1385   */\n      tag_160\n        /* \"#utility.yul\":1377:1384   */\n      dup7\n        /* \"#utility.yul\":1368:1374   */\n      dup3\n        /* \"#utility.yul\":1357:1366   */\n      dup8\n        /* \"#utility.yul\":1353:1375   */\n      add\n        /* \"#utility.yul\":1332:1385   */\n      tag_142\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1322:1385   */\n      swap3\n      pop\n        /* \"#utility.yul\":1277:1395   */\n      pop\n        /* \"#utility.yul\":1434:1436   */\n      0x40\n        /* \"#utility.yul\":1460:1513   */\n      tag_161\n        /* \"#utility.yul\":1505:1512   */\n      dup7\n        /* \"#utility.yul\":1496:1502   */\n      dup3\n        /* \"#utility.yul\":1485:1494   */\n      dup8\n        /* \"#utility.yul\":1481:1503   */\n      add\n        /* \"#utility.yul\":1460:1513   */\n      tag_146\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1450:1513   */\n      swap2\n      pop\n        /* \"#utility.yul\":1405:1523   */\n      pop\n        /* \"#utility.yul\":1078:1530   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1536:1943   */\n    tag_21:\n      0x00\n      dup1\n        /* \"#utility.yul\":1661:1663   */\n      0x40\n        /* \"#utility.yul\":1649:1658   */\n      dup4\n        /* \"#utility.yul\":1640:1647   */\n      dup6\n        /* \"#utility.yul\":1636:1659   */\n      sub\n        /* \"#utility.yul\":1632:1664   */\n      slt\n        /* \"#utility.yul\":1629:1631   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      dup1\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1629:1631   */\n    tag_163:\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1745:1798   */\n      tag_164\n        /* \"#utility.yul\":1790:1797   */\n      dup6\n        /* \"#utility.yul\":1781:1787   */\n      dup3\n        /* \"#utility.yul\":1770:1779   */\n      dup7\n        /* \"#utility.yul\":1766:1788   */\n      add\n        /* \"#utility.yul\":1745:1798   */\n      tag_142\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1735:1798   */\n      swap3\n      pop\n        /* \"#utility.yul\":1691:1808   */\n      pop\n        /* \"#utility.yul\":1847:1849   */\n      0x20\n        /* \"#utility.yul\":1873:1926   */\n      tag_165\n        /* \"#utility.yul\":1918:1925   */\n      dup6\n        /* \"#utility.yul\":1909:1915   */\n      dup3\n        /* \"#utility.yul\":1898:1907   */\n      dup7\n        /* \"#utility.yul\":1894:1916   */\n      add\n        /* \"#utility.yul\":1873:1926   */\n      tag_146\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1863:1926   */\n      swap2\n      pop\n        /* \"#utility.yul\":1818:1936   */\n      pop\n        /* \"#utility.yul\":1619:1943   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1949:2058   */\n    tag_166:\n        /* \"#utility.yul\":2030:2051   */\n      tag_168\n        /* \"#utility.yul\":2045:2050   */\n      dup2\n        /* \"#utility.yul\":2030:2051   */\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2025:2028   */\n      dup3\n        /* \"#utility.yul\":2018:2052   */\n      mstore\n        /* \"#utility.yul\":2008:2058   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2064:2428   */\n    tag_170:\n      0x00\n        /* \"#utility.yul\":2180:2219   */\n      tag_172\n        /* \"#utility.yul\":2213:2218   */\n      dup3\n        /* \"#utility.yul\":2180:2219   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2235:2306   */\n      tag_174\n        /* \"#utility.yul\":2299:2305   */\n      dup2\n        /* \"#utility.yul\":2294:2297   */\n      dup6\n        /* \"#utility.yul\":2235:2306   */\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2228:2306   */\n      swap4\n      pop\n        /* \"#utility.yul\":2315:2367   */\n      tag_176\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2315:2367   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2392:2421   */\n      tag_178\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2156:2428   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2801   */\n    tag_180:\n      0x00\n        /* \"#utility.yul\":2597:2664   */\n      tag_182\n        /* \"#utility.yul\":2661:2663   */\n      0x23\n        /* \"#utility.yul\":2656:2659   */\n      dup4\n        /* \"#utility.yul\":2597:2664   */\n      tag_175\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2590:2664   */\n      swap2\n      pop\n        /* \"#utility.yul\":2694:2728   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2690:2691   */\n      0x00\n        /* \"#utility.yul\":2685:2688   */\n      dup4\n        /* \"#utility.yul\":2681:2692   */\n      add\n        /* \"#utility.yul\":2674:2729   */\n      mstore\n        /* \"#utility.yul\":2760:2765   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2755:2757   */\n      0x20\n        /* \"#utility.yul\":2750:2753   */\n      dup4\n        /* \"#utility.yul\":2746:2758   */\n      add\n        /* \"#utility.yul\":2739:2766   */\n      mstore\n        /* \"#utility.yul\":2792:2794   */\n      0x40\n        /* \"#utility.yul\":2787:2790   */\n      dup3\n        /* \"#utility.yul\":2783:2795   */\n      add\n        /* \"#utility.yul\":2776:2795   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2807:3173   */\n    tag_183:\n      0x00\n        /* \"#utility.yul\":2970:3037   */\n      tag_185\n        /* \"#utility.yul\":3034:3036   */\n      0x22\n        /* \"#utility.yul\":3029:3032   */\n      dup4\n        /* \"#utility.yul\":2970:3037   */\n      tag_175\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2963:3037   */\n      swap2\n      pop\n        /* \"#utility.yul\":3067:3101   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3063:3064   */\n      0x00\n        /* \"#utility.yul\":3058:3061   */\n      dup4\n        /* \"#utility.yul\":3054:3065   */\n      add\n        /* \"#utility.yul\":3047:3102   */\n      mstore\n        /* \"#utility.yul\":3133:3137   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3123:3126   */\n      dup4\n        /* \"#utility.yul\":3119:3131   */\n      add\n        /* \"#utility.yul\":3112:3138   */\n      mstore\n        /* \"#utility.yul\":3164:3166   */\n      0x40\n        /* \"#utility.yul\":3159:3162   */\n      dup3\n        /* \"#utility.yul\":3155:3167   */\n      add\n        /* \"#utility.yul\":3148:3167   */\n      swap1\n      pop\n        /* \"#utility.yul\":2953:3173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3179:3506   */\n    tag_186:\n      0x00\n        /* \"#utility.yul\":3342:3409   */\n      tag_188\n        /* \"#utility.yul\":3406:3408   */\n      0x1d\n        /* \"#utility.yul\":3401:3404   */\n      dup4\n        /* \"#utility.yul\":3342:3409   */\n      tag_175\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3335:3409   */\n      swap2\n      pop\n        /* \"#utility.yul\":3439:3470   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3435:3436   */\n      0x00\n        /* \"#utility.yul\":3430:3433   */\n      dup4\n        /* \"#utility.yul\":3426:3437   */\n      add\n        /* \"#utility.yul\":3419:3471   */\n      mstore\n        /* \"#utility.yul\":3497:3499   */\n      0x20\n        /* \"#utility.yul\":3492:3495   */\n      dup3\n        /* \"#utility.yul\":3488:3500   */\n      add\n        /* \"#utility.yul\":3481:3500   */\n      swap1\n      pop\n        /* \"#utility.yul\":3325:3506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3512:3882   */\n    tag_189:\n      0x00\n        /* \"#utility.yul\":3675:3742   */\n      tag_191\n        /* \"#utility.yul\":3739:3741   */\n      0x26\n        /* \"#utility.yul\":3734:3737   */\n      dup4\n        /* \"#utility.yul\":3675:3742   */\n      tag_175\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3668:3742   */\n      swap2\n      pop\n        /* \"#utility.yul\":3772:3806   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3768:3769   */\n      0x00\n        /* \"#utility.yul\":3763:3766   */\n      dup4\n        /* \"#utility.yul\":3759:3770   */\n      add\n        /* \"#utility.yul\":3752:3807   */\n      mstore\n        /* \"#utility.yul\":3838:3846   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3833:3835   */\n      0x20\n        /* \"#utility.yul\":3828:3831   */\n      dup4\n        /* \"#utility.yul\":3824:3836   */\n      add\n        /* \"#utility.yul\":3817:3847   */\n      mstore\n        /* \"#utility.yul\":3873:3875   */\n      0x40\n        /* \"#utility.yul\":3868:3871   */\n      dup3\n        /* \"#utility.yul\":3864:3876   */\n      add\n        /* \"#utility.yul\":3857:3876   */\n      swap1\n      pop\n        /* \"#utility.yul\":3658:3882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3888:4257   */\n    tag_192:\n      0x00\n        /* \"#utility.yul\":4051:4118   */\n      tag_194\n        /* \"#utility.yul\":4115:4117   */\n      0x25\n        /* \"#utility.yul\":4110:4113   */\n      dup4\n        /* \"#utility.yul\":4051:4118   */\n      tag_175\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4044:4118   */\n      swap2\n      pop\n        /* \"#utility.yul\":4148:4182   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4144:4145   */\n      0x00\n        /* \"#utility.yul\":4139:4142   */\n      dup4\n        /* \"#utility.yul\":4135:4146   */\n      add\n        /* \"#utility.yul\":4128:4183   */\n      mstore\n        /* \"#utility.yul\":4214:4221   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4209:4211   */\n      0x20\n        /* \"#utility.yul\":4204:4207   */\n      dup4\n        /* \"#utility.yul\":4200:4212   */\n      add\n        /* \"#utility.yul\":4193:4222   */\n      mstore\n        /* \"#utility.yul\":4248:4250   */\n      0x40\n        /* \"#utility.yul\":4243:4246   */\n      dup3\n        /* \"#utility.yul\":4239:4251   */\n      add\n        /* \"#utility.yul\":4232:4251   */\n      swap1\n      pop\n        /* \"#utility.yul\":4034:4257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4263:4631   */\n    tag_195:\n      0x00\n        /* \"#utility.yul\":4426:4493   */\n      tag_197\n        /* \"#utility.yul\":4490:4492   */\n      0x24\n        /* \"#utility.yul\":4485:4488   */\n      dup4\n        /* \"#utility.yul\":4426:4493   */\n      tag_175\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4419:4493   */\n      swap2\n      pop\n        /* \"#utility.yul\":4523:4557   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4519:4520   */\n      0x00\n        /* \"#utility.yul\":4514:4517   */\n      dup4\n        /* \"#utility.yul\":4510:4521   */\n      add\n        /* \"#utility.yul\":4503:4558   */\n      mstore\n        /* \"#utility.yul\":4589:4595   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4584:4586   */\n      0x20\n        /* \"#utility.yul\":4579:4582   */\n      dup4\n        /* \"#utility.yul\":4575:4587   */\n      add\n        /* \"#utility.yul\":4568:4596   */\n      mstore\n        /* \"#utility.yul\":4622:4624   */\n      0x40\n        /* \"#utility.yul\":4617:4620   */\n      dup3\n        /* \"#utility.yul\":4613:4625   */\n      add\n        /* \"#utility.yul\":4606:4625   */\n      swap1\n      pop\n        /* \"#utility.yul\":4409:4631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4637:5006   */\n    tag_198:\n      0x00\n        /* \"#utility.yul\":4800:4867   */\n      tag_200\n        /* \"#utility.yul\":4864:4866   */\n      0x25\n        /* \"#utility.yul\":4859:4862   */\n      dup4\n        /* \"#utility.yul\":4800:4867   */\n      tag_175\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4793:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4897:4931   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4893:4894   */\n      0x00\n        /* \"#utility.yul\":4888:4891   */\n      dup4\n        /* \"#utility.yul\":4884:4895   */\n      add\n        /* \"#utility.yul\":4877:4932   */\n      mstore\n        /* \"#utility.yul\":4963:4970   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4958:4960   */\n      0x20\n        /* \"#utility.yul\":4953:4956   */\n      dup4\n        /* \"#utility.yul\":4949:4961   */\n      add\n        /* \"#utility.yul\":4942:4971   */\n      mstore\n        /* \"#utility.yul\":4997:4999   */\n      0x40\n        /* \"#utility.yul\":4992:4995   */\n      dup3\n        /* \"#utility.yul\":4988:5000   */\n      add\n        /* \"#utility.yul\":4981:5000   */\n      swap1\n      pop\n        /* \"#utility.yul\":4783:5006   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5012:5130   */\n    tag_201:\n        /* \"#utility.yul\":5099:5123   */\n      tag_203\n        /* \"#utility.yul\":5117:5122   */\n      dup2\n        /* \"#utility.yul\":5099:5123   */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5094:5097   */\n      dup3\n        /* \"#utility.yul\":5087:5124   */\n      mstore\n        /* \"#utility.yul\":5077:5130   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5136:5248   */\n    tag_205:\n        /* \"#utility.yul\":5219:5241   */\n      tag_207\n        /* \"#utility.yul\":5235:5240   */\n      dup2\n        /* \"#utility.yul\":5219:5241   */\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5214:5217   */\n      dup3\n        /* \"#utility.yul\":5207:5242   */\n      mstore\n        /* \"#utility.yul\":5197:5248   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5254:5464   */\n    tag_24:\n      0x00\n        /* \"#utility.yul\":5379:5381   */\n      0x20\n        /* \"#utility.yul\":5368:5377   */\n      dup3\n        /* \"#utility.yul\":5364:5382   */\n      add\n        /* \"#utility.yul\":5356:5382   */\n      swap1\n      pop\n        /* \"#utility.yul\":5392:5457   */\n      tag_210\n        /* \"#utility.yul\":5454:5455   */\n      0x00\n        /* \"#utility.yul\":5443:5452   */\n      dup4\n        /* \"#utility.yul\":5439:5456   */\n      add\n        /* \"#utility.yul\":5430:5436   */\n      dup5\n        /* \"#utility.yul\":5392:5457   */\n      tag_166\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5346:5464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5470:5783   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":5621:5623   */\n      0x20\n        /* \"#utility.yul\":5610:5619   */\n      dup3\n        /* \"#utility.yul\":5606:5624   */\n      add\n        /* \"#utility.yul\":5598:5624   */\n      swap1\n      pop\n        /* \"#utility.yul\":5670:5679   */\n      dup2\n        /* \"#utility.yul\":5664:5668   */\n      dup2\n        /* \"#utility.yul\":5660:5680   */\n      sub\n        /* \"#utility.yul\":5656:5657   */\n      0x00\n        /* \"#utility.yul\":5645:5654   */\n      dup4\n        /* \"#utility.yul\":5641:5658   */\n      add\n        /* \"#utility.yul\":5634:5681   */\n      mstore\n        /* \"#utility.yul\":5698:5776   */\n      tag_212\n        /* \"#utility.yul\":5771:5775   */\n      dup2\n        /* \"#utility.yul\":5762:5768   */\n      dup5\n        /* \"#utility.yul\":5698:5776   */\n      tag_170\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5690:5776   */\n      swap1\n      pop\n        /* \"#utility.yul\":5588:5783   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5789:6208   */\n    tag_129:\n      0x00\n        /* \"#utility.yul\":5993:5995   */\n      0x20\n        /* \"#utility.yul\":5982:5991   */\n      dup3\n        /* \"#utility.yul\":5978:5996   */\n      add\n        /* \"#utility.yul\":5970:5996   */\n      swap1\n      pop\n        /* \"#utility.yul\":6042:6051   */\n      dup2\n        /* \"#utility.yul\":6036:6040   */\n      dup2\n        /* \"#utility.yul\":6032:6052   */\n      sub\n        /* \"#utility.yul\":6028:6029   */\n      0x00\n        /* \"#utility.yul\":6017:6026   */\n      dup4\n        /* \"#utility.yul\":6013:6030   */\n      add\n        /* \"#utility.yul\":6006:6053   */\n      mstore\n        /* \"#utility.yul\":6070:6201   */\n      tag_214\n        /* \"#utility.yul\":6196:6200   */\n      dup2\n        /* \"#utility.yul\":6070:6201   */\n      tag_180\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6062:6201   */\n      swap1\n      pop\n        /* \"#utility.yul\":5960:6208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6214:6633   */\n    tag_114:\n      0x00\n        /* \"#utility.yul\":6418:6420   */\n      0x20\n        /* \"#utility.yul\":6407:6416   */\n      dup3\n        /* \"#utility.yul\":6403:6421   */\n      add\n        /* \"#utility.yul\":6395:6421   */\n      swap1\n      pop\n        /* \"#utility.yul\":6467:6476   */\n      dup2\n        /* \"#utility.yul\":6461:6465   */\n      dup2\n        /* \"#utility.yul\":6457:6477   */\n      sub\n        /* \"#utility.yul\":6453:6454   */\n      0x00\n        /* \"#utility.yul\":6442:6451   */\n      dup4\n        /* \"#utility.yul\":6438:6455   */\n      add\n        /* \"#utility.yul\":6431:6478   */\n      mstore\n        /* \"#utility.yul\":6495:6626   */\n      tag_216\n        /* \"#utility.yul\":6621:6625   */\n      dup2\n        /* \"#utility.yul\":6495:6626   */\n      tag_183\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6487:6626   */\n      swap1\n      pop\n        /* \"#utility.yul\":6385:6633   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6639:7058   */\n    tag_121:\n      0x00\n        /* \"#utility.yul\":6843:6845   */\n      0x20\n        /* \"#utility.yul\":6832:6841   */\n      dup3\n        /* \"#utility.yul\":6828:6846   */\n      add\n        /* \"#utility.yul\":6820:6846   */\n      swap1\n      pop\n        /* \"#utility.yul\":6892:6901   */\n      dup2\n        /* \"#utility.yul\":6886:6890   */\n      dup2\n        /* \"#utility.yul\":6882:6902   */\n      sub\n        /* \"#utility.yul\":6878:6879   */\n      0x00\n        /* \"#utility.yul\":6867:6876   */\n      dup4\n        /* \"#utility.yul\":6863:6880   */\n      add\n        /* \"#utility.yul\":6856:6903   */\n      mstore\n        /* \"#utility.yul\":6920:7051   */\n      tag_218\n        /* \"#utility.yul\":7046:7050   */\n      dup2\n        /* \"#utility.yul\":6920:7051   */\n      tag_186\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6912:7051   */\n      swap1\n      pop\n        /* \"#utility.yul\":6810:7058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7064:7483   */\n    tag_134:\n      0x00\n        /* \"#utility.yul\":7268:7270   */\n      0x20\n        /* \"#utility.yul\":7257:7266   */\n      dup3\n        /* \"#utility.yul\":7253:7271   */\n      add\n        /* \"#utility.yul\":7245:7271   */\n      swap1\n      pop\n        /* \"#utility.yul\":7317:7326   */\n      dup2\n        /* \"#utility.yul\":7311:7315   */\n      dup2\n        /* \"#utility.yul\":7307:7327   */\n      sub\n        /* \"#utility.yul\":7303:7304   */\n      0x00\n        /* \"#utility.yul\":7292:7301   */\n      dup4\n        /* \"#utility.yul\":7288:7305   */\n      add\n        /* \"#utility.yul\":7281:7328   */\n      mstore\n        /* \"#utility.yul\":7345:7476   */\n      tag_220\n        /* \"#utility.yul\":7471:7475   */\n      dup2\n        /* \"#utility.yul\":7345:7476   */\n      tag_189\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":7337:7476   */\n      swap1\n      pop\n        /* \"#utility.yul\":7235:7483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7489:7908   */\n    tag_126:\n      0x00\n        /* \"#utility.yul\":7693:7695   */\n      0x20\n        /* \"#utility.yul\":7682:7691   */\n      dup3\n        /* \"#utility.yul\":7678:7696   */\n      add\n        /* \"#utility.yul\":7670:7696   */\n      swap1\n      pop\n        /* \"#utility.yul\":7742:7751   */\n      dup2\n        /* \"#utility.yul\":7736:7740   */\n      dup2\n        /* \"#utility.yul\":7732:7752   */\n      sub\n        /* \"#utility.yul\":7728:7729   */\n      0x00\n        /* \"#utility.yul\":7717:7726   */\n      dup4\n        /* \"#utility.yul\":7713:7730   */\n      add\n        /* \"#utility.yul\":7706:7753   */\n      mstore\n        /* \"#utility.yul\":7770:7901   */\n      tag_222\n        /* \"#utility.yul\":7896:7900   */\n      dup2\n        /* \"#utility.yul\":7770:7901   */\n      tag_192\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":7762:7901   */\n      swap1\n      pop\n        /* \"#utility.yul\":7660:7908   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7914:8333   */\n    tag_111:\n      0x00\n        /* \"#utility.yul\":8118:8120   */\n      0x20\n        /* \"#utility.yul\":8107:8116   */\n      dup3\n        /* \"#utility.yul\":8103:8121   */\n      add\n        /* \"#utility.yul\":8095:8121   */\n      swap1\n      pop\n        /* \"#utility.yul\":8167:8176   */\n      dup2\n        /* \"#utility.yul\":8161:8165   */\n      dup2\n        /* \"#utility.yul\":8157:8177   */\n      sub\n        /* \"#utility.yul\":8153:8154   */\n      0x00\n        /* \"#utility.yul\":8142:8151   */\n      dup4\n        /* \"#utility.yul\":8138:8155   */\n      add\n        /* \"#utility.yul\":8131:8178   */\n      mstore\n        /* \"#utility.yul\":8195:8326   */\n      tag_224\n        /* \"#utility.yul\":8321:8325   */\n      dup2\n        /* \"#utility.yul\":8195:8326   */\n      tag_195\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":8187:8326   */\n      swap1\n      pop\n        /* \"#utility.yul\":8085:8333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8339:8758   */\n    tag_101:\n      0x00\n        /* \"#utility.yul\":8543:8545   */\n      0x20\n        /* \"#utility.yul\":8532:8541   */\n      dup3\n        /* \"#utility.yul\":8528:8546   */\n      add\n        /* \"#utility.yul\":8520:8546   */\n      swap1\n      pop\n        /* \"#utility.yul\":8592:8601   */\n      dup2\n        /* \"#utility.yul\":8586:8590   */\n      dup2\n        /* \"#utility.yul\":8582:8602   */\n      sub\n        /* \"#utility.yul\":8578:8579   */\n      0x00\n        /* \"#utility.yul\":8567:8576   */\n      dup4\n        /* \"#utility.yul\":8563:8580   */\n      add\n        /* \"#utility.yul\":8556:8603   */\n      mstore\n        /* \"#utility.yul\":8620:8751   */\n      tag_226\n        /* \"#utility.yul\":8746:8750   */\n      dup2\n        /* \"#utility.yul\":8620:8751   */\n      tag_198\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":8612:8751   */\n      swap1\n      pop\n        /* \"#utility.yul\":8510:8758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8764:8986   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":8895:8897   */\n      0x20\n        /* \"#utility.yul\":8884:8893   */\n      dup3\n        /* \"#utility.yul\":8880:8898   */\n      add\n        /* \"#utility.yul\":8872:8898   */\n      swap1\n      pop\n        /* \"#utility.yul\":8908:8979   */\n      tag_228\n        /* \"#utility.yul\":8976:8977   */\n      0x00\n        /* \"#utility.yul\":8965:8974   */\n      dup4\n        /* \"#utility.yul\":8961:8978   */\n      add\n        /* \"#utility.yul\":8952:8958   */\n      dup5\n        /* \"#utility.yul\":8908:8979   */\n      tag_201\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":8862:8986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8992:9206   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":9119:9121   */\n      0x20\n        /* \"#utility.yul\":9108:9117   */\n      dup3\n        /* \"#utility.yul\":9104:9122   */\n      add\n        /* \"#utility.yul\":9096:9122   */\n      swap1\n      pop\n        /* \"#utility.yul\":9132:9199   */\n      tag_230\n        /* \"#utility.yul\":9196:9197   */\n      0x00\n        /* \"#utility.yul\":9185:9194   */\n      dup4\n        /* \"#utility.yul\":9181:9198   */\n      add\n        /* \"#utility.yul\":9172:9178   */\n      dup5\n        /* \"#utility.yul\":9132:9199   */\n      tag_205\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":9086:9206   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9212:9311   */\n    tag_173:\n      0x00\n        /* \"#utility.yul\":9298:9303   */\n      dup2\n        /* \"#utility.yul\":9292:9304   */\n      mload\n        /* \"#utility.yul\":9282:9304   */\n      swap1\n      pop\n        /* \"#utility.yul\":9271:9311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9317:9486   */\n    tag_175:\n      0x00\n        /* \"#utility.yul\":9435:9441   */\n      dup3\n        /* \"#utility.yul\":9430:9433   */\n      dup3\n        /* \"#utility.yul\":9423:9442   */\n      mstore\n        /* \"#utility.yul\":9475:9479   */\n      0x20\n        /* \"#utility.yul\":9470:9473   */\n      dup3\n        /* \"#utility.yul\":9466:9480   */\n      add\n        /* \"#utility.yul\":9451:9480   */\n      swap1\n      pop\n        /* \"#utility.yul\":9413:9486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9492:9797   */\n    tag_88:\n      0x00\n        /* \"#utility.yul\":9551:9571   */\n      tag_234\n        /* \"#utility.yul\":9569:9570   */\n      dup3\n        /* \"#utility.yul\":9551:9571   */\n      tag_204\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":9546:9571   */\n      swap2\n      pop\n        /* \"#utility.yul\":9585:9605   */\n      tag_235\n        /* \"#utility.yul\":9603:9604   */\n      dup4\n        /* \"#utility.yul\":9585:9605   */\n      tag_204\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":9580:9605   */\n      swap3\n      pop\n        /* \"#utility.yul\":9739:9740   */\n      dup3\n        /* \"#utility.yul\":9671:9737   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9667:9741   */\n      sub\n        /* \"#utility.yul\":9664:9665   */\n      dup3\n        /* \"#utility.yul\":9661:9742   */\n      gt\n        /* \"#utility.yul\":9658:9660   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":9745:9763   */\n      tag_237\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":9658:9660   */\n    tag_236:\n        /* \"#utility.yul\":9789:9790   */\n      dup3\n        /* \"#utility.yul\":9786:9787   */\n      dup3\n        /* \"#utility.yul\":9782:9791   */\n      add\n        /* \"#utility.yul\":9775:9791   */\n      swap1\n      pop\n        /* \"#utility.yul\":9536:9797   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9803:9899   */\n    tag_239:\n      0x00\n        /* \"#utility.yul\":9869:9893   */\n      tag_241\n        /* \"#utility.yul\":9887:9892   */\n      dup3\n        /* \"#utility.yul\":9869:9893   */\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":9858:9893   */\n      swap1\n      pop\n        /* \"#utility.yul\":9848:9899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9905:9995   */\n    tag_169:\n      0x00\n        /* \"#utility.yul\":9982:9987   */\n      dup2\n        /* \"#utility.yul\":9975:9988   */\n      iszero\n        /* \"#utility.yul\":9968:9989   */\n      iszero\n        /* \"#utility.yul\":9957:9989   */\n      swap1\n      pop\n        /* \"#utility.yul\":9947:9995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10001:10127   */\n    tag_242:\n      0x00\n        /* \"#utility.yul\":10078:10120   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10071:10076   */\n      dup3\n        /* \"#utility.yul\":10067:10121   */\n      and\n        /* \"#utility.yul\":10056:10121   */\n      swap1\n      pop\n        /* \"#utility.yul\":10046:10127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10133:10210   */\n    tag_204:\n      0x00\n        /* \"#utility.yul\":10199:10204   */\n      dup2\n        /* \"#utility.yul\":10188:10204   */\n      swap1\n      pop\n        /* \"#utility.yul\":10178:10210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10216:10302   */\n    tag_208:\n      0x00\n        /* \"#utility.yul\":10291:10295   */\n      0xff\n        /* \"#utility.yul\":10284:10289   */\n      dup3\n        /* \"#utility.yul\":10280:10296   */\n      and\n        /* \"#utility.yul\":10269:10296   */\n      swap1\n      pop\n        /* \"#utility.yul\":10259:10302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10308:10615   */\n    tag_177:\n        /* \"#utility.yul\":10376:10377   */\n      0x00\n        /* \"#utility.yul\":10386:10499   */\n    tag_248:\n        /* \"#utility.yul\":10400:10406   */\n      dup4\n        /* \"#utility.yul\":10397:10398   */\n      dup2\n        /* \"#utility.yul\":10394:10407   */\n      lt\n        /* \"#utility.yul\":10386:10499   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":10485:10486   */\n      dup1\n        /* \"#utility.yul\":10480:10483   */\n      dup3\n        /* \"#utility.yul\":10476:10487   */\n      add\n        /* \"#utility.yul\":10470:10488   */\n      mload\n        /* \"#utility.yul\":10466:10467   */\n      dup2\n        /* \"#utility.yul\":10461:10464   */\n      dup5\n        /* \"#utility.yul\":10457:10468   */\n      add\n        /* \"#utility.yul\":10450:10489   */\n      mstore\n        /* \"#utility.yul\":10422:10424   */\n      0x20\n        /* \"#utility.yul\":10419:10420   */\n      dup2\n        /* \"#utility.yul\":10415:10425   */\n      add\n        /* \"#utility.yul\":10410:10425   */\n      swap1\n      pop\n        /* \"#utility.yul\":10386:10499   */\n      jump(tag_248)\n    tag_250:\n        /* \"#utility.yul\":10517:10523   */\n      dup4\n        /* \"#utility.yul\":10514:10515   */\n      dup2\n        /* \"#utility.yul\":10511:10524   */\n      gt\n        /* \"#utility.yul\":10508:10510   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":10597:10598   */\n      0x00\n        /* \"#utility.yul\":10588:10594   */\n      dup5\n        /* \"#utility.yul\":10583:10586   */\n      dup5\n        /* \"#utility.yul\":10579:10595   */\n      add\n        /* \"#utility.yul\":10572:10599   */\n      mstore\n        /* \"#utility.yul\":10508:10510   */\n    tag_251:\n        /* \"#utility.yul\":10357:10615   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10621:10941   */\n    tag_65:\n      0x00\n        /* \"#utility.yul\":10702:10703   */\n      0x02\n        /* \"#utility.yul\":10696:10700   */\n      dup3\n        /* \"#utility.yul\":10692:10704   */\n      div\n        /* \"#utility.yul\":10682:10704   */\n      swap1\n      pop\n        /* \"#utility.yul\":10749:10750   */\n      0x01\n        /* \"#utility.yul\":10743:10747   */\n      dup3\n        /* \"#utility.yul\":10739:10751   */\n      and\n        /* \"#utility.yul\":10770:10788   */\n      dup1\n        /* \"#utility.yul\":10760:10762   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":10826:10830   */\n      0x7f\n        /* \"#utility.yul\":10818:10824   */\n      dup3\n        /* \"#utility.yul\":10814:10831   */\n      and\n        /* \"#utility.yul\":10804:10831   */\n      swap2\n      pop\n        /* \"#utility.yul\":10760:10762   */\n    tag_253:\n        /* \"#utility.yul\":10888:10890   */\n      0x20\n        /* \"#utility.yul\":10880:10886   */\n      dup3\n        /* \"#utility.yul\":10877:10891   */\n      lt\n        /* \"#utility.yul\":10857:10875   */\n      dup2\n        /* \"#utility.yul\":10854:10892   */\n      eq\n        /* \"#utility.yul\":10851:10853   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":10907:10925   */\n      tag_255\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":10851:10853   */\n    tag_254:\n        /* \"#utility.yul\":10672:10941   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10947:11127   */\n    tag_238:\n        /* \"#utility.yul\":10995:11072   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10992:10993   */\n      0x00\n        /* \"#utility.yul\":10985:11073   */\n      mstore\n        /* \"#utility.yul\":11092:11096   */\n      0x11\n        /* \"#utility.yul\":11089:11090   */\n      0x04\n        /* \"#utility.yul\":11082:11097   */\n      mstore\n        /* \"#utility.yul\":11116:11120   */\n      0x24\n        /* \"#utility.yul\":11113:11114   */\n      0x00\n        /* \"#utility.yul\":11106:11121   */\n      revert\n        /* \"#utility.yul\":11133:11313   */\n    tag_256:\n        /* \"#utility.yul\":11181:11258   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11178:11179   */\n      0x00\n        /* \"#utility.yul\":11171:11259   */\n      mstore\n        /* \"#utility.yul\":11278:11282   */\n      0x22\n        /* \"#utility.yul\":11275:11276   */\n      0x04\n        /* \"#utility.yul\":11268:11283   */\n      mstore\n        /* \"#utility.yul\":11302:11306   */\n      0x24\n        /* \"#utility.yul\":11299:11300   */\n      0x00\n        /* \"#utility.yul\":11292:11307   */\n      revert\n        /* \"#utility.yul\":11319:11421   */\n    tag_179:\n      0x00\n        /* \"#utility.yul\":11411:11413   */\n      0x1f\n        /* \"#utility.yul\":11407:11414   */\n      not\n        /* \"#utility.yul\":11402:11404   */\n      0x1f\n        /* \"#utility.yul\":11395:11400   */\n      dup4\n        /* \"#utility.yul\":11391:11405   */\n      add\n        /* \"#utility.yul\":11387:11415   */\n      and\n        /* \"#utility.yul\":11377:11415   */\n      swap1\n      pop\n        /* \"#utility.yul\":11367:11421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11427:11549   */\n    tag_145:\n        /* \"#utility.yul\":11500:11524   */\n      tag_261\n        /* \"#utility.yul\":11518:11523   */\n      dup2\n        /* \"#utility.yul\":11500:11524   */\n      tag_239\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":11493:11498   */\n      dup2\n        /* \"#utility.yul\":11490:11525   */\n      eq\n        /* \"#utility.yul\":11480:11482   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":11539:11540   */\n      0x00\n        /* \"#utility.yul\":11536:11537   */\n      dup1\n        /* \"#utility.yul\":11529:11541   */\n      revert\n        /* \"#utility.yul\":11480:11482   */\n    tag_262:\n        /* \"#utility.yul\":11470:11549   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11555:11677   */\n    tag_149:\n        /* \"#utility.yul\":11628:11652   */\n      tag_264\n        /* \"#utility.yul\":11646:11651   */\n      dup2\n        /* \"#utility.yul\":11628:11652   */\n      tag_204\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":11621:11626   */\n      dup2\n        /* \"#utility.yul\":11618:11653   */\n      eq\n        /* \"#utility.yul\":11608:11610   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":11667:11668   */\n      0x00\n        /* \"#utility.yul\":11664:11665   */\n      dup1\n        /* \"#utility.yul\":11657:11669   */\n      revert\n        /* \"#utility.yul\":11608:11610   */\n    tag_265:\n        /* \"#utility.yul\":11598:11677   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b2bf0c363740cc75da6d602b872bcaf8e239e1ded1e557fe7fd76df1b9ecadf964736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2967:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:258:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:74:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "178:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "136:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "136:49:4"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "121:14:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:65:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "202:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "209:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "195:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "195:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "195:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "225:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "240:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "247:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "236:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "236:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "229:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "290:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "299:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "302:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "292:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "292:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "292:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "271:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "276:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "285:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "264:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "264:25:4"
															},
															"nodeType": "YulIf",
															"src": "261:2:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "337:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "342:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "347:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "315:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:39:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "315:39:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:4",
														"type": ""
													}
												],
												"src": "7:353:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "453:215:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "502:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "511:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "514:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "504:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "504:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "504:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "481:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "489:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "477:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "477:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "496:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "473:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "466:35:4"
															},
															"nodeType": "YulIf",
															"src": "463:2:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "527:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "541:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "541:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "531:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "563:99:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "635:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "643:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "631:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "650:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "658:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "572:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "572:90:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "431:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "439:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "447:5:4",
														"type": ""
													}
												],
												"src": "380:288:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "788:538:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "834:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "843:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "846:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "836:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "836:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "836:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "809:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "805:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "801:32:4"
															},
															"nodeType": "YulIf",
															"src": "798:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "860:224:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "875:38:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "899:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "910:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "895:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "895:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "889:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "889:24:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "879:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "960:16:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "969:1:4",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "972:1:4",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "962:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "962:12:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "962:12:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "932:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "940:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "929:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "929:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "926:2:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "990:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1046:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1057:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1042:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1042:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1066:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1000:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "990:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1094:225:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1109:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1133:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1144:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1129:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1129:18:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1123:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1123:25:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1113:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1195:16:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1204:1:4",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1207:1:4",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1197:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1197:12:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1197:12:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1167:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1175:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1164:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1164:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "1161:2:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1225:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1281:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1292:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1277:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1277:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1235:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1235:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1225:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "750:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "761:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "773:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "781:6:4",
														"type": ""
													}
												],
												"src": "674:652:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1372:243:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1382:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1398:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1392:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1392:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1382:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1410:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1432:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1440:4:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1428:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:17:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1414:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1556:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1558:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1558:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1558:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1499:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1511:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1496:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1496:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1535:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1547:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1532:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1532:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1493:62:4"
															},
															"nodeType": "YulIf",
															"src": "1490:2:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1594:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1598:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1587:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1587:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1587:22:4"
														}
													]
												},
												"name": "allocateMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1356:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1365:6:4",
														"type": ""
													}
												],
												"src": "1332:283:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1688:265:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1793:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1795:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1795:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1795:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1765:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1773:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1762:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:30:4"
															},
															"nodeType": "YulIf",
															"src": "1759:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1845:41:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1861:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1869:4:4",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1857:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1857:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1880:4:4",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1876:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1876:9:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1853:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:33:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1845:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1923:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1935:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1941:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1931:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1931:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1923:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1672:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1683:4:4",
														"type": ""
													}
												],
												"src": "1621:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2008:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2018:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2027:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2022:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2087:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2112:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2117:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2108:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2108:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2131:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2136:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2127:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2127:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2121:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2121:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2101:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2101:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2101:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2048:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2051:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2045:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2045:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2059:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2061:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2070:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2073:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2066:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2066:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2061:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2041:3:4",
																"statements": []
															},
															"src": "2037:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2184:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2234:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2239:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2230:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2230:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2248:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2223:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2223:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2223:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2165:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2168:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2162:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:13:4"
															},
															"nodeType": "YulIf",
															"src": "2159:2:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1990:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1995:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2000:6:4",
														"type": ""
													}
												],
												"src": "1959:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2323:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2333:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2347:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2353:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2343:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2343:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2333:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2364:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2394:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2400:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2390:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2368:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2441:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2455:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2469:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2477:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2465:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2465:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2455:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2421:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2414:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2414:26:4"
															},
															"nodeType": "YulIf",
															"src": "2411:2:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2544:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2558:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2558:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2558:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2508:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2539:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2528:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2528:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2505:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2505:38:4"
															},
															"nodeType": "YulIf",
															"src": "2502:2:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2307:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2316:6:4",
														"type": ""
													}
												],
												"src": "2272:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2626:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2643:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2646:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2636:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2636:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2636:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2740:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2743:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2733:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2733:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2733:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2764:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2767:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2757:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2757:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2757:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2598:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2812:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2829:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2832:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2822:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2926:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2929:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2919:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2919:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2919:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2950:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2953:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2943:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2943:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2943:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2784:180:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200154638038062001546833981810160405281019062000037919062000193565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b50505062000337565b8280546200007f90620002a3565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200023a565b62000206565b9050828152602081018484840111156200015157600080fd5b6200015e8482856200026d565b509392505050565b600082601f8301126200017857600080fd5b81516200018a84826020860162000121565b91505092915050565b60008060408385031215620001a757600080fd5b600083015167ffffffffffffffff811115620001c257600080fd5b620001d08582860162000166565b925050602083015167ffffffffffffffff811115620001ee57600080fd5b620001fc8582860162000166565b9150509250929050565b6000604051905081810181811067ffffffffffffffff8211171562000230576200022f62000308565b5b8060405250919050565b600067ffffffffffffffff82111562000258576200025762000308565b5b601f19601f8301169050602081019050919050565b60005b838110156200028d57808201518184015260208101905062000270565b838111156200029d576000848401525b50505050565b60006002820490506001821680620002bc57607f821691505b60208210811415620002d357620002d2620002d9565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111ff80620003476000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610ec8565b60405180910390f35b6100e660048036038101906100e19190610b67565b610308565b6040516100f39190610ead565b60405180910390f35b61010461032b565b6040516101119190610fca565b60405180910390f35b610134600480360381019061012f9190610b18565b610335565b6040516101419190610ead565b60405180910390f35b610152610364565b60405161015f9190610fe5565b60405180910390f35b610182600480360381019061017d9190610b67565b61036d565b60405161018f9190610ead565b60405180910390f35b6101b260048036038101906101ad9190610ab3565b6103a4565b6040516101bf9190610fca565b60405180910390f35b6101d06103ec565b6040516101dd9190610ec8565b60405180910390f35b61020060048036038101906101fb9190610b67565b61047e565b60405161020d9190610ead565b60405180910390f35b610230600480360381019061022b9190610b67565b6104f5565b60405161023d9190610ead565b60405180910390f35b610260600480360381019061025b9190610adc565b610518565b60405161026d9190610fca565b60405180910390f35b606060038054610285906110fa565b80601f01602080910402602001604051908101604052809291908181526020018280546102b1906110fa565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b610394919061101c565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb906110fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610427906110fa565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610faa565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f8a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610f0a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610fca565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610f2a565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610f6a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610eea565b60405180910390fd5b6108e9838383610a7f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610f4a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a02919061101c565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a669190610fca565b60405180910390a3610a79848484610a84565b50505050565b505050565b505050565b600081359050610a988161119b565b92915050565b600081359050610aad816111b2565b92915050565b600060208284031215610ac557600080fd5b6000610ad384828501610a89565b91505092915050565b60008060408385031215610aef57600080fd5b6000610afd85828601610a89565b9250506020610b0e85828601610a89565b9150509250929050565b600080600060608486031215610b2d57600080fd5b6000610b3b86828701610a89565b9350506020610b4c86828701610a89565b9250506040610b5d86828701610a9e565b9150509250925092565b60008060408385031215610b7a57600080fd5b6000610b8885828601610a89565b9250506020610b9985828601610a9e565b9150509250929050565b610bac81611084565b82525050565b6000610bbd82611000565b610bc7818561100b565b9350610bd78185602086016110c7565b610be08161118a565b840191505092915050565b6000610bf860238361100b565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610c5e60228361100b565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610cc4601d8361100b565b91507f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006000830152602082019050919050565b6000610d0460268361100b565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d6a60258361100b565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610dd060248361100b565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e3660258361100b565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610e98816110b0565b82525050565b610ea7816110ba565b82525050565b6000602082019050610ec26000830184610ba3565b92915050565b60006020820190508181036000830152610ee28184610bb2565b905092915050565b60006020820190508181036000830152610f0381610beb565b9050919050565b60006020820190508181036000830152610f2381610c51565b9050919050565b60006020820190508181036000830152610f4381610cb7565b9050919050565b60006020820190508181036000830152610f6381610cf7565b9050919050565b60006020820190508181036000830152610f8381610d5d565b9050919050565b60006020820190508181036000830152610fa381610dc3565b9050919050565b60006020820190508181036000830152610fc381610e29565b9050919050565b6000602082019050610fdf6000830184610e8f565b92915050565b6000602082019050610ffa6000830184610e9e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611027826110b0565b9150611032836110b0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110675761106661112c565b5b828201905092915050565b600061107d82611090565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156110e55780820151818401526020810190506110ca565b838111156110f4576000848401525b50505050565b6000600282049050600182168061111257607f821691505b602082108114156111265761112561115b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6111a481611072565b81146111af57600080fd5b50565b6111bb816110b0565b81146111c657600080fd5b5056fea2646970667358221220b2bf0c363740cc75da6d602b872bcaf8e239e1ded1e557fe7fd76df1b9ecadf964736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1546 CODESIZE SUB DUP1 PUSH3 0x1546 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x193 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x337 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2A3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x23A JUMP JUMPDEST PUSH3 0x206 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15E DUP5 DUP3 DUP6 PUSH3 0x26D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x18A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D0 DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FC DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x230 JUMPI PUSH3 0x22F PUSH3 0x308 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x258 JUMPI PUSH3 0x257 PUSH3 0x308 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x28D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x270 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x29D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2BC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2D3 JUMPI PUSH3 0x2D2 PUSH3 0x2D9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x11FF DUP1 PUSH3 0x347 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x10FA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x10FA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0x10FA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0x10FA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA79 DUP5 DUP5 DUP5 PUSH2 0xA84 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA98 DUP2 PUSH2 0x119B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAAD DUP2 PUSH2 0x11B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD3 DUP5 DUP3 DUP6 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0E DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB3B DUP7 DUP3 DUP8 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4C DUP7 DUP3 DUP8 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB5D DUP7 DUP3 DUP8 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB88 DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB99 DUP6 DUP3 DUP7 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAC DUP2 PUSH2 0x1084 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBD DUP3 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0xBC7 DUP2 DUP6 PUSH2 0x100B JUMP JUMPDEST SWAP4 POP PUSH2 0xBD7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0x118A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF8 PUSH1 0x23 DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5E PUSH1 0x22 DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC4 PUSH1 0x1D DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD04 PUSH1 0x26 DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6A PUSH1 0x25 DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD0 PUSH1 0x24 DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE36 PUSH1 0x25 DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE98 DUP2 PUSH2 0x10B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEA7 DUP2 PUSH2 0x10BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE2 DUP2 DUP5 PUSH2 0xBB2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF03 DUP2 PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF23 DUP2 PUSH2 0xC51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF43 DUP2 PUSH2 0xCB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF63 DUP2 PUSH2 0xCF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF83 DUP2 PUSH2 0xD5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFA3 DUP2 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFC3 DUP2 PUSH2 0xE29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFDF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFFA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1027 DUP3 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1032 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1067 JUMPI PUSH2 0x1066 PUSH2 0x112C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107D DUP3 PUSH2 0x1090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10E5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10CA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1112 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1126 JUMPI PUSH2 0x1125 PUSH2 0x115B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A4 DUP2 PUSH2 0x1072 JUMP JUMPDEST DUP2 EQ PUSH2 0x11AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x11BB DUP2 PUSH2 0x10B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x11C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xBF 0xC CALLDATASIZE CALLDATACOPY BLOCKHASH 0xCC PUSH22 0xDA6D602B872BCAF8E239E1DED1E557FE7FD76DF1B9EC 0xAD 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "1423:11571:0:-:0;;;2017:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2092:5;2084;:13;;;;;;;;;;;;:::i;:::-;;2118:7;2108;:17;;;;;;;;;;;;:::i;:::-;;2017:116;;1423:11571;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:4:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;380:288::-;;496:3;489:4;481:6;477:17;473:27;463:2;;514:1;511;504:12;463:2;547:6;541:13;572:90;658:3;650:6;643:4;635:6;631:17;572:90;:::i;:::-;563:99;;453:215;;;;;:::o;674:652::-;;;830:2;818:9;809:7;805:23;801:32;798:2;;;846:1;843;836:12;798:2;910:1;899:9;895:17;889:24;940:18;932:6;929:30;926:2;;;972:1;969;962:12;926:2;1000:74;1066:7;1057:6;1046:9;1042:22;1000:74;:::i;:::-;990:84;;860:224;1144:2;1133:9;1129:18;1123:25;1175:18;1167:6;1164:30;1161:2;;;1207:1;1204;1197:12;1161:2;1235:74;1301:7;1292:6;1281:9;1277:22;1235:74;:::i;:::-;1225:84;;1094:225;788:538;;;;;:::o;1332:283::-;;1398:2;1392:9;1382:19;;1440:4;1432:6;1428:17;1547:6;1535:10;1532:22;1511:18;1499:10;1496:34;1493:62;1490:2;;;1558:18;;:::i;:::-;1490:2;1598:10;1594:2;1587:22;1372:243;;;;:::o;1621:332::-;;1773:18;1765:6;1762:30;1759:2;;;1795:18;;:::i;:::-;1759:2;1880:4;1876:9;1869:4;1861:6;1857:17;1853:33;1845:41;;1941:4;1935;1931:15;1923:23;;1688:265;;;:::o;1959:307::-;2027:1;2037:113;2051:6;2048:1;2045:13;2037:113;;;2136:1;2131:3;2127:11;2121:18;2117:1;2112:3;2108:11;2101:39;2073:2;2070:1;2066:10;2061:15;;2037:113;;;2168:6;2165:1;2162:13;2159:2;;;2248:1;2239:6;2234:3;2230:16;2223:27;2159:2;2008:258;;;;:::o;2272:320::-;;2353:1;2347:4;2343:12;2333:22;;2400:1;2394:4;2390:12;2421:18;2411:2;;2477:4;2469:6;2465:17;2455:27;;2411:2;2539;2531:6;2528:14;2508:18;2505:38;2502:2;;;2558:18;;:::i;:::-;2502:2;2323:269;;;;:::o;2598:180::-;2646:77;2643:1;2636:88;2743:4;2740:1;2733:15;2767:4;2764:1;2757:15;2784:180;2832:77;2829:1;2822:88;2929:4;2926:1;2919:15;2953:4;2950:1;2943:15;1423:11571:0;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11680:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:196:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:4"
															},
															"nodeType": "YulIf",
															"src": "373:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "435:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "450:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "454:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "479:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "514:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "525:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "510:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "510:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "534:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "489:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "479:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:4",
														"type": ""
													}
												],
												"src": "297:262:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:324:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "694:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "703:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "706:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "696:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "696:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "696:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "669:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "678:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "665:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "665:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "690:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "661:32:4"
															},
															"nodeType": "YulIf",
															"src": "658:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "720:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "735:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "749:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "739:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "764:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "799:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "795:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "795:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "819:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "774:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "774:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "764:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "847:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "862:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "876:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "866:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "892:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "927:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "923:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "923:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "947:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "902:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "902:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "892:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "610:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "621:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "633:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "641:6:4",
														"type": ""
													}
												],
												"src": "565:407:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1078:452:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1124:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1133:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1136:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1126:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1126:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1126:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1099:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1108:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1095:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1120:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:32:4"
															},
															"nodeType": "YulIf",
															"src": "1088:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1150:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1165:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1179:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1169:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1194:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1229:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1240:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1225:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1225:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1249:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1204:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1204:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1194:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1277:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1322:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1357:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1368:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1353:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1353:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1377:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1332:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1322:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1405:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1420:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1424:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1450:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1485:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1496:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1481:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1481:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1505:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1460:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1460:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1450:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1032:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1043:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1055:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1063:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1071:6:4",
														"type": ""
													}
												],
												"src": "978:552:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1619:324:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1665:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1674:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1677:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1667:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1667:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1640:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1661:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1632:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:32:4"
															},
															"nodeType": "YulIf",
															"src": "1629:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1691:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1735:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1770:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1781:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1766:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1766:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1790:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1745:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1735:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1818:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1833:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1847:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1837:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1863:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1898:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1909:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1894:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1894:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1918:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1873:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1873:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1863:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1581:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1592:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1604:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1612:6:4",
														"type": ""
													}
												],
												"src": "1536:407:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2008:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2025:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2045:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2030:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2030:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2018:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1996:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2003:3:4",
														"type": ""
													}
												],
												"src": "1949:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2156:272:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2166:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2213:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2180:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2170:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2228:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2294:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2299:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2235:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2235:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2228:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2315:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2315:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2376:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2137:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2144:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2152:3:4",
														"type": ""
													}
												],
												"src": "2064:364:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2580:221:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2590:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2656:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2661:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2597:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2590:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2685:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2690:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2681:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2681:11:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2694:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2674:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2674:55:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2750:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2755:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2746:12:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2760:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2739:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2739:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2739:27:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2776:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2787:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2792:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2783:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2568:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2576:3:4",
														"type": ""
													}
												],
												"src": "2434:367:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3029:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3034:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2970:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2963:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3058:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3063:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3054:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:11:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3067:34:4",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3047:55:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3123:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3119:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3119:12:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3133:4:4",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3112:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3112:26:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3112:26:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3148:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3164:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3155:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3155:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3148:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2941:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2949:3:4",
														"type": ""
													}
												],
												"src": "2807:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3325:181:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3335:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3401:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3406:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3342:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3335:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3430:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3426:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3426:11:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3439:31:4",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3419:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3481:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3492:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3497:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3488:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3481:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3313:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3321:3:4",
														"type": ""
													}
												],
												"src": "3179:327:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3658:224:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3668:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3734:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3739:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3675:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3668:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3763:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3768:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3759:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3759:11:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3772:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3752:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3752:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3752:55:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3828:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3833:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3824:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3824:12:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3838:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3817:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3817:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3817:30:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3857:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3868:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3873:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3864:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3864:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3857:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3646:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3654:3:4",
														"type": ""
													}
												],
												"src": "3512:370:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4034:223:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4044:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4110:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4115:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4051:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4051:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4044:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4139:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4144:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4135:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4135:11:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4148:34:4",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4128:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4128:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4128:55:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4204:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4209:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4200:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:12:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4214:7:4",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:29:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4193:29:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4232:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4243:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4248:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4239:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4239:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4232:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4022:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4030:3:4",
														"type": ""
													}
												],
												"src": "3888:369:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4409:222:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4419:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4485:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4490:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4426:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4426:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4419:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4514:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4519:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:11:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4523:34:4",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4503:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4503:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4503:55:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4579:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4584:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4575:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4575:12:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4589:6:4",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4568:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4568:28:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4568:28:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4606:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4617:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4622:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4613:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4606:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4397:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4405:3:4",
														"type": ""
													}
												],
												"src": "4263:368:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4783:223:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4793:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4859:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4864:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4800:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4800:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4888:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4893:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4884:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4884:11:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4897:34:4",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4877:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4877:55:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4953:3:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4958:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4949:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4949:12:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4963:7:4",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4942:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:29:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4942:29:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4981:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4992:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4997:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4988:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4988:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4981:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4771:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4779:3:4",
														"type": ""
													}
												],
												"src": "4637:369:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5077:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5094:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5117:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5099:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5099:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5087:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5087:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5087:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5065:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5072:3:4",
														"type": ""
													}
												],
												"src": "5012:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5197:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5214:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5235:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5219:15:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5207:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5207:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5207:35:4"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5185:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5192:3:4",
														"type": ""
													}
												],
												"src": "5136:112:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5346:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5356:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5368:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5379:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5364:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5364:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5356:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5443:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5454:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5439:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5439:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5392:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5392:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5392:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5318:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5330:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5341:4:4",
														"type": ""
													}
												],
												"src": "5254:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5588:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5598:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5610:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5621:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5606:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5606:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5598:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5645:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5656:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5641:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5641:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5664:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5670:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5660:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5660:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5634:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5634:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5634:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5690:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5762:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5771:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5698:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5698:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5690:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5560:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5572:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5583:4:4",
														"type": ""
													}
												],
												"src": "5470:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5960:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5970:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5982:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5993:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5978:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5978:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5970:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6017:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6028:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6013:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6013:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6036:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6042:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6032:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6032:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6006:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6006:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6006:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6062:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6196:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6070:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6070:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6062:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5940:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5955:4:4",
														"type": ""
													}
												],
												"src": "5789:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6385:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6395:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6407:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6418:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6403:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6403:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6395:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6442:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6453:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6438:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6438:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6461:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6467:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6457:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6457:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6431:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6431:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6431:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6487:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6621:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6495:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6495:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6487:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6365:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6380:4:4",
														"type": ""
													}
												],
												"src": "6214:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6810:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6820:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6832:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6843:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6828:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6828:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6820:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6867:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6878:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6863:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6863:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6886:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6892:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6882:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6882:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6856:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6856:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6856:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6912:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7046:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6920:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6920:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6912:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6790:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6805:4:4",
														"type": ""
													}
												],
												"src": "6639:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7235:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7245:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7257:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7268:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7253:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7253:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7245:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7292:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7303:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7288:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7288:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7311:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7317:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7307:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7307:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7281:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7281:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7281:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7337:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7471:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7345:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7345:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7337:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7215:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7230:4:4",
														"type": ""
													}
												],
												"src": "7064:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7660:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7670:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7682:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7693:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7678:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7678:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7670:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7717:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7728:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7713:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7713:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7736:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7742:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7732:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7732:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7706:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7706:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7706:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7762:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7896:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7770:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7770:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7762:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7640:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7655:4:4",
														"type": ""
													}
												],
												"src": "7489:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8085:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8095:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8107:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8118:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8103:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8103:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8095:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8142:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8153:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8138:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8138:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8161:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8167:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8157:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8157:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8131:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8131:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8131:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8187:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8321:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8195:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8195:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8187:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8065:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8080:4:4",
														"type": ""
													}
												],
												"src": "7914:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8510:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8520:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8532:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8543:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8528:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8528:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8520:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8567:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8578:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8563:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8563:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8586:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8592:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8582:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8582:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8556:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8556:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8556:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8612:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8746:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8620:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8620:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8612:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8490:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8505:4:4",
														"type": ""
													}
												],
												"src": "8339:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8862:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8872:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8884:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8895:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8880:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8880:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8872:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8952:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8965:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8976:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8961:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8961:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8908:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8908:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8908:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8834:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8846:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8857:4:4",
														"type": ""
													}
												],
												"src": "8764:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9086:120:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9096:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9108:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9119:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9104:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9104:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9096:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9172:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9185:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9196:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9181:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9181:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9132:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9132:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9132:67:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9058:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9070:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9081:4:4",
														"type": ""
													}
												],
												"src": "8992:214:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9271:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9282:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9298:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9292:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9292:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9282:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9254:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9264:6:4",
														"type": ""
													}
												],
												"src": "9212:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9413:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9430:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9435:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9423:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9423:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9423:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9451:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9470:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9475:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9466:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9466:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9451:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9385:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9390:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9401:11:4",
														"type": ""
													}
												],
												"src": "9317:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9536:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9546:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9569:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9551:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9551:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9546:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9580:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9603:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9585:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9585:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9580:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9743:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9745:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9745:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9745:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9664:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9671:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9739:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9667:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9667:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9661:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9661:81:4"
															},
															"nodeType": "YulIf",
															"src": "9658:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9775:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9786:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9789:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9782:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9782:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9775:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9523:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9526:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9532:3:4",
														"type": ""
													}
												],
												"src": "9492:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9848:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9858:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9887:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9869:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9869:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9858:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9830:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9840:7:4",
														"type": ""
													}
												],
												"src": "9803:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9947:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9957:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9982:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9975:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9975:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9968:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9968:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9957:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9929:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9939:7:4",
														"type": ""
													}
												],
												"src": "9905:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10046:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10056:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10071:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10078:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10067:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10067:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10056:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10028:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10038:7:4",
														"type": ""
													}
												],
												"src": "10001:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10178:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10188:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10199:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10188:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10160:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10170:7:4",
														"type": ""
													}
												],
												"src": "10133:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10259:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10269:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10284:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10291:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10280:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10280:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10269:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10241:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10251:7:4",
														"type": ""
													}
												],
												"src": "10216:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10357:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10367:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10376:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10371:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10436:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10461:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10466:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10457:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10457:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10480:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10485:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10476:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10476:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10470:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10470:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10450:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10450:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10450:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10397:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10400:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10394:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10394:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10408:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10410:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10419:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10422:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10415:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10415:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10410:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10390:3:4",
																"statements": []
															},
															"src": "10386:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10533:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10583:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10588:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10579:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10579:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10597:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10572:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10572:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10572:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10514:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10517:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10511:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10511:13:4"
															},
															"nodeType": "YulIf",
															"src": "10508:2:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10339:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10344:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10349:6:4",
														"type": ""
													}
												],
												"src": "10308:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10672:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10682:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10696:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10702:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10692:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10692:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10682:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10713:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10743:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10749:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10739:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10739:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10717:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10790:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10804:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10818:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10826:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10814:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10814:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10804:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10770:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10763:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10763:26:4"
															},
															"nodeType": "YulIf",
															"src": "10760:2:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10893:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10907:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10907:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10907:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10857:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10880:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10888:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10877:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10877:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10854:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10854:38:4"
															},
															"nodeType": "YulIf",
															"src": "10851:2:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10656:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10665:6:4",
														"type": ""
													}
												],
												"src": "10621:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10975:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10992:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10995:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10985:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10985:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10985:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11089:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11092:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11082:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11082:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11082:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11113:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11116:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11106:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11106:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11106:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10947:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11161:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11178:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11181:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11171:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11171:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11171:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11275:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11278:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11268:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11268:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11268:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11299:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11302:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11292:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11292:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11292:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "11133:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11367:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11377:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11395:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11402:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11391:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11391:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11411:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11407:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11407:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11387:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11387:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11377:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11350:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11360:6:4",
														"type": ""
													}
												],
												"src": "11319:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11470:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11527:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11536:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11539:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11529:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11529:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11529:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11493:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11518:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "11500:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11500:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11490:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11490:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11483:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11483:43:4"
															},
															"nodeType": "YulIf",
															"src": "11480:2:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11463:5:4",
														"type": ""
													}
												],
												"src": "11427:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11598:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11655:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11664:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11667:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11657:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11657:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11657:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11621:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11646:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "11628:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11628:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11618:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11618:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11611:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11611:43:4"
															},
															"nodeType": "YulIf",
															"src": "11608:2:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11591:5:4",
														"type": ""
													}
												],
												"src": "11555:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n\n        mstore(add(pos, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(pos, 32), \"ess\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n\n        mstore(add(pos, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(pos, 32), \"ss\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n\n        mstore(add(pos, 0), \"ERC20: insufficient allowance\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(pos, 32), \"alance\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n\n        mstore(add(pos, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(pos, 32), \"dress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(pos, 32), \"ress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n\n        mstore(add(pos, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(pos, 32), \" zero\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610ec8565b60405180910390f35b6100e660048036038101906100e19190610b67565b610308565b6040516100f39190610ead565b60405180910390f35b61010461032b565b6040516101119190610fca565b60405180910390f35b610134600480360381019061012f9190610b18565b610335565b6040516101419190610ead565b60405180910390f35b610152610364565b60405161015f9190610fe5565b60405180910390f35b610182600480360381019061017d9190610b67565b61036d565b60405161018f9190610ead565b60405180910390f35b6101b260048036038101906101ad9190610ab3565b6103a4565b6040516101bf9190610fca565b60405180910390f35b6101d06103ec565b6040516101dd9190610ec8565b60405180910390f35b61020060048036038101906101fb9190610b67565b61047e565b60405161020d9190610ead565b60405180910390f35b610230600480360381019061022b9190610b67565b6104f5565b60405161023d9190610ead565b60405180910390f35b610260600480360381019061025b9190610adc565b610518565b60405161026d9190610fca565b60405180910390f35b606060038054610285906110fa565b80601f01602080910402602001604051908101604052809291908181526020018280546102b1906110fa565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b610394919061101c565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb906110fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610427906110fa565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610faa565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f8a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610f0a565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610fca565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610f2a565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610f6a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610eea565b60405180910390fd5b6108e9838383610a7f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610f4a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a02919061101c565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a669190610fca565b60405180910390a3610a79848484610a84565b50505050565b505050565b505050565b600081359050610a988161119b565b92915050565b600081359050610aad816111b2565b92915050565b600060208284031215610ac557600080fd5b6000610ad384828501610a89565b91505092915050565b60008060408385031215610aef57600080fd5b6000610afd85828601610a89565b9250506020610b0e85828601610a89565b9150509250929050565b600080600060608486031215610b2d57600080fd5b6000610b3b86828701610a89565b9350506020610b4c86828701610a89565b9250506040610b5d86828701610a9e565b9150509250925092565b60008060408385031215610b7a57600080fd5b6000610b8885828601610a89565b9250506020610b9985828601610a9e565b9150509250929050565b610bac81611084565b82525050565b6000610bbd82611000565b610bc7818561100b565b9350610bd78185602086016110c7565b610be08161118a565b840191505092915050565b6000610bf860238361100b565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610c5e60228361100b565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610cc4601d8361100b565b91507f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006000830152602082019050919050565b6000610d0460268361100b565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d6a60258361100b565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610dd060248361100b565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e3660258361100b565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610e98816110b0565b82525050565b610ea7816110ba565b82525050565b6000602082019050610ec26000830184610ba3565b92915050565b60006020820190508181036000830152610ee28184610bb2565b905092915050565b60006020820190508181036000830152610f0381610beb565b9050919050565b60006020820190508181036000830152610f2381610c51565b9050919050565b60006020820190508181036000830152610f4381610cb7565b9050919050565b60006020820190508181036000830152610f6381610cf7565b9050919050565b60006020820190508181036000830152610f8381610d5d565b9050919050565b60006020820190508181036000830152610fa381610dc3565b9050919050565b60006020820190508181036000830152610fc381610e29565b9050919050565b6000602082019050610fdf6000830184610e8f565b92915050565b6000602082019050610ffa6000830184610e9e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611027826110b0565b9150611032836110b0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110675761106661112c565b5b828201905092915050565b600061107d82611090565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156110e55780820151818401526020810190506110ca565b838111156110f4576000848401525b50505050565b6000600282049050600182168061111257607f821691505b602082108114156111265761112561115b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6111a481611072565b81146111af57600080fd5b50565b6111bb816110b0565b81146111c657600080fd5b5056fea2646970667358221220b2bf0c363740cc75da6d602b872bcaf8e239e1ded1e557fe7fd76df1b9ecadf964736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xADC JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x10FA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x10FA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0x10FA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0x10FA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xEEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0x101C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA66 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA79 DUP5 DUP5 DUP5 PUSH2 0xA84 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA98 DUP2 PUSH2 0x119B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAAD DUP2 PUSH2 0x11B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD3 DUP5 DUP3 DUP6 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAFD DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0E DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB3B DUP7 DUP3 DUP8 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4C DUP7 DUP3 DUP8 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB5D DUP7 DUP3 DUP8 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB88 DUP6 DUP3 DUP7 ADD PUSH2 0xA89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB99 DUP6 DUP3 DUP7 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBAC DUP2 PUSH2 0x1084 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBD DUP3 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0xBC7 DUP2 DUP6 PUSH2 0x100B JUMP JUMPDEST SWAP4 POP PUSH2 0xBD7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0x118A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBF8 PUSH1 0x23 DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5E PUSH1 0x22 DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC4 PUSH1 0x1D DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD04 PUSH1 0x26 DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6A PUSH1 0x25 DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD0 PUSH1 0x24 DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE36 PUSH1 0x25 DUP4 PUSH2 0x100B JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE98 DUP2 PUSH2 0x10B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEA7 DUP2 PUSH2 0x10BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE2 DUP2 DUP5 PUSH2 0xBB2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF03 DUP2 PUSH2 0xBEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF23 DUP2 PUSH2 0xC51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF43 DUP2 PUSH2 0xCB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF63 DUP2 PUSH2 0xCF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF83 DUP2 PUSH2 0xD5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFA3 DUP2 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFC3 DUP2 PUSH2 0xE29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFDF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFFA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1027 DUP3 PUSH2 0x10B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1032 DUP4 PUSH2 0x10B0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1067 JUMPI PUSH2 0x1066 PUSH2 0x112C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107D DUP3 PUSH2 0x1090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10E5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x10CA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1112 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1126 JUMPI PUSH2 0x1125 PUSH2 0x115B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A4 DUP2 PUSH2 0x1072 JUMP JUMPDEST DUP2 EQ PUSH2 0x11AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x11BB DUP2 PUSH2 0x10B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x11C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xBF 0xC CALLDATASIZE CALLDATACOPY BLOCKHASH 0xCC PUSH22 0xDA6D602B872BCAF8E239E1DED1E557FE7FD76DF1B9EC 0xAD 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "1423:11571:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4554:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5335:295;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3165:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6039:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3494:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2422:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6780:436;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3827:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4083:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2203:100;2257:13;2290:5;2283:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:100;:::o;4554:201::-;4637:4;4654:13;4670:12;:10;:12::i;:::-;4654:28;;4693:32;4702:5;4709:7;4718:6;4693:8;:32::i;:::-;4743:4;4736:11;;;4554:201;;;;:::o;3323:108::-;3384:7;3411:12;;3404:19;;3323:108;:::o;5335:295::-;5466:4;5483:15;5501:12;:10;:12::i;:::-;5483:30;;5524:38;5540:4;5546:7;5555:6;5524:15;:38::i;:::-;5573:27;5583:4;5589:2;5593:6;5573:9;:27::i;:::-;5618:4;5611:11;;;5335:295;;;;;:::o;3165:93::-;3223:5;3248:2;3241:9;;3165:93;:::o;6039:238::-;6127:4;6144:13;6160:12;:10;:12::i;:::-;6144:28;;6183:64;6192:5;6199:7;6236:10;6208:25;6218:5;6225:7;6208:9;:25::i;:::-;:38;;;;:::i;:::-;6183:8;:64::i;:::-;6265:4;6258:11;;;6039:238;;;;:::o;3494:127::-;3568:7;3595:9;:18;3605:7;3595:18;;;;;;;;;;;;;;;;3588:25;;3494:127;;;:::o;2422:104::-;2478:13;2511:7;2504:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2422:104;:::o;6780:436::-;6873:4;6890:13;6906:12;:10;:12::i;:::-;6890:28;;6929:24;6956:25;6966:5;6973:7;6956:9;:25::i;:::-;6929:52;;7020:15;7000:16;:35;;6992:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7113:60;7122:5;7129:7;7157:15;7138:16;:34;7113:8;:60::i;:::-;7204:4;7197:11;;;;6780:436;;;;:::o;3827:193::-;3906:4;3923:13;3939:12;:10;:12::i;:::-;3923:28;;3962;3972:5;3979:2;3983:6;3962:9;:28::i;:::-;4008:4;4001:11;;;3827:193;;;;:::o;4083:151::-;4172:7;4199:11;:18;4211:5;4199:18;;;;;;;;;;;;;;;:27;4218:7;4199:27;;;;;;;;;;;;;;;;4192:34;;4083:151;;;;:::o;656:98:3:-;709:7;736:10;729:17;;656:98;:::o;10414:380:0:-;10567:1;10550:19;;:5;:19;;;;10542:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10648:1;10629:21;;:7;:21;;;;10621:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:6;10702:11;:18;10714:5;10702:18;;;;;;;;;;;;;;;:27;10721:7;10702:27;;;;;;;;;;;;;;;:36;;;;10770:7;10754:32;;10763:5;10754:32;;;10779:6;10754:32;;;;;;:::i;:::-;;;;;;;;10414:380;;;:::o;11085:453::-;11220:24;11247:25;11257:5;11264:7;11247:9;:25::i;:::-;11220:52;;11307:17;11287:16;:37;11283:248;;11369:6;11349:16;:26;;11341:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11453:51;11462:5;11469:7;11497:6;11478:16;:25;11453:8;:51::i;:::-;11283:248;11085:453;;;;:::o;7695:671::-;7842:1;7826:18;;:4;:18;;;;7818:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7919:1;7905:16;;:2;:16;;;;7897:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7974:38;7995:4;8001:2;8005:6;7974:20;:38::i;:::-;8025:19;8047:9;:15;8057:4;8047:15;;;;;;;;;;;;;;;;8025:37;;8096:6;8081:11;:21;;8073:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8213:6;8199:11;:20;8181:9;:15;8191:4;8181:15;;;;;;;;;;;;;;;:38;;;;8258:6;8241:9;:13;8251:2;8241:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8297:2;8282:26;;8291:4;8282:26;;;8301:6;8282:26;;;;;;:::i;:::-;;;;;;;;8321:37;8341:4;8347:2;8351:6;8321:19;:37::i;:::-;7695:671;;;;:::o;12138:125::-;;;;:::o;12867:124::-;;;;:::o;7:139:4:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;;;;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;;;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;2008:50;;:::o;2064:364::-;;2180:39;2213:5;2180:39;:::i;:::-;2235:71;2299:6;2294:3;2235:71;:::i;:::-;2228:78;;2315:52;2360:6;2355:3;2348:4;2341:5;2337:16;2315:52;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2156:272;;;;;:::o;2434:367::-;;2597:67;2661:2;2656:3;2597:67;:::i;:::-;2590:74;;2694:34;2690:1;2685:3;2681:11;2674:55;2760:5;2755:2;2750:3;2746:12;2739:27;2792:2;2787:3;2783:12;2776:19;;2580:221;;;:::o;2807:366::-;;2970:67;3034:2;3029:3;2970:67;:::i;:::-;2963:74;;3067:34;3063:1;3058:3;3054:11;3047:55;3133:4;3128:2;3123:3;3119:12;3112:26;3164:2;3159:3;3155:12;3148:19;;2953:220;;;:::o;3179:327::-;;3342:67;3406:2;3401:3;3342:67;:::i;:::-;3335:74;;3439:31;3435:1;3430:3;3426:11;3419:52;3497:2;3492:3;3488:12;3481:19;;3325:181;;;:::o;3512:370::-;;3675:67;3739:2;3734:3;3675:67;:::i;:::-;3668:74;;3772:34;3768:1;3763:3;3759:11;3752:55;3838:8;3833:2;3828:3;3824:12;3817:30;3873:2;3868:3;3864:12;3857:19;;3658:224;;;:::o;3888:369::-;;4051:67;4115:2;4110:3;4051:67;:::i;:::-;4044:74;;4148:34;4144:1;4139:3;4135:11;4128:55;4214:7;4209:2;4204:3;4200:12;4193:29;4248:2;4243:3;4239:12;4232:19;;4034:223;;;:::o;4263:368::-;;4426:67;4490:2;4485:3;4426:67;:::i;:::-;4419:74;;4523:34;4519:1;4514:3;4510:11;4503:55;4589:6;4584:2;4579:3;4575:12;4568:28;4622:2;4617:3;4613:12;4606:19;;4409:222;;;:::o;4637:369::-;;4800:67;4864:2;4859:3;4800:67;:::i;:::-;4793:74;;4897:34;4893:1;4888:3;4884:11;4877:55;4963:7;4958:2;4953:3;4949:12;4942:29;4997:2;4992:3;4988:12;4981:19;;4783:223;;;:::o;5012:118::-;5099:24;5117:5;5099:24;:::i;:::-;5094:3;5087:37;5077:53;;:::o;5136:112::-;5219:22;5235:5;5219:22;:::i;:::-;5214:3;5207:35;5197:51;;:::o;5254:210::-;;5379:2;5368:9;5364:18;5356:26;;5392:65;5454:1;5443:9;5439:17;5430:6;5392:65;:::i;:::-;5346:118;;;;:::o;5470:313::-;;5621:2;5610:9;5606:18;5598:26;;5670:9;5664:4;5660:20;5656:1;5645:9;5641:17;5634:47;5698:78;5771:4;5762:6;5698:78;:::i;:::-;5690:86;;5588:195;;;;:::o;5789:419::-;;5993:2;5982:9;5978:18;5970:26;;6042:9;6036:4;6032:20;6028:1;6017:9;6013:17;6006:47;6070:131;6196:4;6070:131;:::i;:::-;6062:139;;5960:248;;;:::o;6214:419::-;;6418:2;6407:9;6403:18;6395:26;;6467:9;6461:4;6457:20;6453:1;6442:9;6438:17;6431:47;6495:131;6621:4;6495:131;:::i;:::-;6487:139;;6385:248;;;:::o;6639:419::-;;6843:2;6832:9;6828:18;6820:26;;6892:9;6886:4;6882:20;6878:1;6867:9;6863:17;6856:47;6920:131;7046:4;6920:131;:::i;:::-;6912:139;;6810:248;;;:::o;7064:419::-;;7268:2;7257:9;7253:18;7245:26;;7317:9;7311:4;7307:20;7303:1;7292:9;7288:17;7281:47;7345:131;7471:4;7345:131;:::i;:::-;7337:139;;7235:248;;;:::o;7489:419::-;;7693:2;7682:9;7678:18;7670:26;;7742:9;7736:4;7732:20;7728:1;7717:9;7713:17;7706:47;7770:131;7896:4;7770:131;:::i;:::-;7762:139;;7660:248;;;:::o;7914:419::-;;8118:2;8107:9;8103:18;8095:26;;8167:9;8161:4;8157:20;8153:1;8142:9;8138:17;8131:47;8195:131;8321:4;8195:131;:::i;:::-;8187:139;;8085:248;;;:::o;8339:419::-;;8543:2;8532:9;8528:18;8520:26;;8592:9;8586:4;8582:20;8578:1;8567:9;8563:17;8556:47;8620:131;8746:4;8620:131;:::i;:::-;8612:139;;8510:248;;;:::o;8764:222::-;;8895:2;8884:9;8880:18;8872:26;;8908:71;8976:1;8965:9;8961:17;8952:6;8908:71;:::i;:::-;8862:124;;;;:::o;8992:214::-;;9119:2;9108:9;9104:18;9096:26;;9132:67;9196:1;9185:9;9181:17;9172:6;9132:67;:::i;:::-;9086:120;;;;:::o;9212:99::-;;9298:5;9292:12;9282:22;;9271:40;;;:::o;9317:169::-;;9435:6;9430:3;9423:19;9475:4;9470:3;9466:14;9451:29;;9413:73;;;;:::o;9492:305::-;;9551:20;9569:1;9551:20;:::i;:::-;9546:25;;9585:20;9603:1;9585:20;:::i;:::-;9580:25;;9739:1;9671:66;9667:74;9664:1;9661:81;9658:2;;;9745:18;;:::i;:::-;9658:2;9789:1;9786;9782:9;9775:16;;9536:261;;;;:::o;9803:96::-;;9869:24;9887:5;9869:24;:::i;:::-;9858:35;;9848:51;;;:::o;9905:90::-;;9982:5;9975:13;9968:21;9957:32;;9947:48;;;:::o;10001:126::-;;10078:42;10071:5;10067:54;10056:65;;10046:81;;;:::o;10133:77::-;;10199:5;10188:16;;10178:32;;;:::o;10216:86::-;;10291:4;10284:5;10280:16;10269:27;;10259:43;;;:::o;10308:307::-;10376:1;10386:113;10400:6;10397:1;10394:13;10386:113;;;10485:1;10480:3;10476:11;10470:18;10466:1;10461:3;10457:11;10450:39;10422:2;10419:1;10415:10;10410:15;;10386:113;;;10517:6;10514:1;10511:13;10508:2;;;10597:1;10588:6;10583:3;10579:16;10572:27;10508:2;10357:258;;;;:::o;10621:320::-;;10702:1;10696:4;10692:12;10682:22;;10749:1;10743:4;10739:12;10770:18;10760:2;;10826:4;10818:6;10814:17;10804:27;;10760:2;10888;10880:6;10877:14;10857:18;10854:38;10851:2;;;10907:18;;:::i;:::-;10851:2;10672:269;;;;:::o;10947:180::-;10995:77;10992:1;10985:88;11092:4;11089:1;11082:15;11116:4;11113:1;11106:15;11133:180;11181:77;11178:1;11171:88;11278:4;11275:1;11268:15;11302:4;11299:1;11292:15;11319:102;;11411:2;11407:7;11402:2;11395:5;11391:14;11387:28;11377:38;;11367:54;;;:::o;11427:122::-;11500:24;11518:5;11500:24;:::i;:::-;11493:5;11490:35;11480:2;;11539:1;11536;11529:12;11480:2;11470:79;:::o;11555:122::-;11628:24;11646:5;11628:24;:::i;:::-;11621:5;11618:35;11608:2;;11667:1;11664;11657:12;11608:2;11598:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "921400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1563",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1182",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2092,
									"end": 2097,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2089,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2097,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2118,
									"end": 2125,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2108,
									"end": 2115,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2108,
									"end": 2125,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2017,
									"end": 2133,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 360,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 360,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7,
									"end": 360,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 136,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 178,
									"end": 184,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 136,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 136,
									"end": 185,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 136,
									"end": 185,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 185,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 121,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 121,
									"end": 186,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 186,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 121,
									"end": 186,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 112,
									"end": 186,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 112,
									"end": 186,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 209,
									"end": 215,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 202,
									"end": 207,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 216,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 247,
									"end": 251,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 240,
									"end": 245,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 236,
									"end": 252,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 285,
									"end": 288,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 276,
									"end": 282,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 271,
									"end": 274,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 267,
									"end": 283,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 264,
									"end": 289,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 261,
									"end": 263,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 261,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 261,
									"end": 263,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 302,
									"end": 303,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 300,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 292,
									"end": 304,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 261,
									"end": 263,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 261,
									"end": 263,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 315,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 347,
									"end": 353,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 342,
									"end": 345,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 337,
									"end": 340,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 315,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 315,
									"end": 354,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 315,
									"end": 354,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 315,
									"end": 354,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 102,
									"end": 360,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 102,
									"end": 360,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 102,
									"end": 360,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 102,
									"end": 360,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 102,
									"end": 360,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 102,
									"end": 360,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 102,
									"end": 360,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 380,
									"end": 668,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 380,
									"end": 668,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 380,
									"end": 668,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 499,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 489,
									"end": 493,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 481,
									"end": 487,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 477,
									"end": 494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 473,
									"end": 500,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 463,
									"end": 465,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 463,
									"end": 465,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 514,
									"end": 515,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 511,
									"end": 512,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 504,
									"end": 516,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 463,
									"end": 465,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 463,
									"end": 465,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 547,
									"end": 553,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 541,
									"end": 554,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 572,
									"end": 662,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 658,
									"end": 661,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 650,
									"end": 656,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 643,
									"end": 647,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 635,
									"end": 641,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 631,
									"end": 648,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 572,
									"end": 662,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 572,
									"end": 662,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 662,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 572,
									"end": 662,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 563,
									"end": 662,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 563,
									"end": 662,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 453,
									"end": 668,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 453,
									"end": 668,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 453,
									"end": 668,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 453,
									"end": 668,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 453,
									"end": 668,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 453,
									"end": 668,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 674,
									"end": 1326,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 674,
									"end": 1326,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 674,
									"end": 1326,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 674,
									"end": 1326,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 830,
									"end": 832,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 827,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 809,
									"end": 816,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 805,
									"end": 828,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 801,
									"end": 833,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 798,
									"end": 800,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 798,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 798,
									"end": 800,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 846,
									"end": 847,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 843,
									"end": 844,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 836,
									"end": 848,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 798,
									"end": 800,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 798,
									"end": 800,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 899,
									"end": 908,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 895,
									"end": 912,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 889,
									"end": 913,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 940,
									"end": 958,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 929,
									"end": 959,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 926,
									"end": 928,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 926,
									"end": 928,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 926,
									"end": 928,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 972,
									"end": 973,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 969,
									"end": 970,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 962,
									"end": 974,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 926,
									"end": 928,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 926,
									"end": 928,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1000,
									"end": 1074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1066,
									"end": 1073,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1057,
									"end": 1063,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1055,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1042,
									"end": 1064,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1000,
									"end": 1074,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1000,
									"end": 1074,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1000,
									"end": 1074,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1000,
									"end": 1074,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 990,
									"end": 1074,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 990,
									"end": 1074,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 860,
									"end": 1084,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1144,
									"end": 1146,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1133,
									"end": 1142,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1147,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1123,
									"end": 1148,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1175,
									"end": 1193,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1167,
									"end": 1173,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1194,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1161,
									"end": 1163,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1161,
									"end": 1163,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1161,
									"end": 1163,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 1208,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1204,
									"end": 1205,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1197,
									"end": 1209,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1161,
									"end": 1163,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1161,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1235,
									"end": 1309,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1301,
									"end": 1308,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1281,
									"end": 1290,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1277,
									"end": 1299,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1235,
									"end": 1309,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1235,
									"end": 1309,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1235,
									"end": 1309,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1235,
									"end": 1309,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1225,
									"end": 1309,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1225,
									"end": 1309,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1319,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 788,
									"end": 1326,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 788,
									"end": 1326,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 788,
									"end": 1326,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 788,
									"end": 1326,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 788,
									"end": 1326,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 788,
									"end": 1326,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1332,
									"end": 1615,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1332,
									"end": 1615,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1332,
									"end": 1615,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1398,
									"end": 1400,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1392,
									"end": 1401,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1382,
									"end": 1401,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1382,
									"end": 1401,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1440,
									"end": 1444,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1432,
									"end": 1438,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1428,
									"end": 1445,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1547,
									"end": 1553,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1535,
									"end": 1545,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1532,
									"end": 1554,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1511,
									"end": 1529,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1499,
									"end": 1509,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1496,
									"end": 1530,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1493,
									"end": 1555,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1558,
									"end": 1576,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1558,
									"end": 1576,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1558,
									"end": 1576,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1558,
									"end": 1576,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1558,
									"end": 1576,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1598,
									"end": 1608,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1594,
									"end": 1596,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1587,
									"end": 1609,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1615,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1615,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1615,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1615,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1615,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1621,
									"end": 1953,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1621,
									"end": 1953,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1621,
									"end": 1953,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1773,
									"end": 1791,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1765,
									"end": 1771,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1762,
									"end": 1792,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1759,
									"end": 1761,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1759,
									"end": 1761,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1759,
									"end": 1761,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1795,
									"end": 1813,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1795,
									"end": 1813,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1795,
									"end": 1813,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1795,
									"end": 1813,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1795,
									"end": 1813,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1759,
									"end": 1761,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1759,
									"end": 1761,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1880,
									"end": 1884,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1876,
									"end": 1885,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1861,
									"end": 1867,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1857,
									"end": 1874,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1853,
									"end": 1886,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1845,
									"end": 1886,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1845,
									"end": 1886,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1941,
									"end": 1945,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1935,
									"end": 1939,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1931,
									"end": 1946,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1923,
									"end": 1946,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1923,
									"end": 1946,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1688,
									"end": 1953,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1688,
									"end": 1953,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1688,
									"end": 1953,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1688,
									"end": 1953,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1959,
									"end": 2266,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1959,
									"end": 2266,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2027,
									"end": 2028,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2150,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 2037,
									"end": 2150,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2051,
									"end": 2057,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2048,
									"end": 2049,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2045,
									"end": 2058,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2037,
									"end": 2150,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2037,
									"end": 2150,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 2037,
									"end": 2150,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2136,
									"end": 2137,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2131,
									"end": 2134,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2127,
									"end": 2138,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2117,
									"end": 2118,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2112,
									"end": 2115,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2108,
									"end": 2119,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2101,
									"end": 2140,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2073,
									"end": 2075,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2070,
									"end": 2071,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2066,
									"end": 2076,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2076,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2076,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2037,
									"end": 2150,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 2037,
									"end": 2150,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2037,
									"end": 2150,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 2037,
									"end": 2150,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2168,
									"end": 2174,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2165,
									"end": 2166,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2162,
									"end": 2175,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2159,
									"end": 2161,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2159,
									"end": 2161,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 2159,
									"end": 2161,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2248,
									"end": 2249,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2239,
									"end": 2245,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2234,
									"end": 2237,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2230,
									"end": 2246,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2223,
									"end": 2250,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2159,
									"end": 2161,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 2159,
									"end": 2161,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2008,
									"end": 2266,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2008,
									"end": 2266,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2008,
									"end": 2266,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2008,
									"end": 2266,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2008,
									"end": 2266,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2272,
									"end": 2592,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2272,
									"end": 2592,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2272,
									"end": 2592,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2353,
									"end": 2354,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2347,
									"end": 2351,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2343,
									"end": 2355,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 2333,
									"end": 2355,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2333,
									"end": 2355,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2400,
									"end": 2401,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2394,
									"end": 2398,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2390,
									"end": 2402,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2421,
									"end": 2439,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2413,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 2411,
									"end": 2413,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2477,
									"end": 2481,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 2469,
									"end": 2475,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2465,
									"end": 2482,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2455,
									"end": 2482,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2455,
									"end": 2482,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2411,
									"end": 2413,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 2411,
									"end": 2413,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2539,
									"end": 2541,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2528,
									"end": 2542,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2508,
									"end": 2526,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2505,
									"end": 2543,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 2502,
									"end": 2504,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2502,
									"end": 2504,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 2502,
									"end": 2504,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2558,
									"end": 2576,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 2558,
									"end": 2576,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2558,
									"end": 2576,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2558,
									"end": 2576,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 2558,
									"end": 2576,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2502,
									"end": 2504,
									"name": "tag",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 2502,
									"end": 2504,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2323,
									"end": 2592,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2323,
									"end": 2592,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2323,
									"end": 2592,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2323,
									"end": 2592,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2323,
									"end": 2592,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2598,
									"end": 2778,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2598,
									"end": 2778,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2646,
									"end": 2723,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2643,
									"end": 2644,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2724,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2743,
									"end": 2747,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2740,
									"end": 2741,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2733,
									"end": 2748,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2767,
									"end": 2771,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 2764,
									"end": 2765,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2757,
									"end": 2772,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2784,
									"end": 2964,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 2784,
									"end": 2964,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2832,
									"end": 2909,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2829,
									"end": 2830,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2822,
									"end": 2910,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2933,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 2926,
									"end": 2927,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2919,
									"end": 2934,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2953,
									"end": 2957,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 2950,
									"end": 2951,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2943,
									"end": 2958,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 12994,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2bf0c363740cc75da6d602b872bcaf8e239e1ded1e557fe7fd76df1b9ecadf964736f6c63430008000033",
									".code": [
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 12994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2270,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2290,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2303,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4637,
											"end": 4641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4654,
											"end": 4667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4670,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4670,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4670,
											"end": 4682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4670,
											"end": 4682,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4670,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4702,
											"end": 4707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4709,
											"end": 4716,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4718,
											"end": 4724,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4693,
											"end": 4725,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4693,
											"end": 4725,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4693,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4743,
											"end": 4747,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4736,
											"end": 4747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4736,
											"end": 4747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4736,
											"end": 4747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4755,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 3391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3423,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3411,
											"end": 3423,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3431,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5466,
											"end": 5470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5483,
											"end": 5498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5501,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5501,
											"end": 5513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5501,
											"end": 5513,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5501,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5483,
											"end": 5513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5483,
											"end": 5513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5524,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5540,
											"end": 5544,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5546,
											"end": 5553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5555,
											"end": 5561,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5524,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5524,
											"end": 5562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5524,
											"end": 5562,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5524,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5573,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5583,
											"end": 5587,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5589,
											"end": 5591,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5593,
											"end": 5599,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5573,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5573,
											"end": 5600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5573,
											"end": 5600,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5573,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5618,
											"end": 5622,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5611,
											"end": 5622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5611,
											"end": 5622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5611,
											"end": 5622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5335,
											"end": 5630,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3241,
											"end": 3250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3258,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6127,
											"end": 6131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6144,
											"end": 6157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6160,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6160,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6160,
											"end": 6172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6160,
											"end": 6172,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6160,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6192,
											"end": 6197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6206,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6236,
											"end": 6246,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6218,
											"end": 6223,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6232,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6208,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6208,
											"end": 6246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6208,
											"end": 6246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6208,
											"end": 6246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6208,
											"end": 6246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6208,
											"end": 6246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6208,
											"end": 6246,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6208,
											"end": 6246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6183,
											"end": 6247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6183,
											"end": 6247,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6183,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6265,
											"end": 6269,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6258,
											"end": 6269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6258,
											"end": 6269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6258,
											"end": 6269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6277,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3612,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3621,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2511,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2526,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6906,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6906,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6906,
											"end": 6918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6906,
											"end": 6918,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6906,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6966,
											"end": 6971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 6980,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6956,
											"end": 6981,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6956,
											"end": 6981,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6956,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7020,
											"end": 7035,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7000,
											"end": 7016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7000,
											"end": 7035,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7000,
											"end": 7035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6992,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7122,
											"end": 7127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7129,
											"end": 7136,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7172,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7154,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7138,
											"end": 7172,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7113,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7113,
											"end": 7173,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7113,
											"end": 7173,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7113,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7204,
											"end": 7208,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7197,
											"end": 7208,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7197,
											"end": 7208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6780,
											"end": 7216,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3939,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3939,
											"end": 3949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3939,
											"end": 3951,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3939,
											"end": 3951,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3939,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3962,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3972,
											"end": 3977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3979,
											"end": 3981,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3983,
											"end": 3989,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3962,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3962,
											"end": 3990,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3962,
											"end": 3990,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3962,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4008,
											"end": 4012,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4001,
											"end": 4012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4001,
											"end": 4012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4001,
											"end": 4012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 4020,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4210,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4226,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4192,
											"end": 4226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4192,
											"end": 4226,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4083,
											"end": 4234,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 729,
											"end": 746,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 729,
											"end": 746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10414,
											"end": 10794,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10414,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10550,
											"end": 10569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10550,
											"end": 10569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10555,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10550,
											"end": 10569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10569,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10569,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10542,
											"end": 10610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10629,
											"end": 10650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10629,
											"end": 10650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10650,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10629,
											"end": 10650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10650,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10650,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10621,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10732,
											"end": 10738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10713,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10714,
											"end": 10719,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10702,
											"end": 10720,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10721,
											"end": 10728,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10702,
											"end": 10729,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10738,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10770,
											"end": 10777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10763,
											"end": 10768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10779,
											"end": 10785,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10414,
											"end": 10794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10414,
											"end": 10794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10414,
											"end": 10794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10414,
											"end": 10794,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11085,
											"end": 11538,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11085,
											"end": 11538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11220,
											"end": 11244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11247,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11257,
											"end": 11262,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11264,
											"end": 11271,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11247,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11247,
											"end": 11272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11247,
											"end": 11272,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11247,
											"end": 11272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11220,
											"end": 11272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11220,
											"end": 11272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11307,
											"end": 11324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11287,
											"end": 11303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11287,
											"end": 11324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11283,
											"end": 11531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11283,
											"end": 11531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11369,
											"end": 11375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11375,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11349,
											"end": 11375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11341,
											"end": 11409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11453,
											"end": 11504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11462,
											"end": 11467,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11469,
											"end": 11476,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11497,
											"end": 11503,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11478,
											"end": 11494,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11478,
											"end": 11503,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11453,
											"end": 11461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11453,
											"end": 11504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11453,
											"end": 11504,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11453,
											"end": 11504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11283,
											"end": 11531,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11283,
											"end": 11531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11538,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7695,
											"end": 8366,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7695,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7826,
											"end": 7844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7818,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7919,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7905,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7905,
											"end": 7921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7907,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7921,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7905,
											"end": 7921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7921,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 7921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7897,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7974,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7995,
											"end": 7999,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8001,
											"end": 8003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7974,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7974,
											"end": 8012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7974,
											"end": 8012,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7974,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8025,
											"end": 8044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8047,
											"end": 8056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8057,
											"end": 8061,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8047,
											"end": 8062,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8025,
											"end": 8062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8025,
											"end": 8062,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8081,
											"end": 8092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8081,
											"end": 8102,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8081,
											"end": 8102,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 8073,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8213,
											"end": 8219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8219,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8191,
											"end": 8195,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 8196,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8219,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 8219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8258,
											"end": 8264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8251,
											"end": 8253,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8297,
											"end": 8299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8291,
											"end": 8295,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8301,
											"end": 8307,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8308,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8341,
											"end": 8345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8347,
											"end": 8349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8351,
											"end": 8357,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8321,
											"end": 8358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8321,
											"end": 8358,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8321,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 8366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 8366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 8366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 8366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7695,
											"end": 8366,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12138,
											"end": 12263,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12138,
											"end": 12263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12138,
											"end": 12263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12138,
											"end": 12263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12138,
											"end": 12263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12138,
											"end": 12263,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12867,
											"end": 12991,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 12867,
											"end": 12991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12867,
											"end": 12991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12867,
											"end": 12991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12867,
											"end": 12991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12867,
											"end": 12991,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 297,
											"end": 559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 411,
											"end": 423,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 375,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 534,
											"end": 541,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 525,
											"end": 531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 510,
											"end": 532,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 479,
											"end": 542,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 479,
											"end": 542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 363,
											"end": 559,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 565,
											"end": 972,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 690,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 687,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 669,
											"end": 676,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 665,
											"end": 688,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 658,
											"end": 660,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 706,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 704,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 696,
											"end": 708,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 658,
											"end": 660,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 749,
											"end": 750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 819,
											"end": 826,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 799,
											"end": 808,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 795,
											"end": 817,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 764,
											"end": 827,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 764,
											"end": 827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 720,
											"end": 837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 876,
											"end": 878,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 947,
											"end": 954,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 923,
											"end": 945,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 892,
											"end": 955,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 892,
											"end": 955,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 847,
											"end": 965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 648,
											"end": 972,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1108,
											"end": 1117,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1118,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1134,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1249,
											"end": 1256,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1238,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1247,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1267,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1374,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1357,
											"end": 1366,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1375,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1277,
											"end": 1395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1485,
											"end": 1494,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1513,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1523,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1691,
											"end": 1808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1915,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1916,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1926,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2058,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1949,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2028,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2018,
											"end": 2052,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2297,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2306,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2434,
											"end": 2801,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2434,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2801,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2656,
											"end": 2659,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2664,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2728,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2690,
											"end": 2691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2688,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2681,
											"end": 2692,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2674,
											"end": 2729,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2765,
											"name": "PUSH",
											"source": 4,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2755,
											"end": 2757,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2794,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2787,
											"end": 2790,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2783,
											"end": 2795,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2776,
											"end": 2795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2776,
											"end": 2795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2801,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2801,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2801,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2801,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2807,
											"end": 3173,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2807,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3034,
											"end": 3036,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2963,
											"end": 3037,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2963,
											"end": 3037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3067,
											"end": 3101,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3061,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3065,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3047,
											"end": 3102,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3137,
											"name": "PUSH",
											"source": 4,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3123,
											"end": 3126,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3119,
											"end": 3131,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3112,
											"end": 3138,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3166,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3162,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3167,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 3173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 3173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 3173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2953,
											"end": 3173,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3179,
											"end": 3506,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3179,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3179,
											"end": 3506,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3406,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 3401,
											"end": 3404,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3439,
											"end": 3470,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3435,
											"end": 3436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3433,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3426,
											"end": 3437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3471,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3492,
											"end": 3495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3506,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3506,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3512,
											"end": 3882,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3512,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3882,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3739,
											"end": 3741,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3734,
											"end": 3737,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3675,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3675,
											"end": 3742,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3675,
											"end": 3742,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3675,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3742,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3772,
											"end": 3806,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3768,
											"end": 3769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3766,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3759,
											"end": 3770,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3807,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3846,
											"name": "PUSH",
											"source": 4,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3831,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3824,
											"end": 3836,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3817,
											"end": 3847,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 3875,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3868,
											"end": 3871,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 3876,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3658,
											"end": 3882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3658,
											"end": 3882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3658,
											"end": 3882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3658,
											"end": 3882,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3888,
											"end": 4257,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3888,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 4257,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 4115,
											"end": 4117,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4110,
											"end": 4113,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4051,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4051,
											"end": 4118,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4051,
											"end": 4118,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 4051,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4044,
											"end": 4118,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4044,
											"end": 4118,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4148,
											"end": 4182,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4144,
											"end": 4145,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4142,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4135,
											"end": 4146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4183,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4214,
											"end": 4221,
											"name": "PUSH",
											"source": 4,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4209,
											"end": 4211,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4212,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4248,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4243,
											"end": 4246,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4232,
											"end": 4251,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4232,
											"end": 4251,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4034,
											"end": 4257,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4034,
											"end": 4257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4034,
											"end": 4257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4034,
											"end": 4257,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4263,
											"end": 4631,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 4263,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 4490,
											"end": 4492,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4485,
											"end": 4488,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4426,
											"end": 4493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4426,
											"end": 4493,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4426,
											"end": 4493,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 4426,
											"end": 4493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4523,
											"end": 4557,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4519,
											"end": 4520,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4517,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4510,
											"end": 4521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4558,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4595,
											"name": "PUSH",
											"source": 4,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4584,
											"end": 4586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4579,
											"end": 4582,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4575,
											"end": 4587,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4568,
											"end": 4596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4622,
											"end": 4624,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4617,
											"end": 4620,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4625,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4631,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4631,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4631,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4637,
											"end": 5006,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4637,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4637,
											"end": 5006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4800,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 4864,
											"end": 4866,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4859,
											"end": 4862,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4800,
											"end": 4867,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4800,
											"end": 4867,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 4800,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 4867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 4867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4931,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4893,
											"end": 4894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4891,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4884,
											"end": 4895,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4877,
											"end": 4932,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 4970,
											"name": "PUSH",
											"source": 4,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 4956,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4949,
											"end": 4961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4942,
											"end": 4971,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4997,
											"end": 4999,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4992,
											"end": 4995,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4981,
											"end": 5000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 5006,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 5006,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 5006,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 5006,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5012,
											"end": 5130,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 5012,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5099,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 5117,
											"end": 5122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5099,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 5099,
											"end": 5123,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5099,
											"end": 5123,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 5099,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5094,
											"end": 5097,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5087,
											"end": 5124,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5130,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5136,
											"end": 5248,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 5136,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5219,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 5235,
											"end": 5240,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5219,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 5219,
											"end": 5241,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5219,
											"end": 5241,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 5219,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5217,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5248,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5254,
											"end": 5464,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5254,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5254,
											"end": 5464,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5379,
											"end": 5381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5368,
											"end": 5377,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5382,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5392,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 5454,
											"end": 5455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5452,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 5436,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5392,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5392,
											"end": 5457,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5392,
											"end": 5457,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 5392,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5346,
											"end": 5464,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5346,
											"end": 5464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5346,
											"end": 5464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5346,
											"end": 5464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5346,
											"end": 5464,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5470,
											"end": 5783,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 5470,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5470,
											"end": 5783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5621,
											"end": 5623,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5610,
											"end": 5619,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5624,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5598,
											"end": 5624,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5598,
											"end": 5624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 5679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5664,
											"end": 5668,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5657,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5645,
											"end": 5654,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5641,
											"end": 5658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5634,
											"end": 5681,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5771,
											"end": 5775,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5762,
											"end": 5768,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 5698,
											"end": 5776,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5698,
											"end": 5776,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5698,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5776,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5588,
											"end": 5783,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5588,
											"end": 5783,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5588,
											"end": 5783,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5588,
											"end": 5783,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5588,
											"end": 5783,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5789,
											"end": 6208,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5789,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5789,
											"end": 6208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5993,
											"end": 5995,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 5991,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5978,
											"end": 5996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5970,
											"end": 5996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5970,
											"end": 5996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6042,
											"end": 6051,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6036,
											"end": 6040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6032,
											"end": 6052,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6028,
											"end": 6029,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6026,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6013,
											"end": 6030,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6006,
											"end": 6053,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 6196,
											"end": 6200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6070,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 6070,
											"end": 6201,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6070,
											"end": 6201,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 6070,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6062,
											"end": 6201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6062,
											"end": 6201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5960,
											"end": 6208,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5960,
											"end": 6208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5960,
											"end": 6208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5960,
											"end": 6208,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6214,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 6214,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6633,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6418,
											"end": 6420,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6407,
											"end": 6416,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6395,
											"end": 6421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6395,
											"end": 6421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6467,
											"end": 6476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6477,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6453,
											"end": 6454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6451,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6478,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 6621,
											"end": 6625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 6495,
											"end": 6626,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6495,
											"end": 6626,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 6495,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6487,
											"end": 6626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6487,
											"end": 6626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6385,
											"end": 6633,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6385,
											"end": 6633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6385,
											"end": 6633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6385,
											"end": 6633,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6639,
											"end": 7058,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 6639,
											"end": 7058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6639,
											"end": 7058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6843,
											"end": 6845,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6832,
											"end": 6841,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6828,
											"end": 6846,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6820,
											"end": 6846,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6820,
											"end": 6846,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 6901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6886,
											"end": 6890,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6902,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6878,
											"end": 6879,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6867,
											"end": 6876,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6863,
											"end": 6880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6856,
											"end": 6903,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 7051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 7046,
											"end": 7050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 7051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6920,
											"end": 7051,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 7051,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 6920,
											"end": 7051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6912,
											"end": 7051,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6912,
											"end": 7051,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 7058,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 7058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 7058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 7058,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7064,
											"end": 7483,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 7064,
											"end": 7483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7268,
											"end": 7270,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7257,
											"end": 7266,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7253,
											"end": 7271,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7317,
											"end": 7326,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7311,
											"end": 7315,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7307,
											"end": 7327,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7303,
											"end": 7304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7292,
											"end": 7301,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7288,
											"end": 7305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7281,
											"end": 7328,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7345,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 7471,
											"end": 7475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7345,
											"end": 7476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 7345,
											"end": 7476,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7345,
											"end": 7476,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 7345,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7337,
											"end": 7476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7337,
											"end": 7476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7235,
											"end": 7483,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7489,
											"end": 7908,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 7489,
											"end": 7908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7489,
											"end": 7908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7693,
											"end": 7695,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7682,
											"end": 7691,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7678,
											"end": 7696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7670,
											"end": 7696,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7670,
											"end": 7696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7742,
											"end": 7751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7736,
											"end": 7740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7732,
											"end": 7752,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7728,
											"end": 7729,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7726,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7713,
											"end": 7730,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7706,
											"end": 7753,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7770,
											"end": 7901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 7896,
											"end": 7900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7770,
											"end": 7901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7770,
											"end": 7901,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7770,
											"end": 7901,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 7770,
											"end": 7901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7762,
											"end": 7901,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7762,
											"end": 7901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7908,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7908,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7914,
											"end": 8333,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 7914,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8120,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8107,
											"end": 8116,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8167,
											"end": 8176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8161,
											"end": 8165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8153,
											"end": 8154,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8142,
											"end": 8151,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8138,
											"end": 8155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8131,
											"end": 8178,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8195,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8195,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8195,
											"end": 8326,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8195,
											"end": 8326,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 8195,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8187,
											"end": 8326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8187,
											"end": 8326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8085,
											"end": 8333,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8085,
											"end": 8333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8085,
											"end": 8333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8085,
											"end": 8333,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8339,
											"end": 8758,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 8339,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8339,
											"end": 8758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8543,
											"end": 8545,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8532,
											"end": 8541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8546,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8592,
											"end": 8601,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8586,
											"end": 8590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8602,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8578,
											"end": 8579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8576,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8563,
											"end": 8580,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8556,
											"end": 8603,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8620,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 8620,
											"end": 8751,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8620,
											"end": 8751,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 8620,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8612,
											"end": 8751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8612,
											"end": 8751,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8510,
											"end": 8758,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8510,
											"end": 8758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8510,
											"end": 8758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8510,
											"end": 8758,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8764,
											"end": 8986,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 8764,
											"end": 8986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8764,
											"end": 8986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8895,
											"end": 8897,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8884,
											"end": 8893,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8880,
											"end": 8898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 8898,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 8898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8908,
											"end": 8979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 8976,
											"end": 8977,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8965,
											"end": 8974,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8961,
											"end": 8978,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8952,
											"end": 8958,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8908,
											"end": 8979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8908,
											"end": 8979,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8908,
											"end": 8979,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 8908,
											"end": 8979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8862,
											"end": 8986,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8862,
											"end": 8986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8862,
											"end": 8986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8862,
											"end": 8986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8862,
											"end": 8986,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8992,
											"end": 9206,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 8992,
											"end": 9206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8992,
											"end": 9206,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9119,
											"end": 9121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9108,
											"end": 9117,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9122,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9096,
											"end": 9122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9096,
											"end": 9122,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9132,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 9196,
											"end": 9197,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9185,
											"end": 9194,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9181,
											"end": 9198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9172,
											"end": 9178,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9132,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 9132,
											"end": 9199,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9132,
											"end": 9199,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 9132,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9086,
											"end": 9206,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9086,
											"end": 9206,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9086,
											"end": 9206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9086,
											"end": 9206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9086,
											"end": 9206,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9212,
											"end": 9311,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 9212,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9212,
											"end": 9311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9303,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9292,
											"end": 9304,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9282,
											"end": 9304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9282,
											"end": 9304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9271,
											"end": 9311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9271,
											"end": 9311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9271,
											"end": 9311,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9271,
											"end": 9311,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9317,
											"end": 9486,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 9317,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9317,
											"end": 9486,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9435,
											"end": 9441,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9430,
											"end": 9433,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9442,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9475,
											"end": 9479,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9470,
											"end": 9473,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9466,
											"end": 9480,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9451,
											"end": 9480,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9451,
											"end": 9480,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9486,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9413,
											"end": 9486,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9492,
											"end": 9797,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 9492,
											"end": 9797,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9492,
											"end": 9797,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9551,
											"end": 9571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 9569,
											"end": 9570,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9551,
											"end": 9571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 9551,
											"end": 9571,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9551,
											"end": 9571,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 9551,
											"end": 9571,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9546,
											"end": 9571,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9546,
											"end": 9571,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9585,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 9603,
											"end": 9604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9585,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 9585,
											"end": 9605,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9585,
											"end": 9605,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 9585,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9580,
											"end": 9605,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9580,
											"end": 9605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9739,
											"end": 9740,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9671,
											"end": 9737,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9667,
											"end": 9741,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9664,
											"end": 9665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 9742,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 9658,
											"end": 9660,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9658,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 9658,
											"end": 9660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 9745,
											"end": 9763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9658,
											"end": 9660,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 9658,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9789,
											"end": 9790,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9786,
											"end": 9787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9782,
											"end": 9791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9775,
											"end": 9791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9775,
											"end": 9791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9536,
											"end": 9797,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9536,
											"end": 9797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9536,
											"end": 9797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9536,
											"end": 9797,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9536,
											"end": 9797,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9803,
											"end": 9899,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 9803,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9803,
											"end": 9899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9869,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 9887,
											"end": 9892,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9869,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 9869,
											"end": 9893,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9869,
											"end": 9893,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 9869,
											"end": 9893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9858,
											"end": 9893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9848,
											"end": 9899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9848,
											"end": 9899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9848,
											"end": 9899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9848,
											"end": 9899,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9905,
											"end": 9995,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 9905,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9995,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9982,
											"end": 9987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9975,
											"end": 9988,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9968,
											"end": 9989,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9957,
											"end": 9989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9947,
											"end": 9995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9947,
											"end": 9995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9947,
											"end": 9995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9947,
											"end": 9995,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10001,
											"end": 10127,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 10001,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10127,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10078,
											"end": 10120,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10071,
											"end": 10076,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10067,
											"end": 10121,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10056,
											"end": 10121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10056,
											"end": 10121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10046,
											"end": 10127,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10046,
											"end": 10127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10046,
											"end": 10127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10046,
											"end": 10127,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10133,
											"end": 10210,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 10133,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10133,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10199,
											"end": 10204,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10188,
											"end": 10204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10188,
											"end": 10204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10210,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10216,
											"end": 10302,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 10216,
											"end": 10302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10216,
											"end": 10302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10291,
											"end": 10295,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10280,
											"end": 10296,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10259,
											"end": 10302,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10259,
											"end": 10302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10259,
											"end": 10302,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10259,
											"end": 10302,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10308,
											"end": 10615,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 10308,
											"end": 10615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10376,
											"end": 10377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10386,
											"end": 10499,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 10386,
											"end": 10499,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10400,
											"end": 10406,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10397,
											"end": 10398,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10394,
											"end": 10407,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10386,
											"end": 10499,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10386,
											"end": 10499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 10386,
											"end": 10499,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10485,
											"end": 10486,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10483,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10487,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10470,
											"end": 10488,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10466,
											"end": 10467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10461,
											"end": 10464,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10457,
											"end": 10468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10450,
											"end": 10489,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10422,
											"end": 10424,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10419,
											"end": 10420,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10425,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10410,
											"end": 10425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10410,
											"end": 10425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10386,
											"end": 10499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 10386,
											"end": 10499,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10386,
											"end": 10499,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 10386,
											"end": 10499,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10517,
											"end": 10523,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10515,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10524,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10508,
											"end": 10510,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10508,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 10508,
											"end": 10510,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10594,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10583,
											"end": 10586,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10579,
											"end": 10595,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10572,
											"end": 10599,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10508,
											"end": 10510,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 10508,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10357,
											"end": 10615,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10357,
											"end": 10615,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10357,
											"end": 10615,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10357,
											"end": 10615,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10357,
											"end": 10615,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10621,
											"end": 10941,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 10621,
											"end": 10941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10621,
											"end": 10941,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10702,
											"end": 10703,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10696,
											"end": 10700,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10692,
											"end": 10704,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10682,
											"end": 10704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10682,
											"end": 10704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10749,
											"end": 10750,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10743,
											"end": 10747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10739,
											"end": 10751,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10770,
											"end": 10788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10760,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 10760,
											"end": 10762,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10830,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 10818,
											"end": 10824,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10831,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10831,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10760,
											"end": 10762,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 10760,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10888,
											"end": 10890,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10880,
											"end": 10886,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10877,
											"end": 10891,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10854,
											"end": 10892,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10851,
											"end": 10853,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10851,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 10851,
											"end": 10853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10851,
											"end": 10853,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 10851,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10672,
											"end": 10941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10672,
											"end": 10941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10672,
											"end": 10941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10672,
											"end": 10941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10672,
											"end": 10941,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10947,
											"end": 11127,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 10947,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10995,
											"end": 11072,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10992,
											"end": 10993,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10985,
											"end": 11073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11092,
											"end": 11096,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 11089,
											"end": 11090,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11082,
											"end": 11097,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11116,
											"end": 11120,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 11113,
											"end": 11114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11106,
											"end": 11121,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11133,
											"end": 11313,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 11133,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11181,
											"end": 11258,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11171,
											"end": 11259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11278,
											"end": 11282,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 11275,
											"end": 11276,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11268,
											"end": 11283,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11302,
											"end": 11306,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 11299,
											"end": 11300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11292,
											"end": 11307,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11319,
											"end": 11421,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 11319,
											"end": 11421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11319,
											"end": 11421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11411,
											"end": 11413,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11407,
											"end": 11414,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 11402,
											"end": 11404,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11395,
											"end": 11400,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11391,
											"end": 11405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11387,
											"end": 11415,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11377,
											"end": 11415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11377,
											"end": 11415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11367,
											"end": 11421,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11367,
											"end": 11421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11367,
											"end": 11421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11367,
											"end": 11421,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11427,
											"end": 11549,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 11427,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11500,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 11518,
											"end": 11523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11500,
											"end": 11524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 11500,
											"end": 11524,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11500,
											"end": 11524,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 11500,
											"end": 11524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11493,
											"end": 11498,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11490,
											"end": 11525,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11480,
											"end": 11482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 11480,
											"end": 11482,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11539,
											"end": 11540,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11536,
											"end": 11537,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11529,
											"end": 11541,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11480,
											"end": 11482,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 11480,
											"end": 11482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11470,
											"end": 11549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11470,
											"end": 11549,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11555,
											"end": 11677,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 11555,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11628,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 11646,
											"end": 11651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11628,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 11628,
											"end": 11652,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11628,
											"end": 11652,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 11628,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11621,
											"end": 11626,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11618,
											"end": 11653,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11608,
											"end": 11610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 11608,
											"end": 11610,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11667,
											"end": 11668,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11664,
											"end": 11665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11657,
											"end": 11669,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11608,
											"end": 11610,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 11608,
											"end": 11610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11677,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/ERC20.sol\":{\"keccak256\":\"0x6b6a2ef84286d28a87a93e97915ab7cb9fab6a5c313e12410563996187f24bf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98212618a788453f3eb1215ebc8f2d9dbd2fec3b967d87d4f7a2470ff12e497b\",\"dweb:/ipfs/QmXfKyVx33tuWqa3Lpvsd8RNDwmELZuLTHhPXf6yqa4pYT\"]},\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x94dc88716e92464d240916e16167a8a900f88a2a954fb23cd2ac7f8f96d4d1b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad787a2de87b357623f979896b283138de1b491859c55c03ea19e5b3f85196fc\",\"dweb:/ipfs/QmRgyyXYMDTkwejZMpcDgmE3kgPQKkfvHGHDeunXCgTMJr\"]},\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x94dc88716e92464d240916e16167a8a900f88a2a954fb23cd2ac7f8f96d4d1b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad787a2de87b357623f979896b283138de1b491859c55c03ea19e5b3f85196fc\",\"dweb:/ipfs/QmRgyyXYMDTkwejZMpcDgmE3kgPQKkfvHGHDeunXCgTMJr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							710
						],
						"ERC20": [
							585
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 664,
							"src": "135:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 689,
							"src": "159:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Context.sol",
							"file": "../Utils/Context.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 711,
							"src": "191:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 710,
										"src": "1441:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1441:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "1450:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1450:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 688,
										"src": "1458:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1458:14:0"
								}
							],
							"contractDependencies": [
								663,
								688,
								710
							],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "225:1196:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 585,
							"linearizedBaseContracts": [
								585,
								688,
								663,
								710
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1480:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1499:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1534:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1542:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1534:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 19,
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1561:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1553:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1572:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1610:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1610:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1647:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1647:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1674:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1674:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2073:60:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2084:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2092:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2084:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2084:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2108:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2118:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2108:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2108:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1705:306:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2029:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2029:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2050:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2050:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2028:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2073:0:0"
									},
									"scope": 585,
									"src": "2017:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										675
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2272:31:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2290:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2283:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2141:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2239:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2216:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2257:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2257:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:15:0"
									},
									"scope": 585,
									"src": "2203:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										681
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2493:33:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2504:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2311:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2460:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2437:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2478:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2478:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2477:15:0"
									},
									"scope": 585,
									"src": "2422:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										687
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3230:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3248:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3241:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2534:625:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3205:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3182:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3223:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3223:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3222:7:0"
									},
									"scope": 585,
									"src": "3165:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3393:38:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3411:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3404:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3266:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3366:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3343:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3384:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:9:0"
									},
									"scope": 585,
									"src": "3323:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										620
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3577:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3595:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3605:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3595:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3588:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3439:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3550:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3513:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3512:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3568:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3567:9:0"
									},
									"scope": 585,
									"src": "3494:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3912:108:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3923:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3923:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "3939:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3939:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3923:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3972:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3979:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3983:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3962:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3962:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3962:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4008:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "4001:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3629:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3888:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3845:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3857:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3844:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3906:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3906:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3905:6:0"
									},
									"scope": 585,
									"src": "3827:193:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4181:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4199:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4211:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4199:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4218:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4199:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4192:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "4028:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4154:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4102:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4117:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4101:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4172:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4171:9:0"
									},
									"scope": 585,
									"src": "4083:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										650
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4643:112:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4654:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4654:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "4670:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4670:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4654:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4702:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4709:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4718:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "4693:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4693:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4743:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4736:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4242:306:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4619:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4571:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4588:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4570:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4637:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4637:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4636:6:0"
									},
									"scope": 585,
									"src": "4554:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5472:158:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5483:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5483:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5501:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5501:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5483:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5540:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5546:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5555:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "5524:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5524:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5524:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5583:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5589:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5593:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5573:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5573:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5573:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5618:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5611:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4763:566:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5448:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5367:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5390:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5411:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5356:76:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5466:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5466:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5465:6:0"
									},
									"scope": 585,
									"src": "5335:295:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "6133:144:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "6144:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6144:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6160:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6160:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6144:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6192:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6199:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6218:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6225:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6208:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6208:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6236:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6208:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "6183:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6183:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "6183:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6265:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6258:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5638:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6066:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6083:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6065:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6127:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6127:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6126:6:0"
									},
									"scope": 585,
									"src": "6039:238:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6879:337:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6890:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6890:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6906:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6906:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6890:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6929:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6929:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6966:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6973:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6956:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6956:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6929:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "7000:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "7020:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7000:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7037:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6992:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6992:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6992:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "7088:97:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "7122:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "7129:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "7138:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "7157:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7138:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "7113:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7113:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "7113:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7204:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "7197:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6285:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6807:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6824:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6806:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6873:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6873:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6872:6:0"
									},
									"scope": 585,
									"src": "6780:436:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7807:559:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7826:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7842:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7834:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7834:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7834:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7826:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7846:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7818:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7818:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7818:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7905:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7919:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7911:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7911:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7911:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7905:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7923:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7897:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7897:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7897:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7995:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8001:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8005:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "7974:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7974:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7974:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "8025:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8025:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "8047:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "8057:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8047:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8025:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "8081:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "8096:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8081:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8104:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8073:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8073:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "8073:72:0"
											},
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "8156:75:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8181:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "8191:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8181:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "8199:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "8213:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8199:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8181:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "8181:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8241:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 328,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8251:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8241:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8258:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8241:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "8241:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8291:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8297:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8301:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8282:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8282:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8277:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8347:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8351:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8321:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8321:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8321:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7224:465:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7724:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7747:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7768:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7713:76:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7807:0:0"
									},
									"scope": 585,
									"src": "7695:671:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8718:334:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8737:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8756:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8748:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8748:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8748:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8737:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8760:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8729:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8729:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8729:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8836:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8828:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8828:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8828:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8840:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8849:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8807:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8807:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8807:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8869:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8885:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8869:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8869:22:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 377,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8902:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 379,
														"indexExpression": {
															"id": 378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8912:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8902:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 380,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8924:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8902:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "8902:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8963:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8955:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8955:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8955:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8967:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8976:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8946:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8946:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "EmitStatement",
												"src": "8941:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9024:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9016:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9016:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9016:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9028:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9037:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8996:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8996:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8996:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8374:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8667:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8718:0:0"
									},
									"scope": 585,
									"src": "8653:399:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "9450:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "9469:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9488:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9480:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9480:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9480:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9469:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9492:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9461:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "9461:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9562:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9579:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9571:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9571:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9571:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9583:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9541:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9541:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "9541:49:0"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "accountBalance",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "9603:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9603:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"baseExpression": {
														"id": 431,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9628:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 433,
													"indexExpression": {
														"id": 432,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "9638:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9628:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9603:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 436,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "9665:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 437,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "9683:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9665:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9691:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9657:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9657:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "9657:71:0"
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "9739:81:0",
												"statements": [
													{
														"expression": {
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 442,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9764:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 444,
																"indexExpression": {
																	"id": 443,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "9774:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9764:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 445,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "9785:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 446,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "9802:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9785:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9764:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "9764:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9830:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 452,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "9846:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9830:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "9830:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 456,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9879:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9896:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9888:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9888:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9888:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9900:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "9870:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9870:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "EmitStatement",
												"src": "9865:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9940:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9961:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9920:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "9920:48:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "9060:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9400:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9417:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9399:33:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9450:0:0"
									},
									"scope": 585,
									"src": "9385:591:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "10531:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10550:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10567:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10559:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10559:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10559:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10550:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10571:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10542:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10542:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "10542:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "10629:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10648:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10640:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 496,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10640:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10640:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10629:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10652:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10621:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10621:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "10621:68:0"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 504,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10702:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 507,
															"indexExpression": {
																"id": 505,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10714:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10702:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 508,
														"indexExpression": {
															"id": 506,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10721:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10702:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 509,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "10732:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10702:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "10702:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "10763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "10779:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "10754:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10754:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "EmitStatement",
												"src": "10749:37:0"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "9984:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10442:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10492:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10431:82:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10531:0:0"
									},
									"scope": 585,
									"src": "10414:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "11209:329:0",
										"statements": [
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "11220:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"id": 532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "11257:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "11264:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 531,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "11247:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11247:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11220:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "11287:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11312:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11312:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 537,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11307:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11307:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11307:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11287:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "11283:248:0",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "11326:205:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 544,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "11349:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 545,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "11369:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11349:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11377:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 543,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11341:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11341:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "11341:68:0"
														},
														{
															"id": 558,
															"nodeType": "UncheckedBlock",
															"src": "11424:96:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 551,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "11462:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 552,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "11469:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 553,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "11478:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 554,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 526,
																					"src": "11497:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11478:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 550,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "11453:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11453:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 557,
																	"nodeType": "ExpressionStatement",
																	"src": "11453:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "10802:277:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "11120:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11120:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "11144:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "11170:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11109:82:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11209:0:0"
									},
									"scope": 585,
									"src": "11085:453:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "12261:2:0",
										"statements": []
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "11546:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "12178:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12178:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "12201:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "12222:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12167:76:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12261:0:0"
									},
									"scope": 585,
									"src": "12138:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "12989:2:0",
										"statements": []
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "12271:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12906:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12929:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12950:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12895:76:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12989:0:0"
									},
									"scope": 585,
									"src": "12867:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 586,
							"src": "1423:11571:0"
						}
					],
					"src": "108:12886:0"
				},
				"id": 0
			},
			"ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 597,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "418:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "440:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "460:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:1"
									},
									"src": "403:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 606,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "655:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "678:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "703:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:1"
									},
									"src": "640:78:1"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "846:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:1"
									},
									"scope": 663,
									"src": "800:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "962:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:1"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "1002:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:1"
									},
									"scope": 663,
									"src": "943:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1251:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1263:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:1"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1297:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:1"
									},
									"scope": 663,
									"src": "1233:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1606:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1621:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:1"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1661:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:1"
									},
									"scope": 663,
									"src": "1587:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2373:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2407:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:1"
									},
									"scope": 663,
									"src": "2339:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2754:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2777:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2798:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:76:1"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2838:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2838:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:6:1"
									},
									"scope": 663,
									"src": "2722:122:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 664,
							"src": "210:2637:1"
						}
					],
					"src": "109:2740:1"
				},
				"id": 1
			},
			"ERC20/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:2"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 666,
							"nodeType": "ImportDirective",
							"scope": 689,
							"sourceUnit": 664,
							"src": "140:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 668,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "316:6:2"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "316:6:2"
								}
							],
							"contractDependencies": [
								663
							],
							"contractKind": "interface",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "166:120:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 688,
							"linearizedBaseContracts": [
								688,
								663
							],
							"name": "IERC20Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "330:56:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "431:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "431:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:15:2"
									},
									"scope": 688,
									"src": "392:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "454:58:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "559:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:15:2"
									},
									"scope": 688,
									"src": "518:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "582:67:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "698:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 684,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "698:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:7:2"
									},
									"scope": 688,
									"src": "655:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 689,
							"src": "288:420:2"
						}
					],
					"src": "113:597:2"
				},
				"id": 2
			},
			"Utils/Context.sol": {
				"ast": {
					"absolutePath": "Utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							710
						]
					},
					"id": 711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 691,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 710,
							"linearizedBaseContracts": [
								710
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "718:36:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 696,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 695,
												"id": 698,
												"nodeType": "Return",
												"src": "729:17:3"
											}
										]
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 710,
									"src": "656:98:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "829:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 705,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 704,
												"id": 707,
												"nodeType": "Return",
												"src": "840:15:3"
											}
										]
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:3"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "813:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 702,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:3"
									},
									"scope": 710,
									"src": "762:101:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 711,
							"src": "623:243:3"
						}
					],
					"src": "89:779:3"
				},
				"id": 3
			}
		}
	}
}