{
	"compiler": {
		"version": "0.8.5+commit.a4f2e591"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_presaleGenator",
						"type": "address"
					}
				],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "WETH",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "adminReceiveFee",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "backToken",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "buyerInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "baseDeposit",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenOwner",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastWithDraw",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalTokenWithDraw",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalBaseWithDraw",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkAdminAddress",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feeAnyone",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feeCreateSale",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_presaleOwner",
						"type": "address"
					},
					{
						"internalType": "contract ERC20",
						"name": "_saleToken",
						"type": "address"
					},
					{
						"internalType": "contract ERC20",
						"name": "_baseTOken",
						"type": "address"
					},
					{
						"internalType": "uint256[7]",
						"name": "datas",
						"type": "uint256[7]"
					},
					{
						"internalType": "uint256",
						"name": "_refundFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_claimFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_feeAnyone",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "_adminReceiveFee",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_feeCreateSale",
						"type": "uint256"
					}
				],
				"name": "initialSaleInfor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ownerClaimAndRefundToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "presaleGenator",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "presaleStatus",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalBaseCollected",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalTokenSold",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalTokenWithDraw",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalBaseWithDraw",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalTokenBackForAdmin",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalBaseBackForAdmin",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "numberBuyer",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isOwnerClaimSaleToken",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "isOwnerRefundBaseToken",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "saleInfor",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "presaleOwner",
						"type": "address"
					},
					{
						"internalType": "contract ERC20",
						"name": "saleToken",
						"type": "address"
					},
					{
						"internalType": "contract ERC20",
						"name": "baseToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "startSale",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endSale",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minSpendPerBuyer",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxSpendPerBuyer",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "refundFee",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "claimFee",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "saleIsBaseToken",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "amountTokenForSale",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "saleTotalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "hardCap",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "softCap",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "status",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "userClaimEmergency",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "isClaim",
						"type": "bool"
					}
				],
				"name": "userClaimOrRefundWhenSaleSuccess",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "userRefundEmergency",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Ethereum/Presale.sol": "Presale"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"ERC20/ERC20.sol": {
			"keccak256": "0x06de64a6e4f0f98aaf7bc91b3826b714e7ce7827a08da3031f8f2f91c14c5687",
			"license": "MIT",
			"urls": [
				"bzz-raw://79cb85a1ebbc907f8b80a26cfce98cd61eb1dfc5dbed47f2cc5f6e7a3e87d2db",
				"dweb:/ipfs/QmWzRXkG6oFwtNiGz98zduSDVYhnTKkCE5YMTVE15fBFse"
			]
		},
		"ERC20/IERC20.sol": {
			"keccak256": "0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1",
			"license": "MIT",
			"urls": [
				"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34",
				"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL"
			]
		},
		"ERC20/IERC20Metadata.sol": {
			"keccak256": "0x2095e6b6cd9fc67a55c1dce6c4a4282036fef487baf848e399adc2f571f6c47b",
			"license": "MIT",
			"urls": [
				"bzz-raw://bbdbc5c7af217e674e7c45ab729cf3ffe1c2756c4438e5818f39f30266b836e2",
				"dweb:/ipfs/QmPkmQQ6bAVYGRKR1KMqRhU1kPL49aFc5zqCLmJZEMsavE"
			]
		},
		"Ethereum/Presale.sol": {
			"keccak256": "0x844520c8561e6add24e1297fe44fdf68fe6c7a467d02676265797cbc032a5d6e",
			"license": "MIT",
			"urls": [
				"bzz-raw://b216c4d455daa2cde302145545728e00b4e2aa7791879be804d43a693b81ae95",
				"dweb:/ipfs/QmebjimxUPx8TMCvoaemBgqDPVbEjJg8We5nCotUdWRuvS"
			]
		},
		"Utils/Context.sol": {
			"keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
			"license": "MIT",
			"urls": [
				"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
				"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
			]
		},
		"Utils/EnumerableSet.sol": {
			"keccak256": "0x8adfeb5c886c6a727bdeac6db8e78f418e09f16f7c941c7111125b59ec2fd838",
			"license": "MIT",
			"urls": [
				"bzz-raw://632e2346228015ce98183a0f0658057a9f2ae8b8d25b639eb9303e8e0ea34957",
				"dweb:/ipfs/QmPY3nbe3JhMsgyHJTtXRkLTioW997Bvizt23mPNKKGSgu"
			]
		},
		"Utils/Ownable.sol": {
			"keccak256": "0x5eeb86897007c578f301464fceac720c7330486c54ae85c0c09068b46197cfb9",
			"license": "MIT",
			"urls": [
				"bzz-raw://edefd9ff4f087a3016763a687eaae449c0e8f6dcda9d86032a49de900f129050",
				"dweb:/ipfs/Qmc4adiPdGKgEJLxqgd8JuKkwrNBNtB78kkGinnnuUnyJN"
			]
		},
		"Utils/ReentrancyGuard.sol": {
			"keccak256": "0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df",
			"license": "MIT",
			"urls": [
				"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf",
				"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1"
			]
		},
		"Utils/SafeMath.sol": {
			"keccak256": "0xdc9b51d94a1db880c1f2e722af561c28c41100eea201b1ae5e77eb7c4250e389",
			"license": "MIT",
			"urls": [
				"bzz-raw://0b69f7fb378dcfd4aff8ba0547a575485d2d4bb567381e3bf8c593b63272ffc0",
				"dweb:/ipfs/QmaEo28ZDAnpDvpQRRt7Qc8bF5QgJAnTEE4TxYnJS8YmnN"
			]
		},
		"Utils/TransferHelper.sol": {
			"keccak256": "0xf64de8bda44d6e6a0ef231b637d0d6c78522fd561464c547eeca34f1a8e0482c",
			"license": "MIT",
			"urls": [
				"bzz-raw://d36e8e7a9c1c50e24298b33bbde7e9d74998b58c889b706c80f95d130952d9e7",
				"dweb:/ipfs/QmP5sAxCH4LFZFJ9uxtFdCdZ3DPJJfv1iU6cHY19urExxw"
			]
		}
	},
	"version": 1
}