{
	"id": "1ad336ac8ac150cf20ae8fb723998066",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.5",
	"solcLongVersion": "0.8.5+commit.a4f2e591",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ethereum/Generator.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../Utils/Ownable.sol\";\r\nimport \"../Utils/EnumerableSet.sol\";\r\nimport \"../ERC20/ERC20.sol\";\r\nimport \"./Presale.sol\";\r\nimport \"./PresaleSettings.sol\";\r\n\r\n\r\ncontract Generator is Ownable {\r\n    // struct PresaleParams {\r\n    //     uint256 tokenPrice;\r\n    //     uint256 startSale;\r\n    //     uint256 endSale;\r\n    //     uint256 minSpendPerBuyer;\r\n    //     uint256 maxSpendPerBuyer;\r\n    //     uint256 refundFee;\r\n    //     uint256 claimFee;\r\n    //     uint256 hardCap;\r\n    //     uint256 softCap;\r\n    //     address presaleOwner;\r\n    //     ERC20 saleToken;\r\n    //     ERC20 baseTOken;\r\n    //     uint256 feeAnyone;\r\n    //     address adminReceiveFee;\r\n    //     uint256 feeCre;\r\n    // }\r\n    PresaleSettings public presaleSettings;\r\n\r\n    constructor() public {\r\n        presaleSettings = PresaleSettings(0x354652D0E18dBC94A125b317b39E0505a3832790);\r\n    }\r\n\r\n    // function createPresale(\r\n    //     address payable _presaleOwner,\r\n    //     ERC20 _saleToken,\r\n    //     ERC20 _baseTOken,\r\n    //     uint256[9] memory datas\r\n    // ) public payable {\r\n    //     require(datas[0] > 0, \"Swap token must great then 0\");\r\n    //     require(datas[1] < datas[2], \"Start time less then end time\");\r\n    //     require(\r\n    //         msg.value == presaleSettings.getEthCreationFee(),\r\n    //         \"Fee not mapping\"\r\n    //     );\r\n    // }\r\n\r\n    function getFee() public view returns(uint256) {\r\n        return PresaleSettings(presaleSettings).getEthCreationFee();\r\n    }\r\n}"
			},
			"Ethereum/PresaleSettings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../Utils/Ownable.sol\";\r\nimport \"../Utils/EnumerableSet.sol\";\r\n\r\ncontract PresaleSettings is Ownable {\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n\r\n    struct Settings {\r\n        uint256 BASE_FEE; // base fee divided by 1000\r\n        uint256 TOKEN_FEE; // token fee divided by 1000\r\n        address payable ETH_FEE_ADDRESS;\r\n        address payable TOKEN_FEE_ADDRESS;\r\n        uint256 ETH_CREATION_FEE; // fee to generate a presale contract on the platform\r\n    }\r\n\r\n    Settings public SETTINGS;\r\n\r\n    constructor() {\r\n        SETTINGS.BASE_FEE = 50; // 5%\r\n        SETTINGS.TOKEN_FEE = 0; // 0%\r\n        SETTINGS.ETH_CREATION_FEE = 1 ether; //1 ETH\r\n        SETTINGS.ETH_FEE_ADDRESS = payable(_msgSender());\r\n        SETTINGS.TOKEN_FEE_ADDRESS = payable(_msgSender());\r\n    }\r\n\r\n    function getBaseFee() external view returns (uint256) {\r\n        return SETTINGS.BASE_FEE;\r\n    }\r\n\r\n    function getTokenFee() external view returns (uint256) {\r\n        return SETTINGS.TOKEN_FEE;\r\n    }\r\n\r\n    function getEthCreationFee() external view returns (uint256) {\r\n        return SETTINGS.ETH_CREATION_FEE;\r\n    }\r\n\r\n    function getEthAddress() external view returns (address payable) {\r\n        return SETTINGS.ETH_FEE_ADDRESS;\r\n    }\r\n\r\n    function getTokenAddress() external view returns (address payable) {\r\n        return SETTINGS.TOKEN_FEE_ADDRESS;\r\n    }\r\n\r\n    function setFeeAddresses(\r\n        address payable _ethAddress,\r\n        address payable _tokenFeeAddress\r\n    ) external onlyOwner {\r\n        SETTINGS.ETH_FEE_ADDRESS = _ethAddress;\r\n        SETTINGS.TOKEN_FEE_ADDRESS = _tokenFeeAddress;\r\n    }\r\n\r\n    function setFees(\r\n        uint256 _baseFee,\r\n        uint256 _tokenFee,\r\n        uint256 _ethCreationFee\r\n    ) external onlyOwner {\r\n        SETTINGS.BASE_FEE = _baseFee;\r\n        SETTINGS.TOKEN_FEE = _tokenFee;\r\n        SETTINGS.ETH_CREATION_FEE = _ethCreationFee;\r\n    }\r\n}\r\n"
			},
			"Ethereum/Presale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../ERC20/ERC20.sol\";\r\nimport \"../Utils/ReentrancyGuard.sol\";\r\nimport \"../Utils/TransferHelper.sol\";\r\nimport \"../Utils/EnumerableSet.sol\";\r\nimport \"../Utils/Ownable.sol\";\r\nimport \"../Utils/Context.sol\";\r\nimport \"../Utils/SafeMath.sol\";\r\n\r\n\r\n\r\ncontract Presale is ReentrancyGuard, Ownable{\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n    using SafeMath for uint256;\r\n\r\n    struct SaleInfor {\r\n        address payable presaleOwner;\r\n        ERC20 saleToken;\r\n        ERC20 baseToken;\r\n        uint256 tokenPrice;\r\n        uint256 startSale;\r\n        uint256 endSale;\r\n        uint256 minSpendPerBuyer;\r\n        uint256 maxSpendPerBuyer;\r\n        uint256 refundFee;\r\n        uint256 claimFee;\r\n        bool saleIsBaseToken;\r\n        uint256 amountTokenForSale;\r\n    }\r\n    \r\n    struct SaleTotalSupply {\r\n        uint256 hardCap;\r\n        uint256 softCap;\r\n    }\r\n\r\n    struct BuyerInfo {\r\n        uint256 baseDeposit;\r\n        uint256 tokenOwner;\r\n        uint256 lastWithDraw;\r\n        uint256 totalTokenWithDraw;\r\n        uint256 totalBaseWithDraw;\r\n    }\r\n\r\n    struct PresaleStatus {\r\n        uint256 totalBaseCollected;\r\n        uint256 totalTokenSold;\r\n        uint256 totalTokenWithDraw;\r\n        uint256 totalBaseWithDraw;\r\n        uint256 totalTokenBackForAdmin;\r\n        uint256 totalBaseBackForAdmin;\r\n        uint256 numberBuyer;\r\n        bool isOwnerClaimSaleToken;\r\n        bool isOwnerRefundBaseToken;\r\n        address[] admin;\r\n    }\r\n    \r\n    mapping(address => BuyerInfo) public buyerInfo;\r\n    mapping(address => uint256) public userFee;\r\n    PresaleStatus public presaleStatus;\r\n    SaleTotalSupply public saleTotalSupply;\r\n    SaleInfor public saleInfor;\r\n    IERC20 public WETH;\r\n    EnumerableSet.AddressSet private admins; \r\n    uint256 public totalFee;\r\n    uint256 public feeAnyone;\r\n    address public adminReceiveFee; \r\n    uint256 public feeCreateSale;\r\n\r\n\r\n    modifier onlyAdmin() {\r\n        require(admins.contains(_msgSender()), \"Not admin\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyPresaleOwner() {\r\n        require(_msgSender() == saleInfor.presaleOwner, \"Only presale owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlySaleOwner() {\r\n        require(_msgSender() == saleInfor.presaleOwner, \"Not sale owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() payable {\r\n        WETH = ERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab);\r\n        admins.add(0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD);\r\n        admins.add(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016);\r\n    }\r\n\r\n    function initialSaleInfor(\r\n        address payable _presaleOwner,\r\n        ERC20 _saleToken,\r\n        ERC20 _baseTOken,\r\n        uint256[9] memory datas,\r\n        uint256 _feeAnyone,\r\n        address payable _adminReceiveFee,\r\n        uint256 _feeCreateSale\r\n    ) external {\r\n        saleInfor.presaleOwner = _presaleOwner;\r\n        saleInfor.saleToken = _saleToken;\r\n        saleInfor.baseToken = _baseTOken;\r\n        saleInfor.tokenPrice = datas[0] * 10** uint256(ERC20(saleInfor.saleToken).decimals());\r\n        saleInfor.startSale = datas[1];\r\n        saleInfor.endSale = datas[2];\r\n        saleInfor.minSpendPerBuyer = datas[3];\r\n        saleInfor.maxSpendPerBuyer = datas[4] * 10 ** uint256(ERC20(saleInfor.baseToken).decimals());\r\n        saleInfor.refundFee = datas[5];\r\n        saleInfor.claimFee = datas[6];\r\n        saleTotalSupply.hardCap = datas[7] * 10 ** uint256(ERC20(saleInfor.baseToken).decimals());\r\n        saleTotalSupply.softCap = datas[8] * 10** uint256(ERC20(saleInfor.baseToken).decimals());\r\n        saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken);\r\n        saleInfor.amountTokenForSale = saleInfor.tokenPrice.mul(saleTotalSupply.hardCap)/\r\n                                       (10** uint256(ERC20(saleInfor.baseToken).decimals()));\r\n        feeAnyone = _feeAnyone;\r\n        adminReceiveFee = _adminReceiveFee;\r\n        feeCreateSale = _feeCreateSale;\r\n\r\n    } \r\n\r\n    function status() public view returns(uint256) {\r\n        if(block.timestamp < saleInfor.startSale) {\r\n            return 0; // Not Active\r\n        }else{\r\n            if(block.timestamp > saleInfor.endSale) {\r\n                return 2; // Suceess\r\n            }else{\r\n                return 1; // Active\r\n            }\r\n        }\r\n    } \r\n\r\n    function checkAdminAddress() public view returns(bool) {\r\n        return admins.contains(_msgSender());\r\n    }\r\n\r\n    function deposit(uint256 _amount) external payable nonReentrant {\r\n        // require(status() == 1, \"Not active\"); // ACTIVE\r\n        BuyerInfo storage buyer = buyerInfo[msg.sender];\r\n        uint256 amount_in = _amount;\r\n        uint256 real_amount_in = amount_in;\r\n        uint256 fee = 0;\r\n        uint256 fullPercenFee = 1000;\r\n        require(msg.value >= real_amount_in, \"Please provide navite coin\");\r\n        require(real_amount_in >= saleInfor.minSpendPerBuyer, \r\n                \"Not enough value\"\r\n        );\r\n        require(real_amount_in <= saleInfor.maxSpendPerBuyer, \r\n                \"Overflow value\"\r\n        );\r\n        if(!checkAdminAddress()) {\r\n            real_amount_in = ((fullPercenFee.sub(feeAnyone))\r\n                             .mul(real_amount_in))\r\n                             .div(fullPercenFee);\r\n            fee = amount_in - real_amount_in;                 \r\n        }\r\n        uint256 remainingByUser = saleInfor.maxSpendPerBuyer - buyer.baseDeposit;\r\n        uint256 remainingByPool = saleInfor.amountTokenForSale - presaleStatus.totalBaseCollected;\r\n        uint256 allowance = remainingByUser > remainingByPool ? remainingByPool : remainingByUser;\r\n        require(real_amount_in <= allowance, \"Sale is success\");\r\n        uint256 tokenSold = (real_amount_in.\r\n                            mul(saleInfor.tokenPrice).\r\n                            div(10 ** uint256(ERC20(saleInfor.baseToken).decimals())));                 \r\n        buyer.baseDeposit += real_amount_in;\r\n        buyer.tokenOwner += tokenSold;\r\n        presaleStatus.totalBaseCollected += real_amount_in;\r\n        presaleStatus.totalTokenSold += tokenSold;\r\n        presaleStatus.numberBuyer++;\r\n        userFee[msg.sender] += fee;\r\n        totalFee += fee;  \r\n        if(saleInfor.saleIsBaseToken && real_amount_in + fee <= msg.value) {\r\n            payable(msg.sender).transfer(msg.value - real_amount_in - fee);\r\n        } \r\n        if(!saleInfor.saleIsBaseToken) {\r\n            TransferHelper.safeTransferFrom(\r\n                address(saleInfor.baseToken),\r\n                msg.sender,\r\n                address(this),\r\n                real_amount_in + fee\r\n            );\r\n        }            \r\n    }\r\n\r\n    function userClaimEmergency() external nonReentrant {\r\n        // require(status() == 1, \"Sale sucesss\"); \r\n        require(presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw > 0, \r\n               \"All token has been withdraw\"\r\n        );\r\n        BuyerInfo storage buyer = buyerInfo[msg.sender];\r\n        require(buyer.tokenOwner > 0, \"You have not bought yet\");\r\n        require(buyer.tokenOwner > buyer.totalTokenWithDraw, \"You claim alll\");\r\n        uint256 amountClaim = ((uint256(1000).sub(saleInfor.claimFee))\r\n                         .mul(buyer.tokenOwner))\r\n                         .div(uint256(1000));\r\n        presaleStatus.totalTokenWithDraw += amountClaim;\r\n        saleInfor.amountTokenForSale -= amountClaim;\r\n        buyer.totalTokenWithDraw += amountClaim;\r\n        buyer.lastWithDraw = block.timestamp;\r\n        presaleStatus.totalBaseBackForAdmin += buyer.baseDeposit-buyer.totalBaseWithDraw;\r\n        ERC20(saleInfor.saleToken).transfer(msg.sender, amountClaim);\r\n    }\r\n\r\n    function userRefundEmergency() external nonReentrant {\r\n        // require(status() == 1, \"Sale sucesss\");\r\n        require(presaleStatus.totalBaseCollected - presaleStatus.totalBaseWithDraw > 0, \r\n               \"All token has been withdraw\"\r\n        ); \r\n        BuyerInfo storage buyer = buyerInfo[msg.sender];\r\n        require(buyer.baseDeposit > 0, \"You have not bought yet\");\r\n        require(buyer.baseDeposit > buyer.totalBaseWithDraw, \"You refund all\");\r\n        uint256 amountRefund = ((uint256(1000).sub(saleInfor.refundFee))\r\n                               .mul(buyer.baseDeposit))\r\n                               .div(uint256(1000));\r\n        totalFee += buyer.baseDeposit - amountRefund;\r\n        presaleStatus.totalBaseWithDraw += amountRefund;\r\n        buyer.totalBaseWithDraw += amountRefund;\r\n        buyer.lastWithDraw = block.timestamp;\r\n        presaleStatus.totalTokenBackForAdmin += buyer.tokenOwner - buyer.totalTokenWithDraw ;\r\n        payable(msg.sender).transfer(amountRefund);\r\n    }\r\n\r\n    function ownerClaimAndRefundToken() external onlyPresaleOwner nonReentrant{\r\n        // require(status() == 2, \"Sale not yet sucesss\");\r\n        uint256 amountOwnerClaimToken = ERC20(saleInfor.saleToken).balanceOf(address(this)); \r\n        uint256 amountOwnerRefundNativeCoin = (presaleStatus.totalBaseCollected\r\n                                               .sub(presaleStatus.totalTokenBackForAdmin\r\n                                               ));\r\n        if(presaleStatus.totalBaseCollected != 0){\r\n            amountOwnerClaimToken = amountOwnerClaimToken\r\n                                    .sub(presaleStatus.totalTokenSold\r\n                                    .sub(presaleStatus.totalTokenBackForAdmin));                  \r\n        }\r\n        require(!presaleStatus.isOwnerClaimSaleToken, \"Nothing for owner claim token\");\r\n        require(!presaleStatus.isOwnerRefundBaseToken, \"Nothing for owner refund token\");\r\n        presaleStatus.isOwnerClaimSaleToken = true;\r\n        saleInfor.amountTokenForSale = 0;\r\n        ERC20(saleInfor.saleToken).transfer(saleInfor.presaleOwner, amountOwnerClaimToken);\r\n        payable(saleInfor.presaleOwner).transfer(amountOwnerRefundNativeCoin);\r\n    }\r\n\r\n    function userClaimOrRefundWhenSaleSuccess(bool isClaim) external {\r\n        // require(status() == 2, \"Sale not yet sucesss\"); \r\n        if(isClaim){\r\n            require(presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw > 0, \r\n                \"All token has been withdraw\"\r\n            );\r\n            BuyerInfo storage buyer = buyerInfo[msg.sender];\r\n            require(buyer.tokenOwner > buyer.totalTokenWithDraw, \"You claim all or have not bought yet\");\r\n            ERC20(saleInfor.saleToken).transfer(msg.sender, buyer.tokenOwner);\r\n            presaleStatus.totalTokenWithDraw += buyer.tokenOwner;\r\n            saleInfor.amountTokenForSale -= buyer.tokenOwner;\r\n            buyer.totalTokenWithDraw += buyer.tokenOwner;\r\n            buyer.baseDeposit = 0;\r\n            buyer.tokenOwner = 0;\r\n            buyer.lastWithDraw = block.timestamp;\r\n            \r\n        }else{\r\n            require(presaleStatus.totalBaseCollected - presaleStatus.totalBaseWithDraw > 0, \r\n                \"All token has been withdraw\"\r\n            ); \r\n            BuyerInfo storage buyer = buyerInfo[msg.sender];\r\n            require(buyer.baseDeposit > 0, \"You refund all or have not bought yet\");\r\n            uint256 amountRefund = buyer.baseDeposit;\r\n            totalFee += buyer.baseDeposit - amountRefund;\r\n            presaleStatus.totalBaseWithDraw += amountRefund;\r\n            buyer.baseDeposit  = 0;\r\n            buyer.tokenOwner = 0;\r\n            buyer.lastWithDraw = block.timestamp;\r\n            payable(msg.sender).transfer(amountRefund);\r\n        }\r\n    }\r\n\r\n    function getBalance(address _address) external view returns(uint256) {\r\n        return _address.balance;\r\n    }\r\n   \r\n    function backToken() external payable {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n}"
			},
			"ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./IERC20Metadata.sol\";\r\nimport \"../Utils/Context.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *z\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint256) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n        }\r\n        _balances[to] += amount;\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}"
			},
			"Utils/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/structs/EnumerableSet.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for managing\r\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\r\n * types.\r\n *\r\n * Sets have the following properties:\r\n *\r\n * - Elements are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableSet for EnumerableSet.AddressSet;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableSet.AddressSet private mySet;\r\n * }\r\n * ```\r\n *\r\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\r\n * and `uint256` (`UintSet`) are supported.\r\n *\r\n * [WARNING]\r\n * ====\r\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\r\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\r\n *\r\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\r\n * ====\r\n */\r\nlibrary EnumerableSet {\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Set type with\r\n    // bytes32 values.\r\n    // The Set implementation uses private functions, and user-facing\r\n    // implementations (such as AddressSet) are just wrappers around the\r\n    // underlying Set.\r\n    // This means that we can only create new EnumerableSets for types that fit\r\n    // in bytes32.\r\n\r\n    struct Set {\r\n        // Storage of set values\r\n        bytes32[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function _add(Set storage set, bytes32 value) private returns (bool) {\r\n        if (!_contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            if (lastIndex != toDeleteIndex) {\r\n                bytes32 lastValue = set._values[lastIndex];\r\n\r\n                // Move the last value to the index where the value to delete is\r\n                set._values[toDeleteIndex] = lastValue;\r\n                // Update the index for the moved value\r\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\r\n            }\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function _length(Set storage set) private view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\r\n        return set._values[index];\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function _values(Set storage set) private view returns (bytes32[] memory) {\r\n        return set._values;\r\n    }\r\n\r\n    // Bytes32Set\r\n\r\n    struct Bytes32Set {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _add(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _remove(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\r\n        return _contains(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(Bytes32Set storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\r\n        return _at(set._inner, index);\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\r\n        return _values(set._inner);\r\n    }\r\n\r\n    // AddressSet\r\n\r\n    struct AddressSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return address(uint160(uint256(_at(set._inner, index))));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(AddressSet storage set) internal view returns (address[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        address[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // UintSet\r\n\r\n    struct UintSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function length(UintSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\r\n        return uint256(_at(set._inner, index));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        uint256[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n}"
			},
			"Utils/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"Utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"Utils/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}"
			},
			"Utils/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n    helper methods for interacting with ERC20 tokens that do not consistently return true/false\r\n    with the addition of a transfer function to send eth or an erc20 token\r\n*/\r\nlibrary TransferHelper {\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x095ea7b3, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: APPROVE_FAILED\"\r\n        );\r\n    }\r\n \r\n    function safeTransfer(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0xa9059cbb, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FAILED\"\r\n        );\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FROM_FAILED\"\r\n        );\r\n    }\r\n\r\n    // sends ETH or an erc20 token\r\n    function safeTransferBaseToken(\r\n        address token,\r\n        address payable to,\r\n        uint256 value,\r\n        bool isERC20\r\n    ) internal {\r\n        if (!isERC20) {\r\n            to.transfer(value);\r\n        } else {\r\n            (bool success, bytes memory data) = token.call(\r\n                abi.encodeWithSelector(0xa9059cbb, to, value)\r\n            );\r\n            require(\r\n                success && (data.length == 0 || abi.decode(data, (bool))),\r\n                \"TransferHelper: TRANSFER_FAILED\"\r\n            );\r\n        }\r\n    }\r\n}\r\n"
			},
			"Utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}"
			},
			"ERC20/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint256);\r\n}\r\n"
			},
			"ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    \r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. z This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20/ERC20.sol\":1424:12997  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  mstore(0x40, 0x80)\n    /* \"ERC20/ERC20.sol\":2018:2134  constructor(string memory name_, string memory symbol_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC20/ERC20.sol\":2085:2098  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"ERC20/ERC20.sol\":2085:2090  _name */\n  0x03\n  swap1\n    /* \"ERC20/ERC20.sol\":2085:2098  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ERC20/ERC20.sol\":2109:2126  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"ERC20/ERC20.sol\":2109:2116  _symbol */\n  0x04\n  swap1\n    /* \"ERC20/ERC20.sol\":2109:2126  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC20/ERC20.sol\":2018:2134  constructor(string memory name_, string memory symbol_) {\r... */\n  pop\n  pop\n    /* \"ERC20/ERC20.sol\":1424:12997  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:90   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:90   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:223   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:406   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:568   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:568   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:791   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:791   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":78:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1034   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1034   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1171   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1171   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1344   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1344   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1022:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1616   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1616   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1686   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1686   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1526:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1888:1983   */\ntag_21:\n    /* \"ERC20/ERC20.sol\":1424:12997  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20/ERC20.sol\":1424:12997  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20/ERC20.sol\":2204:2304  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1405:1419   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1398:1420   */\n      iszero\n        /* \"#utility.yul\":1380:1421   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1368:1370   */\n      0x20\n        /* \"#utility.yul\":1353:1371   */\n      add\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      tag_17\n        /* \"#utility.yul\":1335:1427   */\n      jump\n        /* \"ERC20/ERC20.sol\":3326:3434  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n        /* \"ERC20/ERC20.sol\":3414:3426  _totalSupply */\n      sload(0x02)\n        /* \"ERC20/ERC20.sol\":3326:3434  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":4969:4994   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"ERC20/ERC20.sol\":3326:3434  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_17\n        /* \"#utility.yul\":4924:5000   */\n      jump\n        /* \"ERC20/ERC20.sol\":5338:5633  function transferFrom(\r... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3166:3261  function decimals() public view virtual override returns (uint256) {\r... */\n    tag_7:\n        /* \"ERC20/ERC20.sol\":3251:3253  18 */\n      0x12\n        /* \"ERC20/ERC20.sol\":3166:3261  function decimals() public view virtual override returns (uint256) {\r... */\n      jump(tag_25)\n        /* \"ERC20/ERC20.sol\":6042:6280  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_8:\n      tag_19\n      tag_38\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3497:3624  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n    tag_9:\n      tag_25\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":3598:3616  _balances[account] */\n      and\n        /* \"ERC20/ERC20.sol\":3571:3578  uint256 */\n      0x00\n        /* \"ERC20/ERC20.sol\":3598:3616  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20/ERC20.sol\":3497:3624  function balanceOf(address account) public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"ERC20/ERC20.sol\":2423:2527  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_10:\n      tag_15\n      tag_47\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":6783:7219  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_11:\n      tag_19\n      tag_50\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3830:4023  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_12:\n      tag_19\n      tag_54\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":4086:4237  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_13:\n      tag_25\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":2204:2304  function name() public view virtual override returns (string memory) {\r... */\n    tag_16:\n        /* \"ERC20/ERC20.sol\":2258:2271  string memory */\n      0x60\n        /* \"ERC20/ERC20.sol\":2291:2296  _name */\n      0x03\n        /* \"ERC20/ERC20.sol\":2284:2296  return _name */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":2204:2304  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_22:\n        /* \"ERC20/ERC20.sol\":4640:4644  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":4696:4728  _approve(owner, spender, amount) */\n      tag_72\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"ERC20/ERC20.sol\":4712:4719  spender */\n      dup6\n        /* \"ERC20/ERC20.sol\":4721:4727  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":4696:4704  _approve */\n      tag_73\n        /* \"ERC20/ERC20.sol\":4696:4728  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_72:\n      pop\n        /* \"ERC20/ERC20.sol\":4746:4750  true */\n      0x01\n      swap4\n        /* \"ERC20/ERC20.sol\":4557:4758  function approve(address spender, uint256 amount) public virtual override returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":5338:5633  function transferFrom(\r... */\n    tag_32:\n        /* \"ERC20/ERC20.sol\":5469:5473  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":5527:5565  _spendAllowance(from, spender, amount) */\n      tag_77\n        /* \"ERC20/ERC20.sol\":5543:5547  from */\n      dup6\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup3\n        /* \"ERC20/ERC20.sol\":5558:5564  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":5527:5542  _spendAllowance */\n      tag_78\n        /* \"ERC20/ERC20.sol\":5527:5565  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_77:\n        /* \"ERC20/ERC20.sol\":5576:5603  _transfer(from, to, amount) */\n      tag_79\n        /* \"ERC20/ERC20.sol\":5586:5590  from */\n      dup6\n        /* \"ERC20/ERC20.sol\":5592:5594  to */\n      dup6\n        /* \"ERC20/ERC20.sol\":5596:5602  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":5576:5585  _transfer */\n      tag_80\n        /* \"ERC20/ERC20.sol\":5576:5603  _transfer(from, to, amount) */\n      jump\t// in\n    tag_79:\n      pop\n        /* \"ERC20/ERC20.sol\":5621:5625  true */\n      0x01\n      swap5\n        /* \"ERC20/ERC20.sol\":5338:5633  function transferFrom(\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":6042:6280  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r... */\n    tag_39:\n        /* \"ERC20/ERC20.sol\":6130:6134  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":6186:6250  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_72\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"ERC20/ERC20.sol\":6202:6209  spender */\n      dup6\n        /* \"ERC20/ERC20.sol\":6239:6249  addedValue */\n      dup6\n        /* \"ERC20/ERC20.sol\":6211:6236  allowance(owner, spender) */\n      tag_85\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup4\n        /* \"ERC20/ERC20.sol\":6202:6209  spender */\n      dup4\n        /* \"ERC20/ERC20.sol\":6211:6220  allowance */\n      tag_60\n        /* \"ERC20/ERC20.sol\":6211:6236  allowance(owner, spender) */\n      jump\t// in\n    tag_85:\n        /* \"ERC20/ERC20.sol\":6211:6249  allowance(owner, spender) + addedValue */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"ERC20/ERC20.sol\":6186:6194  _approve */\n      tag_73\n        /* \"ERC20/ERC20.sol\":6186:6250  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":2423:2527  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_47:\n        /* \"ERC20/ERC20.sol\":2479:2492  string memory */\n      0x60\n        /* \"ERC20/ERC20.sol\":2512:2519  _symbol */\n      0x04\n        /* \"ERC20/ERC20.sol\":2505:2519  return _symbol */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":6783:7219  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r... */\n    tag_51:\n        /* \"ERC20/ERC20.sol\":6876:6880  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":6876:6880  bool */\n      dup2\n        /* \"ERC20/ERC20.sol\":6959:6984  allowance(owner, spender) */\n      tag_97\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup3\n        /* \"ERC20/ERC20.sol\":6976:6983  spender */\n      dup7\n        /* \"ERC20/ERC20.sol\":6959:6968  allowance */\n      tag_60\n        /* \"ERC20/ERC20.sol\":6959:6984  allowance(owner, spender) */\n      jump\t// in\n    tag_97:\n        /* \"ERC20/ERC20.sol\":6932:6984  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"ERC20/ERC20.sol\":7023:7038  subtractedValue */\n      dup4\n        /* \"ERC20/ERC20.sol\":7003:7019  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":7003:7038  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":6995:7080  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4619:4621   */\n      0x20\n        /* \"ERC20/ERC20.sol\":6995:7080  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4601:4622   */\n      mstore\n        /* \"#utility.yul\":4658:4660   */\n      0x25\n        /* \"#utility.yul\":4638:4656   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4631:4661   */\n      mstore\n        /* \"#utility.yul\":4697:4731   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4677:4695   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4670:4732   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4748:4766   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4741:4776   */\n      mstore\n        /* \"#utility.yul\":4793:4812   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":6995:7080  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"ERC20/ERC20.sol\":7116:7176  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_79\n        /* \"ERC20/ERC20.sol\":7125:7130  owner */\n      dup3\n        /* \"ERC20/ERC20.sol\":7132:7139  spender */\n      dup7\n        /* \"ERC20/ERC20.sol\":7160:7175  subtractedValue */\n      dup7\n        /* \"ERC20/ERC20.sol\":7141:7157  currentAllowance */\n      dup5\n        /* \"ERC20/ERC20.sol\":7141:7175  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20/ERC20.sol\":7116:7124  _approve */\n      tag_73\n        /* \"ERC20/ERC20.sol\":7116:7176  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":3830:4023  function transfer(address to, uint256 amount) public virtual override returns (bool) {\r... */\n    tag_55:\n        /* \"ERC20/ERC20.sol\":3909:3913  bool */\n      0x00\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"ERC20/ERC20.sol\":3965:3993  _transfer(owner, to, amount) */\n      tag_72\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      dup2\n        /* \"ERC20/ERC20.sol\":3982:3984  to */\n      dup6\n        /* \"ERC20/ERC20.sol\":3986:3992  amount */\n      dup6\n        /* \"ERC20/ERC20.sol\":3965:3974  _transfer */\n      tag_80\n        /* \"ERC20/ERC20.sol\":3965:3993  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"ERC20/ERC20.sol\":4086:4237  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":4202:4220  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":4175:4182  uint256 */\n      0x00\n        /* \"ERC20/ERC20.sol\":4202:4220  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20/ERC20.sol\":4202:4213  _allowances */\n      0x01\n        /* \"ERC20/ERC20.sol\":4202:4220  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20/ERC20.sol\":4202:4229  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20/ERC20.sol\":4086:4237  function allowance(address owner, address spender) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":10417:10797  function _approve(\r... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":10553:10572  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4196:4217   */\n      mstore\n        /* \"#utility.yul\":4253:4255   */\n      0x24\n        /* \"#utility.yul\":4233:4251   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4226:4256   */\n      mstore\n        /* \"#utility.yul\":4292:4326   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4272:4290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4265:4327   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4343:4361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4336:4370   */\n      mstore\n        /* \"#utility.yul\":4387:4406   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_99\n        /* \"#utility.yul\":4186:4412   */\n      jump\n        /* \"ERC20/ERC20.sol\":10545:10613  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":10632:10653  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2640:2642   */\n      0x20\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2622:2643   */\n      mstore\n        /* \"#utility.yul\":2679:2681   */\n      0x22\n        /* \"#utility.yul\":2659:2677   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2652:2682   */\n      mstore\n        /* \"#utility.yul\":2718:2752   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2698:2716   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2691:2753   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2769:2787   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2762:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2830   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_99\n        /* \"#utility.yul\":2612:2836   */\n      jump\n        /* \"ERC20/ERC20.sol\":10624:10692  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":10705:10723  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20/ERC20.sol\":10705:10716  _allowances */\n      0x01\n        /* \"ERC20/ERC20.sol\":10705:10723  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20/ERC20.sol\":10705:10732  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20/ERC20.sol\":10705:10741  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20/ERC20.sol\":10757:10789  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":4969:4994   */\n      dup5\n      dup2\n      mstore\n        /* \"ERC20/ERC20.sol\":10757:10789  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4942:4960   */\n      add\n        /* \"ERC20/ERC20.sol\":10757:10789  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20/ERC20.sol\":10417:10797  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":11088:11541  function _spendAllowance(\r... */\n    tag_78:\n        /* \"ERC20/ERC20.sol\":11223:11247  uint256 currentAllowance */\n      0x00\n        /* \"ERC20/ERC20.sol\":11250:11275  allowance(owner, spender) */\n      tag_116\n        /* \"ERC20/ERC20.sol\":11260:11265  owner */\n      dup5\n        /* \"ERC20/ERC20.sol\":11267:11274  spender */\n      dup5\n        /* \"ERC20/ERC20.sol\":11250:11259  allowance */\n      tag_60\n        /* \"ERC20/ERC20.sol\":11250:11275  allowance(owner, spender) */\n      jump\t// in\n    tag_116:\n        /* \"ERC20/ERC20.sol\":11223:11275  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"ERC20/ERC20.sol\":11290:11306  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":11290:11327  currentAllowance != type(uint256).max */\n      eq\n        /* \"ERC20/ERC20.sol\":11286:11534  if (currentAllowance != type(uint256).max) {\r... */\n      tag_121\n      jumpi\n        /* \"ERC20/ERC20.sol\":11372:11378  amount */\n      dup2\n        /* \"ERC20/ERC20.sol\":11352:11368  currentAllowance */\n      dup2\n        /* \"ERC20/ERC20.sol\":11352:11378  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3025:3046   */\n      mstore\n        /* \"#utility.yul\":3082:3084   */\n      0x1d\n        /* \"#utility.yul\":3062:3080   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3055:3085   */\n      mstore\n        /* \"#utility.yul\":3121:3152   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3101:3119   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3094:3153   */\n      mstore\n        /* \"#utility.yul\":3170:3188   */\n      0x64\n      add\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_99\n        /* \"#utility.yul\":3015:3194   */\n      jump\n        /* \"ERC20/ERC20.sol\":11344:11412  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_118:\n        /* \"ERC20/ERC20.sol\":11456:11507  _approve(owner, spender, currentAllowance - amount) */\n      tag_121\n        /* \"ERC20/ERC20.sol\":11465:11470  owner */\n      dup5\n        /* \"ERC20/ERC20.sol\":11472:11479  spender */\n      dup5\n        /* \"ERC20/ERC20.sol\":11500:11506  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":11481:11497  currentAllowance */\n      dup5\n        /* \"ERC20/ERC20.sol\":11481:11506  currentAllowance - amount */\n      sub\n        /* \"ERC20/ERC20.sol\":11456:11464  _approve */\n      tag_73\n        /* \"ERC20/ERC20.sol\":11456:11507  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_121:\n        /* \"ERC20/ERC20.sol\":11212:11541  {\r... */\n      pop\n        /* \"ERC20/ERC20.sol\":11088:11541  function _spendAllowance(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20/ERC20.sol\":7698:8369  function _transfer(\r... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":7829:7847  from != address(0) */\n      dup4\n      and\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3808:3810   */\n      0x20\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3790:3811   */\n      mstore\n        /* \"#utility.yul\":3847:3849   */\n      0x25\n        /* \"#utility.yul\":3827:3845   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3820:3850   */\n      mstore\n        /* \"#utility.yul\":3886:3920   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3866:3884   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3859:3921   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3937:3955   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3930:3965   */\n      mstore\n        /* \"#utility.yul\":3982:4001   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_99\n        /* \"#utility.yul\":3780:4007   */\n      jump\n        /* \"ERC20/ERC20.sol\":7821:7889  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":7908:7924  to != address(0) */\n      dup3\n      and\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2236:2238   */\n      0x20\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2218:2239   */\n      mstore\n        /* \"#utility.yul\":2275:2277   */\n      0x23\n        /* \"#utility.yul\":2255:2273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2248:2278   */\n      mstore\n        /* \"#utility.yul\":2314:2348   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2294:2312   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2287:2349   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2365:2383   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2358:2391   */\n      mstore\n        /* \"#utility.yul\":2408:2427   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_99\n        /* \"#utility.yul\":2208:2433   */\n      jump\n        /* \"ERC20/ERC20.sol\":7900:7964  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8050:8065  _balances[from] */\n      dup4\n      and\n        /* \"ERC20/ERC20.sol\":8028:8047  uint256 fromBalance */\n      0x00\n        /* \"ERC20/ERC20.sol\":8050:8065  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20/ERC20.sol\":8084:8105  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3401:3403   */\n      0x20\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3383:3404   */\n      mstore\n        /* \"#utility.yul\":3440:3442   */\n      0x26\n        /* \"#utility.yul\":3420:3438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3413:3443   */\n      mstore\n        /* \"#utility.yul\":3479:3513   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3459:3477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3452:3514   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3530:3548   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3523:3559   */\n      mstore\n        /* \"#utility.yul\":3576:3595   */\n      0x84\n      add\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_99\n        /* \"#utility.yul\":3373:3601   */\n      jump\n        /* \"ERC20/ERC20.sol\":8076:8148  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8184:8199  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"ERC20/ERC20.sol\":8184:8193  _balances */\n      0x00\n        /* \"ERC20/ERC20.sol\":8184:8199  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20/ERC20.sol\":8202:8222  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"ERC20/ERC20.sol\":8184:8222  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"ERC20/ERC20.sol\":8244:8257  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20/ERC20.sol\":8244:8267  _balances[to] += amount */\n      dup1\n      sload\n        /* \"ERC20/ERC20.sol\":8216:8222  amount */\n      dup5\n      swap3\n        /* \"ERC20/ERC20.sol\":8184:8193  _balances */\n      swap1\n        /* \"ERC20/ERC20.sol\":8244:8267  _balances[to] += amount */\n      tag_134\n      swap1\n        /* \"ERC20/ERC20.sol\":8216:8222  amount */\n      dup5\n      swap1\n        /* \"ERC20/ERC20.sol\":8244:8267  _balances[to] += amount */\n      tag_87\n      jump\t// in\n    tag_134:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20/ERC20.sol\":8300:8302  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n      and\n        /* \"ERC20/ERC20.sol\":8294:8298  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20/ERC20.sol\":8304:8310  amount */\n      dup5\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_135\n      swap2\n        /* \"#utility.yul\":4969:4994   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4957:4959   */\n      0x20\n        /* \"#utility.yul\":4942:4960   */\n      add\n      swap1\n        /* \"#utility.yul\":4924:5000   */\n      jump\n        /* \"ERC20/ERC20.sol\":8285:8311  Transfer(from, to, amount) */\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20/ERC20.sol\":8324:8361  _afterTokenTransfer(from, to, amount) */\n      tag_121\n        /* \"ERC20/ERC20.sol\":12141:12266  function _beforeTokenTransfer(\r... */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_141:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_143:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_43:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_145:\n        /* \"#utility.yul\":343:372   */\n      tag_146\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_141\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":262:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:643   */\n    tag_59:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:482   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:482   */\n    tag_148:\n        /* \"#utility.yul\":551:580   */\n      tag_149\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_141\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_150\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_141\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":470:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_31:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:764   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:764   */\n    tag_152:\n        /* \"#utility.yul\":833:862   */\n      tag_153\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_141\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_154\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_141\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":752:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_21:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1080   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1080   */\n    tag_156:\n        /* \"#utility.yul\":1149:1178   */\n      tag_157\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1068:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1432:2029   */\n    tag_18:\n        /* \"#utility.yul\":1544:1548   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x20\n        /* \"#utility.yul\":1602:1604   */\n      dup1\n        /* \"#utility.yul\":1591:1600   */\n      dup4\n        /* \"#utility.yul\":1584:1605   */\n      mstore\n        /* \"#utility.yul\":1634:1640   */\n      dup4\n        /* \"#utility.yul\":1628:1641   */\n      mload\n        /* \"#utility.yul\":1677:1683   */\n      dup1\n        /* \"#utility.yul\":1672:1674   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup6\n        /* \"#utility.yul\":1657:1675   */\n      add\n        /* \"#utility.yul\":1650:1684   */\n      mstore\n        /* \"#utility.yul\":1702:1703   */\n      0x00\n        /* \"#utility.yul\":1712:1852   */\n    tag_160:\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1723:1724   */\n      dup2\n        /* \"#utility.yul\":1720:1733   */\n      lt\n        /* \"#utility.yul\":1712:1852   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1821:1835   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1817:1840   */\n      dup4\n      add\n        /* \"#utility.yul\":1811:1841   */\n      mload\n        /* \"#utility.yul\":1787:1804   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1806:1808   */\n      0x40\n        /* \"#utility.yul\":1783:1809   */\n      add\n        /* \"#utility.yul\":1776:1842   */\n      mstore\n        /* \"#utility.yul\":1741:1751   */\n      dup3\n      add\n        /* \"#utility.yul\":1712:1852   */\n      jump(tag_160)\n    tag_162:\n        /* \"#utility.yul\":1870:1876   */\n      dup2\n        /* \"#utility.yul\":1867:1868   */\n      dup2\n        /* \"#utility.yul\":1864:1877   */\n      gt\n        /* \"#utility.yul\":1861:1863   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1935:1937   */\n      0x40\n        /* \"#utility.yul\":1926:1932   */\n      dup4\n        /* \"#utility.yul\":1915:1924   */\n      dup8\n        /* \"#utility.yul\":1911:1933   */\n      add\n        /* \"#utility.yul\":1907:1938   */\n      add\n        /* \"#utility.yul\":1900:1942   */\n      mstore\n        /* \"#utility.yul\":1861:1863   */\n    tag_163:\n      pop\n        /* \"#utility.yul\":2013:2015   */\n      0x1f\n        /* \"#utility.yul\":1992:2007   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1988:2017   */\n      and\n        /* \"#utility.yul\":1973:2018   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2020:2022   */\n      0x40\n        /* \"#utility.yul\":1969:2023   */\n      add\n      swap4\n        /* \"#utility.yul\":1553:2029   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5005:5230   */\n    tag_87:\n        /* \"#utility.yul\":5045:5048   */\n      0x00\n        /* \"#utility.yul\":5076:5077   */\n      dup3\n        /* \"#utility.yul\":5072:5078   */\n      not\n        /* \"#utility.yul\":5069:5070   */\n      dup3\n        /* \"#utility.yul\":5066:5079   */\n      gt\n        /* \"#utility.yul\":5063:5065   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5121:5131   */\n      0x4e487b71\n        /* \"#utility.yul\":5116:5119   */\n      0xe0\n        /* \"#utility.yul\":5112:5132   */\n      shl\n        /* \"#utility.yul\":5109:5110   */\n      0x00\n        /* \"#utility.yul\":5102:5133   */\n      mstore\n        /* \"#utility.yul\":5156:5160   */\n      0x11\n        /* \"#utility.yul\":5153:5154   */\n      0x04\n        /* \"#utility.yul\":5146:5161   */\n      mstore\n        /* \"#utility.yul\":5184:5188   */\n      0x24\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5174:5189   */\n      revert\n        /* \"#utility.yul\":5063:5065   */\n    tag_173:\n      pop\n        /* \"#utility.yul\":5215:5224   */\n      add\n      swap1\n        /* \"#utility.yul\":5053:5230   */\n      jump\t// out\n        /* \"#utility.yul\":5235:5615   */\n    tag_64:\n        /* \"#utility.yul\":5314:5315   */\n      0x01\n        /* \"#utility.yul\":5310:5322   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5357:5369   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5378:5380   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":5432:5436   */\n      0x7f\n        /* \"#utility.yul\":5424:5430   */\n      dup3\n        /* \"#utility.yul\":5420:5437   */\n      and\n        /* \"#utility.yul\":5410:5437   */\n      swap2\n      pop\n        /* \"#utility.yul\":5378:5380   */\n    tag_175:\n        /* \"#utility.yul\":5485:5487   */\n      0x20\n        /* \"#utility.yul\":5477:5483   */\n      dup3\n        /* \"#utility.yul\":5474:5488   */\n      lt\n        /* \"#utility.yul\":5454:5472   */\n      dup2\n        /* \"#utility.yul\":5451:5489   */\n      eq\n        /* \"#utility.yul\":5448:5450   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5531:5541   */\n      0x4e487b71\n        /* \"#utility.yul\":5526:5529   */\n      0xe0\n        /* \"#utility.yul\":5522:5542   */\n      shl\n        /* \"#utility.yul\":5519:5520   */\n      0x00\n        /* \"#utility.yul\":5512:5543   */\n      mstore\n        /* \"#utility.yul\":5566:5570   */\n      0x22\n        /* \"#utility.yul\":5563:5564   */\n      0x04\n        /* \"#utility.yul\":5556:5571   */\n      mstore\n        /* \"#utility.yul\":5594:5598   */\n      0x24\n        /* \"#utility.yul\":5591:5592   */\n      0x00\n        /* \"#utility.yul\":5584:5599   */\n      revert\n        /* \"#utility.yul\":5448:5450   */\n    tag_176:\n      pop\n        /* \"#utility.yul\":5290:5615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209749c3a0cf09a318492be87cb110f1986fceff1442081f3aa6a47213d1a57f6764736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:12"
															},
															"nodeType": "YulIf",
															"src": "88:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:12"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:12"
															},
															"nodeType": "YulIf",
															"src": "221:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:12"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:12"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:12"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:12"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:12"
															},
															"nodeType": "YulIf",
															"src": "404:2:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:12"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:12"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:12"
															},
															"nodeType": "YulIf",
															"src": "566:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:12"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:12"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:12"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:12"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:12",
																"statements": []
															},
															"src": "647:133:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:12"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:12"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:12"
															},
															"nodeType": "YulIf",
															"src": "789:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:12",
														"type": ""
													}
												],
												"src": "14:885:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:12"
															},
															"nodeType": "YulIf",
															"src": "1032:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:12"
															},
															"nodeType": "YulIf",
															"src": "1169:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:12"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:12"
															},
															"nodeType": "YulIf",
															"src": "1342:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:12",
														"type": ""
													}
												],
												"src": "904:562:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:12"
															},
															"nodeType": "YulIf",
															"src": "1614:2:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:12"
															},
															"nodeType": "YulIf",
															"src": "1684:2:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:12",
														"type": ""
													}
												],
												"src": "1471:380:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b1138038062000b118339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61087f80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461011b57806370a082311461012e57806395d89b4114610157578063a457c2d71461015f578063a9059cbb14610172578063dd62ed3e1461018557600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610198565b6040516100c39190610793565b60405180910390f35b6100df6100da366004610769565b61022a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461072d565b610242565b60126100f3565b6100df610129366004610769565b610266565b6100f361013c3660046106d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610288565b6100df61016d366004610769565b610297565b6100df610180366004610769565b610317565b6100f36101933660046106fa565b610325565b6060600380546101a79061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546101d39061080e565b80156102205780601f106101f557610100808354040283529160200191610220565b820191906000526020600020905b81548152906001019060200180831161020357829003601f168201915b5050505050905090565b600033610238818585610350565b5060019392505050565b600033610250858285610474565b61025b8585856104ee565b506001949350505050565b6000336102388185856102798383610325565b61028391906107e8565b610350565b6060600480546101a79061080e565b600033816102a58286610325565b90508381101561030a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025b8286868403610350565b6000336102388185856104ee565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103b25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610301565b6001600160a01b0382166104135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610301565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104808484610325565b905060001981146104e857818110156104db5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610301565b6104e88484848403610350565b50505050565b6001600160a01b0383166105525760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610301565b6001600160a01b0382166105b45760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610301565b6001600160a01b0383166000908152602081905260409020548181101561062c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610301565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106639084906107e8565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106af91815260200190565b60405180910390a36104e8565b80356001600160a01b03811681146106d357600080fd5b919050565b6000602082840312156106ea57600080fd5b6106f3826106bc565b9392505050565b6000806040838503121561070d57600080fd5b610716836106bc565b9150610724602084016106bc565b90509250929050565b60008060006060848603121561074257600080fd5b61074b846106bc565b9250610759602085016106bc565b9150604084013590509250925092565b6000806040838503121561077c57600080fd5b610785836106bc565b946020939093013593505050565b600060208083528351808285015260005b818110156107c0578581018301518582016040015282016107a4565b818111156107d2576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561080957634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061082257607f821691505b6020821081141561084357634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212209749c3a0cf09a318492be87cb110f1986fceff1442081f3aa6a47213d1a57f6764736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB11 CODESIZE SUB DUP1 PUSH3 0xB11 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x87F DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x198 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x793 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x22A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH1 0x12 PUSH2 0xF3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1A7 SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D3 SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x220 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x220 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x203 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x350 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x250 DUP6 DUP3 DUP6 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x25B DUP6 DUP6 DUP6 PUSH2 0x4EE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x325 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1A7 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2A5 DUP3 DUP7 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x350 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x480 DUP5 DUP5 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x301 JUMP JUMPDEST PUSH2 0x4E8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x350 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x663 SWAP1 DUP5 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F3 DUP3 PUSH2 0x6BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x716 DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH2 0x724 PUSH1 0x20 DUP5 ADD PUSH2 0x6BC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74B DUP5 PUSH2 0x6BC JUMP JUMPDEST SWAP3 POP PUSH2 0x759 PUSH1 0x20 DUP6 ADD PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x785 DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x809 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x822 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x843 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0x49 0xC3 LOG0 0xCF MULMOD LOG3 XOR 0x49 0x2B 0xE8 PUSH29 0xB110F1986FCEFF1442081F3AA6A47213D1A57F6764736F6C6343000805 STOP CALLER ",
							"sourceMap": "1424:11573:0:-:0;;;2018:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2085:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2109:17:0;;;;:7;;:17;;;;;:::i;:::-;;2018:116;;1424:11573;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1424:11573:0;;;-1:-1:-1;1424:11573:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:12;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;162:13;;-1:-1:-1;;;;;224:10:12;;;221:2;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:12;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:2;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:2;;;615:1;612;605:12;566:2;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:2;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:2;887:6;78:821;-1:-1:-1;;;;;;78:821:12:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:2;;;1080:1;1077;1070:12;1032:2;1107:16;;-1:-1:-1;;;;;1172:14:12;;;1169:2;;;1199:1;1196;1189:12;1169:2;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:2;;;1374:1;1371;1364:12;1342:2;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;1022:444;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:2;;1668:4;1660:6;1656:17;1646:27;;1614:2;1721;1713:6;1710:14;1690:18;1687:38;1684:2;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:2;;1526:325;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1888:95;1424:11573:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_519": {
									"entryPoint": 848,
									"id": 519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_2058": {
									"entryPoint": null,
									"id": 2058,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_562": {
									"entryPoint": 1140,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1262,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 805,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 554,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 663,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 614,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 408,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 648,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 578,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 791,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5617:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:12"
															},
															"nodeType": "YulIf",
															"src": "111:2:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:12",
														"type": ""
													}
												],
												"src": "14:173:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:12"
															},
															"nodeType": "YulIf",
															"src": "272:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:12",
														"type": ""
													}
												],
												"src": "192:186:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:12"
															},
															"nodeType": "YulIf",
															"src": "480:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:12",
														"type": ""
													}
												],
												"src": "383:260:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:12"
															},
															"nodeType": "YulIf",
															"src": "762:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:12",
														"type": ""
													}
												],
												"src": "648:328:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:12"
															},
															"nodeType": "YulIf",
															"src": "1078:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:12",
														"type": ""
													}
												],
												"src": "981:254:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1345:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1345:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1412:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1398:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:12",
														"type": ""
													}
												],
												"src": "1240:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1553:476:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1563:12:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1573:2:12",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1567:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1591:9:12"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1584:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1584:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1614:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1634:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1628:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1618:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1661:9:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1672:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:18:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1702:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1697:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1762:90:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1791:9:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1802:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1787:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1787:17:12"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1806:2:12",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1783:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1783:26:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1825:6:12"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1833:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1821:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1821:14:12"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1837:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1817:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1817:23:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1811:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1811:30:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:66:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:66:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1723:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1726:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1734:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1736:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1745:1:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1748:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1741:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1736:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1716:3:12",
																"statements": []
															},
															"src": "1712:140:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1886:66:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1915:9:12"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1926:6:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1911:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1911:22:12"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1935:2:12",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1907:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1907:31:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1900:42:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1900:42:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1867:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1870:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:13:12"
															},
															"nodeType": "YulIf",
															"src": "1861:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1961:62:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1996:6:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2004:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1992:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1992:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2013:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2009:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2009:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1988:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1988:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:45:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2020:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:54:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1961:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1544:4:12",
														"type": ""
													}
												],
												"src": "1432:597:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:225:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2225:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2218:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2259:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2270:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:2:12",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:18:12"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2314:34:12",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2287:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:12"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:5:12",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2400:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2412:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2423:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2400:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2199:4:12",
														"type": ""
													}
												],
												"src": "2034:399:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:224:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2629:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2640:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2663:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2674:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:12",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2652:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2698:18:12"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2718:34:12",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2691:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2773:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2784:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:18:12"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2789:4:12",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2762:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:32:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2762:32:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2803:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2815:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2826:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2811:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2589:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2603:4:12",
														"type": ""
													}
												],
												"src": "2438:398:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:179:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3025:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3082:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3116:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:18:12"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3121:31:12",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3094:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:59:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3094:59:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3162:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3174:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3170:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3162:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3006:4:12",
														"type": ""
													}
												],
												"src": "2841:353:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3373:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3383:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3383:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3424:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3420:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3440:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3413:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3463:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3474:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:18:12"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3479:34:12",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3452:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3534:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3545:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:18:12"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3550:8:12",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3523:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3568:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3580:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3591:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3568:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3350:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3364:4:12",
														"type": ""
													}
												],
												"src": "3199:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3780:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3797:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3790:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3790:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3842:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3870:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3881:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:18:12"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3886:34:12",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3859:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3941:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3952:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3937:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3937:18:12"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3957:7:12",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3930:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3930:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3930:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3974:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3986:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3982:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3974:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3757:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3771:4:12",
														"type": ""
													}
												],
												"src": "3606:401:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4186:226:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4203:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4237:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4248:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4233:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4253:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4226:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4226:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4276:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4287:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:18:12"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4292:34:12",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4358:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4343:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:18:12"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4363:6:12",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4336:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4379:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4391:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4402:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4387:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4163:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4177:4:12",
														"type": ""
													}
												],
												"src": "4012:400:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4608:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4619:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4601:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4601:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4601:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4642:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4653:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4658:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4631:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4631:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4681:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4692:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4677:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4677:18:12"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4697:34:12",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4670:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4670:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4752:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4763:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4748:18:12"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4768:7:12",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4741:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4741:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4741:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4785:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4568:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4582:4:12",
														"type": ""
													}
												],
												"src": "4417:401:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4924:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4934:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4946:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4957:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4976:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4987:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4969:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4969:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4893:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4904:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4915:4:12",
														"type": ""
													}
												],
												"src": "4823:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5053:177:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5088:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5109:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5116:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5121:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5112:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5112:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5102:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5102:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5102:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5153:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5156:4:12",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5146:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5146:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5146:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5181:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5184:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5174:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5174:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5174:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5069:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5076:1:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5072:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5072:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5066:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5066:13:12"
															},
															"nodeType": "YulIf",
															"src": "5063:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5208:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5219:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5222:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5215:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5215:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5208:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5036:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5039:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5045:3:12",
														"type": ""
													}
												],
												"src": "5005:225:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5290:325:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5300:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5314:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5317:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5310:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5310:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5300:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5331:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5361:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5367:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5357:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5357:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5335:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5408:31:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5410:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5424:6:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5432:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5420:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5420:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5410:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5388:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5381:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5381:26:12"
															},
															"nodeType": "YulIf",
															"src": "5378:2:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5498:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5519:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5526:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5531:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5522:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5522:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5512:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5512:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5512:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5563:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5566:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5556:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5556:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5556:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5591:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5594:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5584:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5584:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5584:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5454:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5477:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5485:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5474:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5474:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5451:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:38:12"
															},
															"nodeType": "YulIf",
															"src": "5448:2:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5270:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5279:6:12",
														"type": ""
													}
												],
												"src": "5235:380:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461011b57806370a082311461012e57806395d89b4114610157578063a457c2d71461015f578063a9059cbb14610172578063dd62ed3e1461018557600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610198565b6040516100c39190610793565b60405180910390f35b6100df6100da366004610769565b61022a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461072d565b610242565b60126100f3565b6100df610129366004610769565b610266565b6100f361013c3660046106d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610288565b6100df61016d366004610769565b610297565b6100df610180366004610769565b610317565b6100f36101933660046106fa565b610325565b6060600380546101a79061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546101d39061080e565b80156102205780601f106101f557610100808354040283529160200191610220565b820191906000526020600020905b81548152906001019060200180831161020357829003601f168201915b5050505050905090565b600033610238818585610350565b5060019392505050565b600033610250858285610474565b61025b8585856104ee565b506001949350505050565b6000336102388185856102798383610325565b61028391906107e8565b610350565b6060600480546101a79061080e565b600033816102a58286610325565b90508381101561030a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025b8286868403610350565b6000336102388185856104ee565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103b25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610301565b6001600160a01b0382166104135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610301565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104808484610325565b905060001981146104e857818110156104db5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610301565b6104e88484848403610350565b50505050565b6001600160a01b0383166105525760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610301565b6001600160a01b0382166105b45760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610301565b6001600160a01b0383166000908152602081905260409020548181101561062c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610301565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106639084906107e8565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106af91815260200190565b60405180910390a36104e8565b80356001600160a01b03811681146106d357600080fd5b919050565b6000602082840312156106ea57600080fd5b6106f3826106bc565b9392505050565b6000806040838503121561070d57600080fd5b610716836106bc565b9150610724602084016106bc565b90509250929050565b60008060006060848603121561074257600080fd5b61074b846106bc565b9250610759602085016106bc565b9150604084013590509250925092565b6000806040838503121561077c57600080fd5b610785836106bc565b946020939093013593505050565b600060208083528351808285015260005b818110156107c0578581018301518582016040015282016107a4565b818111156107d2576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561080957634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061082257607f821691505b6020821081141561084357634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212209749c3a0cf09a318492be87cb110f1986fceff1442081f3aa6a47213d1a57f6764736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x198 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x793 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x22A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST PUSH1 0x12 PUSH2 0xF3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1A7 SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D3 SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x220 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x220 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x203 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x350 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x250 DUP6 DUP3 DUP6 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x25B DUP6 DUP6 DUP6 PUSH2 0x4EE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x325 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x350 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1A7 SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2A5 DUP3 DUP7 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25B DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x350 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x480 DUP5 DUP5 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4E8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x301 JUMP JUMPDEST PUSH2 0x4E8 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x350 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x552 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x663 SWAP1 DUP5 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F3 DUP3 PUSH2 0x6BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x716 DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH2 0x724 PUSH1 0x20 DUP5 ADD PUSH2 0x6BC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74B DUP5 PUSH2 0x6BC JUMP JUMPDEST SWAP3 POP PUSH2 0x759 PUSH1 0x20 DUP6 ADD PUSH2 0x6BC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x785 DUP4 PUSH2 0x6BC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x809 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x822 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x843 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0x49 0xC3 LOG0 0xCF MULMOD LOG3 XOR 0x49 0x2B 0xE8 PUSH29 0xB110F1986FCEFF1442081F3AA6A47213D1A57F6764736F6C6343000805 STOP CALLER ",
							"sourceMap": "1424:11573:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4557:201;;;;;;:::i;:::-;;:::i;:::-;;;1405:14:12;;1398:22;1380:41;;1368:2;1353:18;4557:201:0;1335:92:12;3326:108:0;3414:12;;3326:108;;;4969:25:12;;;4957:2;4942:18;3326:108:0;4924:76:12;5338:295:0;;;;;;:::i;:::-;;:::i;3166:95::-;3251:2;3166:95;;6042:238;;;;;;:::i;:::-;;:::i;3497:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3598:18:0;3571:7;3598:18;;;;;;;;;;;;3497:127;2423:104;;;:::i;6783:436::-;;;;;;:::i;:::-;;:::i;3830:193::-;;;;;;:::i;:::-;;:::i;4086:151::-;;;;;;:::i;:::-;;:::i;2204:100::-;2258:13;2291:5;2284:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:100;:::o;4557:201::-;4640:4;736:10:6;4696:32:0;736:10:6;4712:7:0;4721:6;4696:8;:32::i;:::-;-1:-1:-1;4746:4:0;;4557:201;-1:-1:-1;;;4557:201:0:o;5338:295::-;5469:4;736:10:6;5527:38:0;5543:4;736:10:6;5558:6:0;5527:15;:38::i;:::-;5576:27;5586:4;5592:2;5596:6;5576:9;:27::i;:::-;-1:-1:-1;5621:4:0;;5338:295;-1:-1:-1;;;;5338:295:0:o;6042:238::-;6130:4;736:10:6;6186:64:0;736:10:6;6202:7:0;6239:10;6211:25;736:10:6;6202:7:0;6211:9;:25::i;:::-;:38;;;;:::i;:::-;6186:8;:64::i;2423:104::-;2479:13;2512:7;2505:14;;;;;:::i;6783:436::-;6876:4;736:10:6;6876:4:0;6959:25;736:10:6;6976:7:0;6959:9;:25::i;:::-;6932:52;;7023:15;7003:16;:35;;6995:85;;;;-1:-1:-1;;;6995:85:0;;4619:2:12;6995:85:0;;;4601:21:12;4658:2;4638:18;;;4631:30;4697:34;4677:18;;;4670:62;-1:-1:-1;;;4748:18:12;;;4741:35;4793:19;;6995:85:0;;;;;;;;;7116:60;7125:5;7132:7;7160:15;7141:16;:34;7116:8;:60::i;3830:193::-;3909:4;736:10:6;3965:28:0;736:10:6;3982:2:0;3986:6;3965:9;:28::i;4086:151::-;-1:-1:-1;;;;;4202:18:0;;;4175:7;4202:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4086:151::o;10417:380::-;-1:-1:-1;;;;;10553:19:0;;10545:68;;;;-1:-1:-1;;;10545:68:0;;4214:2:12;10545:68:0;;;4196:21:12;4253:2;4233:18;;;4226:30;4292:34;4272:18;;;4265:62;-1:-1:-1;;;4343:18:12;;;4336:34;4387:19;;10545:68:0;4186:226:12;10545:68:0;-1:-1:-1;;;;;10632:21:0;;10624:68;;;;-1:-1:-1;;;10624:68:0;;2640:2:12;10624:68:0;;;2622:21:12;2679:2;2659:18;;;2652:30;2718:34;2698:18;;;2691:62;-1:-1:-1;;;2769:18:12;;;2762:32;2811:19;;10624:68:0;2612:224:12;10624:68:0;-1:-1:-1;;;;;10705:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10757:32;;4969:25:12;;;10757:32:0;;4942:18:12;10757:32:0;;;;;;;10417:380;;;:::o;11088:453::-;11223:24;11250:25;11260:5;11267:7;11250:9;:25::i;:::-;11223:52;;-1:-1:-1;;11290:16:0;:37;11286:248;;11372:6;11352:16;:26;;11344:68;;;;-1:-1:-1;;;11344:68:0;;3043:2:12;11344:68:0;;;3025:21:12;3082:2;3062:18;;;3055:30;3121:31;3101:18;;;3094:59;3170:18;;11344:68:0;3015:179:12;11344:68:0;11456:51;11465:5;11472:7;11500:6;11481:16;:25;11456:8;:51::i;:::-;11212:329;11088:453;;;:::o;7698:671::-;-1:-1:-1;;;;;7829:18:0;;7821:68;;;;-1:-1:-1;;;7821:68:0;;3808:2:12;7821:68:0;;;3790:21:12;3847:2;3827:18;;;3820:30;3886:34;3866:18;;;3859:62;-1:-1:-1;;;3937:18:12;;;3930:35;3982:19;;7821:68:0;3780:227:12;7821:68:0;-1:-1:-1;;;;;7908:16:0;;7900:64;;;;-1:-1:-1;;;7900:64:0;;2236:2:12;7900:64:0;;;2218:21:12;2275:2;2255:18;;;2248:30;2314:34;2294:18;;;2287:62;-1:-1:-1;;;2365:18:12;;;2358:33;2408:19;;7900:64:0;2208:225:12;7900:64:0;-1:-1:-1;;;;;8050:15:0;;8028:19;8050:15;;;;;;;;;;;8084:21;;;;8076:72;;;;-1:-1:-1;;;8076:72:0;;3401:2:12;8076:72:0;;;3383:21:12;3440:2;3420:18;;;3413:30;3479:34;3459:18;;;3452:62;-1:-1:-1;;;3530:18:12;;;3523:36;3576:19;;8076:72:0;3373:228:12;8076:72:0;-1:-1:-1;;;;;8184:15:0;;;:9;:15;;;;;;;;;;;8202:20;;;8184:38;;8244:13;;;;;;;;:23;;8216:6;;8184:9;8244:23;;8216:6;;8244:23;:::i;:::-;;;;;;;;8300:2;-1:-1:-1;;;;;8285:26:0;8294:4;-1:-1:-1;;;;;8285:26:0;;8304:6;8285:26;;;;4969:25:12;;4957:2;4942:18;;4924:76;8285:26:0;;;;;;;;8324:37;12141:125;14:173:12;82:20;;-1:-1:-1;;;;;131:31:12;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:12:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:2;;;528:1;525;518:12;480:2;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;470:173;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:2;;;810:1;807;800:12;762:2;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;752:224;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:2;;;1126:1;1123;1116:12;1078:2;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;1068:167:12:o;1432:597::-;1544:4;1573:2;1602;1591:9;1584:21;1634:6;1628:13;1677:6;1672:2;1661:9;1657:18;1650:34;1702:1;1712:140;1726:6;1723:1;1720:13;1712:140;;;1821:14;;;1817:23;;1811:30;1787:17;;;1806:2;1783:26;1776:66;1741:10;;1712:140;;;1870:6;1867:1;1864:13;1861:2;;;1940:1;1935:2;1926:6;1915:9;1911:22;1907:31;1900:42;1861:2;-1:-1:-1;2013:2:12;1992:15;-1:-1:-1;;1988:29:12;1973:45;;;;2020:2;1969:54;;1553:476;-1:-1:-1;;;1553:476:12:o;5005:225::-;5045:3;5076:1;5072:6;5069:1;5066:13;5063:2;;;5121:10;5116:3;5112:20;5109:1;5102:31;5156:4;5153:1;5146:15;5184:4;5181:1;5174:15;5063:2;-1:-1:-1;5215:9:12;;5053:177::o;5235:380::-;5314:1;5310:12;;;;5357;;;5378:2;;5432:4;5424:6;5420:17;5410:27;;5378:2;5485;5477:6;5474:14;5454:18;5451:38;5448:2;;;5531:10;5526:3;5522:20;5519:1;5512:31;5566:4;5563:1;5556:15;5594:4;5591:1;5584:15;5448:2;;5290:325;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "435000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "281",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2085,
									"end": 2098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2116,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2109,
									"end": 2116,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2109,
									"end": 2126,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2018,
									"end": 2134,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 88,
									"end": 90,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 88,
									"end": 90,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 221,
									"end": 223,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 221,
									"end": 223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 223,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 12,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 404,
									"end": 406,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 404,
									"end": 406,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 406,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 566,
									"end": 568,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 566,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 568,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 566,
									"end": 568,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 568,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 789,
									"end": 791,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 789,
									"end": 791,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 791,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 789,
									"end": 791,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 791,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 12
								},
								{
									"begin": 78,
									"end": 899,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 78,
									"end": 899,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 12,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1526,
									"end": 1851,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1526,
									"end": 1851,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1526,
									"end": 1851,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1526,
									"end": 1851,
									"name": "JUMP",
									"source": 12,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1888,
									"end": 1983,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1888,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1424,
									"end": 12997,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209749c3a0cf09a318492be87cb110f1986fceff1442081f3aa6a47213d1a57f6764736f6c63430008050033",
									".code": [
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 12997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1335,
											"end": 1427,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3326,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4924,
											"end": 5000,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3166,
											"end": 3261,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3624,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2258,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2291,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2304,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4640,
											"end": 4644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4712,
											"end": 4719,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4721,
											"end": 4727,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4696,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4746,
											"end": 4750,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4746,
											"end": 4750,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4557,
											"end": 4758,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5469,
											"end": 5473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5543,
											"end": 5547,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5558,
											"end": 5564,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5527,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5586,
											"end": 5590,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5592,
											"end": 5594,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5602,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5576,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5576,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5338,
											"end": 5633,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6042,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6130,
											"end": 6134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6186,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6209,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6239,
											"end": 6249,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6209,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6211,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6211,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6186,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6186,
											"end": 6250,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2423,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2492,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2512,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6783,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6876,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6983,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6959,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6959,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6932,
											"end": 6984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6932,
											"end": 6984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7023,
											"end": 7038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7038,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7038,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4621,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4601,
											"end": 4622,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4658,
											"end": 4660,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4661,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4697,
											"end": 4731,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4677,
											"end": 4695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4670,
											"end": 4732,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4741,
											"end": 4776,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4793,
											"end": 4812,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6995,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 7125,
											"end": 7130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7132,
											"end": 7139,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7157,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7116,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7116,
											"end": 7176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3830,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3965,
											"end": 3993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4237,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10553,
											"end": 10572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10553,
											"end": 10572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4233,
											"end": 4251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4256,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4292,
											"end": 4326,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4272,
											"end": 4290,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4327,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4336,
											"end": 4370,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4186,
											"end": 4412,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10545,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10632,
											"end": 10653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10632,
											"end": 10653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2642,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2643,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2652,
											"end": 2682,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2718,
											"end": 2752,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2691,
											"end": 2753,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2762,
											"end": 2794,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2612,
											"end": 2836,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10741,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10741,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10789,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10417,
											"end": 10797,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11260,
											"end": 11265,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11274,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11250,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11250,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11223,
											"end": 11275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11290,
											"end": 11306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11290,
											"end": 11327,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11286,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11286,
											"end": 11534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11372,
											"end": 11378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11378,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11352,
											"end": 11378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3062,
											"end": 3080,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3121,
											"end": 3152,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3153,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3015,
											"end": 3194,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11344,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11465,
											"end": 11470,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11472,
											"end": 11479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11500,
											"end": 11506,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11481,
											"end": 11497,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11481,
											"end": 11506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11456,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11456,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11212,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11088,
											"end": 11541,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7698,
											"end": 8369,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7698,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7829,
											"end": 7847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7829,
											"end": 7847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3811,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3820,
											"end": 3850,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3886,
											"end": 3920,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3859,
											"end": 3921,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3937,
											"end": 3955,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3930,
											"end": 3965,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3982,
											"end": 4001,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3780,
											"end": 4007,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7821,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7908,
											"end": 7924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7908,
											"end": 7924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2239,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "PUSH",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2314,
											"end": 2348,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2349,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2208,
											"end": 2433,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7900,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8028,
											"end": 8047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3383,
											"end": 3404,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3440,
											"end": 3442,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3413,
											"end": 3443,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3479,
											"end": 3513,
											"name": "PUSH",
											"source": 12,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3452,
											"end": 3514,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3548,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3523,
											"end": 3559,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3576,
											"end": 3595,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3373,
											"end": 3601,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 8076,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8199,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8222,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8257,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8244,
											"end": 8267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8300,
											"end": 8302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8294,
											"end": 8298,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8304,
											"end": 8310,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 4994,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4957,
											"end": 4959,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4924,
											"end": 5000,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 12141,
											"end": 12266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 262,
											"end": 378,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 378,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 480,
											"end": 482,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 480,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 480,
											"end": 482,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 480,
											"end": 482,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 480,
											"end": 482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 470,
											"end": 643,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 470,
											"end": 643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 470,
											"end": 643,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 470,
											"end": 643,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 470,
											"end": 643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 470,
											"end": 643,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 762,
											"end": 764,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 762,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 762,
											"end": 764,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 752,
											"end": 976,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 752,
											"end": 976,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 752,
											"end": 976,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 752,
											"end": 976,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 752,
											"end": 976,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 752,
											"end": 976,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1068,
											"end": 1235,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1432,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1544,
											"end": 1548,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1605,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1628,
											"end": 1641,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1720,
											"end": 1733,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1821,
											"end": 1835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1817,
											"end": 1840,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1841,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1787,
											"end": 1804,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1783,
											"end": 1809,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1776,
											"end": 1842,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 1712,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1937,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1911,
											"end": 1933,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1938,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1942,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1992,
											"end": 2007,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2017,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2020,
											"end": 2022,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 2023,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 2029,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 2029,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5005,
											"end": 5230,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 5005,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5045,
											"end": 5048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5077,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5072,
											"end": 5078,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5069,
											"end": 5070,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5079,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5131,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 5116,
											"end": 5119,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5112,
											"end": 5132,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5133,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5160,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 5153,
											"end": 5154,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5146,
											"end": 5161,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5189,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5053,
											"end": 5230,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5235,
											"end": 5615,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5235,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5314,
											"end": 5315,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5357,
											"end": 5369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5432,
											"end": 5436,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5437,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5437,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5485,
											"end": 5487,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5474,
											"end": 5488,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5454,
											"end": 5472,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5451,
											"end": 5489,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5531,
											"end": 5541,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 5526,
											"end": 5529,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5522,
											"end": 5542,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5519,
											"end": 5520,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5543,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5566,
											"end": 5570,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 5563,
											"end": 5564,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5556,
											"end": 5571,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5594,
											"end": 5598,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5591,
											"end": 5592,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5599,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5290,
											"end": 5615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5290,
											"end": 5615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5290,
											"end": 5615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5290,
											"end": 5615,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. z This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/ERC20.sol\":{\"keccak256\":\"0x06de64a6e4f0f98aaf7bc91b3826b714e7ce7827a08da3031f8f2f91c14c5687\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79cb85a1ebbc907f8b80a26cfce98cd61eb1dfc5dbed47f2cc5f6e7a3e87d2db\",\"dweb:/ipfs/QmWzRXkG6oFwtNiGz98zduSDVYhnTKkCE5YMTVE15fBFse\"]},\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x2095e6b6cd9fc67a55c1dce6c4a4282036fef487baf848e399adc2f571f6c47b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbdbc5c7af217e674e7c45ab729cf3ffe1c2756c4438e5818f39f30266b836e2\",\"dweb:/ipfs/QmPkmQQ6bAVYGRKR1KMqRhU1kPL49aFc5zqCLmJZEMsavE\"]},\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x2095e6b6cd9fc67a55c1dce6c4a4282036fef487baf848e399adc2f571f6c47b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbdbc5c7af217e674e7c45ab729cf3ffe1c2756c4438e5818f39f30266b836e2\",\"dweb:/ipfs/QmPkmQQ6bAVYGRKR1KMqRhU1kPL49aFc5zqCLmJZEMsavE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ethereum/Generator.sol": {
				"Generator": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleSettings",
							"outputs": [
								{
									"internalType": "contract PresaleSettings",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ethereum/Generator.sol\":229:1570  contract Generator is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"Ethereum/Generator.sol\":829:946  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Utils/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"Utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"Utils/Ownable.sol\":942:960  _transferOwnership */\n  tag_8\n    /* \"Utils/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"Ethereum/Generator.sol\":861:876  presaleSettings */\n  0x01\n    /* \"Ethereum/Generator.sol\":861:938  presaleSettings = PresaleSettings(0x354652D0E18dBC94A125b317b39E0505a3832790) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"Ethereum/Generator.sol\":895:937  0x354652D0E18dBC94A125b317b39E0505a3832790 */\n  0x354652d0e18dbc94a125b317b39e0505a3832790\n    /* \"Ethereum/Generator.sol\":861:938  presaleSettings = PresaleSettings(0x354652D0E18dBC94A125b317b39E0505a3832790) */\n  or\n  swap1\n  sstore\n    /* \"Ethereum/Generator.sol\":229:1570  contract Generator is Ownable {\r... */\n  jump(tag_10)\n    /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_8:\n    /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n  0x00\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n  swap1\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Utils/Ownable.sol\":2396:2524  {\r... */\n  pop\n    /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"Ethereum/Generator.sol\":229:1570  contract Generator is Ownable {\r... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ethereum/Generator.sol\":229:1570  contract Generator is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xced72f87\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd8f59f91\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_4:\n        /* \"Utils/Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_10:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":658:690   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":640:691   */\n      dup2\n      mstore\n        /* \"#utility.yul\":628:630   */\n      0x20\n        /* \"#utility.yul\":613:631   */\n      add\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ethereum/Generator.sol\":1442:1567  function getFee() public view returns(uint256) {\r... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n        /* \"#utility.yul\":1848:1873   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1836:1838   */\n      0x20\n        /* \"#utility.yul\":1821:1839   */\n      add\n        /* \"Ethereum/Generator.sol\":1442:1567  function getFee() public view returns(uint256) {\r... */\n      tag_12\n        /* \"#utility.yul\":1803:1879   */\n      jump\n        /* \"Ethereum/Generator.sol\":782:820  PresaleSettings public presaleSettings */\n    tag_6:\n      sload(0x01)\n      tag_10\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_7:\n      tag_8\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_9:\n        /* \"Utils/Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_30\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1543:1545   */\n      0x20\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1525:1546   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1562:1580   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1555:1585   */\n      mstore\n        /* \"#utility.yul\":1621:1655   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1601:1619   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1594:1656   */\n      mstore\n        /* \"#utility.yul\":1673:1691   */\n      0x64\n      add\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_30:\n        /* \"Utils/Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      tag_34\n        /* \"Utils/Ownable.sol\":1806:1807  0 */\n      0x00\n        /* \"Utils/Ownable.sol\":1779:1797  _transferOwnership */\n      tag_35\n        /* \"Utils/Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_34:\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Ethereum/Generator.sol\":1442:1567  function getFee() public view returns(uint256) {\r... */\n    tag_15:\n        /* \"Ethereum/Generator.sol\":1523:1538  presaleSettings */\n      sload(0x01)\n        /* \"Ethereum/Generator.sol\":1507:1559  PresaleSettings(presaleSettings).getEthCreationFee() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xe38ef7a3)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Ethereum/Generator.sol\":1480:1487  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Generator.sol\":1523:1538  presaleSettings */\n      and\n      swap2\n        /* \"Ethereum/Generator.sol\":1507:1557  PresaleSettings(presaleSettings).getEthCreationFee */\n      0xe38ef7a3\n      swap2\n        /* \"Ethereum/Generator.sol\":1507:1559  PresaleSettings(presaleSettings).getEthCreationFee() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Ethereum/Generator.sol\":1523:1538  presaleSettings */\n      dup7\n        /* \"Ethereum/Generator.sol\":1507:1559  PresaleSettings(presaleSettings).getEthCreationFee() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"Ethereum/Generator.sol\":1500:1559  return PresaleSettings(presaleSettings).getEthCreationFee() */\n      swap1\n      pop\n        /* \"Ethereum/Generator.sol\":1442:1567  function getFee() public view returns(uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_25:\n        /* \"Utils/Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1543:1545   */\n      0x20\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1525:1546   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1562:1580   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1555:1585   */\n      mstore\n        /* \"#utility.yul\":1621:1655   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1601:1619   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1594:1656   */\n      mstore\n        /* \"#utility.yul\":1673:1691   */\n      0x64\n      add\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_31\n        /* \"#utility.yul\":1515:1697   */\n      jump\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/Ownable.sol\":2061:2083  newOwner != address(0) */\n      dup2\n      and\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1136:1138   */\n      0x20\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1118:1139   */\n      mstore\n        /* \"#utility.yul\":1175:1177   */\n      0x26\n        /* \"#utility.yul\":1155:1173   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1148:1178   */\n      mstore\n        /* \"#utility.yul\":1214:1248   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1194:1212   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1187:1249   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1265:1283   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1258:1294   */\n      mstore\n        /* \"#utility.yul\":1311:1330   */\n      0x84\n      add\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_31\n        /* \"#utility.yul\":1108:1336   */\n      jump\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_49:\n        /* \"Utils/Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      tag_52\n        /* \"Utils/Ownable.sol\":2156:2164  newOwner */\n      dup2\n        /* \"Utils/Ownable.sol\":2137:2155  _transferOwnership */\n      tag_35\n        /* \"Utils/Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_52:\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_35:\n        /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n      0x00\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n      swap1\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Utils/Ownable.sol\":2396:2524  {\r... */\n      pop\n        /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_24:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_57:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:202   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:202   */\n    tag_58:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":84:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":305:489   */\n    tag_42:\n        /* \"#utility.yul\":375:381   */\n      0x00\n        /* \"#utility.yul\":428:430   */\n      0x20\n        /* \"#utility.yul\":416:425   */\n      dup3\n        /* \"#utility.yul\":407:414   */\n      dup5\n        /* \"#utility.yul\":403:426   */\n      sub\n        /* \"#utility.yul\":399:431   */\n      slt\n        /* \"#utility.yul\":396:398   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":444:445   */\n      0x00\n        /* \"#utility.yul\":441:442   */\n      dup1\n        /* \"#utility.yul\":434:446   */\n      revert\n        /* \"#utility.yul\":396:398   */\n    tag_60:\n      pop\n        /* \"#utility.yul\":467:483   */\n      mload\n      swap2\n        /* \"#utility.yul\":386:489   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122031ccbe4069303d3ed56f445bad9f13735026bbef51fd1d45e47fc314eba41f8264736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2691": {
									"entryPoint": null,
									"id": 2691,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_710": {
									"entryPoint": null,
									"id": 710,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2058": {
									"entryPoint": null,
									"id": 2058,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_2771": {
									"entryPoint": 69,
									"id": 2771,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a33610045565b600180546001600160a01b03191673354652d0e18dbc94a125b317b39e0505a3832790179055610095565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610353806100a46000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063ced72f8714610090578063d8f59f91146100a6578063f2fde38b146100b9575b600080fd5b6100646100cc565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b610098610137565b604051908152602001610087565b600154610073906001600160a01b031681565b6100646100c73660046102d4565b6101b9565b6000546001600160a01b0316331461012b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101356000610284565b565b6001546040805163e38ef7a360e01b815290516000926001600160a01b03169163e38ef7a3916004808301926020929190829003018186803b15801561017c57600080fd5b505afa158015610190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b49190610304565b905090565b6000546001600160a01b031633146102135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610122565b6001600160a01b0381166102785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610122565b61028181610284565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102e657600080fd5b81356001600160a01b03811681146102fd57600080fd5b9392505050565b60006020828403121561031657600080fd5b505191905056fea264697066735822122031ccbe4069303d3ed56f445bad9f13735026bbef51fd1d45e47fc314eba41f8264736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x45 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x354652D0E18DBC94A125B317B39E0505A3832790 OR SWAP1 SSTORE PUSH2 0x95 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x353 DUP1 PUSH2 0xA4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xCED72F87 EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0xD8F59F91 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xCC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x87 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x73 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4 JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x0 PUSH2 0x284 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xE38EF7A3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xE38EF7A3 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x190 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x304 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x213 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x122 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x278 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x281 DUP2 PUSH2 0x284 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xCC 0xBE BLOCKHASH PUSH10 0x303D3ED56F445BAD9F13 PUSH20 0x5026BBEF51FD1D45E47FC314EBA41F8264736F6C PUSH4 0x43000805 STOP CALLER ",
							"sourceMap": "229:1341:3:-:0;;;829:117;;;;;;;;;-1:-1:-1;942:32:8;736:10:6;942:18:8;:32::i;:::-;861:15:3;:77;;-1:-1:-1;;;;;;861:77:3;895:42;861:77;;;229:1341;;2333:191:8;2407:16;2426:6;;-1:-1:-1;;;;;2443:17:8;;;-1:-1:-1;;;;;;2443:17:8;;;;;;2476:40;;2426:6;;;;;;;2476:40;;2407:16;2476:40;2396:128;2333:191;:::o;229:1341:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_2058": {
									"entryPoint": null,
									"id": 2058,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_2771": {
									"entryPoint": 644,
									"id": 2771,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getFee_722": {
									"entryPoint": 311,
									"id": 722,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_2700": {
									"entryPoint": null,
									"id": 2700,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@presaleSettings_700": {
									"entryPoint": null,
									"id": 700,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_2728": {
									"entryPoint": 204,
									"id": 2728,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_2751": {
									"entryPoint": 441,
									"id": 2751,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_PresaleSettings_$2046__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1881:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:12"
															},
															"nodeType": "YulIf",
															"src": "94:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:12"
															},
															"nodeType": "YulIf",
															"src": "200:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:12",
														"type": ""
													}
												],
												"src": "14:286:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "386:103:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "432:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "441:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "444:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "434:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "434:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "434:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "407:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "416:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "428:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:32:12"
															},
															"nodeType": "YulIf",
															"src": "396:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "457:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "473:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "467:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "352:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "363:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "375:6:12",
														"type": ""
													}
												],
												"src": "305:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "595:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "605:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "628:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "662:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "678:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "683:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "674:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "687:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "670:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "658:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "640:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "564:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "575:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "586:4:12",
														"type": ""
													}
												],
												"src": "494:203:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "827:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "837:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "849:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "860:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "837:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "879:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "894:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "910:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "915:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "906:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "906:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "919:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "902:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "902:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "890:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "890:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "872:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "872:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_PresaleSettings_$2046__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "796:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "807:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "818:4:12",
														"type": ""
													}
												],
												"src": "702:227:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1125:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1136:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1118:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1118:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1118:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1159:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1170:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1155:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1155:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1175:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1148:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1198:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1209:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1194:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1194:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1214:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1187:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1187:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1269:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1280:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1265:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1265:18:12"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1285:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1258:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1303:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1315:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1326:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1311:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1303:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1085:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1099:4:12",
														"type": ""
													}
												],
												"src": "934:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1515:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1532:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1566:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1577:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1562:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1562:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1582:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1555:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1555:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1605:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1616:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1601:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1621:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1594:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1594:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1594:62:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1665:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1677:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1688:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1673:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1665:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1492:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1506:4:12",
														"type": ""
													}
												],
												"src": "1341:356:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1803:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1813:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1825:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1836:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1821:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1813:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1866:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1848:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1848:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1848:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1772:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1783:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1794:4:12",
														"type": ""
													}
												],
												"src": "1702:177:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_PresaleSettings_$2046__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063ced72f8714610090578063d8f59f91146100a6578063f2fde38b146100b9575b600080fd5b6100646100cc565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b610098610137565b604051908152602001610087565b600154610073906001600160a01b031681565b6100646100c73660046102d4565b6101b9565b6000546001600160a01b0316331461012b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101356000610284565b565b6001546040805163e38ef7a360e01b815290516000926001600160a01b03169163e38ef7a3916004808301926020929190829003018186803b15801561017c57600080fd5b505afa158015610190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b49190610304565b905090565b6000546001600160a01b031633146102135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610122565b6001600160a01b0381166102785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610122565b61028181610284565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102e657600080fd5b81356001600160a01b03811681146102fd57600080fd5b9392505050565b60006020828403121561031657600080fd5b505191905056fea264697066735822122031ccbe4069303d3ed56f445bad9f13735026bbef51fd1d45e47fc314eba41f8264736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xCED72F87 EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0xD8F59F91 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xCC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x98 PUSH2 0x137 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x87 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x73 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D4 JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x0 PUSH2 0x284 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xE38EF7A3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xE38EF7A3 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x190 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x304 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x213 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x122 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x278 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x122 JUMP JUMPDEST PUSH2 0x281 DUP2 PUSH2 0x284 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xCC 0xBE BLOCKHASH PUSH10 0x303D3ED56F445BAD9F13 PUSH20 0x5026BBEF51FD1D45E47FC314EBA41F8264736F6C PUSH4 0x43000805 STOP CALLER ",
							"sourceMap": "229:1341:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1714:103:8;;;:::i;:::-;;1063:87;1109:7;1136:6;-1:-1:-1;;;;;1136:6:8;1063:87;;;-1:-1:-1;;;;;658:32:12;;;640:51;;628:2;613:18;1063:87:8;;;;;;;;1442:125:3;;;:::i;:::-;;;1848:25:12;;;1836:2;1821:18;1442:125:3;1803:76:12;782:38:3;;;;;-1:-1:-1;;;;;782:38:3;;;1972:201:8;;;;;;:::i;:::-;;:::i;1714:103::-;1109:7;1136:6;-1:-1:-1;;;;;1136:6:8;736:10:6;1283:23:8;1275:68;;;;-1:-1:-1;;;1275:68:8;;1543:2:12;1275:68:8;;;1525:21:12;;;1562:18;;;1555:30;1621:34;1601:18;;;1594:62;1673:18;;1275:68:8;;;;;;;;;1779:30:::1;1806:1;1779:18;:30::i;:::-;1714:103::o:0;1442:125:3:-;1523:15;;1507:52;;;-1:-1:-1;;;1507:52:3;;;;1480:7;;-1:-1:-1;;;;;1523:15:3;;1507:50;;:52;;;;;;;;;;;;;;1523:15;1507:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:59;;1442:125;:::o;1972:201:8:-;1109:7;1136:6;-1:-1:-1;;;;;1136:6:8;736:10:6;1283:23:8;1275:68;;;;-1:-1:-1;;;1275:68:8;;1543:2:12;1275:68:8;;;1525:21:12;;;1562:18;;;1555:30;1621:34;1601:18;;;1594:62;1673:18;;1275:68:8;1515:182:12;1275:68:8;-1:-1:-1;;;;;2061:22:8;::::1;2053:73;;;::::0;-1:-1:-1;;;2053:73:8;;1136:2:12;2053:73:8::1;::::0;::::1;1118:21:12::0;1175:2;1155:18;;;1148:30;1214:34;1194:18;;;1187:62;-1:-1:-1;;;1265:18:12;;;1258:36;1311:19;;2053:73:8::1;1108:228:12::0;2053:73:8::1;2137:28;2156:8;2137:18;:28::i;:::-;1972:201:::0;:::o;2333:191::-;2407:16;2426:6;;-1:-1:-1;;;;;2443:17:8;;;-1:-1:-1;;;;;;2443:17:8;;;;;;2476:40;;2426:6;;;;;;;2476:40;;2407:16;2476:40;2396:128;2333:191;:::o;14:286:12:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;168:23;;-1:-1:-1;;;;;220:31:12;;210:42;;200:2;;266:1;263;256:12;200:2;289:5;84:216;-1:-1:-1;;;84:216:12:o;305:184::-;375:6;428:2;416:9;407:7;403:23;399:32;396:2;;;444:1;441;434:12;396:2;-1:-1:-1;467:16:12;;386:103;-1:-1:-1;386:103:12:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "170200",
								"executionCost": "50291",
								"totalCost": "220491"
							},
							"external": {
								"getFee()": "infinite",
								"owner()": "2309",
								"presaleSettings()": "2370",
								"renounceOwnership()": "28092",
								"transferOwnership(address)": "28340"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 229,
									"end": 1570,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 229,
									"end": 1570,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 229,
									"end": 1570,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 829,
									"end": 946,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 829,
									"end": 946,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 829,
									"end": 946,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 829,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 829,
									"end": 946,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 829,
									"end": 946,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 829,
									"end": 946,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 829,
									"end": 946,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 829,
									"end": 946,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 829,
									"end": 946,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 942,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "tag",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 861,
									"end": 876,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 861,
									"end": 938,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 861,
									"end": 938,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 861,
									"end": 938,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 895,
									"end": 937,
									"name": "PUSH",
									"source": 3,
									"value": "354652D0E18DBC94A125B317B39E0505A3832790"
								},
								{
									"begin": 861,
									"end": 938,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 861,
									"end": 938,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 861,
									"end": 938,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 229,
									"end": 1570,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 229,
									"end": 1570,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 8,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "LOG3",
									"source": 8
								},
								{
									"begin": 2396,
									"end": 2524,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 229,
									"end": 1570,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 229,
									"end": 1570,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 229,
									"end": 1570,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 1570,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 229,
									"end": 1570,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 229,
									"end": 1570,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 1570,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 229,
									"end": 1570,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 1570,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031ccbe4069303d3ed56f445bad9f13735026bbef51fd1d45e47fc314eba41f8264736f6c63430008050033",
									".code": [
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "CED72F87"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "D8F59F91"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 229,
											"end": 1570,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 658,
											"end": 690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 658,
											"end": 690,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 658,
											"end": 690,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 640,
											"end": 691,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 640,
											"end": 691,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 628,
											"end": 630,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 631,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1442,
											"end": 1567,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1442,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1442,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1442,
											"end": 1567,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1442,
											"end": 1567,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1442,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1567,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1567,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1848,
											"end": 1873,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1848,
											"end": 1873,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1836,
											"end": 1838,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1821,
											"end": 1839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1442,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1803,
											"end": 1879,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 782,
											"end": 820,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 782,
											"end": 820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 782,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 782,
											"end": 820,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 782,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 782,
											"end": 820,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 782,
											"end": 820,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 782,
											"end": 820,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 782,
											"end": 820,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1543,
											"end": 1545,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1525,
											"end": 1546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1525,
											"end": 1546,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1562,
											"end": 1580,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1562,
											"end": 1580,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1562,
											"end": 1580,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1655,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1594,
											"end": 1656,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1442,
											"end": 1567,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1442,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1538,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1523,
											"end": 1538,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E38EF7A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1480,
											"end": 1487,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1480,
											"end": 1487,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1523,
											"end": 1538,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1538,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1557,
											"name": "PUSH",
											"source": 3,
											"value": "E38EF7A3"
										},
										{
											"begin": 1507,
											"end": 1557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1538,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1559,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1567,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1543,
											"end": 1545,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1525,
											"end": 1546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1525,
											"end": 1546,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1562,
											"end": 1580,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1562,
											"end": 1580,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1562,
											"end": 1580,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1655,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1619,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1594,
											"end": 1656,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1515,
											"end": 1697,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1138,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1118,
											"end": 1139,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1173,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1148,
											"end": 1178,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1214,
											"end": 1248,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1249,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1258,
											"end": 1294,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1311,
											"end": 1330,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1311,
											"end": 1330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1108,
											"end": 1336,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 8,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 200,
											"end": 202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 200,
											"end": 202,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 200,
											"end": 202,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 200,
											"end": 202,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 84,
											"end": 300,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 300,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 305,
											"end": 489,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 305,
											"end": 489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 375,
											"end": 381,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 430,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 416,
											"end": 425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 407,
											"end": 414,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 403,
											"end": 426,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 399,
											"end": 431,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 396,
											"end": 398,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 396,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 444,
											"end": 445,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 442,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 434,
											"end": 446,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 396,
											"end": 398,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 467,
											"end": 483,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 467,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 386,
											"end": 489,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 386,
											"end": 489,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getFee()": "ced72f87",
							"owner()": "8da5cb5b",
							"presaleSettings()": "d8f59f91",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleSettings\",\"outputs\":[{\"internalType\":\"contract PresaleSettings\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ethereum/Generator.sol\":\"Generator\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/ERC20.sol\":{\"keccak256\":\"0x06de64a6e4f0f98aaf7bc91b3826b714e7ce7827a08da3031f8f2f91c14c5687\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79cb85a1ebbc907f8b80a26cfce98cd61eb1dfc5dbed47f2cc5f6e7a3e87d2db\",\"dweb:/ipfs/QmWzRXkG6oFwtNiGz98zduSDVYhnTKkCE5YMTVE15fBFse\"]},\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x2095e6b6cd9fc67a55c1dce6c4a4282036fef487baf848e399adc2f571f6c47b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbdbc5c7af217e674e7c45ab729cf3ffe1c2756c4438e5818f39f30266b836e2\",\"dweb:/ipfs/QmPkmQQ6bAVYGRKR1KMqRhU1kPL49aFc5zqCLmJZEMsavE\"]},\"Ethereum/Generator.sol\":{\"keccak256\":\"0x5a02e762941a6f15a081cce3e19a2770c3340dc0f89df9fd540b76af580c0416\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://37e9e919a038350068a6b86e887e25336c0da0c35dfc9b8e77687b9f918bcfe6\",\"dweb:/ipfs/QmSbrzMhpnpKVPFbAF6XcCT12JSEjpW6h1zRq4o87Nk6DK\"]},\"Ethereum/Presale.sol\":{\"keccak256\":\"0xc50dd820ddd3be06c2e9804795ab56cb934e2a5f789e9164553766117abdaeb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://252a2e5e8d907f4ad250ec621835a1f102fcd47a570531fd795453eafb18314d\",\"dweb:/ipfs/QmfActstdGxT38chY8ThvuqVupjtNtzBwvXoB53WcGCTuQ\"]},\"Ethereum/PresaleSettings.sol\":{\"keccak256\":\"0x9b7c16089224b8e748e8356016268a8f7383c0a622533a969a6e8e134e236a97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9acc103dbae8f28973c1265d719f76d6adeaffbb4ab2a35107d7414db7df3793\",\"dweb:/ipfs/QmXDUoU1riu5xcASSDQ2zgusRGo5ZvAGVaqT2PWFMTy3dM\"]},\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Utils/EnumerableSet.sol\":{\"keccak256\":\"0x8adfeb5c886c6a727bdeac6db8e78f418e09f16f7c941c7111125b59ec2fd838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632e2346228015ce98183a0f0658057a9f2ae8b8d25b639eb9303e8e0ea34957\",\"dweb:/ipfs/QmPY3nbe3JhMsgyHJTtXRkLTioW997Bvizt23mPNKKGSgu\"]},\"Utils/Ownable.sol\":{\"keccak256\":\"0x5eeb86897007c578f301464fceac720c7330486c54ae85c0c09068b46197cfb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edefd9ff4f087a3016763a687eaae449c0e8f6dcda9d86032a49de900f129050\",\"dweb:/ipfs/Qmc4adiPdGKgEJLxqgd8JuKkwrNBNtB78kkGinnnuUnyJN\"]},\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]},\"Utils/SafeMath.sol\":{\"keccak256\":\"0xdc9b51d94a1db880c1f2e722af561c28c41100eea201b1ae5e77eb7c4250e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b69f7fb378dcfd4aff8ba0547a575485d2d4bb567381e3bf8c593b63272ffc0\",\"dweb:/ipfs/QmaEo28ZDAnpDvpQRRt7Qc8bF5QgJAnTEE4TxYnJS8YmnN\"]},\"Utils/TransferHelper.sol\":{\"keccak256\":\"0xf64de8bda44d6e6a0ef231b637d0d6c78522fd561464c547eeca34f1a8e0482c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e8e7a9c1c50e24298b33bbde7e9d74998b58c889b706c80f95d130952d9e7\",\"dweb:/ipfs/QmP5sAxCH4LFZFJ9uxtFdCdZ3DPJJfv1iU6cHY19urExxw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2675,
								"contract": "Ethereum/Generator.sol:Generator",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 700,
								"contract": "Ethereum/Generator.sol:Generator",
								"label": "presaleSettings",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(PresaleSettings)2046"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(PresaleSettings)2046": {
								"encoding": "inplace",
								"label": "contract PresaleSettings",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ethereum/Presale.sol": {
				"Presale": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "adminReceiveFee",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "backToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "buyerInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "baseDeposit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenOwner",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBaseWithDraw",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkAdminAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeAnyone",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeCreateSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_presaleOwner",
									"type": "address"
								},
								{
									"internalType": "contract ERC20",
									"name": "_saleToken",
									"type": "address"
								},
								{
									"internalType": "contract ERC20",
									"name": "_baseTOken",
									"type": "address"
								},
								{
									"internalType": "uint256[9]",
									"name": "datas",
									"type": "uint256[9]"
								},
								{
									"internalType": "uint256",
									"name": "_feeAnyone",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "_adminReceiveFee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_feeCreateSale",
									"type": "uint256"
								}
							],
							"name": "initialSaleInfor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerClaimAndRefundToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBaseCollected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenSold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBaseWithDraw",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalTokenBackForAdmin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalBaseBackForAdmin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numberBuyer",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isOwnerClaimSaleToken",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "isOwnerRefundBaseToken",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleInfor",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "presaleOwner",
									"type": "address"
								},
								{
									"internalType": "contract ERC20",
									"name": "saleToken",
									"type": "address"
								},
								{
									"internalType": "contract ERC20",
									"name": "baseToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endSale",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minSpendPerBuyer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSpendPerBuyer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "refundFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimFee",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "saleIsBaseToken",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenForSale",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "hardCap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "softCap",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "status",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "userClaimEmergency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "isClaim",
									"type": "bool"
								}
							],
							"name": "userClaimOrRefundWhenSaleSuccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "userRefundEmergency",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ethereum/Presale.sol\":370:11804  contract Presale is ReentrancyGuard, Ownable{\r... */\n  mstore(0x40, 0x80)\n    /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n  0x01\n    /* \"Utils/ReentrancyGuard.sol\":1845:1852  _status */\n  0x00\n    /* \"Utils/ReentrancyGuard.sol\":1845:1867  _status = _NOT_ENTERED */\n  sstore\n    /* \"Utils/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"Utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"Utils/Ownable.sol\":942:960  _transferOwnership */\n  tag_9\n    /* \"Utils/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"Ethereum/Presale.sol\":2438:2442  WETH */\n  0x1b\n    /* \"Ethereum/Presale.sol\":2438:2494  WETH = ERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  dup1\n  sload\n    /* \"Ethereum/Presale.sol\":2451:2493  0xc778417E063141139Fce010982780140Aa0cD5Ab */\n  0xc778417e063141139fce010982780140aa0cd5ab\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"Ethereum/Presale.sol\":2438:2494  WETH = ERC20(0xc778417E063141139Fce010982780140Aa0cD5Ab) */\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"Ethereum/Presale.sol\":2505:2559  admins.add(0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD) */\n  tag_11\n    /* \"Ethereum/Presale.sol\":2505:2511  admins */\n  0x1c\n    /* \"Ethereum/Presale.sol\":2516:2558  0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD */\n  0x6ccb41eeda5a073076f3e7dc1614c185b5fa41ed\n    /* \"Ethereum/Presale.sol\":2505:2515  admins.add */\n  tag_12\n  0x20\n  swap1\n  dup2\n  shl\n  tag_0_128\n  or\n    /* \"Ethereum/Presale.sol\":2505:2559  admins.add(0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD) */\n  swap1\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"Ethereum/Presale.sol\":2570:2624  admins.add(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016) */\n  tag_13\n    /* \"Ethereum/Presale.sol\":2581:2623  0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016 */\n  0x4f0b12bbf40fc182559822a5b1db6d34dbc3e016\n    /* \"Ethereum/Presale.sol\":2570:2576  admins */\n  0x1c\n    /* \"Ethereum/Presale.sol\":2570:2580  admins.add */\n  or(tag_0_128, shl(0x20, tag_12))\n  swap1\n    /* \"Ethereum/Presale.sol\":2570:2624  admins.add(0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"Ethereum/Presale.sol\":370:11804  contract Presale is ReentrancyGuard, Ownable{\r... */\n  jump(tag_14)\n    /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_9:\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  swap2\n  and\n  swap2\n    /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n  swap1\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  dup3\n  swap1\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n  0x00\n  swap1\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Utils/Ownable.sol\":2396:2524  {\r... */\n  pop\n    /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\ntag_12:\n    /* \"Utils/EnumerableSet.sol\":8329:8333  bool */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  tag_18\n    /* \"Utils/EnumerableSet.sol\":8358:8361  set */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Utils/EnumerableSet.sol\":8378:8401  uint256(uint160(value)) */\n  dup5\n  and\n    /* \"Utils/EnumerableSet.sol\":8353:8357  _add */\n  tag_19\n    /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n  jump\t// in\ntag_18:\n    /* \"Utils/EnumerableSet.sol\":8346:8403  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n  swap1\n  pop\n    /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\ntag_17:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Utils/EnumerableSet.sol\":2174:2588  function _add(Set storage set, bytes32 value) private returns (bool) {\r... */\ntag_19:\n    /* \"Utils/EnumerableSet.sol\":2237:2241  bool */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n  dup2\n  dup2\n  mstore\n    /* \"Utils/EnumerableSet.sol\":4367:4379  set._indexes */\n  0x01\n  dup4\n  add\n    /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  sload\n    /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\n  tag_23\n  jumpi\n  pop\n    /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n  dup2\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup5\n  sstore\n    /* \"Utils/EnumerableSet.sol\":2297:2308  set._values */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n  dup5\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  keccak256\n  swap1\n  swap4\n  add\n  dup5\n  swap1\n  sstore\n    /* \"Utils/EnumerableSet.sol\":2480:2498  set._values.length */\n  dup5\n  sload\n    /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n  dup5\n  dup3\n  mstore\n    /* \"Utils/EnumerableSet.sol\":2458:2470  set._indexes */\n  dup3\n  dup7\n  add\n    /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n  swap1\n  swap4\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Utils/EnumerableSet.sol\":2458:2498  set._indexes[value] = set._values.length */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"Utils/EnumerableSet.sol\":2513:2524  return true */\n  jump(tag_17)\n    /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\ntag_23:\n  pop\n    /* \"Utils/EnumerableSet.sol\":2564:2569  false */\n  0x00\n    /* \"Utils/EnumerableSet.sol\":2557:2569  return false */\n  jump(tag_17)\n    /* \"Ethereum/Presale.sol\":370:11804  contract Presale is ReentrancyGuard, Ownable{\r... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ethereum/Presale.sol\":370:11804  contract Presale is ReentrancyGuard, Ownable{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9b25415c\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xcad5b0f7\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xcad5b0f7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd4c1dee9\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe2d3f423\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xeb002bb0\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x9b25415c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xab33985a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xacfb2355\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xae2b0965\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x56c5f349\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x56c5f349\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x861faf5f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8edf18e6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95661e70\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x12e5d0b9\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x18856a2f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1df4ccfc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x200d2ed2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3b5ef2ad\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Ethereum/Presale.sol\":1741:1779  SaleTotalSupply public saleTotalSupply */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      sload(0x0d)\n      sload(0x0e)\n      tag_29\n      swap2\n      swap1\n      dup3\n      jump\n    tag_29:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12399:12424   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":12455:12457   */\n      0x20\n        /* \"#utility.yul\":12440:12458   */\n      dup4\n      add\n        /* \"#utility.yul\":12433:12467   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":12372:12390   */\n      add\n        /* \"Ethereum/Presale.sol\":1741:1779  SaleTotalSupply public saleTotalSupply */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ethereum/Presale.sol\":1786:1812  SaleInfor public saleInfor */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      sload(0x0f)\n      sload(0x10)\n      sload(0x11)\n      sload(0x12)\n      sload(0x13)\n      sload(0x14)\n      sload(0x15)\n      sload(0x16)\n      sload(0x17)\n      sload(0x18)\n      sload(0x19)\n      sload(0x1a)\n      tag_34\n      swap12\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap12\n      dup2\n      and\n      swap11\n      and\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      0xff\n      and\n      swap1\n      dup13\n      jump\n    tag_34:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3950:3965   */\n      swap14\n      dup15\n      and\n        /* \"#utility.yul\":3932:3966   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4002:4017   */\n      swap12\n      dup14\n      and\n        /* \"#utility.yul\":3997:3999   */\n      0x20\n        /* \"#utility.yul\":3982:4000   */\n      dup14\n      add\n        /* \"#utility.yul\":3975:4018   */\n      mstore\n        /* \"#utility.yul\":4054:4069   */\n      swap10\n      swap1\n      swap12\n      and\n        /* \"#utility.yul\":4034:4052   */\n      swap9\n      dup11\n      add\n        /* \"#utility.yul\":4027:4070   */\n      swap9\n      swap1\n      swap9\n      mstore\n        /* \"#utility.yul\":4101:4103   */\n      0x60\n        /* \"#utility.yul\":4086:4104   */\n      dup10\n      add\n        /* \"#utility.yul\":4079:4113   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":4144:4147   */\n      0x80\n        /* \"#utility.yul\":4129:4148   */\n      dup9\n      add\n        /* \"#utility.yul\":4122:4157   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":3912:3915   */\n      0xa0\n        /* \"#utility.yul\":4173:4192   */\n      dup8\n      add\n        /* \"#utility.yul\":4166:4201   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":4232:4235   */\n      0xc0\n        /* \"#utility.yul\":4217:4236   */\n      dup7\n      add\n        /* \"#utility.yul\":4210:4245   */\n      mstore\n        /* \"#utility.yul\":4276:4279   */\n      0xe0\n        /* \"#utility.yul\":4261:4280   */\n      dup6\n      add\n        /* \"#utility.yul\":4254:4289   */\n      mstore\n        /* \"#utility.yul\":4320:4323   */\n      0x0100\n        /* \"#utility.yul\":4305:4324   */\n      dup5\n      add\n        /* \"#utility.yul\":4298:4333   */\n      mstore\n        /* \"#utility.yul\":4364:4367   */\n      0x0120\n        /* \"#utility.yul\":4349:4368   */\n      dup4\n      add\n        /* \"#utility.yul\":4342:4377   */\n      mstore\n        /* \"#utility.yul\":4421:4436   */\n      iszero\n        /* \"#utility.yul\":4414:4437   */\n      iszero\n        /* \"#utility.yul\":4408:4411   */\n      0x0140\n        /* \"#utility.yul\":4393:4412   */\n      dup3\n      add\n        /* \"#utility.yul\":4386:4438   */\n      mstore\n        /* \"#utility.yul\":4469:4472   */\n      0x0160\n        /* \"#utility.yul\":4454:4473   */\n      dup2\n      add\n        /* \"#utility.yul\":4447:4483   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3881:3884   */\n      0x0180\n        /* \"#utility.yul\":3866:3885   */\n      add\n        /* \"Ethereum/Presale.sol\":1786:1812  SaleInfor public saleInfor */\n      tag_31\n        /* \"#utility.yul\":3848:4489   */\n      jump\n        /* \"Ethereum/Presale.sol\":1891:1914  uint256 public totalFee */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      sload(0x1e)\n      dup2\n      jump\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":12189:12214   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":12177:12179   */\n      0x20\n        /* \"#utility.yul\":12162:12180   */\n      add\n        /* \"Ethereum/Presale.sol\":1891:1914  uint256 public totalFee */\n      tag_31\n        /* \"#utility.yul\":12144:12220   */\n      jump\n        /* \"Ethereum/Presale.sol\":4065:4402  function status() public view returns(uint256) {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_39\n      tag_45\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":1921:1945  uint256 public feeAnyone */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_39\n      sload(0x1f)\n      dup2\n      jump\n        /* \"Ethereum/Presale.sol\":1651:1693  mapping(address => uint256) public userFee */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_39\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"Ethereum/Presale.sol\":11693:11801  function backToken() external payable {\r... */\n    tag_9:\n      tag_58\n      tag_61\n      jump\t// in\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_63:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3357:3389   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3339:3390   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3327:3329   */\n      0x20\n        /* \"#utility.yul\":3312:3330   */\n      add\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n      tag_31\n        /* \"#utility.yul\":3294:3396   */\n      jump\n        /* \"Ethereum/Presale.sol\":8780:9982  function ownerClaimAndRefundToken() external onlyPresaleOwner nonReentrant{\r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_58\n      tag_69\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":7761:8772  function userRefundEmergency() external nonReentrant {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_58\n      tag_72\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":2640:4056  function initialSaleInfor(\r... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_58\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":6749:7753  function userClaimEmergency() external nonReentrant {\r... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_58\n      tag_80\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":1700:1734  PresaleStatus public presaleStatus */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      sload(0x04)\n      sload(0x05)\n      sload(0x06)\n      sload(0x07)\n      sload(0x08)\n      sload(0x09)\n      sload(0x0a)\n      sload(0x0b)\n      tag_82\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      0xff\n      dup1\n      dup3\n      and\n      swap2\n      0x0100\n      swap1\n      div\n      and\n      dup10\n      jump\n    tag_82:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":13305:13330   */\n      swap10\n      dup11\n      mstore\n        /* \"#utility.yul\":13361:13363   */\n      0x20\n        /* \"#utility.yul\":13346:13364   */\n      dup11\n      add\n        /* \"#utility.yul\":13339:13373   */\n      swap9\n      swap1\n      swap9\n      mstore\n        /* \"#utility.yul\":13389:13407   */\n      swap7\n      dup9\n      add\n        /* \"#utility.yul\":13382:13416   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":13447:13449   */\n      0x60\n        /* \"#utility.yul\":13432:13450   */\n      dup8\n      add\n        /* \"#utility.yul\":13425:13459   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":13490:13493   */\n      0x80\n        /* \"#utility.yul\":13475:13494   */\n      dup7\n      add\n        /* \"#utility.yul\":13468:13503   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":13534:13537   */\n      0xa0\n        /* \"#utility.yul\":13519:13538   */\n      dup6\n      add\n        /* \"#utility.yul\":13512:13547   */\n      mstore\n        /* \"#utility.yul\":13578:13581   */\n      0xc0\n        /* \"#utility.yul\":13563:13582   */\n      dup5\n      add\n        /* \"#utility.yul\":13556:13591   */\n      mstore\n        /* \"#utility.yul\":13635:13649   */\n      iszero\n        /* \"#utility.yul\":13628:13650   */\n      iszero\n        /* \"#utility.yul\":13622:13625   */\n      0xe0\n        /* \"#utility.yul\":13607:13626   */\n      dup4\n      add\n        /* \"#utility.yul\":13600:13651   */\n      mstore\n        /* \"#utility.yul\":13695:13709   */\n      iszero\n        /* \"#utility.yul\":13688:13710   */\n      iszero\n        /* \"#utility.yul\":13682:13685   */\n      0x0100\n        /* \"#utility.yul\":13667:13686   */\n      dup3\n      add\n        /* \"#utility.yul\":13660:13711   */\n      mstore\n        /* \"#utility.yul\":13292:13295   */\n      0x0120\n        /* \"#utility.yul\":13277:13296   */\n      add\n        /* \"Ethereum/Presale.sol\":1700:1734  PresaleStatus public presaleStatus */\n      tag_31\n        /* \"#utility.yul\":13259:13717   */\n      jump\n        /* \"Ethereum/Presale.sol\":1819:1837  IERC20 public WETH */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      sload(0x1b)\n      tag_63\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Ethereum/Presale.sol\":1952:1982  address public adminReceiveFee */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      sload(0x20)\n      tag_63\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Ethereum/Presale.sol\":4529:6741  function deposit(uint256 _amount) external payable nonReentrant {\r... */\n    tag_18:\n      tag_58\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":4411:4521  function checkAdminAddress() public view returns(bool) {\r... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n        /* \"#utility.yul\":5605:5619   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5598:5620   */\n      iszero\n        /* \"#utility.yul\":5580:5621   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5568:5570   */\n      0x20\n        /* \"#utility.yul\":5553:5571   */\n      add\n        /* \"Ethereum/Presale.sol\":4411:4521  function checkAdminAddress() public view returns(bool) {\r... */\n      tag_31\n        /* \"#utility.yul\":5535:5627   */\n      jump\n        /* \"Ethereum/Presale.sol\":1990:2018  uint256 public feeCreateSale */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_39\n      sload(0x21)\n      dup2\n      jump\n        /* \"Ethereum/Presale.sol\":1598:1644  mapping(address => BuyerInfo) public buyerInfo */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      tag_110\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_110:\n      0x02\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup3\n      add\n      sload\n      0x03\n      dup4\n      add\n      sload\n      0x04\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap4\n      swap3\n      swap1\n      swap2\n      dup6\n      jump\n    tag_109:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12737:12762   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":12793:12795   */\n      0x20\n        /* \"#utility.yul\":12778:12796   */\n      dup7\n      add\n        /* \"#utility.yul\":12771:12805   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":12821:12839   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":12814:12848   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":12879:12881   */\n      0x60\n        /* \"#utility.yul\":12864:12882   */\n      dup4\n      add\n        /* \"#utility.yul\":12857:12891   */\n      mstore\n        /* \"#utility.yul\":12922:12925   */\n      0x80\n        /* \"#utility.yul\":12907:12926   */\n      dup3\n      add\n        /* \"#utility.yul\":12900:12935   */\n      mstore\n        /* \"#utility.yul\":12724:12727   */\n      0xa0\n        /* \"#utility.yul\":12709:12728   */\n      add\n        /* \"Ethereum/Presale.sol\":1598:1644  mapping(address => BuyerInfo) public buyerInfo */\n      tag_31\n        /* \"#utility.yul\":12691:12941   */\n      jump\n        /* \"Ethereum/Presale.sol\":9990:11563  function userClaimOrRefundWhenSaleSuccess(bool isClaim) external {\r... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_58\n      tag_116\n      calldatasize\n      0x04\n      tag_117\n      jump\t// in\n    tag_116:\n      tag_118\n      jump\t// in\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_58\n      tag_121\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":11571:11682  function getBalance(address _address) external view returns(uint256) {\r... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_39\n      tag_125\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":11658:11674  _address.balance */\n      and\n      balance\n      swap1\n        /* \"Ethereum/Presale.sol\":11571:11682  function getBalance(address _address) external view returns(uint256) {\r... */\n      jump\n        /* \"Ethereum/Presale.sol\":4065:4402  function status() public view returns(uint256) {\r... */\n    tag_45:\n        /* \"Ethereum/Presale.sol\":4144:4163  saleInfor.startSale */\n      sload(0x13)\n        /* \"Ethereum/Presale.sol\":4103:4110  uint256 */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":4126:4141  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":4126:4163  block.timestamp < saleInfor.startSale */\n      lt\n        /* \"Ethereum/Presale.sol\":4123:4395  if(block.timestamp < saleInfor.startSale) {\r... */\n      iszero\n      tag_130\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":4187:4188  0 */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":4065:4402  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":4123:4395  if(block.timestamp < saleInfor.startSale) {\r... */\n    tag_130:\n        /* \"Ethereum/Presale.sol\":4254:4271  saleInfor.endSale */\n      sload(0x14)\n        /* \"Ethereum/Presale.sol\":4236:4251  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":4236:4271  block.timestamp > saleInfor.endSale */\n      gt\n        /* \"Ethereum/Presale.sol\":4233:4384  if(block.timestamp > saleInfor.endSale) {\r... */\n      iszero\n      tag_132\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":4299:4300  2 */\n      0x02\n      swap1\n        /* \"Ethereum/Presale.sol\":4065:4402  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":4233:4384  if(block.timestamp > saleInfor.endSale) {\r... */\n    tag_132:\n      pop\n        /* \"Ethereum/Presale.sol\":4357:4358  1 */\n      0x01\n      swap1\n        /* \"Ethereum/Presale.sol\":4065:4402  function status() public view returns(uint256) {\r... */\n      jump\t// out\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_59:\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10074:10076   */\n      0x20\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10056:10077   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10093:10111   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10086:10116   */\n      mstore\n        /* \"#utility.yul\":10152:10186   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10132:10150   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10125:10187   */\n      mstore\n        /* \"#utility.yul\":10204:10222   */\n      0x64\n      add\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"Utils/Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      tag_142\n        /* \"Utils/Ownable.sol\":1806:1807  0 */\n      0x00\n        /* \"Utils/Ownable.sol\":1779:1797  _transferOwnership */\n      tag_143\n        /* \"Utils/Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_142:\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":11693:11801  function backToken() external payable {\r... */\n    tag_61:\n        /* \"Ethereum/Presale.sol\":11742:11793  payable(msg.sender).transfer(address(this).balance) */\n      mload(0x40)\n        /* \"Ethereum/Presale.sol\":11750:11760  msg.sender */\n      caller\n      swap1\n        /* \"Ethereum/Presale.sol\":11771:11792  address(this).balance */\n      selfbalance\n        /* \"Ethereum/Presale.sol\":11742:11793  payable(msg.sender).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"Ethereum/Presale.sol\":11771:11792  address(this).balance */\n      dup6\n        /* \"Ethereum/Presale.sol\":11750:11760  msg.sender */\n      dup9\n        /* \"Ethereum/Presale.sol\":11742:11793  payable(msg.sender).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n        /* \"Ethereum/Presale.sol\":11693:11801  function backToken() external payable {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":8780:9982  function ownerClaimAndRefundToken() external onlyPresaleOwner nonReentrant{\r... */\n    tag_69:\n        /* \"Ethereum/Presale.sol\":2203:2212  saleInfor */\n      0x0f\n        /* \"Ethereum/Presale.sol\":2203:2225  saleInfor.presaleOwner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":2187:2225  _msgSender() == saleInfor.presaleOwner */\n      and\n      eq\n        /* \"Ethereum/Presale.sol\":2179:2248  require(_msgSender() == saleInfor.presaleOwner, \"Only presale owner\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9727:9729   */\n      0x20\n        /* \"Ethereum/Presale.sol\":2179:2248  require(_msgSender() == saleInfor.presaleOwner, \"Only presale owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9709:9730   */\n      mstore\n        /* \"#utility.yul\":9766:9768   */\n      0x12\n        /* \"#utility.yul\":9746:9764   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9739:9769   */\n      mstore\n      shl(0x71, 0x27b7363c90383932b9b0b6329037bbb732b9)\n        /* \"#utility.yul\":9785:9803   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9778:9826   */\n      mstore\n        /* \"#utility.yul\":9843:9861   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":2179:2248  require(_msgSender() == saleInfor.presaleOwner, \"Only presale owner\") */\n      tag_139\n        /* \"#utility.yul\":9699:9867   */\n      jump\n        /* \"Ethereum/Presale.sol\":2179:2248  require(_msgSender() == saleInfor.presaleOwner, \"Only presale owner\") */\n    tag_150:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2376:2383  _status */\n      sload(0x00)\n        /* \"Utils/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_156\n      jump\t// in\n    tag_154:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2509:2516  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      swap1\n      dup2\n      sstore\n        /* \"Ethereum/Presale.sol\":8963:8982  saleInfor.saleToken */\n      sload(0x10)\n        /* \"Ethereum/Presale.sol\":8957:9008  ERC20(saleInfor.saleToken).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":9002:9006  this */\n      address\n        /* \"Ethereum/Presale.sol\":8957:9008  ERC20(saleInfor.saleToken).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3339:3390   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":8963:8982  saleInfor.saleToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Ethereum/Presale.sol\":8957:8993  ERC20(saleInfor.saleToken).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3312:3330   */\n      0x24\n      add\n        /* \"Ethereum/Presale.sol\":8957:9008  ERC20(saleInfor.saleToken).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"Ethereum/Presale.sol\":9145:9181  presaleStatus.totalTokenBackForAdmin */\n      sload(0x08)\n        /* \"Ethereum/Presale.sol\":9145:9158  presaleStatus */\n      0x04\n        /* \"Ethereum/Presale.sol\":9059:9091  presaleStatus.totalBaseCollected */\n      sload\n        /* \"Ethereum/Presale.sol\":8925:9008  uint256 amountOwnerClaimToken = ERC20(saleInfor.saleToken).balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"Ethereum/Presale.sol\":9020:9055  uint256 amountOwnerRefundNativeCoin */\n      0x00\n      swap2\n        /* \"Ethereum/Presale.sol\":9059:9231  presaleStatus.totalBaseCollected\r... */\n      tag_164\n      swap2\n        /* \"Ethereum/Presale.sol\":9059:9144  presaleStatus.totalBaseCollected\r... */\n      tag_165\n        /* \"Ethereum/Presale.sol\":9059:9231  presaleStatus.totalBaseCollected\r... */\n      jump\t// in\n    tag_164:\n        /* \"Ethereum/Presale.sol\":9246:9259  presaleStatus */\n      0x04\n        /* \"Ethereum/Presale.sol\":9246:9278  presaleStatus.totalBaseCollected */\n      sload\n        /* \"Ethereum/Presale.sol\":9020:9232  uint256 amountOwnerRefundNativeCoin = (presaleStatus.totalBaseCollected\r... */\n      swap1\n      swap2\n      pop\n        /* \"Ethereum/Presale.sol\":9246:9283  presaleStatus.totalBaseCollected != 0 */\n      iszero\n        /* \"Ethereum/Presale.sol\":9243:9526  if(presaleStatus.totalBaseCollected != 0){\r... */\n      tag_166\n      jumpi\n        /* \"Ethereum/Presale.sol\":9458:9494  presaleStatus.totalTokenBackForAdmin */\n      sload(0x08)\n        /* \"Ethereum/Presale.sol\":9387:9415  presaleStatus.totalTokenSold */\n      sload(0x05)\n        /* \"Ethereum/Presale.sol\":9323:9496  amountOwnerClaimToken\r... */\n      tag_167\n      swap2\n        /* \"Ethereum/Presale.sol\":9387:9495  presaleStatus.totalTokenSold\r... */\n      tag_168\n      swap2\n        /* \"Ethereum/Presale.sol\":9387:9415  presaleStatus.totalTokenSold */\n      swap1\n        /* \"Ethereum/Presale.sol\":9387:9457  presaleStatus.totalTokenSold\r... */\n      tag_165\n        /* \"Ethereum/Presale.sol\":9387:9495  presaleStatus.totalTokenSold\r... */\n      jump\t// in\n    tag_168:\n        /* \"Ethereum/Presale.sol\":9323:9344  amountOwnerClaimToken */\n      dup4\n      swap1\n        /* \"Ethereum/Presale.sol\":9323:9386  amountOwnerClaimToken\r... */\n      tag_165\n        /* \"Ethereum/Presale.sol\":9323:9496  amountOwnerClaimToken\r... */\n      jump\t// in\n    tag_167:\n        /* \"Ethereum/Presale.sol\":9299:9496  amountOwnerClaimToken = amountOwnerClaimToken\r... */\n      swap2\n      pop\n        /* \"Ethereum/Presale.sol\":9243:9526  if(presaleStatus.totalBaseCollected != 0){\r... */\n    tag_166:\n        /* \"Ethereum/Presale.sol\":9545:9580  presaleStatus.isOwnerClaimSaleToken */\n      and(0xff, sload(0x0b))\n        /* \"Ethereum/Presale.sol\":9544:9580  !presaleStatus.isOwnerClaimSaleToken */\n      iszero\n        /* \"Ethereum/Presale.sol\":9536:9614  require(!presaleStatus.isOwnerClaimSaleToken, \"Nothing for owner claim token\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11183:11185   */\n      0x20\n        /* \"Ethereum/Presale.sol\":9536:9614  require(!presaleStatus.isOwnerClaimSaleToken, \"Nothing for owner claim token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11165:11186   */\n      mstore\n        /* \"#utility.yul\":11222:11224   */\n      0x1d\n        /* \"#utility.yul\":11202:11220   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11195:11225   */\n      mstore\n        /* \"#utility.yul\":11261:11292   */\n      0x4e6f7468696e6720666f72206f776e657220636c61696d20746f6b656e000000\n        /* \"#utility.yul\":11241:11259   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11234:11293   */\n      mstore\n        /* \"#utility.yul\":11310:11328   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":9536:9614  require(!presaleStatus.isOwnerClaimSaleToken, \"Nothing for owner claim token\") */\n      tag_139\n        /* \"#utility.yul\":11155:11334   */\n      jump\n        /* \"Ethereum/Presale.sol\":9536:9614  require(!presaleStatus.isOwnerClaimSaleToken, \"Nothing for owner claim token\") */\n    tag_169:\n        /* \"Ethereum/Presale.sol\":9634:9670  presaleStatus.isOwnerRefundBaseToken */\n      sload(0x0b)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"Ethereum/Presale.sol\":9633:9670  !presaleStatus.isOwnerRefundBaseToken */\n      iszero\n        /* \"Ethereum/Presale.sol\":9625:9705  require(!presaleStatus.isOwnerRefundBaseToken, \"Nothing for owner refund token\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7526:7528   */\n      0x20\n        /* \"Ethereum/Presale.sol\":9625:9705  require(!presaleStatus.isOwnerRefundBaseToken, \"Nothing for owner refund token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7508:7529   */\n      mstore\n        /* \"#utility.yul\":7565:7567   */\n      0x1e\n        /* \"#utility.yul\":7545:7563   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7538:7568   */\n      mstore\n        /* \"#utility.yul\":7604:7636   */\n      0x4e6f7468696e6720666f72206f776e657220726566756e6420746f6b656e0000\n        /* \"#utility.yul\":7584:7602   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7577:7637   */\n      mstore\n        /* \"#utility.yul\":7654:7672   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":9625:9705  require(!presaleStatus.isOwnerRefundBaseToken, \"Nothing for owner refund token\") */\n      tag_139\n        /* \"#utility.yul\":7498:7678   */\n      jump\n        /* \"Ethereum/Presale.sol\":9625:9705  require(!presaleStatus.isOwnerRefundBaseToken, \"Nothing for owner refund token\") */\n    tag_172:\n        /* \"Ethereum/Presale.sol\":9716:9751  presaleStatus.isOwnerClaimSaleToken */\n      0x0b\n        /* \"Ethereum/Presale.sol\":9716:9758  presaleStatus.isOwnerClaimSaleToken = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Ethereum/Presale.sol\":9754:9758  true */\n      0x01\n        /* \"Ethereum/Presale.sol\":9716:9758  presaleStatus.isOwnerClaimSaleToken = true */\n      or\n      swap1\n      sstore\n      0x00\n        /* \"Ethereum/Presale.sol\":9769:9797  saleInfor.amountTokenForSale */\n      0x1a\n        /* \"Ethereum/Presale.sol\":9769:9801  saleInfor.amountTokenForSale = 0 */\n      sstore\n        /* \"Ethereum/Presale.sol\":9818:9837  saleInfor.saleToken */\n      sload(0x10)\n        /* \"Ethereum/Presale.sol\":9769:9778  saleInfor */\n      0x0f\n        /* \"Ethereum/Presale.sol\":9848:9870  saleInfor.presaleOwner */\n      sload\n        /* \"Ethereum/Presale.sol\":9812:9894  ERC20(saleInfor.saleToken).transfer(saleInfor.presaleOwner, amountOwnerClaimToken) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":9848:9870  saleInfor.presaleOwner */\n      swap2\n      dup3\n      and\n        /* \"Ethereum/Presale.sol\":9716:9729  presaleStatus */\n      0x04\n        /* \"Ethereum/Presale.sol\":9812:9894  ERC20(saleInfor.saleToken).transfer(saleInfor.presaleOwner, amountOwnerClaimToken) */\n      dup3\n      add\n        /* \"#utility.yul\":4676:4727   */\n      mstore\n        /* \"#utility.yul\":4743:4761   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4736:4770   */\n      dup6\n      swap1\n      mstore\n        /* \"Ethereum/Presale.sol\":9818:9837  saleInfor.saleToken */\n      swap2\n      and\n      swap1\n        /* \"Ethereum/Presale.sol\":9812:9847  ERC20(saleInfor.saleToken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4649:4667   */\n      0x44\n      add\n        /* \"Ethereum/Presale.sol\":9812:9894  ERC20(saleInfor.saleToken).transfer(saleInfor.presaleOwner, amountOwnerClaimToken) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      pop\n        /* \"Ethereum/Presale.sol\":9913:9922  saleInfor */\n      0x0f\n        /* \"Ethereum/Presale.sol\":9913:9935  saleInfor.presaleOwner */\n      sload\n        /* \"Ethereum/Presale.sol\":9905:9974  payable(saleInfor.presaleOwner).transfer(amountOwnerRefundNativeCoin) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":9913:9935  saleInfor.presaleOwner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Ethereum/Presale.sol\":9905:9974  payable(saleInfor.presaleOwner).transfer(amountOwnerRefundNativeCoin) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"Ethereum/Presale.sol\":9946:9973  amountOwnerRefundNativeCoin */\n      dup4\n      swap1\n        /* \"Ethereum/Presale.sol\":9913:9935  saleInfor.presaleOwner */\n      0x00\n        /* \"Ethereum/Presale.sol\":9905:9974  payable(saleInfor.presaleOwner).transfer(amountOwnerRefundNativeCoin) */\n      dup2\n        /* \"Ethereum/Presale.sol\":9913:9935  saleInfor.presaleOwner */\n      dup2\n        /* \"Ethereum/Presale.sol\":9905:9974  payable(saleInfor.presaleOwner).transfer(amountOwnerRefundNativeCoin) */\n      dup2\n        /* \"Ethereum/Presale.sol\":9946:9973  amountOwnerRefundNativeCoin */\n      dup6\n        /* \"Ethereum/Presale.sol\":9913:9935  saleInfor.presaleOwner */\n      dup9\n        /* \"Ethereum/Presale.sol\":9905:9974  payable(saleInfor.presaleOwner).transfer(amountOwnerRefundNativeCoin) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n        /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"Utils/ReentrancyGuard.sol\":2688:2695  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      sstore\n      pop\n        /* \"Ethereum/Presale.sol\":8780:9982  function ownerClaimAndRefundToken() external onlyPresaleOwner nonReentrant{\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":7761:8772  function userRefundEmergency() external nonReentrant {\r... */\n    tag_72:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2376:2383  _status */\n      sload(0x00)\n        /* \"Utils/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_156\n      jump\t// in\n    tag_185:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2509:2516  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      swap1\n      dup2\n      sstore\n        /* \"Ethereum/Presale.sol\":7920:7951  presaleStatus.totalBaseWithDraw */\n      sload(0x07)\n        /* \"Ethereum/Presale.sol\":7920:7933  presaleStatus */\n      0x04\n        /* \"Ethereum/Presale.sol\":7885:7917  presaleStatus.totalBaseCollected */\n      sload\n        /* \"Ethereum/Presale.sol\":7885:7951  presaleStatus.totalBaseCollected - presaleStatus.totalBaseWithDraw */\n      tag_188\n      swap2\n        /* \"Ethereum/Presale.sol\":7920:7951  presaleStatus.totalBaseWithDraw */\n      swap1\n        /* \"Ethereum/Presale.sol\":7885:7951  presaleStatus.totalBaseCollected - presaleStatus.totalBaseWithDraw */\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"Ethereum/Presale.sol\":7885:7955  presaleStatus.totalBaseCollected - presaleStatus.totalBaseWithDraw > 0 */\n      gt\n        /* \"Ethereum/Presale.sol\":7877:8014  require(presaleStatus.totalBaseCollected - presaleStatus.totalBaseWithDraw > 0, \r... */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_192\n      jump\t// in\n    tag_190:\n        /* \"Ethereum/Presale.sol\":8062:8072  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":8026:8049  BuyerInfo storage buyer */\n      0x00\n        /* \"Ethereum/Presale.sol\":8052:8073  buyerInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":8052:8061  buyerInfo */\n      0x02\n        /* \"Ethereum/Presale.sol\":8052:8073  buyerInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Ethereum/Presale.sol\":8092:8109  buyer.baseDeposit */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":8084:8141  require(buyer.baseDeposit > 0, \"You have not bought yet\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6056:6058   */\n      0x20\n        /* \"Ethereum/Presale.sol\":8084:8141  require(buyer.baseDeposit > 0, \"You have not bought yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6038:6059   */\n      mstore\n        /* \"#utility.yul\":6095:6097   */\n      0x17\n        /* \"#utility.yul\":6075:6093   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6068:6098   */\n      mstore\n      shl(0x4a, 0x165bdd481a185d99481b9bdd08189bdd59da1d081e595d)\n        /* \"#utility.yul\":6114:6132   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6107:6160   */\n      mstore\n        /* \"#utility.yul\":6177:6195   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":8084:8141  require(buyer.baseDeposit > 0, \"You have not bought yet\") */\n      tag_139\n        /* \"#utility.yul\":6028:6201   */\n      jump\n        /* \"Ethereum/Presale.sol\":8084:8141  require(buyer.baseDeposit > 0, \"You have not bought yet\") */\n    tag_193:\n        /* \"Ethereum/Presale.sol\":8180:8203  buyer.totalBaseWithDraw */\n      0x04\n      dup2\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":8160:8177  buyer.baseDeposit */\n      dup2\n      sload\n        /* \"Ethereum/Presale.sol\":8160:8203  buyer.baseDeposit > buyer.totalBaseWithDraw */\n      gt\n        /* \"Ethereum/Presale.sol\":8152:8222  require(buyer.baseDeposit > buyer.totalBaseWithDraw, \"You refund all\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10435:10437   */\n      0x20\n        /* \"Ethereum/Presale.sol\":8152:8222  require(buyer.baseDeposit > buyer.totalBaseWithDraw, \"You refund all\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10417:10438   */\n      mstore\n        /* \"#utility.yul\":10474:10476   */\n      0x0e\n        /* \"#utility.yul\":10454:10472   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10447:10477   */\n      mstore\n      shl(0x92, 0x165bdd481c99599d5b9908185b1b)\n        /* \"#utility.yul\":10493:10511   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10486:10530   */\n      mstore\n        /* \"#utility.yul\":10547:10565   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":8152:8222  require(buyer.baseDeposit > buyer.totalBaseWithDraw, \"You refund all\") */\n      tag_139\n        /* \"#utility.yul\":10407:10571   */\n      jump\n        /* \"Ethereum/Presale.sol\":8152:8222  require(buyer.baseDeposit > buyer.totalBaseWithDraw, \"You refund all\") */\n    tag_196:\n        /* \"Ethereum/Presale.sol\":8335:8352  buyer.baseDeposit */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":8276:8295  saleInfor.refundFee */\n      sload(0x17)\n        /* \"Ethereum/Presale.sol\":8233:8253  uint256 amountRefund */\n      0x00\n      swap2\n        /* \"Ethereum/Presale.sol\":8256:8406  ((uint256(1000).sub(saleInfor.refundFee))\r... */\n      tag_199\n      swap2\n        /* \"Ethereum/Presale.sol\":8400:8404  1000 */\n      0x03e8\n      swap2\n        /* \"Ethereum/Presale.sol\":8257:8353  (uint256(1000).sub(saleInfor.refundFee))\r... */\n      tag_200\n      swap2\n        /* \"Ethereum/Presale.sol\":8258:8296  uint256(1000).sub(saleInfor.refundFee) */\n      tag_201\n      swap1\n        /* \"Ethereum/Presale.sol\":8400:8404  1000 */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":8258:8275  uint256(1000).sub */\n      tag_165\n        /* \"Ethereum/Presale.sol\":8258:8296  uint256(1000).sub(saleInfor.refundFee) */\n      jump\t// in\n    tag_201:\n        /* \"Ethereum/Presale.sol\":8257:8334  (uint256(1000).sub(saleInfor.refundFee))\r... */\n      swap1\n      tag_202\n        /* \"Ethereum/Presale.sol\":8257:8353  (uint256(1000).sub(saleInfor.refundFee))\r... */\n      jump\t// in\n    tag_200:\n        /* \"Ethereum/Presale.sol\":8256:8391  ((uint256(1000).sub(saleInfor.refundFee))\r... */\n      swap1\n      tag_203\n        /* \"Ethereum/Presale.sol\":8256:8406  ((uint256(1000).sub(saleInfor.refundFee))\r... */\n      jump\t// in\n    tag_199:\n        /* \"Ethereum/Presale.sol\":8429:8446  buyer.baseDeposit */\n      dup3\n      sload\n        /* \"Ethereum/Presale.sol\":8233:8406  uint256 amountRefund = ((uint256(1000).sub(saleInfor.refundFee))\r... */\n      swap1\n      swap2\n      pop\n        /* \"Ethereum/Presale.sol\":8429:8461  buyer.baseDeposit - amountRefund */\n      tag_204\n      swap1\n        /* \"Ethereum/Presale.sol\":8233:8406  uint256 amountRefund = ((uint256(1000).sub(saleInfor.refundFee))\r... */\n      dup3\n      swap1\n        /* \"Ethereum/Presale.sol\":8429:8461  buyer.baseDeposit - amountRefund */\n      tag_189\n      jump\t// in\n    tag_204:\n        /* \"Ethereum/Presale.sol\":8417:8425  totalFee */\n      0x1e\n      0x00\n        /* \"Ethereum/Presale.sol\":8417:8461  totalFee += buyer.baseDeposit - amountRefund */\n      dup3\n      dup3\n      sload\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":8472:8503  presaleStatus.totalBaseWithDraw */\n      0x07\n        /* \"Ethereum/Presale.sol\":8472:8519  presaleStatus.totalBaseWithDraw += amountRefund */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":8507:8519  amountRefund */\n      dup3\n      swap2\n        /* \"Ethereum/Presale.sol\":8472:8503  presaleStatus.totalBaseWithDraw */\n      swap1\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":8472:8519  presaleStatus.totalBaseWithDraw += amountRefund */\n      tag_207\n      swap1\n        /* \"Ethereum/Presale.sol\":8507:8519  amountRefund */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":8472:8519  presaleStatus.totalBaseWithDraw += amountRefund */\n      tag_206\n      jump\t// in\n    tag_207:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ethereum/Presale.sol\":8557:8569  amountRefund */\n      dup1\n        /* \"Ethereum/Presale.sol\":8530:8535  buyer */\n      dup3\n        /* \"Ethereum/Presale.sol\":8530:8553  buyer.totalBaseWithDraw */\n      0x04\n      add\n      0x00\n        /* \"Ethereum/Presale.sol\":8530:8569  buyer.totalBaseWithDraw += amountRefund */\n      dup3\n      dup3\n      sload\n      tag_208\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_208:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":8601:8616  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":8580:8598  buyer.lastWithDraw */\n      0x02\n      dup4\n      add\n        /* \"Ethereum/Presale.sol\":8580:8616  buyer.lastWithDraw = block.timestamp */\n      sstore\n        /* \"Ethereum/Presale.sol\":8686:8710  buyer.totalTokenWithDraw */\n      0x03\n      dup3\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":8667:8683  buyer.tokenOwner */\n      0x01\n      dup4\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":8667:8710  buyer.tokenOwner - buyer.totalTokenWithDraw */\n      tag_209\n      swap2\n        /* \"Ethereum/Presale.sol\":8686:8710  buyer.totalTokenWithDraw */\n      swap1\n        /* \"Ethereum/Presale.sol\":8667:8710  buyer.tokenOwner - buyer.totalTokenWithDraw */\n      tag_189\n      jump\t// in\n    tag_209:\n        /* \"Ethereum/Presale.sol\":8627:8663  presaleStatus.totalTokenBackForAdmin */\n      0x08\n        /* \"Ethereum/Presale.sol\":8627:8710  presaleStatus.totalTokenBackForAdmin += buyer.tokenOwner - buyer.totalTokenWithDraw */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":8627:8663  presaleStatus.totalTokenBackForAdmin */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":8627:8710  presaleStatus.totalTokenBackForAdmin += buyer.tokenOwner - buyer.totalTokenWithDraw */\n      tag_210\n      swap1\n      dup5\n      swap1\n      tag_206\n      jump\t// in\n    tag_210:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":8722:8764  payable(msg.sender).transfer(amountRefund) */\n      mload(0x40)\n        /* \"Ethereum/Presale.sol\":8730:8740  msg.sender */\n      caller\n      swap1\n        /* \"Ethereum/Presale.sol\":8722:8764  payable(msg.sender).transfer(amountRefund) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"Ethereum/Presale.sol\":8751:8763  amountRefund */\n      dup4\n      swap1\n        /* \"Ethereum/Presale.sol\":8722:8764  payable(msg.sender).transfer(amountRefund) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"Ethereum/Presale.sol\":8751:8763  amountRefund */\n      dup6\n        /* \"Ethereum/Presale.sol\":8730:8740  msg.sender */\n      dup9\n        /* \"Ethereum/Presale.sol\":8722:8764  payable(msg.sender).transfer(amountRefund) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"Ethereum/Presale.sol\":2640:4056  function initialSaleInfor(\r... */\n    tag_77:\n        /* \"Ethereum/Presale.sol\":2926:2935  saleInfor */\n      0x0f\n        /* \"Ethereum/Presale.sol\":2926:2964  saleInfor.presaleOwner = _presaleOwner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup11\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Ethereum/Presale.sol\":2975:2994  saleInfor.saleToken */\n      0x10\n        /* \"Ethereum/Presale.sol\":2975:3007  saleInfor.saleToken = _saleToken */\n      dup1\n      sload\n      dup10\n      dup5\n      and\n      swap1\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Ethereum/Presale.sol\":3018:3037  saleInfor.baseToken */\n      0x11\n        /* \"Ethereum/Presale.sol\":3018:3050  saleInfor.baseToken = _baseTOken */\n      dup1\n      sload\n      swap4\n      dup10\n      and\n      swap4\n      swap1\n      swap3\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      sstore\n        /* \"Ethereum/Presale.sol\":3108:3145  ERC20(saleInfor.saleToken).decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Ethereum/Presale.sol\":3108:3143  ERC20(saleInfor.saleToken).decimals */\n      0x313ce567\n      swap2\n        /* \"Ethereum/Presale.sol\":3108:3145  ERC20(saleInfor.saleToken).decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Ethereum/Presale.sol\":2975:3007  saleInfor.saleToken = _saleToken */\n      dup7\n        /* \"Ethereum/Presale.sol\":3108:3145  ERC20(saleInfor.saleToken).decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_216:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_217:\n        /* \"Ethereum/Presale.sol\":3095:3146  10** uint256(ERC20(saleInfor.saleToken).decimals()) */\n      tag_218\n      swap1\n        /* \"Ethereum/Presale.sol\":3095:3097  10 */\n      0x0a\n        /* \"Ethereum/Presale.sol\":3095:3146  10** uint256(ERC20(saleInfor.saleToken).decimals()) */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"Ethereum/Presale.sol\":3084:3092  datas[0] */\n      dup5\n      mload\n        /* \"Ethereum/Presale.sol\":3084:3146  datas[0] * 10** uint256(ERC20(saleInfor.saleToken).decimals()) */\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"Ethereum/Presale.sol\":3061:3081  saleInfor.tokenPrice */\n      0x12\n        /* \"Ethereum/Presale.sol\":3061:3146  saleInfor.tokenPrice = datas[0] * 10** uint256(ERC20(saleInfor.saleToken).decimals()) */\n      sstore\n        /* \"Ethereum/Presale.sol\":3179:3187  datas[1] */\n      0x20\n      dup1\n      dup6\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":3157:3176  saleInfor.startSale */\n      0x13\n        /* \"Ethereum/Presale.sol\":3157:3187  saleInfor.startSale = datas[1] */\n      sstore\n        /* \"Ethereum/Presale.sol\":3218:3226  datas[2] */\n      0x40\n      dup1\n      dup7\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":3198:3215  saleInfor.endSale */\n      0x14\n        /* \"Ethereum/Presale.sol\":3198:3226  saleInfor.endSale = datas[2] */\n      sstore\n        /* \"Ethereum/Presale.sol\":3266:3274  datas[3] */\n      0x60\n      dup7\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":3237:3263  saleInfor.minSpendPerBuyer */\n      0x15\n        /* \"Ethereum/Presale.sol\":3237:3274  saleInfor.minSpendPerBuyer = datas[3] */\n      sstore\n        /* \"Ethereum/Presale.sol\":3345:3364  saleInfor.baseToken */\n      sload(0x11)\n        /* \"Ethereum/Presale.sol\":3339:3376  ERC20(saleInfor.baseToken).decimals() */\n      dup2\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":3345:3364  saleInfor.baseToken */\n      swap1\n      swap2\n      and\n      swap3\n        /* \"Ethereum/Presale.sol\":3339:3374  ERC20(saleInfor.baseToken).decimals */\n      0x313ce567\n      swap3\n        /* \"Ethereum/Presale.sol\":3339:3376  ERC20(saleInfor.baseToken).decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap4\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Ethereum/Presale.sol\":3345:3364  saleInfor.baseToken */\n      dup7\n        /* \"Ethereum/Presale.sol\":3339:3376  ERC20(saleInfor.baseToken).decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_233\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_233:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_234\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_234:\n        /* \"Ethereum/Presale.sol\":3325:3377  10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_235\n      swap1\n        /* \"Ethereum/Presale.sol\":3325:3327  10 */\n      0x0a\n        /* \"Ethereum/Presale.sol\":3325:3377  10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_219\n      jump\t// in\n    tag_235:\n        /* \"Ethereum/Presale.sol\":3314:3322  datas[4] */\n      0x80\n      dup6\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":3314:3377  datas[4] * 10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_238\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_238:\n        /* \"Ethereum/Presale.sol\":3285:3311  saleInfor.maxSpendPerBuyer */\n      0x16\n        /* \"Ethereum/Presale.sol\":3285:3377  saleInfor.maxSpendPerBuyer = datas[4] * 10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      sstore\n        /* \"Ethereum/Presale.sol\":3410:3418  datas[5] */\n      0xa0\n      dup5\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":3388:3407  saleInfor.refundFee */\n      0x17\n        /* \"Ethereum/Presale.sol\":3388:3418  saleInfor.refundFee = datas[5] */\n      sstore\n        /* \"Ethereum/Presale.sol\":3450:3458  datas[6] */\n      0xc0\n      dup5\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":3429:3447  saleInfor.claimFee */\n      0x18\n        /* \"Ethereum/Presale.sol\":3429:3458  saleInfor.claimFee = datas[6] */\n      sstore\n        /* \"Ethereum/Presale.sol\":3526:3545  saleInfor.baseToken */\n      sload(0x11)\n        /* \"Ethereum/Presale.sol\":3520:3557  ERC20(saleInfor.baseToken).decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":3526:3545  saleInfor.baseToken */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"Ethereum/Presale.sol\":3520:3555  ERC20(saleInfor.baseToken).decimals */\n      0x313ce567\n      swap2\n        /* \"Ethereum/Presale.sol\":3520:3557  ERC20(saleInfor.baseToken).decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n        /* \"Ethereum/Presale.sol\":3410:3418  datas[5] */\n      0x20\n      swap3\n        /* \"Ethereum/Presale.sol\":3520:3557  ERC20(saleInfor.baseToken).decimals() */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Ethereum/Presale.sol\":3526:3545  saleInfor.baseToken */\n      dup7\n        /* \"Ethereum/Presale.sol\":3520:3557  ERC20(saleInfor.baseToken).decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_243:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_245\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_245:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_246\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_246:\n        /* \"Ethereum/Presale.sol\":3506:3558  10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_247\n      swap1\n        /* \"Ethereum/Presale.sol\":3506:3508  10 */\n      0x0a\n        /* \"Ethereum/Presale.sol\":3506:3558  10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_219\n      jump\t// in\n    tag_247:\n        /* \"Ethereum/Presale.sol\":3495:3503  datas[7] */\n      0xe0\n      dup6\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":3495:3558  datas[7] * 10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_250\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_250:\n        /* \"Ethereum/Presale.sol\":3469:3484  saleTotalSupply */\n      0x0d\n        /* \"Ethereum/Presale.sol\":3469:3558  saleTotalSupply.hardCap = datas[7] * 10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      sstore\n        /* \"Ethereum/Presale.sol\":3625:3644  saleInfor.baseToken */\n      sload(0x11)\n        /* \"Ethereum/Presale.sol\":3619:3656  ERC20(saleInfor.baseToken).decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":3625:3644  saleInfor.baseToken */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"Ethereum/Presale.sol\":3619:3654  ERC20(saleInfor.baseToken).decimals */\n      0x313ce567\n      swap2\n        /* \"Ethereum/Presale.sol\":3619:3656  ERC20(saleInfor.baseToken).decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Ethereum/Presale.sol\":3625:3644  saleInfor.baseToken */\n      dup7\n        /* \"Ethereum/Presale.sol\":3619:3656  ERC20(saleInfor.baseToken).decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_251:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_254\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_254:\n        /* \"Ethereum/Presale.sol\":3606:3657  10** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_255\n      swap1\n        /* \"Ethereum/Presale.sol\":3606:3608  10 */\n      0x0a\n        /* \"Ethereum/Presale.sol\":3606:3657  10** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_219\n      jump\t// in\n    tag_255:\n        /* \"Ethereum/Presale.sol\":3595:3603  datas[8] */\n      0x0100\n      dup6\n      add\n      mload\n        /* \"Ethereum/Presale.sol\":3595:3657  datas[8] * 10** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_258\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_258:\n        /* \"Ethereum/Presale.sol\":3569:3592  saleTotalSupply.softCap */\n      0x0e\n        /* \"Ethereum/Presale.sol\":3569:3657  saleTotalSupply.softCap = datas[8] * 10** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      sstore\n        /* \"Ethereum/Presale.sol\":3721:3740  saleInfor.baseToken */\n      sload(0x11)\n        /* \"Ethereum/Presale.sol\":3704:3708  WETH */\n      sload(0x1b)\n        /* \"Ethereum/Presale.sol\":3668:3693  saleInfor.saleIsBaseToken */\n      0x19\n        /* \"Ethereum/Presale.sol\":3668:3741  saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken) */\n      dup1\n      sload\n      not(0xff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":3704:3708  WETH */\n      swap3\n      dup4\n      and\n        /* \"Ethereum/Presale.sol\":3721:3740  saleInfor.baseToken */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"Ethereum/Presale.sol\":3696:3741  address(WETH) == address(saleInfor.baseToken) */\n      swap2\n      dup3\n      eq\n        /* \"Ethereum/Presale.sol\":3668:3741  saleInfor.saleIsBaseToken = address(WETH) == address(saleInfor.baseToken) */\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Ethereum/Presale.sol\":3888:3925  ERC20(saleInfor.baseToken).decimals() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x313ce567)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Ethereum/Presale.sol\":3888:3923  ERC20(saleInfor.baseToken).decimals */\n      0x313ce567\n      swap2\n        /* \"Ethereum/Presale.sol\":3888:3925  ERC20(saleInfor.baseToken).decimals() */\n      0x04\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"Ethereum/Presale.sol\":3721:3740  saleInfor.baseToken */\n      dup7\n        /* \"Ethereum/Presale.sol\":3888:3925  ERC20(saleInfor.baseToken).decimals() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_259\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_259:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_262\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_262:\n        /* \"Ethereum/Presale.sol\":3875:3926  10** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_263\n      swap1\n        /* \"Ethereum/Presale.sol\":3875:3877  10 */\n      0x0a\n        /* \"Ethereum/Presale.sol\":3875:3926  10** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_219\n      jump\t// in\n    tag_263:\n        /* \"Ethereum/Presale.sol\":3808:3823  saleTotalSupply */\n      0x0d\n        /* \"Ethereum/Presale.sol\":3808:3831  saleTotalSupply.hardCap */\n      sload\n        /* \"Ethereum/Presale.sol\":3783:3803  saleInfor.tokenPrice */\n      sload(0x12)\n        /* \"Ethereum/Presale.sol\":3783:3832  saleInfor.tokenPrice.mul(saleTotalSupply.hardCap) */\n      tag_264\n      swap2\n        /* \"Ethereum/Presale.sol\":3783:3807  saleInfor.tokenPrice.mul */\n      tag_202\n        /* \"Ethereum/Presale.sol\":3783:3832  saleInfor.tokenPrice.mul(saleTotalSupply.hardCap) */\n      jump\t// in\n    tag_264:\n        /* \"Ethereum/Presale.sol\":3783:3927  saleInfor.tokenPrice.mul(saleTotalSupply.hardCap)/\r... */\n      tag_265\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"Ethereum/Presale.sol\":3752:3780  saleInfor.amountTokenForSale */\n      0x1a\n        /* \"Ethereum/Presale.sol\":3752:3927  saleInfor.amountTokenForSale = saleInfor.tokenPrice.mul(saleTotalSupply.hardCap)/\r... */\n      sstore\n        /* \"Ethereum/Presale.sol\":3938:3947  feeAnyone */\n      0x1f\n        /* \"Ethereum/Presale.sol\":3938:3960  feeAnyone = _feeAnyone */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"Ethereum/Presale.sol\":3971:3986  adminReceiveFee */\n      0x20\n        /* \"Ethereum/Presale.sol\":3971:4005  adminReceiveFee = _adminReceiveFee */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Ethereum/Presale.sol\":4016:4029  feeCreateSale */\n      0x21\n        /* \"Ethereum/Presale.sol\":4016:4046  feeCreateSale = _feeCreateSale */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":2640:4056  function initialSaleInfor(\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":6749:7753  function userClaimEmergency() external nonReentrant {\r... */\n    tag_80:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2376:2383  _status */\n      sload(0x00)\n        /* \"Utils/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_156\n      jump\t// in\n    tag_268:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2509:2516  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      swap1\n      dup2\n      sstore\n        /* \"Ethereum/Presale.sol\":6904:6936  presaleStatus.totalTokenWithDraw */\n      sload(0x06)\n        /* \"Ethereum/Presale.sol\":6873:6901  presaleStatus.totalTokenSold */\n      sload(0x05)\n        /* \"Ethereum/Presale.sol\":6873:6936  presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw */\n      tag_271\n      swap2\n        /* \"Ethereum/Presale.sol\":6904:6936  presaleStatus.totalTokenWithDraw */\n      swap1\n        /* \"Ethereum/Presale.sol\":6873:6936  presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw */\n      tag_189\n      jump\t// in\n    tag_271:\n        /* \"Ethereum/Presale.sol\":6873:6940  presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw > 0 */\n      gt\n        /* \"Ethereum/Presale.sol\":6865:6999  require(presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw > 0, \r... */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_192\n      jump\t// in\n    tag_272:\n        /* \"Ethereum/Presale.sol\":7046:7056  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":7010:7033  BuyerInfo storage buyer */\n      0x00\n        /* \"Ethereum/Presale.sol\":7036:7057  buyerInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":7036:7045  buyerInfo */\n      0x02\n        /* \"Ethereum/Presale.sol\":7036:7057  buyerInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Ethereum/Presale.sol\":7076:7092  buyer.tokenOwner */\n      0x01\n      dup2\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":7068:7124  require(buyer.tokenOwner > 0, \"You have not bought yet\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6056:6058   */\n      0x20\n        /* \"Ethereum/Presale.sol\":7068:7124  require(buyer.tokenOwner > 0, \"You have not bought yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6038:6059   */\n      mstore\n        /* \"#utility.yul\":6095:6097   */\n      0x17\n        /* \"#utility.yul\":6075:6093   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6068:6098   */\n      mstore\n      shl(0x4a, 0x165bdd481a185d99481b9bdd08189bdd59da1d081e595d)\n        /* \"#utility.yul\":6114:6132   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6107:6160   */\n      mstore\n        /* \"#utility.yul\":6177:6195   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":7068:7124  require(buyer.tokenOwner > 0, \"You have not bought yet\") */\n      tag_139\n        /* \"#utility.yul\":6028:6201   */\n      jump\n        /* \"Ethereum/Presale.sol\":7068:7124  require(buyer.tokenOwner > 0, \"You have not bought yet\") */\n    tag_274:\n        /* \"Ethereum/Presale.sol\":7162:7167  buyer */\n      dup1\n        /* \"Ethereum/Presale.sol\":7162:7186  buyer.totalTokenWithDraw */\n      0x03\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":7143:7148  buyer */\n      dup2\n        /* \"Ethereum/Presale.sol\":7143:7159  buyer.tokenOwner */\n      0x01\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":7143:7186  buyer.tokenOwner > buyer.totalTokenWithDraw */\n      gt\n        /* \"Ethereum/Presale.sol\":7135:7205  require(buyer.tokenOwner > buyer.totalTokenWithDraw, \"You claim alll\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7885:7887   */\n      0x20\n        /* \"Ethereum/Presale.sol\":7135:7205  require(buyer.tokenOwner > buyer.totalTokenWithDraw, \"You claim alll\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7867:7888   */\n      mstore\n        /* \"#utility.yul\":7924:7926   */\n      0x0e\n        /* \"#utility.yul\":7904:7922   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7897:7927   */\n      mstore\n      shl(0x92, 0x165bdd4818db185a5b48185b1b1b)\n        /* \"#utility.yul\":7943:7961   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7936:7980   */\n      mstore\n        /* \"#utility.yul\":7997:8015   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":7135:7205  require(buyer.tokenOwner > buyer.totalTokenWithDraw, \"You claim alll\") */\n      tag_139\n        /* \"#utility.yul\":7857:8021   */\n      jump\n        /* \"Ethereum/Presale.sol\":7135:7205  require(buyer.tokenOwner > buyer.totalTokenWithDraw, \"You claim alll\") */\n    tag_276:\n        /* \"Ethereum/Presale.sol\":7216:7235  uint256 amountClaim */\n      0x00\n        /* \"Ethereum/Presale.sol\":7238:7374  ((uint256(1000).sub(saleInfor.claimFee))\r... */\n      tag_279\n        /* \"Ethereum/Presale.sol\":7368:7372  1000 */\n      0x03e8\n        /* \"Ethereum/Presale.sol\":7239:7327  (uint256(1000).sub(saleInfor.claimFee))\r... */\n      tag_200\n        /* \"Ethereum/Presale.sol\":7310:7315  buyer */\n      dup5\n        /* \"Ethereum/Presale.sol\":7310:7326  buyer.tokenOwner */\n      0x01\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":7240:7277  uint256(1000).sub(saleInfor.claimFee) */\n      tag_201\n        /* \"Ethereum/Presale.sol\":7258:7267  saleInfor */\n      0x0f\n        /* \"Ethereum/Presale.sol\":7258:7276  saleInfor.claimFee */\n      0x09\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":7248:7252  1000 */\n      0x03e8\n        /* \"Ethereum/Presale.sol\":7240:7257  uint256(1000).sub */\n      tag_165\n      swap1\n        /* \"Ethereum/Presale.sol\":7240:7277  uint256(1000).sub(saleInfor.claimFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":7238:7374  ((uint256(1000).sub(saleInfor.claimFee))\r... */\n    tag_279:\n        /* \"Ethereum/Presale.sol\":7216:7374  uint256 amountClaim = ((uint256(1000).sub(saleInfor.claimFee))\r... */\n      swap1\n      pop\n        /* \"Ethereum/Presale.sol\":7421:7432  amountClaim */\n      dup1\n        /* \"Ethereum/Presale.sol\":7385:7398  presaleStatus */\n      0x04\n        /* \"Ethereum/Presale.sol\":7385:7417  presaleStatus.totalTokenWithDraw */\n      0x02\n      add\n      0x00\n        /* \"Ethereum/Presale.sol\":7385:7432  presaleStatus.totalTokenWithDraw += amountClaim */\n      dup3\n      dup3\n      sload\n      tag_282\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_282:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":7443:7471  saleInfor.amountTokenForSale */\n      0x1a\n        /* \"Ethereum/Presale.sol\":7443:7486  saleInfor.amountTokenForSale -= amountClaim */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":7475:7486  amountClaim */\n      dup3\n      swap2\n        /* \"Ethereum/Presale.sol\":7443:7471  saleInfor.amountTokenForSale */\n      swap1\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":7443:7486  saleInfor.amountTokenForSale -= amountClaim */\n      tag_283\n      swap1\n        /* \"Ethereum/Presale.sol\":7475:7486  amountClaim */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":7443:7486  saleInfor.amountTokenForSale -= amountClaim */\n      tag_189\n      jump\t// in\n    tag_283:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ethereum/Presale.sol\":7525:7536  amountClaim */\n      dup1\n        /* \"Ethereum/Presale.sol\":7497:7502  buyer */\n      dup3\n        /* \"Ethereum/Presale.sol\":7497:7521  buyer.totalTokenWithDraw */\n      0x03\n      add\n      0x00\n        /* \"Ethereum/Presale.sol\":7497:7536  buyer.totalTokenWithDraw += amountClaim */\n      dup3\n      dup3\n      sload\n      tag_284\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_284:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":7568:7583  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":7547:7565  buyer.lastWithDraw */\n      0x02\n      dup4\n      add\n        /* \"Ethereum/Presale.sol\":7547:7583  buyer.lastWithDraw = block.timestamp */\n      sstore\n        /* \"Ethereum/Presale.sol\":7651:7674  buyer.totalBaseWithDraw */\n      0x04\n      dup3\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":7633:7650  buyer.baseDeposit */\n      dup3\n      sload\n        /* \"Ethereum/Presale.sol\":7633:7674  buyer.baseDeposit-buyer.totalBaseWithDraw */\n      tag_285\n      swap2\n        /* \"Ethereum/Presale.sol\":7651:7674  buyer.totalBaseWithDraw */\n      swap1\n        /* \"Ethereum/Presale.sol\":7633:7674  buyer.baseDeposit-buyer.totalBaseWithDraw */\n      tag_189\n      jump\t// in\n    tag_285:\n        /* \"Ethereum/Presale.sol\":7594:7629  presaleStatus.totalBaseBackForAdmin */\n      0x09\n        /* \"Ethereum/Presale.sol\":7594:7674  presaleStatus.totalBaseBackForAdmin += buyer.baseDeposit-buyer.totalBaseWithDraw */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":7594:7629  presaleStatus.totalBaseBackForAdmin */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":7594:7674  presaleStatus.totalBaseBackForAdmin += buyer.baseDeposit-buyer.totalBaseWithDraw */\n      tag_286\n      swap1\n      dup5\n      swap1\n      tag_206\n      jump\t// in\n    tag_286:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":7691:7710  saleInfor.saleToken */\n      sload(0x10)\n        /* \"Ethereum/Presale.sol\":7685:7745  ERC20(saleInfor.saleToken).transfer(msg.sender, amountClaim) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":7721:7731  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":7685:7745  ERC20(saleInfor.saleToken).transfer(msg.sender, amountClaim) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4676:4727   */\n      mstore\n        /* \"#utility.yul\":4743:4761   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4736:4770   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":7691:7710  saleInfor.saleToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Ethereum/Presale.sol\":7685:7720  ERC20(saleInfor.saleToken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4649:4667   */\n      0x44\n      add\n        /* \"Ethereum/Presale.sol\":7685:7745  ERC20(saleInfor.saleToken).transfer(msg.sender, amountClaim) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_289\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_289:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_291\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_291:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":4529:6741  function deposit(uint256 _amount) external payable nonReentrant {\r... */\n    tag_98:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2376:2383  _status */\n      sload(0x00)\n        /* \"Utils/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_156\n      jump\t// in\n    tag_294:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2509:2516  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      dup2\n      dup2\n      sstore\n        /* \"Ethereum/Presale.sol\":4700:4710  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":4690:4711  buyerInfo[msg.sender] */\n      dup2\n      mstore\n      0x20\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Ethereum/Presale.sol\":4742:4749  _amount */\n      dup3\n      swap1\n      dup2\n      swap1\n        /* \"Ethereum/Presale.sol\":4855:4859  1000 */\n      0x03e8\n        /* \"Ethereum/Presale.sol\":4878:4887  msg.value */\n      callvalue\n        /* \"Ethereum/Presale.sol\":4878:4905  msg.value >= real_amount_in */\n      dup4\n      gt\n      iszero\n        /* \"Ethereum/Presale.sol\":4870:4936  require(msg.value >= real_amount_in, \"Please provide navite coin\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6408:6410   */\n      0x20\n        /* \"Ethereum/Presale.sol\":4870:4936  require(msg.value >= real_amount_in, \"Please provide navite coin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6390:6411   */\n      mstore\n        /* \"#utility.yul\":6447:6449   */\n      0x1a\n        /* \"#utility.yul\":6427:6445   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6420:6450   */\n      mstore\n        /* \"#utility.yul\":6486:6514   */\n      0x506c656173652070726f76696465206e617669746520636f696e000000000000\n        /* \"#utility.yul\":6466:6484   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6459:6515   */\n      mstore\n        /* \"#utility.yul\":6532:6550   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":4870:4936  require(msg.value >= real_amount_in, \"Please provide navite coin\") */\n      tag_139\n        /* \"#utility.yul\":6380:6556   */\n      jump\n        /* \"Ethereum/Presale.sol\":4870:4936  require(msg.value >= real_amount_in, \"Please provide navite coin\") */\n    tag_297:\n        /* \"Ethereum/Presale.sol\":4973:4999  saleInfor.minSpendPerBuyer */\n      sload(0x15)\n        /* \"Ethereum/Presale.sol\":4955:4999  real_amount_in >= saleInfor.minSpendPerBuyer */\n      dup4\n      lt\n      iszero\n        /* \"Ethereum/Presale.sol\":4947:5048  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9382:9384   */\n      0x20\n        /* \"Ethereum/Presale.sol\":4947:5048  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9364:9385   */\n      mstore\n        /* \"#utility.yul\":9421:9423   */\n      0x10\n        /* \"#utility.yul\":9401:9419   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9394:9424   */\n      mstore\n      shl(0x80, 0x4e6f7420656e6f7567682076616c7565)\n        /* \"#utility.yul\":9440:9458   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9433:9479   */\n      mstore\n        /* \"#utility.yul\":9496:9514   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":4947:5048  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n      tag_139\n        /* \"#utility.yul\":9354:9520   */\n      jump\n        /* \"Ethereum/Presale.sol\":4947:5048  require(real_amount_in >= saleInfor.minSpendPerBuyer, \r... */\n    tag_300:\n        /* \"Ethereum/Presale.sol\":5085:5111  saleInfor.maxSpendPerBuyer */\n      sload(0x16)\n        /* \"Ethereum/Presale.sol\":5067:5111  real_amount_in <= saleInfor.maxSpendPerBuyer */\n      dup4\n      gt\n      iszero\n        /* \"Ethereum/Presale.sol\":5059:5158  require(real_amount_in <= saleInfor.maxSpendPerBuyer, \r... */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8634:8636   */\n      0x20\n        /* \"Ethereum/Presale.sol\":5059:5158  require(real_amount_in <= saleInfor.maxSpendPerBuyer, \r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8616:8637   */\n      mstore\n        /* \"#utility.yul\":8673:8675   */\n      0x0e\n        /* \"#utility.yul\":8653:8671   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8646:8676   */\n      mstore\n      shl(0x90, 0x4f766572666c6f772076616c7565)\n        /* \"#utility.yul\":8692:8710   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8685:8729   */\n      mstore\n        /* \"#utility.yul\":8746:8764   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":5059:5158  require(real_amount_in <= saleInfor.maxSpendPerBuyer, \r... */\n      tag_139\n        /* \"#utility.yul\":8606:8770   */\n      jump\n        /* \"Ethereum/Presale.sol\":5059:5158  require(real_amount_in <= saleInfor.maxSpendPerBuyer, \r... */\n    tag_303:\n        /* \"Ethereum/Presale.sol\":5173:5192  checkAdminAddress() */\n      tag_306\n        /* \"Ethereum/Presale.sol\":5173:5190  checkAdminAddress */\n      tag_101\n        /* \"Ethereum/Presale.sol\":5173:5192  checkAdminAddress() */\n      jump\t// in\n    tag_306:\n        /* \"Ethereum/Presale.sol\":5169:5435  if(!checkAdminAddress()) {\r... */\n      tag_307\n      jumpi\n        /* \"Ethereum/Presale.sol\":5226:5359  ((fullPercenFee.sub(feeAnyone))\r... */\n      tag_308\n        /* \"Ethereum/Presale.sol\":5345:5358  fullPercenFee */\n      dup2\n        /* \"Ethereum/Presale.sol\":5227:5308  (fullPercenFee.sub(feeAnyone))\r... */\n      tag_200\n        /* \"Ethereum/Presale.sol\":5293:5307  real_amount_in */\n      dup6\n        /* \"Ethereum/Presale.sol\":5228:5256  fullPercenFee.sub(feeAnyone) */\n      tag_201\n        /* \"Ethereum/Presale.sol\":5246:5255  feeAnyone */\n      sload(0x1f)\n        /* \"Ethereum/Presale.sol\":5228:5241  fullPercenFee */\n      dup7\n        /* \"Ethereum/Presale.sol\":5228:5245  fullPercenFee.sub */\n      tag_165\n      swap1\n        /* \"Ethereum/Presale.sol\":5228:5256  fullPercenFee.sub(feeAnyone) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":5226:5359  ((fullPercenFee.sub(feeAnyone))\r... */\n    tag_308:\n        /* \"Ethereum/Presale.sol\":5209:5359  real_amount_in = ((fullPercenFee.sub(feeAnyone))\r... */\n      swap3\n      pop\n        /* \"Ethereum/Presale.sol\":5380:5406  amount_in - real_amount_in */\n      tag_311\n        /* \"Ethereum/Presale.sol\":5209:5359  real_amount_in = ((fullPercenFee.sub(feeAnyone))\r... */\n      dup4\n        /* \"Ethereum/Presale.sol\":5380:5389  amount_in */\n      dup6\n        /* \"Ethereum/Presale.sol\":5380:5406  amount_in - real_amount_in */\n      tag_189\n      jump\t// in\n    tag_311:\n        /* \"Ethereum/Presale.sol\":5374:5406  fee = amount_in - real_amount_in */\n      swap2\n      pop\n        /* \"Ethereum/Presale.sol\":5169:5435  if(!checkAdminAddress()) {\r... */\n    tag_307:\n        /* \"Ethereum/Presale.sol\":5500:5517  buyer.baseDeposit */\n      dup5\n      sload\n        /* \"Ethereum/Presale.sol\":5471:5497  saleInfor.maxSpendPerBuyer */\n      sload(0x16)\n        /* \"Ethereum/Presale.sol\":5445:5468  uint256 remainingByUser */\n      0x00\n      swap2\n        /* \"Ethereum/Presale.sol\":5471:5517  saleInfor.maxSpendPerBuyer - buyer.baseDeposit */\n      tag_312\n      swap2\n      tag_189\n      jump\t// in\n    tag_312:\n        /* \"Ethereum/Presale.sol\":5585:5598  presaleStatus */\n      0x04\n        /* \"Ethereum/Presale.sol\":5585:5617  presaleStatus.totalBaseCollected */\n      sload\n        /* \"Ethereum/Presale.sol\":5554:5582  saleInfor.amountTokenForSale */\n      sload(0x1a)\n        /* \"Ethereum/Presale.sol\":5445:5517  uint256 remainingByUser = saleInfor.maxSpendPerBuyer - buyer.baseDeposit */\n      swap2\n      swap3\n      pop\n        /* \"Ethereum/Presale.sol\":5528:5551  uint256 remainingByPool */\n      0x00\n      swap2\n        /* \"Ethereum/Presale.sol\":5554:5617  saleInfor.amountTokenForSale - presaleStatus.totalBaseCollected */\n      tag_313\n      swap2\n        /* \"Ethereum/Presale.sol\":5585:5617  presaleStatus.totalBaseCollected */\n      swap1\n        /* \"Ethereum/Presale.sol\":5554:5617  saleInfor.amountTokenForSale - presaleStatus.totalBaseCollected */\n      tag_189\n      jump\t// in\n    tag_313:\n        /* \"Ethereum/Presale.sol\":5528:5617  uint256 remainingByPool = saleInfor.amountTokenForSale - presaleStatus.totalBaseCollected */\n      swap1\n      pop\n        /* \"Ethereum/Presale.sol\":5628:5645  uint256 allowance */\n      0x00\n        /* \"Ethereum/Presale.sol\":5666:5681  remainingByPool */\n      dup2\n        /* \"Ethereum/Presale.sol\":5648:5663  remainingByUser */\n      dup4\n        /* \"Ethereum/Presale.sol\":5648:5681  remainingByUser > remainingByPool */\n      gt\n        /* \"Ethereum/Presale.sol\":5648:5717  remainingByUser > remainingByPool ? remainingByPool : remainingByUser */\n      tag_314\n      jumpi\n        /* \"Ethereum/Presale.sol\":5702:5717  remainingByUser */\n      dup3\n        /* \"Ethereum/Presale.sol\":5648:5717  remainingByUser > remainingByPool ? remainingByPool : remainingByUser */\n      jump(tag_315)\n    tag_314:\n        /* \"Ethereum/Presale.sol\":5684:5699  remainingByPool */\n      dup2\n        /* \"Ethereum/Presale.sol\":5648:5717  remainingByUser > remainingByPool ? remainingByPool : remainingByUser */\n    tag_315:\n        /* \"Ethereum/Presale.sol\":5628:5717  uint256 allowance = remainingByUser > remainingByPool ? remainingByPool : remainingByUser */\n      swap1\n      pop\n        /* \"Ethereum/Presale.sol\":5754:5763  allowance */\n      dup1\n        /* \"Ethereum/Presale.sol\":5736:5750  real_amount_in */\n      dup7\n        /* \"Ethereum/Presale.sol\":5736:5763  real_amount_in <= allowance */\n      gt\n      iszero\n        /* \"Ethereum/Presale.sol\":5728:5783  require(real_amount_in <= allowance, \"Sale is success\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11901:11903   */\n      0x20\n        /* \"Ethereum/Presale.sol\":5728:5783  require(real_amount_in <= allowance, \"Sale is success\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11883:11904   */\n      mstore\n        /* \"#utility.yul\":11940:11942   */\n      0x0f\n        /* \"#utility.yul\":11920:11938   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11913:11943   */\n      mstore\n      shl(0x88, 0x53616c652069732073756363657373)\n        /* \"#utility.yul\":11959:11977   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11952:11997   */\n      mstore\n        /* \"#utility.yul\":12014:12032   */\n      0x64\n      add\n        /* \"Ethereum/Presale.sol\":5728:5783  require(real_amount_in <= allowance, \"Sale is success\") */\n      tag_139\n        /* \"#utility.yul\":11873:12038   */\n      jump\n        /* \"Ethereum/Presale.sol\":5728:5783  require(real_amount_in <= allowance, \"Sale is success\") */\n    tag_316:\n        /* \"Ethereum/Presale.sol\":5794:5811  uint256 tokenSold */\n      0x00\n        /* \"Ethereum/Presale.sol\":5815:5973  real_amount_in.\r... */\n      tag_319\n        /* \"Ethereum/Presale.sol\":5940:5949  saleInfor */\n      0x0f\n        /* \"Ethereum/Presale.sol\":5940:5959  saleInfor.baseToken */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":5934:5969  ERC20(saleInfor.baseToken).decimals */\n      and\n      0x313ce567\n        /* \"Ethereum/Presale.sol\":5934:5971  ERC20(saleInfor.baseToken).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_320\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_320:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_322\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_322:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_323\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_323:\n        /* \"Ethereum/Presale.sol\":5920:5972  10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_324\n      swap1\n        /* \"Ethereum/Presale.sol\":5920:5922  10 */\n      0x0a\n        /* \"Ethereum/Presale.sol\":5920:5972  10 ** uint256(ERC20(saleInfor.baseToken).decimals()) */\n      tag_219\n      jump\t// in\n    tag_324:\n        /* \"Ethereum/Presale.sol\":5864:5884  saleInfor.tokenPrice */\n      sload(0x12)\n        /* \"Ethereum/Presale.sol\":5815:5885  real_amount_in.\r... */\n      tag_200\n      swap1\n        /* \"Ethereum/Presale.sol\":5815:5829  real_amount_in */\n      dup11\n      swap1\n        /* \"Ethereum/Presale.sol\":5815:5863  real_amount_in.\r... */\n      tag_202\n        /* \"Ethereum/Presale.sol\":5815:5885  real_amount_in.\r... */\n      jump\t// in\n        /* \"Ethereum/Presale.sol\":5815:5973  real_amount_in.\r... */\n    tag_319:\n        /* \"Ethereum/Presale.sol\":5794:5974  uint256 tokenSold = (real_amount_in.\r... */\n      swap1\n      pop\n        /* \"Ethereum/Presale.sol\":6023:6037  real_amount_in */\n      dup7\n        /* \"Ethereum/Presale.sol\":6002:6007  buyer */\n      dup10\n        /* \"Ethereum/Presale.sol\":6002:6019  buyer.baseDeposit */\n      0x00\n      add\n      0x00\n        /* \"Ethereum/Presale.sol\":6002:6037  buyer.baseDeposit += real_amount_in */\n      dup3\n      dup3\n      sload\n      tag_326\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_326:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ethereum/Presale.sol\":6068:6077  tokenSold */\n      dup1\n        /* \"Ethereum/Presale.sol\":6048:6053  buyer */\n      dup10\n        /* \"Ethereum/Presale.sol\":6048:6064  buyer.tokenOwner */\n      0x01\n      add\n      0x00\n        /* \"Ethereum/Presale.sol\":6048:6077  buyer.tokenOwner += tokenSold */\n      dup3\n      dup3\n      sload\n      tag_327\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_327:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":6088:6101  presaleStatus */\n      0x04\n        /* \"Ethereum/Presale.sol\":6088:6138  presaleStatus.totalBaseCollected += real_amount_in */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":6124:6138  real_amount_in */\n      dup9\n      swap2\n        /* \"Ethereum/Presale.sol\":6088:6101  presaleStatus */\n      swap1\n        /* \"Ethereum/Presale.sol\":6088:6120  presaleStatus.totalBaseCollected */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":6088:6138  presaleStatus.totalBaseCollected += real_amount_in */\n      tag_328\n      swap1\n        /* \"Ethereum/Presale.sol\":6124:6138  real_amount_in */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":6088:6138  presaleStatus.totalBaseCollected += real_amount_in */\n      tag_206\n      jump\t// in\n    tag_328:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":6149:6177  presaleStatus.totalTokenSold */\n      0x05\n        /* \"Ethereum/Presale.sol\":6149:6190  presaleStatus.totalTokenSold += tokenSold */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":6181:6190  tokenSold */\n      dup3\n      swap2\n        /* \"Ethereum/Presale.sol\":6149:6177  presaleStatus.totalTokenSold */\n      swap1\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":6149:6190  presaleStatus.totalTokenSold += tokenSold */\n      tag_329\n      swap1\n        /* \"Ethereum/Presale.sol\":6181:6190  tokenSold */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":6149:6190  presaleStatus.totalTokenSold += tokenSold */\n      tag_206\n      jump\t// in\n    tag_329:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":6201:6226  presaleStatus.numberBuyer */\n      0x0a\n        /* \"Ethereum/Presale.sol\":6201:6228  presaleStatus.numberBuyer++ */\n      dup1\n      sload\n      swap1\n        /* \"Ethereum/Presale.sol\":6201:6226  presaleStatus.numberBuyer */\n      0x00\n        /* \"Ethereum/Presale.sol\":6201:6228  presaleStatus.numberBuyer++ */\n      tag_330\n      dup4\n      tag_331\n      jump\t// in\n    tag_330:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":6247:6257  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":6239:6258  userFee[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":6239:6246  userFee */\n      0x03\n        /* \"Ethereum/Presale.sol\":6239:6258  userFee[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Ethereum/Presale.sol\":6239:6265  userFee[msg.sender] += fee */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":6262:6265  fee */\n      dup9\n      swap3\n        /* \"Ethereum/Presale.sol\":6239:6258  userFee[msg.sender] */\n      swap1\n        /* \"Ethereum/Presale.sol\":6239:6265  userFee[msg.sender] += fee */\n      tag_332\n      swap1\n        /* \"Ethereum/Presale.sol\":6262:6265  fee */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":6239:6265  userFee[msg.sender] += fee */\n      tag_206\n      jump\t// in\n    tag_332:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ethereum/Presale.sol\":6288:6291  fee */\n      dup6\n        /* \"Ethereum/Presale.sol\":6276:6284  totalFee */\n      0x1e\n      0x00\n        /* \"Ethereum/Presale.sol\":6276:6291  totalFee += fee */\n      dup3\n      dup3\n      sload\n      tag_333\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_333:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":6307:6332  saleInfor.saleIsBaseToken */\n      and(0xff, sload(0x19))\n        /* \"Ethereum/Presale.sol\":6307:6369  saleInfor.saleIsBaseToken && real_amount_in + fee <= msg.value */\n      dup1\n      iszero\n      tag_334\n      jumpi\n      pop\n        /* \"Ethereum/Presale.sol\":6360:6369  msg.value */\n      callvalue\n        /* \"Ethereum/Presale.sol\":6336:6356  real_amount_in + fee */\n      tag_335\n        /* \"Ethereum/Presale.sol\":6353:6356  fee */\n      dup8\n        /* \"Ethereum/Presale.sol\":6336:6350  real_amount_in */\n      dup10\n        /* \"Ethereum/Presale.sol\":6336:6356  real_amount_in + fee */\n      tag_206\n      jump\t// in\n    tag_335:\n        /* \"Ethereum/Presale.sol\":6336:6369  real_amount_in + fee <= msg.value */\n      gt\n      iszero\n        /* \"Ethereum/Presale.sol\":6307:6369  saleInfor.saleIsBaseToken && real_amount_in + fee <= msg.value */\n    tag_334:\n        /* \"Ethereum/Presale.sol\":6304:6460  if(saleInfor.saleIsBaseToken && real_amount_in + fee <= msg.value) {\r... */\n      iszero\n      tag_336\n      jumpi\n        /* \"Ethereum/Presale.sol\":6394:6404  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":6386:6448  payable(msg.sender).transfer(msg.value - real_amount_in - fee) */\n      0x08fc\n        /* \"Ethereum/Presale.sol\":6444:6447  fee */\n      dup8\n        /* \"Ethereum/Presale.sol\":6415:6441  msg.value - real_amount_in */\n      tag_337\n        /* \"Ethereum/Presale.sol\":6427:6441  real_amount_in */\n      dup11\n        /* \"Ethereum/Presale.sol\":6415:6424  msg.value */\n      callvalue\n        /* \"Ethereum/Presale.sol\":6415:6441  msg.value - real_amount_in */\n      tag_189\n      jump\t// in\n    tag_337:\n        /* \"Ethereum/Presale.sol\":6415:6447  msg.value - real_amount_in - fee */\n      tag_338\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_338:\n        /* \"Ethereum/Presale.sol\":6386:6448  payable(msg.sender).transfer(msg.value - real_amount_in - fee) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_340\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_340:\n      pop\n        /* \"Ethereum/Presale.sol\":6304:6460  if(saleInfor.saleIsBaseToken && real_amount_in + fee <= msg.value) {\r... */\n    tag_336:\n        /* \"Ethereum/Presale.sol\":6475:6500  saleInfor.saleIsBaseToken */\n      and(0xff, sload(0x19))\n        /* \"Ethereum/Presale.sol\":6471:6722  if(!saleInfor.saleIsBaseToken) {\r... */\n      tag_342\n      jumpi\n        /* \"Ethereum/Presale.sol\":6575:6594  saleInfor.baseToken */\n      sload(0x11)\n        /* \"Ethereum/Presale.sol\":6517:6710  TransferHelper.safeTransferFrom(\r... */\n      tag_342\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":6575:6594  saleInfor.baseToken */\n      and\n        /* \"Ethereum/Presale.sol\":6614:6624  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":6651:6655  this */\n      address\n        /* \"Ethereum/Presale.sol\":6675:6695  real_amount_in + fee */\n      tag_343\n        /* \"Ethereum/Presale.sol\":6692:6695  fee */\n      dup11\n        /* \"Ethereum/Presale.sol\":6675:6689  real_amount_in */\n      dup13\n        /* \"Ethereum/Presale.sol\":6675:6695  real_amount_in + fee */\n      tag_206\n      jump\t// in\n    tag_343:\n        /* \"Ethereum/Presale.sol\":6517:6548  TransferHelper.safeTransferFrom */\n      tag_344\n        /* \"Ethereum/Presale.sol\":6517:6710  TransferHelper.safeTransferFrom(\r... */\n      jump\t// in\n    tag_342:\n      pop\n      pop\n        /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"Utils/ReentrancyGuard.sol\":2688:2695  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":4529:6741  function deposit(uint256 _amount) external payable nonReentrant {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":4411:4521  function checkAdminAddress() public view returns(bool) {\r... */\n    tag_101:\n        /* \"Ethereum/Presale.sol\":4460:4464  bool */\n      0x00\n        /* \"Ethereum/Presale.sol\":4484:4513  admins.contains(_msgSender()) */\n      tag_346\n        /* \"Ethereum/Presale.sol\":4484:4490  admins */\n      0x1c\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":4484:4499  admins.contains */\n      tag_348\n        /* \"Ethereum/Presale.sol\":4484:4513  admins.contains(_msgSender()) */\n      jump\t// in\n    tag_346:\n        /* \"Ethereum/Presale.sol\":4477:4513  return admins.contains(_msgSender()) */\n      swap1\n      pop\n        /* \"Ethereum/Presale.sol\":4411:4521  function checkAdminAddress() public view returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":9990:11563  function userClaimOrRefundWhenSaleSuccess(bool isClaim) external {\r... */\n    tag_118:\n        /* \"Ethereum/Presale.sol\":10130:10137  isClaim */\n      dup1\n        /* \"Ethereum/Presale.sol\":10127:11556  if(isClaim){\r... */\n      iszero\n      tag_350\n      jumpi\n        /* \"Ethereum/Presale.sol\":10192:10224  presaleStatus.totalTokenWithDraw */\n      sload(0x06)\n        /* \"Ethereum/Presale.sol\":10161:10189  presaleStatus.totalTokenSold */\n      sload(0x05)\n        /* \"Ethereum/Presale.sol\":10227:10228  0 */\n      0x00\n      swap2\n        /* \"Ethereum/Presale.sol\":10161:10224  presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw */\n      tag_351\n      swap2\n      tag_189\n      jump\t// in\n    tag_351:\n        /* \"Ethereum/Presale.sol\":10161:10228  presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw > 0 */\n      gt\n        /* \"Ethereum/Presale.sol\":10153:10292  require(presaleStatus.totalTokenSold - presaleStatus.totalTokenWithDraw > 0, \r... */\n      tag_352\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_192\n      jump\t// in\n    tag_352:\n        /* \"Ethereum/Presale.sol\":10343:10353  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":10307:10330  BuyerInfo storage buyer */\n      0x00\n        /* \"Ethereum/Presale.sol\":10333:10354  buyerInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":10333:10342  buyerInfo */\n      0x02\n        /* \"Ethereum/Presale.sol\":10333:10354  buyerInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Ethereum/Presale.sol\":10396:10420  buyer.totalTokenWithDraw */\n      0x03\n      dup2\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":10377:10393  buyer.tokenOwner */\n      0x01\n      dup3\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":10377:10420  buyer.tokenOwner > buyer.totalTokenWithDraw */\n      gt\n        /* \"Ethereum/Presale.sol\":10369:10461  require(buyer.tokenOwner > buyer.totalTokenWithDraw, \"You claim all or have not bought yet\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8977:8979   */\n      0x20\n        /* \"Ethereum/Presale.sol\":10369:10461  require(buyer.tokenOwner > buyer.totalTokenWithDraw, \"You claim all or have not bought yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8959:8980   */\n      mstore\n        /* \"#utility.yul\":9016:9018   */\n      0x24\n        /* \"#utility.yul\":8996:9014   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8989:9019   */\n      mstore\n        /* \"#utility.yul\":9055:9089   */\n      0x596f7520636c61696d20616c6c206f722068617665206e6f7420626f75676874\n        /* \"#utility.yul\":9035:9053   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9028:9090   */\n      mstore\n      shl(0xe2, 0x081e595d)\n        /* \"#utility.yul\":9106:9124   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9099:9133   */\n      mstore\n        /* \"#utility.yul\":9150:9169   */\n      0x84\n      add\n        /* \"Ethereum/Presale.sol\":10369:10461  require(buyer.tokenOwner > buyer.totalTokenWithDraw, \"You claim all or have not bought yet\") */\n      tag_139\n        /* \"#utility.yul\":8949:9175   */\n      jump\n        /* \"Ethereum/Presale.sol\":10369:10461  require(buyer.tokenOwner > buyer.totalTokenWithDraw, \"You claim all or have not bought yet\") */\n    tag_354:\n        /* \"Ethereum/Presale.sol\":10482:10501  saleInfor.saleToken */\n      sload(0x10)\n      0x01\n        /* \"Ethereum/Presale.sol\":10524:10540  buyer.tokenOwner */\n      dup3\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":10476:10541  ERC20(saleInfor.saleToken).transfer(msg.sender, buyer.tokenOwner) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":10512:10522  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":10476:10541  ERC20(saleInfor.saleToken).transfer(msg.sender, buyer.tokenOwner) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4676:4727   */\n      mstore\n        /* \"#utility.yul\":4743:4761   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4736:4770   */\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ethereum/Presale.sol\":10482:10501  saleInfor.saleToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Ethereum/Presale.sol\":10476:10511  ERC20(saleInfor.saleToken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4649:4667   */\n      0x44\n      add\n        /* \"Ethereum/Presale.sol\":10476:10541  ERC20(saleInfor.saleToken).transfer(msg.sender, buyer.tokenOwner) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_358\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_358:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_360\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_360:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_361\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_361:\n      pop\n        /* \"Ethereum/Presale.sol\":10592:10608  buyer.tokenOwner */\n      0x01\n      dup2\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":10556:10588  presaleStatus.totalTokenWithDraw */\n      0x06\n        /* \"Ethereum/Presale.sol\":10556:10608  presaleStatus.totalTokenWithDraw += buyer.tokenOwner */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":10556:10588  presaleStatus.totalTokenWithDraw */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":10556:10608  presaleStatus.totalTokenWithDraw += buyer.tokenOwner */\n      tag_362\n      swap1\n        /* \"Ethereum/Presale.sol\":10592:10608  buyer.tokenOwner */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":10556:10608  presaleStatus.totalTokenWithDraw += buyer.tokenOwner */\n      tag_206\n      jump\t// in\n    tag_362:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":10655:10671  buyer.tokenOwner */\n      0x01\n      dup2\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":10623:10651  saleInfor.amountTokenForSale */\n      0x1a\n        /* \"Ethereum/Presale.sol\":10623:10671  saleInfor.amountTokenForSale -= buyer.tokenOwner */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":10623:10651  saleInfor.amountTokenForSale */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":10623:10671  saleInfor.amountTokenForSale -= buyer.tokenOwner */\n      tag_363\n      swap1\n        /* \"Ethereum/Presale.sol\":10655:10671  buyer.tokenOwner */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":10623:10671  saleInfor.amountTokenForSale -= buyer.tokenOwner */\n      tag_189\n      jump\t// in\n    tag_363:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":10714:10730  buyer.tokenOwner */\n      0x01\n      dup2\n      add\n      sload\n        /* \"Ethereum/Presale.sol\":10686:10710  buyer.totalTokenWithDraw */\n      0x03\n      dup3\n      add\n        /* \"Ethereum/Presale.sol\":10686:10730  buyer.totalTokenWithDraw += buyer.tokenOwner */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":10686:10710  buyer.totalTokenWithDraw */\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":10686:10730  buyer.totalTokenWithDraw += buyer.tokenOwner */\n      tag_364\n      swap1\n        /* \"Ethereum/Presale.sol\":10714:10730  buyer.tokenOwner */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":10686:10730  buyer.totalTokenWithDraw += buyer.tokenOwner */\n      tag_206\n      jump\t// in\n    tag_364:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":10765:10766  0 */\n      0x00\n        /* \"Ethereum/Presale.sol\":10745:10766  buyer.baseDeposit = 0 */\n      dup1\n      dup3\n      sstore\n        /* \"Ethereum/Presale.sol\":10781:10797  buyer.tokenOwner */\n      0x01\n      dup3\n      add\n        /* \"Ethereum/Presale.sol\":10781:10801  buyer.tokenOwner = 0 */\n      sstore\n        /* \"Ethereum/Presale.sol\":10837:10852  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":10816:10834  buyer.lastWithDraw */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"Ethereum/Presale.sol\":10816:10852  buyer.lastWithDraw = block.timestamp */\n      sstore\n        /* \"Ethereum/Presale.sol\":11742:11793  payable(msg.sender).transfer(address(this).balance) */\n      pop\n        /* \"Ethereum/Presale.sol\":11693:11801  function backToken() external payable {\r... */\n      jump\t// out\n        /* \"Ethereum/Presale.sol\":10127:11556  if(isClaim){\r... */\n    tag_350:\n        /* \"Ethereum/Presale.sol\":10940:10971  presaleStatus.totalBaseWithDraw */\n      sload(0x07)\n        /* \"Ethereum/Presale.sol\":10940:10953  presaleStatus */\n      0x04\n        /* \"Ethereum/Presale.sol\":10905:10937  presaleStatus.totalBaseCollected */\n      sload\n        /* \"Ethereum/Presale.sol\":10974:10975  0 */\n      0x00\n      swap2\n        /* \"Ethereum/Presale.sol\":10905:10971  presaleStatus.totalBaseCollected - presaleStatus.totalBaseWithDraw */\n      tag_366\n      swap2\n      tag_189\n      jump\t// in\n    tag_366:\n        /* \"Ethereum/Presale.sol\":10905:10975  presaleStatus.totalBaseCollected - presaleStatus.totalBaseWithDraw > 0 */\n      gt\n        /* \"Ethereum/Presale.sol\":10897:11039  require(presaleStatus.totalBaseCollected - presaleStatus.totalBaseWithDraw > 0, \r... */\n      tag_367\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_192\n      jump\t// in\n    tag_367:\n        /* \"Ethereum/Presale.sol\":11091:11101  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":11055:11078  BuyerInfo storage buyer */\n      0x00\n        /* \"Ethereum/Presale.sol\":11081:11102  buyerInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Ethereum/Presale.sol\":11081:11090  buyerInfo */\n      0x02\n        /* \"Ethereum/Presale.sol\":11081:11102  buyerInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Ethereum/Presale.sol\":11125:11142  buyer.baseDeposit */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":11117:11188  require(buyer.baseDeposit > 0, \"You refund all or have not bought yet\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8228:8230   */\n      0x20\n        /* \"Ethereum/Presale.sol\":11117:11188  require(buyer.baseDeposit > 0, \"You refund all or have not bought yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8210:8231   */\n      mstore\n        /* \"#utility.yul\":8267:8269   */\n      0x25\n        /* \"#utility.yul\":8247:8265   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8240:8270   */\n      mstore\n        /* \"#utility.yul\":8306:8340   */\n      0x596f7520726566756e6420616c6c206f722068617665206e6f7420626f756768\n        /* \"#utility.yul\":8286:8304   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8279:8341   */\n      mstore\n      shl(0xda, 0x1d081e595d)\n        /* \"#utility.yul\":8357:8375   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8350:8385   */\n      mstore\n        /* \"#utility.yul\":8402:8421   */\n      0x84\n      add\n        /* \"Ethereum/Presale.sol\":11117:11188  require(buyer.baseDeposit > 0, \"You refund all or have not bought yet\") */\n      tag_139\n        /* \"#utility.yul\":8200:8427   */\n      jump\n        /* \"Ethereum/Presale.sol\":11117:11188  require(buyer.baseDeposit > 0, \"You refund all or have not bought yet\") */\n    tag_369:\n        /* \"Ethereum/Presale.sol\":11226:11243  buyer.baseDeposit */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":11270:11302  buyer.baseDeposit - amountRefund */\n      tag_372\n        /* \"Ethereum/Presale.sol\":11226:11243  buyer.baseDeposit */\n      dup2\n      dup1\n        /* \"Ethereum/Presale.sol\":11270:11302  buyer.baseDeposit - amountRefund */\n      tag_189\n      jump\t// in\n    tag_372:\n        /* \"Ethereum/Presale.sol\":11258:11266  totalFee */\n      0x1e\n      0x00\n        /* \"Ethereum/Presale.sol\":11258:11302  totalFee += buyer.baseDeposit - amountRefund */\n      dup3\n      dup3\n      sload\n      tag_373\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_373:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":11317:11348  presaleStatus.totalBaseWithDraw */\n      0x07\n        /* \"Ethereum/Presale.sol\":11317:11364  presaleStatus.totalBaseWithDraw += amountRefund */\n      dup1\n      sload\n        /* \"Ethereum/Presale.sol\":11352:11364  amountRefund */\n      dup3\n      swap2\n        /* \"Ethereum/Presale.sol\":11317:11348  presaleStatus.totalBaseWithDraw */\n      swap1\n      0x00\n      swap1\n        /* \"Ethereum/Presale.sol\":11317:11364  presaleStatus.totalBaseWithDraw += amountRefund */\n      tag_374\n      swap1\n        /* \"Ethereum/Presale.sol\":11352:11364  amountRefund */\n      dup5\n      swap1\n        /* \"Ethereum/Presale.sol\":11317:11364  presaleStatus.totalBaseWithDraw += amountRefund */\n      tag_206\n      jump\t// in\n    tag_374:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":11400:11401  0 */\n      0x00\n        /* \"Ethereum/Presale.sol\":11379:11401  buyer.baseDeposit  = 0 */\n      dup1\n      dup4\n      sstore\n        /* \"Ethereum/Presale.sol\":11416:11432  buyer.tokenOwner */\n      0x01\n      dup4\n      add\n        /* \"Ethereum/Presale.sol\":11416:11436  buyer.tokenOwner = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"Ethereum/Presale.sol\":11472:11487  block.timestamp */\n      timestamp\n        /* \"Ethereum/Presale.sol\":11451:11469  buyer.lastWithDraw */\n      0x02\n      dup5\n      add\n        /* \"Ethereum/Presale.sol\":11451:11487  buyer.lastWithDraw = block.timestamp */\n      sstore\n        /* \"Ethereum/Presale.sol\":11502:11544  payable(msg.sender).transfer(amountRefund) */\n      mload(0x40)\n        /* \"Ethereum/Presale.sol\":11510:11520  msg.sender */\n      caller\n      swap2\n        /* \"Ethereum/Presale.sol\":11502:11544  payable(msg.sender).transfer(amountRefund) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"Ethereum/Presale.sol\":11531:11543  amountRefund */\n      dup5\n      swap2\n        /* \"Ethereum/Presale.sol\":11502:11544  payable(msg.sender).transfer(amountRefund) */\n      dup2\n        /* \"Ethereum/Presale.sol\":11400:11401  0 */\n      dup2\n        /* \"Ethereum/Presale.sol\":11502:11544  payable(msg.sender).transfer(amountRefund) */\n      dup2\n        /* \"Ethereum/Presale.sol\":11531:11543  amountRefund */\n      dup6\n        /* \"Ethereum/Presale.sol\":11510:11520  msg.sender */\n      dup9\n        /* \"Ethereum/Presale.sol\":11502:11544  payable(msg.sender).transfer(amountRefund) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_376\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_376:\n      pop\n        /* \"Ethereum/Presale.sol\":10882:11556  {\r... */\n      pop\n      pop\n        /* \"Ethereum/Presale.sol\":9990:11563  function userClaimOrRefundWhenSaleSuccess(bool isClaim) external {\r... */\n      pop\n      jump\t// out\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_122:\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10074:10076   */\n      0x20\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10056:10077   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10093:10111   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10086:10116   */\n      mstore\n        /* \"#utility.yul\":10152:10186   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10132:10150   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10125:10187   */\n      mstore\n        /* \"#utility.yul\":10204:10222   */\n      0x64\n      add\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_139\n        /* \"#utility.yul\":10046:10228   */\n      jump\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_380:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/Ownable.sol\":2061:2083  newOwner != address(0) */\n      dup2\n      and\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_383\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7119:7121   */\n      0x20\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7101:7122   */\n      mstore\n        /* \"#utility.yul\":7158:7160   */\n      0x26\n        /* \"#utility.yul\":7138:7156   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7131:7161   */\n      mstore\n        /* \"#utility.yul\":7197:7231   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7177:7195   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7170:7232   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7248:7266   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7241:7277   */\n      mstore\n        /* \"#utility.yul\":7294:7313   */\n      0x84\n      add\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_139\n        /* \"#utility.yul\":7091:7319   */\n      jump\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_383:\n        /* \"Utils/Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      tag_146\n        /* \"Utils/Ownable.sol\":2156:2164  newOwner */\n      dup2\n        /* \"Utils/Ownable.sol\":2137:2155  _transferOwnership */\n      tag_143\n        /* \"Utils/Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\n    tag_128:\n        /* \"Utils/EnumerableSet.sol\":8329:8333  bool */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_389\n        /* \"Utils/EnumerableSet.sol\":8358:8361  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/EnumerableSet.sol\":8378:8401  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"Utils/EnumerableSet.sol\":8353:8357  _add */\n      tag_390\n        /* \"Utils/EnumerableSet.sol\":8353:8403  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_389:\n        /* \"Utils/EnumerableSet.sol\":8346:8403  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"Utils/EnumerableSet.sol\":8259:8411  function add(AddressSet storage set, address value) internal returns (bool) {\r... */\n    tag_388:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_143:\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      swap2\n      and\n      swap2\n        /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n      swap1\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      dup3\n      swap1\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n      0x00\n      swap1\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Utils/Ownable.sol\":2396:2524  {\r... */\n      pop\n        /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"Utils/SafeMath.sol\":3228:3326  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_165:\n        /* \"Utils/SafeMath.sol\":3286:3293  uint256 */\n      0x00\n        /* \"Utils/SafeMath.sol\":3313:3318  a - b */\n      tag_389\n        /* \"Utils/SafeMath.sol\":3317:3318  b */\n      dup3\n        /* \"Utils/SafeMath.sol\":3313:3314  a */\n      dup5\n        /* \"Utils/SafeMath.sol\":3313:3318  a - b */\n      tag_189\n      jump\t// in\n        /* \"Utils/SafeMath.sol\":3585:3683  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_202:\n        /* \"Utils/SafeMath.sol\":3643:3650  uint256 */\n      0x00\n        /* \"Utils/SafeMath.sol\":3670:3675  a * b */\n      tag_389\n        /* \"Utils/SafeMath.sol\":3674:3675  b */\n      dup3\n        /* \"Utils/SafeMath.sol\":3670:3671  a */\n      dup5\n        /* \"Utils/SafeMath.sol\":3670:3675  a * b */\n      tag_224\n      jump\t// in\n        /* \"Utils/SafeMath.sol\":3984:4082  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_203:\n        /* \"Utils/SafeMath.sol\":4042:4049  uint256 */\n      0x00\n        /* \"Utils/SafeMath.sol\":4069:4074  a / b */\n      tag_389\n        /* \"Utils/SafeMath.sol\":4073:4074  b */\n      dup3\n        /* \"Utils/SafeMath.sol\":4069:4070  a */\n      dup5\n        /* \"Utils/SafeMath.sol\":4069:4074  a / b */\n      tag_266\n      jump\t// in\n        /* \"Utils/TransferHelper.sol\":1073:1503  function safeTransferFrom(\r... */\n    tag_344:\n        /* \"Utils/TransferHelper.sol\":1279:1330  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5039:5054   */\n      dup6\n      dup2\n      and\n        /* \"Utils/TransferHelper.sol\":1279:1330  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":5021:5055   */\n      mstore\n        /* \"#utility.yul\":5091:5106   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":5071:5089   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":5064:5107   */\n      mstore\n        /* \"#utility.yul\":5123:5141   */\n      0x64\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":5116:5150   */\n      dup6\n      swap1\n      mstore\n        /* \"Utils/TransferHelper.sol\":1279:1330  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":4956:4974   */\n      0x84\n      swap1\n      swap3\n      add\n        /* \"Utils/TransferHelper.sol\":1279:1330  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"Utils/TransferHelper.sol\":1254:1341  token.call(\r... */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"Utils/TransferHelper.sol\":1254:1264  token.call */\n      swap1\n      dup9\n      and\n      swap2\n        /* \"Utils/TransferHelper.sol\":1254:1341  token.call(\r... */\n      tag_402\n      swap2\n        /* \"Utils/TransferHelper.sol\":1279:1330  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      swap1\n        /* \"Utils/TransferHelper.sol\":1254:1341  token.call(\r... */\n      tag_403\n      jump\t// in\n    tag_402:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_406\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_405)\n    tag_406:\n      0x60\n      swap2\n      pop\n    tag_405:\n      pop\n        /* \"Utils/TransferHelper.sol\":1218:1341  (bool success, bytes memory data) = token.call(\r... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Utils/TransferHelper.sol\":1374:1381  success */\n      dup2\n        /* \"Utils/TransferHelper.sol\":1374:1431  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_409\n      jumpi\n      pop\n        /* \"Utils/TransferHelper.sol\":1386:1397  data.length */\n      dup1\n      mload\n        /* \"Utils/TransferHelper.sol\":1386:1402  data.length == 0 */\n      iszero\n      dup1\n        /* \"Utils/TransferHelper.sol\":1386:1430  data.length == 0 || abi.decode(data, (bool)) */\n      tag_409\n      jumpi\n      pop\n        /* \"Utils/TransferHelper.sol\":1417:1421  data */\n      dup1\n        /* \"Utils/TransferHelper.sol\":1406:1430  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_409\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_409:\n        /* \"Utils/TransferHelper.sol\":1352:1495  require(\r... */\n      tag_410\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10778:10780   */\n      0x20\n        /* \"Utils/TransferHelper.sol\":1352:1495  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10760:10781   */\n      mstore\n        /* \"#utility.yul\":10817:10819   */\n      0x24\n        /* \"#utility.yul\":10797:10815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10790:10820   */\n      mstore\n        /* \"#utility.yul\":10856:10890   */\n      0x5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641\n        /* \"#utility.yul\":10836:10854   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10829:10891   */\n      mstore\n      shl(0xe2, 0x12531151)\n        /* \"#utility.yul\":10907:10925   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10900:10934   */\n      mstore\n        /* \"#utility.yul\":10951:10970   */\n      0x84\n      add\n        /* \"Utils/TransferHelper.sol\":1352:1495  require(\r... */\n      tag_139\n        /* \"#utility.yul\":10750:10976   */\n      jump\n        /* \"Utils/TransferHelper.sol\":1352:1495  require(\r... */\n    tag_410:\n        /* \"Utils/TransferHelper.sol\":1207:1503  {\r... */\n      pop\n      pop\n        /* \"Utils/TransferHelper.sol\":1073:1503  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Utils/EnumerableSet.sol\":8831:8998  function contains(AddressSet storage set, address value) internal view returns (bool) {\r... */\n    tag_348:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/EnumerableSet.sol\":8965:8988  uint256(uint160(value)) */\n      dup2\n      and\n        /* \"Utils/EnumerableSet.sol\":8911:8915  bool */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"Utils/EnumerableSet.sol\":4367:4379  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Utils/EnumerableSet.sol\":4367:4391  set._indexes[value] != 0 */\n      iszero\n      iszero\n        /* \"Utils/EnumerableSet.sol\":8935:8990  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_389\n        /* \"Utils/EnumerableSet.sol\":4270:4399  function _contains(Set storage set, bytes32 value) private view returns (bool) {\r... */\n      jump\n        /* \"Utils/EnumerableSet.sol\":2174:2588  function _add(Set storage set, bytes32 value) private returns (bool) {\r... */\n    tag_390:\n        /* \"Utils/EnumerableSet.sol\":2237:2241  bool */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"Utils/EnumerableSet.sol\":4367:4379  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"Utils/EnumerableSet.sol\":4367:4386  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\n      tag_418\n      jumpi\n      pop\n        /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"Utils/EnumerableSet.sol\":2297:2308  set._values */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":2297:2320  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"Utils/EnumerableSet.sol\":2480:2498  set._values.length */\n      dup5\n      sload\n        /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"Utils/EnumerableSet.sol\":2458:2470  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"Utils/EnumerableSet.sol\":2458:2477  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Utils/EnumerableSet.sol\":2458:2498  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Utils/EnumerableSet.sol\":2513:2524  return true */\n      jump(tag_388)\n        /* \"Utils/EnumerableSet.sol\":2254:2581  if (!_contains(set, value)) {\r... */\n    tag_418:\n      pop\n        /* \"Utils/EnumerableSet.sol\":2564:2569  false */\n      0x00\n        /* \"Utils/EnumerableSet.sol\":2557:2569  return false */\n      jump(tag_388)\n        /* \"#utility.yul\":14:156   */\n    tag_423:\n        /* \"#utility.yul\":90:110   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":119:150   */\n      tag_425\n        /* \"#utility.yul\":90:110   */\n      dup2\n        /* \"#utility.yul\":119:150   */\n      tag_426\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":71:156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":161:408   */\n    tag_54:\n        /* \"#utility.yul\":220:226   */\n      0x00\n        /* \"#utility.yul\":273:275   */\n      0x20\n        /* \"#utility.yul\":261:270   */\n      dup3\n        /* \"#utility.yul\":252:259   */\n      dup5\n        /* \"#utility.yul\":248:271   */\n      sub\n        /* \"#utility.yul\":244:276   */\n      slt\n        /* \"#utility.yul\":241:243   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":289:290   */\n      0x00\n        /* \"#utility.yul\":286:287   */\n      dup1\n        /* \"#utility.yul\":279:291   */\n      revert\n        /* \"#utility.yul\":241:243   */\n    tag_428:\n        /* \"#utility.yul\":328:337   */\n      dup2\n        /* \"#utility.yul\":315:338   */\n      calldataload\n        /* \"#utility.yul\":347:378   */\n      tag_429\n        /* \"#utility.yul\":372:377   */\n      dup2\n        /* \"#utility.yul\":347:378   */\n      tag_426\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":397:402   */\n      swap4\n        /* \"#utility.yul\":231:408   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":413:1887   */\n    tag_76:\n        /* \"#utility.yul\":591:597   */\n      0x00\n        /* \"#utility.yul\":599:605   */\n      dup1\n        /* \"#utility.yul\":607:613   */\n      0x00\n        /* \"#utility.yul\":615:621   */\n      dup1\n        /* \"#utility.yul\":623:629   */\n      0x00\n        /* \"#utility.yul\":631:637   */\n      dup1\n        /* \"#utility.yul\":639:645   */\n      0x00\n        /* \"#utility.yul\":692:695   */\n      0x01e0\n        /* \"#utility.yul\":680:689   */\n      dup9\n        /* \"#utility.yul\":671:678   */\n      dup11\n        /* \"#utility.yul\":667:690   */\n      sub\n        /* \"#utility.yul\":663:696   */\n      slt\n        /* \"#utility.yul\":660:662   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":709:710   */\n      0x00\n        /* \"#utility.yul\":706:707   */\n      dup1\n        /* \"#utility.yul\":699:711   */\n      revert\n        /* \"#utility.yul\":660:662   */\n    tag_431:\n        /* \"#utility.yul\":748:757   */\n      dup8\n        /* \"#utility.yul\":735:758   */\n      calldataload\n        /* \"#utility.yul\":767:798   */\n      tag_432\n        /* \"#utility.yul\":792:797   */\n      dup2\n        /* \"#utility.yul\":767:798   */\n      tag_426\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":817:822   */\n      swap7\n      pop\n        /* \"#utility.yul\":841:843   */\n      0x20\n        /* \"#utility.yul\":880:898   */\n      dup9\n      dup2\n      add\n        /* \"#utility.yul\":867:899   */\n      calldataload\n        /* \"#utility.yul\":908:941   */\n      tag_433\n        /* \"#utility.yul\":867:899   */\n      dup2\n        /* \"#utility.yul\":908:941   */\n      tag_426\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":960:967   */\n      swap7\n      pop\n        /* \"#utility.yul\":1019:1021   */\n      0x40\n        /* \"#utility.yul\":1004:1022   */\n      dup10\n      add\n        /* \"#utility.yul\":991:1023   */\n      calldataload\n        /* \"#utility.yul\":1032:1065   */\n      tag_434\n        /* \"#utility.yul\":991:1023   */\n      dup2\n        /* \"#utility.yul\":1032:1065   */\n      tag_426\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":1084:1091   */\n      swap6\n      pop\n        /* \"#utility.yul\":1129:1132   */\n      0x7f\n        /* \"#utility.yul\":1114:1133   */\n      dup10\n      add\n        /* \"#utility.yul\":1110:1143   */\n      dup11\n      sgt\n        /* \"#utility.yul\":1100:1102   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":1157:1158   */\n      0x00\n        /* \"#utility.yul\":1154:1155   */\n      dup1\n        /* \"#utility.yul\":1147:1159   */\n      revert\n        /* \"#utility.yul\":1100:1102   */\n    tag_435:\n        /* \"#utility.yul\":1190:1192   */\n      0x40\n        /* \"#utility.yul\":1184:1193   */\n      mload\n        /* \"#utility.yul\":1232:1235   */\n      0x0120\n        /* \"#utility.yul\":1224:1230   */\n      dup2\n        /* \"#utility.yul\":1220:1236   */\n      add\n        /* \"#utility.yul\":1302:1308   */\n      dup2\n        /* \"#utility.yul\":1290:1300   */\n      dup2\n        /* \"#utility.yul\":1287:1309   */\n      lt\n        /* \"#utility.yul\":1266:1284   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1254:1264   */\n      dup3\n        /* \"#utility.yul\":1251:1285   */\n      gt\n        /* \"#utility.yul\":1248:1310   */\n      or\n        /* \"#utility.yul\":1245:1247   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":1313:1331   */\n      tag_437\n      tag_438\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":1349:1351   */\n      0x40\n        /* \"#utility.yul\":1342:1364   */\n      mstore\n        /* \"#utility.yul\":1384:1390   */\n      dup1\n        /* \"#utility.yul\":1425:1427   */\n      0x60\n        /* \"#utility.yul\":1410:1428   */\n      dup12\n      add\n        /* \"#utility.yul\":1462:1465   */\n      0x0180\n        /* \"#utility.yul\":1447:1466   */\n      dup13\n      add\n        /* \"#utility.yul\":1478:1493   */\n      dup14\n      dup2\n      gt\n        /* \"#utility.yul\":1475:1477   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":1506:1507   */\n      0x00\n        /* \"#utility.yul\":1503:1504   */\n      dup1\n        /* \"#utility.yul\":1496:1508   */\n      revert\n        /* \"#utility.yul\":1475:1477   */\n    tag_439:\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1703   */\n    tag_440:\n        /* \"#utility.yul\":1552:1556   */\n      0x09\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1557   */\n      lt\n        /* \"#utility.yul\":1538:1703   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":1611:1628   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":1599:1629   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1649:1661   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":1681:1693   */\n      swap2\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":1572:1573   */\n      0x01\n        /* \"#utility.yul\":1565:1574   */\n      add\n        /* \"#utility.yul\":1538:1703   */\n      jump(tag_440)\n    tag_442:\n      pop\n        /* \"#utility.yul\":1722:1728   */\n      swap3\n      swap8\n      pop\n      pop\n        /* \"#utility.yul\":1747:1763   */\n      swap1\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":1782:1829   */\n      tag_443\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1824:1827   */\n      0x01a0\n        /* \"#utility.yul\":1809:1828   */\n      dup10\n      add\n        /* \"#utility.yul\":1782:1829   */\n      tag_423\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":1772:1829   */\n      swap2\n      pop\n        /* \"#utility.yul\":1876:1879   */\n      0x01c0\n        /* \"#utility.yul\":1865:1874   */\n      dup9\n        /* \"#utility.yul\":1861:1880   */\n      add\n        /* \"#utility.yul\":1848:1881   */\n      calldataload\n        /* \"#utility.yul\":1838:1881   */\n      swap1\n      pop\n        /* \"#utility.yul\":650:1887   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1892:2133   */\n    tag_117:\n        /* \"#utility.yul\":1948:1954   */\n      0x00\n        /* \"#utility.yul\":2001:2003   */\n      0x20\n        /* \"#utility.yul\":1989:1998   */\n      dup3\n        /* \"#utility.yul\":1980:1987   */\n      dup5\n        /* \"#utility.yul\":1976:1999   */\n      sub\n        /* \"#utility.yul\":1972:2004   */\n      slt\n        /* \"#utility.yul\":1969:1971   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":2017:2018   */\n      0x00\n        /* \"#utility.yul\":2014:2015   */\n      dup1\n        /* \"#utility.yul\":2007:2019   */\n      revert\n        /* \"#utility.yul\":1969:1971   */\n    tag_445:\n        /* \"#utility.yul\":2056:2065   */\n      dup2\n        /* \"#utility.yul\":2043:2066   */\n      calldataload\n        /* \"#utility.yul\":2075:2103   */\n      tag_429\n        /* \"#utility.yul\":2097:2102   */\n      dup2\n        /* \"#utility.yul\":2075:2103   */\n      tag_447\n      jump\t// in\n        /* \"#utility.yul\":2138:2383   */\n    tag_181:\n        /* \"#utility.yul\":2205:2211   */\n      0x00\n        /* \"#utility.yul\":2258:2260   */\n      0x20\n        /* \"#utility.yul\":2246:2255   */\n      dup3\n        /* \"#utility.yul\":2237:2244   */\n      dup5\n        /* \"#utility.yul\":2233:2256   */\n      sub\n        /* \"#utility.yul\":2229:2261   */\n      slt\n        /* \"#utility.yul\":2226:2228   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":2274:2275   */\n      0x00\n        /* \"#utility.yul\":2271:2272   */\n      dup1\n        /* \"#utility.yul\":2264:2276   */\n      revert\n        /* \"#utility.yul\":2226:2228   */\n    tag_449:\n        /* \"#utility.yul\":2306:2315   */\n      dup2\n        /* \"#utility.yul\":2300:2316   */\n      mload\n        /* \"#utility.yul\":2325:2353   */\n      tag_429\n        /* \"#utility.yul\":2347:2352   */\n      dup2\n        /* \"#utility.yul\":2325:2353   */\n      tag_447\n      jump\t// in\n        /* \"#utility.yul\":2388:2568   */\n    tag_97:\n        /* \"#utility.yul\":2447:2453   */\n      0x00\n        /* \"#utility.yul\":2500:2502   */\n      0x20\n        /* \"#utility.yul\":2488:2497   */\n      dup3\n        /* \"#utility.yul\":2479:2486   */\n      dup5\n        /* \"#utility.yul\":2475:2498   */\n      sub\n        /* \"#utility.yul\":2471:2503   */\n      slt\n        /* \"#utility.yul\":2468:2470   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":2516:2517   */\n      0x00\n        /* \"#utility.yul\":2513:2514   */\n      dup1\n        /* \"#utility.yul\":2506:2518   */\n      revert\n        /* \"#utility.yul\":2468:2470   */\n    tag_452:\n      pop\n        /* \"#utility.yul\":2539:2562   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2458:2568   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2573:2757   */\n    tag_163:\n        /* \"#utility.yul\":2643:2649   */\n      0x00\n        /* \"#utility.yul\":2696:2698   */\n      0x20\n        /* \"#utility.yul\":2684:2693   */\n      dup3\n        /* \"#utility.yul\":2675:2682   */\n      dup5\n        /* \"#utility.yul\":2671:2694   */\n      sub\n        /* \"#utility.yul\":2667:2699   */\n      slt\n        /* \"#utility.yul\":2664:2666   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2709:2710   */\n      dup1\n        /* \"#utility.yul\":2702:2714   */\n      revert\n        /* \"#utility.yul\":2664:2666   */\n    tag_454:\n      pop\n        /* \"#utility.yul\":2735:2751   */\n      mload\n      swap2\n        /* \"#utility.yul\":2654:2757   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2762:3188   */\n    tag_403:\n        /* \"#utility.yul\":2891:2894   */\n      0x00\n        /* \"#utility.yul\":2929:2935   */\n      dup3\n        /* \"#utility.yul\":2923:2936   */\n      mload\n        /* \"#utility.yul\":2954:2955   */\n      0x00\n        /* \"#utility.yul\":2964:3093   */\n    tag_456:\n        /* \"#utility.yul\":2978:2984   */\n      dup2\n        /* \"#utility.yul\":2975:2976   */\n      dup2\n        /* \"#utility.yul\":2972:2985   */\n      lt\n        /* \"#utility.yul\":2964:3093   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":3076:3080   */\n      0x20\n        /* \"#utility.yul\":3060:3074   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":3056:3081   */\n      dup2\n      add\n        /* \"#utility.yul\":3050:3082   */\n      mload\n        /* \"#utility.yul\":3037:3048   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":3030:3083   */\n      mstore\n        /* \"#utility.yul\":2993:3005   */\n      add\n        /* \"#utility.yul\":2964:3093   */\n      jump(tag_456)\n    tag_458:\n        /* \"#utility.yul\":3111:3117   */\n      dup2\n        /* \"#utility.yul\":3108:3109   */\n      dup2\n        /* \"#utility.yul\":3105:3118   */\n      gt\n        /* \"#utility.yul\":3102:3104   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":3146:3147   */\n      0x00\n        /* \"#utility.yul\":3137:3143   */\n      dup3\n        /* \"#utility.yul\":3132:3135   */\n      dup6\n        /* \"#utility.yul\":3128:3144   */\n      add\n        /* \"#utility.yul\":3121:3148   */\n      mstore\n        /* \"#utility.yul\":3102:3104   */\n    tag_459:\n      pop\n        /* \"#utility.yul\":3166:3182   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2899:3188   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6561:6912   */\n    tag_192:\n        /* \"#utility.yul\":6763:6765   */\n      0x20\n        /* \"#utility.yul\":6745:6766   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6802:6804   */\n      0x1b\n        /* \"#utility.yul\":6782:6800   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6775:6805   */\n      mstore\n        /* \"#utility.yul\":6841:6870   */\n      0x416c6c20746f6b656e20686173206265656e2077697468647261770000000000\n        /* \"#utility.yul\":6836:6838   */\n      0x40\n        /* \"#utility.yul\":6821:6839   */\n      dup3\n      add\n        /* \"#utility.yul\":6814:6871   */\n      mstore\n        /* \"#utility.yul\":6903:6905   */\n      0x60\n        /* \"#utility.yul\":6888:6906   */\n      add\n      swap1\n        /* \"#utility.yul\":6735:6912   */\n      jump\t// out\n        /* \"#utility.yul\":11339:11694   */\n    tag_156:\n        /* \"#utility.yul\":11541:11543   */\n      0x20\n        /* \"#utility.yul\":11523:11544   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11580:11582   */\n      0x1f\n        /* \"#utility.yul\":11560:11578   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11553:11583   */\n      mstore\n        /* \"#utility.yul\":11619:11652   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11614:11616   */\n      0x40\n        /* \"#utility.yul\":11599:11617   */\n      dup3\n      add\n        /* \"#utility.yul\":11592:11653   */\n      mstore\n        /* \"#utility.yul\":11685:11687   */\n      0x60\n        /* \"#utility.yul\":11670:11688   */\n      add\n      swap1\n        /* \"#utility.yul\":11513:11694   */\n      jump\t// out\n        /* \"#utility.yul\":13722:13850   */\n    tag_206:\n        /* \"#utility.yul\":13762:13765   */\n      0x00\n        /* \"#utility.yul\":13793:13794   */\n      dup3\n        /* \"#utility.yul\":13789:13795   */\n      not\n        /* \"#utility.yul\":13786:13787   */\n      dup3\n        /* \"#utility.yul\":13783:13796   */\n      gt\n        /* \"#utility.yul\":13780:13782   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":13799:13817   */\n      tag_490\n      tag_491\n      jump\t// in\n    tag_490:\n      pop\n        /* \"#utility.yul\":13835:13844   */\n      add\n      swap1\n        /* \"#utility.yul\":13770:13850   */\n      jump\t// out\n        /* \"#utility.yul\":13855:14072   */\n    tag_266:\n        /* \"#utility.yul\":13895:13896   */\n      0x00\n        /* \"#utility.yul\":13921:13922   */\n      dup3\n        /* \"#utility.yul\":13911:13913   */\n      tag_493\n      jumpi\n        /* \"#utility.yul\":13965:13975   */\n      0x4e487b71\n        /* \"#utility.yul\":13960:13963   */\n      0xe0\n        /* \"#utility.yul\":13956:13976   */\n      shl\n        /* \"#utility.yul\":13953:13954   */\n      0x00\n        /* \"#utility.yul\":13946:13977   */\n      mstore\n        /* \"#utility.yul\":14000:14004   */\n      0x12\n        /* \"#utility.yul\":13997:13998   */\n      0x04\n        /* \"#utility.yul\":13990:14005   */\n      mstore\n        /* \"#utility.yul\":14028:14032   */\n      0x24\n        /* \"#utility.yul\":14025:14026   */\n      0x00\n        /* \"#utility.yul\":14018:14033   */\n      revert\n        /* \"#utility.yul\":13911:13913   */\n    tag_493:\n      pop\n        /* \"#utility.yul\":14057:14066   */\n      div\n      swap1\n        /* \"#utility.yul\":13901:14072   */\n      jump\t// out\n        /* \"#utility.yul\":14077:14499   */\n    tag_494:\n        /* \"#utility.yul\":14166:14167   */\n      0x01\n        /* \"#utility.yul\":14209:14214   */\n      dup2\n        /* \"#utility.yul\":14166:14167   */\n      dup2\n        /* \"#utility.yul\":14223:14493   */\n    tag_496:\n        /* \"#utility.yul\":14244:14251   */\n      dup1\n        /* \"#utility.yul\":14234:14242   */\n      dup6\n        /* \"#utility.yul\":14231:14252   */\n      gt\n        /* \"#utility.yul\":14223:14493   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":14303:14307   */\n      dup2\n        /* \"#utility.yul\":14299:14300   */\n      0x00\n        /* \"#utility.yul\":14295:14301   */\n      not\n        /* \"#utility.yul\":14291:14308   */\n      div\n        /* \"#utility.yul\":14285:14289   */\n      dup3\n        /* \"#utility.yul\":14282:14309   */\n      gt\n        /* \"#utility.yul\":14279:14281   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":14312:14330   */\n      tag_500\n      tag_491\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":14362:14369   */\n      dup1\n        /* \"#utility.yul\":14352:14360   */\n      dup6\n        /* \"#utility.yul\":14348:14370   */\n      and\n        /* \"#utility.yul\":14345:14347   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":14382:14398   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":14345:14347   */\n    tag_501:\n        /* \"#utility.yul\":14461:14483   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":14421:14436   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":14223:14493   */\n      jump(tag_496)\n    tag_498:\n        /* \"#utility.yul\":14227:14230   */\n      pop\n        /* \"#utility.yul\":14141:14499   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14504:14635   */\n    tag_219:\n        /* \"#utility.yul\":14564:14569   */\n      0x00\n        /* \"#utility.yul\":14593:14629   */\n      tag_389\n        /* \"#utility.yul\":14620:14628   */\n      dup4\n        /* \"#utility.yul\":14614:14618   */\n      dup4\n        /* \"#utility.yul\":14689:14694   */\n      0x00\n        /* \"#utility.yul\":14719:14727   */\n      dup3\n        /* \"#utility.yul\":14709:14711   */\n      tag_506\n      jumpi\n      pop\n        /* \"#utility.yul\":14760:14761   */\n      0x01\n        /* \"#utility.yul\":14774:14779   */\n      jump(tag_388)\n        /* \"#utility.yul\":14709:14711   */\n    tag_506:\n        /* \"#utility.yul\":14808:14812   */\n      dup2\n        /* \"#utility.yul\":14798:14800   */\n      tag_507\n      jumpi\n      pop\n        /* \"#utility.yul\":14845:14846   */\n      0x00\n        /* \"#utility.yul\":14859:14864   */\n      jump(tag_388)\n        /* \"#utility.yul\":14798:14800   */\n    tag_507:\n        /* \"#utility.yul\":14890:14894   */\n      dup2\n        /* \"#utility.yul\":14908:14909   */\n      0x01\n        /* \"#utility.yul\":14903:14962   */\n      dup2\n      eq\n      tag_509\n      jumpi\n        /* \"#utility.yul\":14976:14977   */\n      0x02\n        /* \"#utility.yul\":14971:15101   */\n      dup2\n      eq\n      tag_510\n      jumpi\n        /* \"#utility.yul\":14883:15101   */\n      jump(tag_508)\n        /* \"#utility.yul\":14903:14962   */\n    tag_509:\n        /* \"#utility.yul\":14933:14934   */\n      0x01\n        /* \"#utility.yul\":14924:14934   */\n      swap2\n      pop\n        /* \"#utility.yul\":14947:14952   */\n      pop\n      jump(tag_388)\n        /* \"#utility.yul\":14971:15101   */\n    tag_510:\n        /* \"#utility.yul\":15008:15011   */\n      0xff\n        /* \"#utility.yul\":14998:15006   */\n      dup5\n        /* \"#utility.yul\":14995:15012   */\n      gt\n        /* \"#utility.yul\":14992:14994   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":15015:15033   */\n      tag_512\n      tag_491\n      jump\t// in\n    tag_512:\n      pop\n      pop\n        /* \"#utility.yul\":15071:15072   */\n      0x01\n        /* \"#utility.yul\":15057:15073   */\n      dup3\n      shl\n        /* \"#utility.yul\":15086:15091   */\n      jump(tag_388)\n        /* \"#utility.yul\":14883:15101   */\n    tag_508:\n      pop\n        /* \"#utility.yul\":15185:15187   */\n      0x20\n        /* \"#utility.yul\":15175:15183   */\n      dup4\n        /* \"#utility.yul\":15172:15188   */\n      lt\n        /* \"#utility.yul\":15166:15169   */\n      0x0133\n        /* \"#utility.yul\":15160:15164   */\n      dup4\n        /* \"#utility.yul\":15157:15170   */\n      lt\n        /* \"#utility.yul\":15153:15189   */\n      and\n        /* \"#utility.yul\":15147:15149   */\n      0x4e\n        /* \"#utility.yul\":15137:15145   */\n      dup5\n        /* \"#utility.yul\":15134:15150   */\n      lt\n        /* \"#utility.yul\":15129:15131   */\n      0x0b\n        /* \"#utility.yul\":15123:15127   */\n      dup5\n        /* \"#utility.yul\":15120:15132   */\n      lt\n        /* \"#utility.yul\":15116:15151   */\n      and\n        /* \"#utility.yul\":15113:15190   */\n      or\n        /* \"#utility.yul\":15110:15112   */\n      iszero\n      tag_513\n      jumpi\n      pop\n        /* \"#utility.yul\":15222:15241   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":15254:15259   */\n      jump(tag_388)\n        /* \"#utility.yul\":15110:15112   */\n    tag_513:\n        /* \"#utility.yul\":15301:15335   */\n      tag_514\n        /* \"#utility.yul\":15326:15334   */\n      dup4\n        /* \"#utility.yul\":15320:15324   */\n      dup4\n        /* \"#utility.yul\":15301:15335   */\n      tag_494\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":15371:15377   */\n      dup1\n        /* \"#utility.yul\":15367:15368   */\n      0x00\n        /* \"#utility.yul\":15363:15369   */\n      not\n        /* \"#utility.yul\":15359:15378   */\n      div\n        /* \"#utility.yul\":15350:15357   */\n      dup3\n        /* \"#utility.yul\":15347:15379   */\n      gt\n        /* \"#utility.yul\":15344:15346   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":15382:15400   */\n      tag_516\n      tag_491\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":15420:15440   */\n      mul\n      swap4\n        /* \"#utility.yul\":14699:15446   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15451:15619   */\n    tag_224:\n        /* \"#utility.yul\":15491:15498   */\n      0x00\n        /* \"#utility.yul\":15557:15558   */\n      dup2\n        /* \"#utility.yul\":15553:15554   */\n      0x00\n        /* \"#utility.yul\":15549:15555   */\n      not\n        /* \"#utility.yul\":15545:15559   */\n      div\n        /* \"#utility.yul\":15542:15543   */\n      dup4\n        /* \"#utility.yul\":15539:15560   */\n      gt\n        /* \"#utility.yul\":15534:15535   */\n      dup3\n        /* \"#utility.yul\":15527:15536   */\n      iszero\n        /* \"#utility.yul\":15520:15537   */\n      iszero\n        /* \"#utility.yul\":15516:15561   */\n      and\n        /* \"#utility.yul\":15513:15515   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":15564:15582   */\n      tag_519\n      tag_491\n      jump\t// in\n    tag_519:\n      pop\n        /* \"#utility.yul\":15604:15613   */\n      mul\n      swap1\n        /* \"#utility.yul\":15503:15619   */\n      jump\t// out\n        /* \"#utility.yul\":15624:15749   */\n    tag_189:\n        /* \"#utility.yul\":15664:15668   */\n      0x00\n        /* \"#utility.yul\":15692:15693   */\n      dup3\n        /* \"#utility.yul\":15689:15690   */\n      dup3\n        /* \"#utility.yul\":15686:15694   */\n      lt\n        /* \"#utility.yul\":15683:15685   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":15697:15715   */\n      tag_522\n      tag_491\n      jump\t// in\n    tag_522:\n      pop\n        /* \"#utility.yul\":15734:15743   */\n      sub\n      swap1\n        /* \"#utility.yul\":15673:15749   */\n      jump\t// out\n        /* \"#utility.yul\":15754:15889   */\n    tag_331:\n        /* \"#utility.yul\":15793:15796   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":15814:15831   */\n      dup3\n      eq\n        /* \"#utility.yul\":15811:15813   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":15834:15852   */\n      tag_525\n      tag_491\n      jump\t// in\n    tag_525:\n      pop\n        /* \"#utility.yul\":15881:15882   */\n      0x01\n        /* \"#utility.yul\":15870:15883   */\n      add\n      swap1\n        /* \"#utility.yul\":15801:15889   */\n      jump\t// out\n        /* \"#utility.yul\":15894:16021   */\n    tag_491:\n        /* \"#utility.yul\":15955:15965   */\n      0x4e487b71\n        /* \"#utility.yul\":15950:15953   */\n      0xe0\n        /* \"#utility.yul\":15946:15966   */\n      shl\n        /* \"#utility.yul\":15943:15944   */\n      0x00\n        /* \"#utility.yul\":15936:15967   */\n      mstore\n        /* \"#utility.yul\":15986:15990   */\n      0x11\n        /* \"#utility.yul\":15983:15984   */\n      0x04\n        /* \"#utility.yul\":15976:15991   */\n      mstore\n        /* \"#utility.yul\":16010:16014   */\n      0x24\n        /* \"#utility.yul\":16007:16008   */\n      0x00\n        /* \"#utility.yul\":16000:16015   */\n      revert\n        /* \"#utility.yul\":16158:16285   */\n    tag_438:\n        /* \"#utility.yul\":16219:16229   */\n      0x4e487b71\n        /* \"#utility.yul\":16214:16217   */\n      0xe0\n        /* \"#utility.yul\":16210:16230   */\n      shl\n        /* \"#utility.yul\":16207:16208   */\n      0x00\n        /* \"#utility.yul\":16200:16231   */\n      mstore\n        /* \"#utility.yul\":16250:16254   */\n      0x41\n        /* \"#utility.yul\":16247:16248   */\n      0x04\n        /* \"#utility.yul\":16240:16255   */\n      mstore\n        /* \"#utility.yul\":16274:16278   */\n      0x24\n        /* \"#utility.yul\":16271:16272   */\n      0x00\n        /* \"#utility.yul\":16264:16279   */\n      revert\n        /* \"#utility.yul\":16290:16421   */\n    tag_426:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16365:16396   */\n      dup2\n      and\n        /* \"#utility.yul\":16355:16397   */\n      dup2\n      eq\n        /* \"#utility.yul\":16345:16347   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":16411:16412   */\n      0x00\n        /* \"#utility.yul\":16408:16409   */\n      dup1\n        /* \"#utility.yul\":16401:16413   */\n      revert\n        /* \"#utility.yul\":16426:16544   */\n    tag_447:\n        /* \"#utility.yul\":16512:16517   */\n      dup1\n        /* \"#utility.yul\":16505:16518   */\n      iszero\n        /* \"#utility.yul\":16498:16519   */\n      iszero\n        /* \"#utility.yul\":16491:16496   */\n      dup2\n        /* \"#utility.yul\":16488:16520   */\n      eq\n        /* \"#utility.yul\":16478:16480   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":16534:16535   */\n      0x00\n        /* \"#utility.yul\":16531:16532   */\n      dup1\n        /* \"#utility.yul\":16524:16536   */\n      revert\n\n    auxdata: 0xa2646970667358221220555ef1133e90df923734ba2c3b871b1ef4e27e0ade2c79a95067784fd37ac43664736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2691": {
									"entryPoint": null,
									"id": 2691,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2791": {
									"entryPoint": null,
									"id": 2791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_901": {
									"entryPoint": null,
									"id": 901,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_add_2121": {
									"entryPoint": 274,
									"id": 2121,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_contains_2224": {
									"entryPoint": null,
									"id": 2224,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_2058": {
									"entryPoint": null,
									"id": 2058,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_2771": {
									"entryPoint": 160,
									"id": 2771,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_2407": {
									"entryPoint": 242,
									"id": 2407,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260016000556200001433620000a0565b601b805473c778417e063141139fce010982780140aa0cd5ab6001600160a01b031990911617905562000069601c736ccb41eeda5a073076f3e7dc1614c185b5fa41ed620000f2602090811b620017dc17901c565b5062000099734f0b12bbf40fc182559822a5b1db6d34dbc3e016601c620000f260201b620017dc1790919060201c565b5062000164565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600062000109836001600160a01b03841662000112565b90505b92915050565b60008181526001830160205260408120546200015b575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200010c565b5060006200010c565b611e3b80620001746000396000f3fe6080604052600436106101405760003560e01c80639b25415c116100b6578063cad5b0f71161006f578063cad5b0f714610440578063d4c1dee914610465578063e2d3f4231461047b578063eb002bb0146104ed578063f2fde38b1461050d578063f8b2cb4f1461052d57600080fd5b80639b25415c14610331578063ab33985a14610351578063acfb235514610366578063ad5c4648146103ed578063ae2b09651461040d578063b6b55f251461042d57600080fd5b806356c5f3491161010857806356c5f34914610289578063715018a6146102b6578063861faf5f146102cd5780638da5cb5b146102d55780638edf18e61461030757806395661e701461031c57600080fd5b806312e5d0b91461014557806318856a2f1461017a5780631df4ccfc1461023a578063200d2ed21461025e5780633b5ef2ad14610273575b600080fd5b34801561015157600080fd5b50600d54600e54610160919082565b604080519283526020830191909152015b60405180910390f35b34801561018657600080fd5b50600f54601054601154601254601354601454601554601654601754601854601954601a546101ce9b6001600160a01b039081169b81169a16989796959493929160ff16908c565b604080516001600160a01b039d8e1681529b8d1660208d015299909b16988a01989098526060890196909652608088019490945260a087019290925260c086015260e0850152610100840152610120830152151561014082015261016081019190915261018001610171565b34801561024657600080fd5b50610250601e5481565b604051908152602001610171565b34801561026a57600080fd5b50610250610555565b34801561027f57600080fd5b50610250601f5481565b34801561029557600080fd5b506102506102a4366004611a21565b60036020526000908152604090205481565b3480156102c257600080fd5b506102cb61057e565b005b6102cb6105e9565b3480156102e157600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610171565b34801561031357600080fd5b506102cb610618565b34801561032857600080fd5b506102cb6108dd565b34801561033d57600080fd5b506102cb61034c366004611a45565b610ab4565b34801561035d57600080fd5b506102cb610e58565b34801561037257600080fd5b50600454600554600654600754600854600954600a54600b546103a5979695949392919060ff8082169161010090041689565b60408051998a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c0840152151560e0830152151561010082015261012001610171565b3480156103f957600080fd5b50601b546102ef906001600160a01b031681565b34801561041957600080fd5b506020546102ef906001600160a01b031681565b6102cb61043b366004611b65565b61107e565b34801561044c57600080fd5b5061045561144d565b6040519015158152602001610171565b34801561047157600080fd5b5061025060215481565b34801561048757600080fd5b506104c5610496366004611a21565b600260208190526000918252604090912080546001820154928201546003830154600490930154919392909185565b604080519586526020860194909452928401919091526060830152608082015260a001610171565b3480156104f957600080fd5b506102cb610508366004611b2b565b61145f565b34801561051957600080fd5b506102cb610528366004611a21565b611714565b34801561053957600080fd5b50610250610548366004611a21565b6001600160a01b03163190565b6013546000904210156105685750600090565b6014544211156105785750600290565b50600190565b6001546001600160a01b031633146105dd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6105e760006117fa565b565b60405133904780156108fc02916000818181858888f19350505050158015610615573d6000803e3d6000fd5b50565b600f546001600160a01b0316336001600160a01b0316146106705760405162461bcd60e51b815260206004820152601260248201527127b7363c90383932b9b0b6329037bbb732b960711b60448201526064016105d4565b600260005414156106935760405162461bcd60e51b81526004016105d490611c09565b600260009081556010546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107159190611b7e565b60085460045491925060009161072a9161184c565b600454909150156107535760085460055461075091610749919061184c565b839061184c565b91505b600b5460ff16156107a65760405162461bcd60e51b815260206004820152601d60248201527f4e6f7468696e6720666f72206f776e657220636c61696d20746f6b656e00000060448201526064016105d4565b600b54610100900460ff16156107fe5760405162461bcd60e51b815260206004820152601e60248201527f4e6f7468696e6720666f72206f776e657220726566756e6420746f6b656e000060448201526064016105d4565b600b805460ff191660011790556000601a55601054600f5460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561086057600080fd5b505af1158015610874573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108989190611b48565b50600f546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156108d3573d6000803e3d6000fd5b5050600160005550565b600260005414156109005760405162461bcd60e51b81526004016105d490611c09565b600260009081556007546004546109179190611d84565b116109345760405162461bcd60e51b81526004016105d490611bd2565b336000908152600260205260409020805461098b5760405162461bcd60e51b8152602060048201526017602482015276165bdd481a185d99481b9bdd08189bdd59da1d081e595d604a1b60448201526064016105d4565b60048101548154116109d05760405162461bcd60e51b815260206004820152600e60248201526d165bdd481c99599d5b9908185b1b60921b60448201526064016105d4565b80546017546000916109fb916103e8916109f5916109ef90849061184c565b90611858565b90611864565b8254909150610a0b908290611d84565b601e6000828254610a1c9190611c40565b909155505060078054829190600090610a36908490611c40565b9250508190555080826004016000828254610a519190611c40565b909155505042600283015560038201546001830154610a709190611d84565b60088054600090610a82908490611c40565b9091555050604051339082156108fc029083906000818181858888f193505050501580156108d3573d6000803e3d6000fd5b600f80546001600160a01b03808a166001600160a01b03199283161790925560108054898416908316811790915560118054938916939092169290921790556040805163313ce56760e01b8152905163313ce56791600480820192602092909190829003018186803b158015610b2957600080fd5b505afa158015610b3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b619190611b7e565b610b6c90600a611cbd565b8451610b789190611d65565b6012556020808501516013556040808601516014556060860151601555601154815163313ce56760e01b815291516001600160a01b039091169263313ce5679260048082019391829003018186803b158015610bd357600080fd5b505afa158015610be7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0b9190611b7e565b610c1690600a611cbd565b6080850151610c259190611d65565b60165560a084015160175560c08401516018556011546040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b158015610c7d57600080fd5b505afa158015610c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb59190611b7e565b610cc090600a611cbd565b60e0850151610ccf9190611d65565b600d556011546040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b158015610d1757600080fd5b505afa158015610d2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4f9190611b7e565b610d5a90600a611cbd565b610100850151610d6a9190611d65565b600e55601154601b546019805460ff19166001600160a01b0392831692909316918214929092179091556040805163313ce56760e01b8152905163313ce56791600480820192602092909190829003018186803b158015610dca57600080fd5b505afa158015610dde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e029190611b7e565b610e0d90600a611cbd565b600d54601254610e1c91611858565b610e269190611c58565b601a55601f92909255602080546001600160a01b0319166001600160a01b039290921691909117905560215550505050565b60026000541415610e7b5760405162461bcd60e51b81526004016105d490611c09565b60026000908155600654600554610e929190611d84565b11610eaf5760405162461bcd60e51b81526004016105d490611bd2565b3360009081526002602052604090206001810154610f095760405162461bcd60e51b8152602060048201526017602482015276165bdd481a185d99481b9bdd08189bdd59da1d081e595d604a1b60448201526064016105d4565b8060030154816001015411610f515760405162461bcd60e51b815260206004820152600e60248201526d165bdd4818db185a5b48185b1b1b60921b60448201526064016105d4565b6000610f7b6103e86109f584600101546109ef600f600901546103e861184c90919063ffffffff16565b90508060046002016000828254610f929190611c40565b9091555050601a8054829190600090610fac908490611d84565b9250508190555080826003016000828254610fc79190611c40565b909155505042600283015560048201548254610fe39190611d84565b60098054600090610ff5908490611c40565b909155505060105460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561104657600080fd5b505af115801561105a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d39190611b48565b600260005414156110a15760405162461bcd60e51b81526004016105d490611c09565b600260008181553381526020919091526040812090829081906103e83483111561110d5760405162461bcd60e51b815260206004820152601a60248201527f506c656173652070726f76696465206e617669746520636f696e00000000000060448201526064016105d4565b6015548310156111525760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682076616c756560801b60448201526064016105d4565b6016548311156111955760405162461bcd60e51b815260206004820152600e60248201526d4f766572666c6f772076616c756560901b60448201526064016105d4565b61119d61144d565b6111cd576111be816109f5856109ef601f548661184c90919063ffffffff16565b92506111ca8385611d84565b91505b84546016546000916111de91611d84565b600454601a549192506000916111f49190611d84565b905060008183116112055782611207565b815b90508086111561124b5760405162461bcd60e51b815260206004820152600f60248201526e53616c65206973207375636365737360881b60448201526064016105d4565b60006112f2600f60020160009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156112a157600080fd5b505afa1580156112b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d99190611b7e565b6112e490600a611cbd565b6012546109f5908a90611858565b9050868960000160008282546113089190611c40565b92505081905550808960010160008282546113239190611c40565b90915550506004805488919060009061133d908490611c40565b909155505060058054829190600090611357908490611c40565b9091555050600a805490600061136c83611d9b565b90915550503360009081526003602052604081208054889290611390908490611c40565b9250508190555085601e60008282546113a99190611c40565b909155505060195460ff1680156113c95750346113c68789611c40565b11155b1561141157336108fc876113dd8a34611d84565b6113e79190611d84565b6040518115909202916000818181858888f1935050505015801561140f573d6000803e3d6000fd5b505b60195460ff1661143c5760115461143c906001600160a01b031633306114378a8c611c40565b611870565b505060016000555050505050505050565b600061145a601c336119a0565b905090565b80156115fb5760065460055460009161147791611d84565b116114945760405162461bcd60e51b81526004016105d490611bd2565b33600090815260026020526040902060038101546001820154116115065760405162461bcd60e51b8152602060048201526024808201527f596f7520636c61696d20616c6c206f722068617665206e6f7420626f75676874604482015263081e595d60e21b60648201526084016105d4565b601054600182015460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561155857600080fd5b505af115801561156c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115909190611b48565b506001810154600680546000906115a8908490611c40565b90915550506001810154601a80546000906115c4908490611d84565b909155505060018101546003820180546000906115e2908490611c40565b9091555050600080825560018201554260029091015550565b60075460045460009161160d91611d84565b1161162a5760405162461bcd60e51b81526004016105d490611bd2565b33600090815260026020526040902080546116955760405162461bcd60e51b815260206004820152602560248201527f596f7520726566756e6420616c6c206f722068617665206e6f7420626f7567686044820152641d081e595d60da1b60648201526084016105d4565b80546116a18180611d84565b601e60008282546116b29190611c40565b9091555050600780548291906000906116cc908490611c40565b9091555050600080835560018301819055426002840155604051339183156108fc02918491818181858888f1935050505015801561170e573d6000803e3d6000fd5b50505050565b6001546001600160a01b0316331461176e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d4565b6001600160a01b0381166117d35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d4565b610615816117fa565b60006117f1836001600160a01b0384166119c2565b90505b92915050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006117f18284611d84565b60006117f18284611d65565b60006117f18284611c58565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916118d49190611b97565b6000604051808303816000865af19150503d8060008114611911576040519150601f19603f3d011682016040523d82523d6000602084013e611916565b606091505b50915091508180156119405750805115806119405750808060200190518101906119409190611b48565b6119985760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b60648201526084016105d4565b505050505050565b6001600160a01b038116600090815260018301602052604081205415156117f1565b6000818152600183016020526040812054611a09575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556117f4565b5060006117f4565b8035611a1c81611de2565b919050565b600060208284031215611a3357600080fd5b8135611a3e81611de2565b9392505050565b60008060008060008060006101e0888a031215611a6157600080fd5b8735611a6c81611de2565b9650602088810135611a7d81611de2565b96506040890135611a8d81611de2565b9550607f89018a13611a9e57600080fd5b604051610120810181811067ffffffffffffffff82111715611ac257611ac2611dcc565b6040528060608b016101808c018d811115611adc57600080fd5b60005b6009811015611afc57823584529285019291850191600101611adf565b509297505090359450611b159150506101a08901611a11565b91506101c0880135905092959891949750929550565b600060208284031215611b3d57600080fd5b8135611a3e81611df7565b600060208284031215611b5a57600080fd5b8151611a3e81611df7565b600060208284031215611b7757600080fd5b5035919050565b600060208284031215611b9057600080fd5b5051919050565b6000825160005b81811015611bb85760208186018101518583015201611b9e565b81811115611bc7576000828501525b509190910192915050565b6020808252601b908201527f416c6c20746f6b656e20686173206265656e2077697468647261770000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008219821115611c5357611c53611db6565b500190565b600082611c7557634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115611cb5578160001904821115611c9b57611c9b611db6565b80851615611ca857918102915b93841c9390800290611c7f565b509250929050565b60006117f18383600082611cd3575060016117f4565b81611ce0575060006117f4565b8160018114611cf65760028114611d0057611d1c565b60019150506117f4565b60ff841115611d1157611d11611db6565b50506001821b6117f4565b5060208310610133831016604e8410600b8410161715611d3f575081810a6117f4565b611d498383611c7a565b8060001904821115611d5d57611d5d611db6565b029392505050565b6000816000190483118215151615611d7f57611d7f611db6565b500290565b600082821015611d9657611d96611db6565b500390565b6000600019821415611daf57611daf611db6565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461061557600080fd5b801515811461061557600080fdfea2646970667358221220555ef1133e90df923734ba2c3b871b1ef4e27e0ade2c79a95067784fd37ac43664736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH3 0x14 CALLER PUSH3 0xA0 JUMP JUMPDEST PUSH1 0x1B DUP1 SLOAD PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH3 0x69 PUSH1 0x1C PUSH20 0x6CCB41EEDA5A073076F3E7DC1614C185B5FA41ED PUSH3 0xF2 PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x17DC OR SWAP1 SHR JUMP JUMPDEST POP PUSH3 0x99 PUSH20 0x4F0B12BBF40FC182559822A5B1DB6D34DBC3E016 PUSH1 0x1C PUSH3 0xF2 PUSH1 0x20 SHL PUSH3 0x17DC OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x164 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x109 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x112 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH3 0x15B JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x10C JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x10C JUMP JUMPDEST PUSH2 0x1E3B DUP1 PUSH3 0x174 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B25415C GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xCAD5B0F7 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCAD5B0F7 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xD4C1DEE9 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xEB002BB0 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B25415C EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xAB33985A EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xACFB2355 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xAE2B0965 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x56C5F349 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x8EDF18E6 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x95661E70 EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12E5D0B9 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x18856A2F EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x1DF4CCFC EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x3B5EF2AD EQ PUSH2 0x273 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH2 0x160 SWAP2 SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH1 0x16 SLOAD PUSH1 0x17 SLOAD PUSH1 0x18 SLOAD PUSH1 0x19 SLOAD PUSH1 0x1A SLOAD PUSH2 0x1CE SWAP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP12 DUP2 AND SWAP11 AND SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 DUP13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP14 DUP15 AND DUP2 MSTORE SWAP12 DUP14 AND PUSH1 0x20 DUP14 ADD MSTORE SWAP10 SWAP1 SWAP12 AND SWAP9 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x60 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xA0 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x160 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x180 ADD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0x555 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1F SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A21 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x57E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CB PUSH2 0x5E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x618 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x8DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0xE58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x3A5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE SWAP7 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1B SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B65 JUMP JUMPDEST PUSH2 0x107E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x455 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x21 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C5 PUSH2 0x496 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A21 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x145F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A21 JUMP JUMPDEST PUSH2 0x1714 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0x548 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x0 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x568 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD TIMESTAMP GT ISZERO PUSH2 0x578 JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E7 PUSH1 0x0 PUSH2 0x17FA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x615 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x27B7363C90383932B9B0B6329037BBB732B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x4 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x72A SWAP2 PUSH2 0x184C JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x753 JUMPI PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH2 0x750 SWAP2 PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x184C JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x184C JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720666F72206F776E657220636C61696D20746F6B656E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720666F72206F776E657220726566756E6420746F6B656E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x1A SSTORE PUSH1 0x10 SLOAD PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x874 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x898 SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x900 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD PUSH2 0x917 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST GT PUSH2 0x934 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x165BDD481A185D99481B9BDD08189BDD59DA1D081E595D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD DUP2 SLOAD GT PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x165BDD481C99599D5B9908185B1B PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x17 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x9FB SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0x9F5 SWAP2 PUSH2 0x9EF SWAP1 DUP5 SWAP1 PUSH2 0x184C JUMP JUMPDEST SWAP1 PUSH2 0x1858 JUMP JUMPDEST SWAP1 PUSH2 0x1864 JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH2 0xA0B SWAP1 DUP3 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x1E PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xA36 SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA51 SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0xA70 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xA82 SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x10 DUP1 SLOAD DUP10 DUP5 AND SWAP1 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP4 DUP10 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB61 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0xB6C SWAP1 PUSH1 0xA PUSH2 0x1CBD JUMP JUMPDEST DUP5 MLOAD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x12 SSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD PUSH1 0x13 SSTORE PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0x14 SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x15 SSTORE PUSH1 0x11 SLOAD DUP2 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x313CE567 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC0B SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0xC16 SWAP1 PUSH1 0xA PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0xC25 SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x16 SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x17 SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x18 SSTORE PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0xCC0 SWAP1 PUSH1 0xA PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0xCCF SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD4F SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0xD5A SWAP1 PUSH1 0xA PUSH2 0x1CBD JUMP JUMPDEST PUSH2 0x100 DUP6 ADD MLOAD PUSH2 0xD6A SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0x11 SLOAD PUSH1 0x1B SLOAD PUSH1 0x19 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP4 AND SWAP2 DUP3 EQ SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0xE0D SWAP1 PUSH1 0xA PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x12 SLOAD PUSH2 0xE1C SWAP2 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0xE26 SWAP2 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x1A SSTORE PUSH1 0x1F SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x20 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x21 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xE7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xE92 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST GT PUSH2 0xEAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xF09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x165BDD481A185D99481B9BDD08189BDD59DA1D081E595D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0xF51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x165BDD4818DB185A5B48185B1B1B PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B PUSH2 0x3E8 PUSH2 0x9F5 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x9EF PUSH1 0xF PUSH1 0x9 ADD SLOAD PUSH2 0x3E8 PUSH2 0x184C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF92 SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1A DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xFAC SWAP1 DUP5 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFC7 SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP3 SLOAD PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xFF5 SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1046 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x105A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x10A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 DUP2 SSTORE CALLER DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x3E8 CALLVALUE DUP4 GT ISZERO PUSH2 0x110D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C656173652070726F76696465206E617669746520636F696E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP4 LT ISZERO PUSH2 0x1152 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F7420656E6F7567682076616C7565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP4 GT ISZERO PUSH2 0x1195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4F766572666C6F772076616C7565 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0x119D PUSH2 0x144D JUMP JUMPDEST PUSH2 0x11CD JUMPI PUSH2 0x11BE DUP2 PUSH2 0x9F5 DUP6 PUSH2 0x9EF PUSH1 0x1F SLOAD DUP7 PUSH2 0x184C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0x11CA DUP4 DUP6 PUSH2 0x1D84 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP5 SLOAD PUSH1 0x16 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x11DE SWAP2 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1A SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x11F4 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x1205 JUMPI DUP3 PUSH2 0x1207 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP DUP1 DUP7 GT ISZERO PUSH2 0x124B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x53616C652069732073756363657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F2 PUSH1 0xF PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D9 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x12E4 SWAP1 PUSH1 0xA PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x9F5 SWAP1 DUP11 SWAP1 PUSH2 0x1858 JUMP JUMPDEST SWAP1 POP DUP7 DUP10 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1308 SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP10 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1323 SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 DUP1 SLOAD DUP9 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x133D SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1357 SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x136C DUP4 PUSH2 0x1D9B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1390 SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1E PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13A9 SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x19 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x13C9 JUMPI POP CALLVALUE PUSH2 0x13C6 DUP8 DUP10 PUSH2 0x1C40 JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x1411 JUMPI CALLER PUSH2 0x8FC DUP8 PUSH2 0x13DD DUP11 CALLVALUE PUSH2 0x1D84 JUMP JUMPDEST PUSH2 0x13E7 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x140F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0xFF AND PUSH2 0x143C JUMPI PUSH1 0x11 SLOAD PUSH2 0x143C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS PUSH2 0x1437 DUP11 DUP13 PUSH2 0x1C40 JUMP JUMPDEST PUSH2 0x1870 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145A PUSH1 0x1C CALLER PUSH2 0x19A0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15FB JUMPI PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x1477 SWAP2 PUSH2 0x1D84 JUMP JUMPDEST GT PUSH2 0x1494 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD GT PUSH2 0x1506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x596F7520636C61696D20616C6C206F722068617665206E6F7420626F75676874 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x81E595D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x156C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1590 SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x15A8 SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1A DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x15C4 SWAP1 DUP5 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x15E2 SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SSTORE TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x160D SWAP2 PUSH2 0x1D84 JUMP JUMPDEST GT PUSH2 0x162A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1695 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520726566756E6420616C6C206F722068617665206E6F7420626F756768 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D081E595D PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x16A1 DUP2 DUP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x1E PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16B2 SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x16CC SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP4 SSTORE PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE TIMESTAMP PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x170E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x176E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0x615 DUP2 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x19C2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F1 DUP3 DUP5 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F1 DUP3 DUP5 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F1 DUP3 DUP5 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x18D4 SWAP2 SWAP1 PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1911 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1940 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1940 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1940 SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1998 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x12531151 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x17F1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1A09 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x17F4 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x17F4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1A1C DUP2 PUSH2 0x1DE2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A3E DUP2 PUSH2 0x1DE2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1E0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1A61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1A6C DUP2 PUSH2 0x1DE2 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 DUP2 ADD CALLDATALOAD PUSH2 0x1A7D DUP2 PUSH2 0x1DE2 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x1A8D DUP2 PUSH2 0x1DE2 JUMP JUMPDEST SWAP6 POP PUSH1 0x7F DUP10 ADD DUP11 SGT PUSH2 0x1A9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1AC2 JUMPI PUSH2 0x1AC2 PUSH2 0x1DCC JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP12 ADD PUSH2 0x180 DUP13 ADD DUP14 DUP2 GT ISZERO PUSH2 0x1ADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x1AFC JUMPI DUP3 CALLDATALOAD DUP5 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1ADF JUMP JUMPDEST POP SWAP3 SWAP8 POP POP SWAP1 CALLDATALOAD SWAP5 POP PUSH2 0x1B15 SWAP2 POP POP PUSH2 0x1A0 DUP10 ADD PUSH2 0x1A11 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A3E DUP2 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A3E DUP2 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BB8 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1B9E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1BC7 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E20686173206265656E2077697468647261770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C53 JUMPI PUSH2 0x1C53 PUSH2 0x1DB6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1CB5 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1C9B JUMPI PUSH2 0x1C9B PUSH2 0x1DB6 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1CA8 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1C7F JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F1 DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x1CD3 JUMPI POP PUSH1 0x1 PUSH2 0x17F4 JUMP JUMPDEST DUP2 PUSH2 0x1CE0 JUMPI POP PUSH1 0x0 PUSH2 0x17F4 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1CF6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1D00 JUMPI PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x17F4 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1D11 JUMPI PUSH2 0x1D11 PUSH2 0x1DB6 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x17F4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1D3F JUMPI POP DUP2 DUP2 EXP PUSH2 0x17F4 JUMP JUMPDEST PUSH2 0x1D49 DUP4 DUP4 PUSH2 0x1C7A JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1D5D JUMPI PUSH2 0x1D5D PUSH2 0x1DB6 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1D7F JUMPI PUSH2 0x1D7F PUSH2 0x1DB6 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1D96 JUMPI PUSH2 0x1D96 PUSH2 0x1DB6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1DAF JUMPI PUSH2 0x1DAF PUSH2 0x1DB6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0x5E CALL SGT RETURNDATACOPY SWAP1 0xDF SWAP3 CALLDATACOPY CALLVALUE 0xBA 0x2C EXTCODESIZE DUP8 SHL 0x1E DELEGATECALL 0xE2 PUSH31 0xADE2C79A95067784FD37AC43664736F6C6343000805003300000000000000 ",
							"sourceMap": "370:11434:4:-:0;;;1734:1:9;1845:7;:22;942:32:8;736:10:6;942:18:8;:32::i;:::-;2438:4:4;:56;;2451:42;-1:-1:-1;;;;;;2438:56:4;;;;;;2505:54;:6;2516:42;2505:10;;;;;;;:54;;:::i;:::-;;2570;2581:42;2570:6;:10;;;;;;:54;;;;:::i;:::-;;370:11434;;2333:191:8;2426:6;;;-1:-1:-1;;;;;2443:17:8;;;-1:-1:-1;;;;;;2443:17:8;;;;;;;2476:40;;2426:6;;;2443:17;2426:6;;2476:40;;2407:16;;2476:40;2396:128;2333:191;:::o;8259:152:7:-;8329:4;8353:50;8358:3;-1:-1:-1;;;;;8378:23:7;;8353:4;:50::i;:::-;8346:57;;8259:152;;;;;:::o;2174:414::-;2237:4;4367:19;;;:12;;;:19;;;;;;2254:327;;-1:-1:-1;2297:23:7;;;;;;;;:11;:23;;;;;;;;;;;;;2480:18;;2458:19;;;:12;;;:19;;;;;;:40;;;;2513:11;;2254:327;-1:-1:-1;2564:5:7;2557:12;;370:11434:4;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WETH_829": {
									"entryPoint": null,
									"id": 829,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_add_2121": {
									"entryPoint": 6594,
									"id": 2121,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_contains_2224": {
									"entryPoint": null,
									"id": 2224,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_2058": {
									"entryPoint": null,
									"id": 2058,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_2771": {
									"entryPoint": 6138,
									"id": 2771,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_2407": {
									"entryPoint": 6108,
									"id": 2407,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@adminReceiveFee_838": {
									"entryPoint": null,
									"id": 838,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@backToken_1881": {
									"entryPoint": 1513,
									"id": 1881,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyerInfo_813": {
									"entryPoint": null,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkAdminAddress_1152": {
									"entryPoint": 5197,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@contains_2461": {
									"entryPoint": 6560,
									"id": 2461,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deposit_1377": {
									"entryPoint": 4222,
									"id": 1377,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_3033": {
									"entryPoint": 6244,
									"id": 3033,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@feeAnyone_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeCreateSale_840": {
									"entryPoint": null,
									"id": 840,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_1864": {
									"entryPoint": null,
									"id": 1864,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialSaleInfor_1112": {
									"entryPoint": 2740,
									"id": 1112,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@mul_3018": {
									"entryPoint": 6232,
									"id": 3018,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@ownerClaimAndRefundToken_1691": {
									"entryPoint": 1560,
									"id": 1691,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_2700": {
									"entryPoint": null,
									"id": 2700,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@presaleStatus_820": {
									"entryPoint": null,
									"id": 820,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_2728": {
									"entryPoint": 1406,
									"id": 2728,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_3259": {
									"entryPoint": 6256,
									"id": 3259,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@saleInfor_826": {
									"entryPoint": null,
									"id": 826,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleTotalSupply_823": {
									"entryPoint": null,
									"id": 823,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@status_1140": {
									"entryPoint": 1365,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sub_3003": {
									"entryPoint": 6220,
									"id": 3003,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalFee_834": {
									"entryPoint": null,
									"id": 834,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_2751": {
									"entryPoint": 5908,
									"id": 2751,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userClaimEmergency_1487": {
									"entryPoint": 3672,
									"id": 1487,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userClaimOrRefundWhenSaleSuccess_1853": {
									"entryPoint": 5215,
									"id": 1853,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userFee_817": {
									"entryPoint": null,
									"id": 817,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRefundEmergency_1597": {
									"entryPoint": 2269,
									"id": 1597,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address_payable": {
									"entryPoint": 6673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_contract$_ERC20_$585t_contract$_ERC20_$585t_array$_t_uint256_$9_memory_ptrt_uint256t_address_payablet_uint256": {
									"entryPoint": 6725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 6955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_contract$_ERC20_$585_t_contract$_ERC20_$585_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 13,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$663__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0006a43500af0340b9603203140392eab02fee063ae96bfd6edc189c82d0020d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_065202cf6a33a781bd303592d3b073d0a0ec6f08ff85121e6ae03bb0f6220773__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e48990c897d5ba8999d28c98a07d3d42bbeebbb9e5450611d5ac4c4c1ff405e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2f0f7a7138a486905fda9c2420ae85e1a942b60a01a8f1a582662b41b722e06b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3dbc1fd319e3f4bcd97bd22d02924b97bf368efdc0fea6895ac72354c36f8910__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48cc793e3ea877d6bf034b11f4c6d0d583dd24a0f1374daf495701b65f42f81c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6ec702614952d92463e106ee761540d67283b909ca1034380fe138358153b4f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9484c9f673aabd7ceaf636aee1345679ba5a9ed94ea54709581b0fe1962a68ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf5df9de6d8de0251e215beb301e570c88b0796fccdb277f788272e9f262e220__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebae11f2a640aa762fd205f7bf17893e71e2f27eaf181bd18ed2bc1866cdc8cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f04f9a30ea5d365bfb2900741297979fe0df33fc47f4cd4f9a152dc08b22c374__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 10,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 7357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7606,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 7650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 7671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16546:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "71:85:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "81:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "103:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "90:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "90:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "81:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "144:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "119:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "119:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "119:31:12"
														}
													]
												},
												"name": "abi_decode_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "50:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:12",
														"type": ""
													}
												],
												"src": "14:142:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "231:177:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "286:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "289:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "279:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "279:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "279:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "252:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "261:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "248:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "273:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "244:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "244:32:12"
															},
															"nodeType": "YulIf",
															"src": "241:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "302:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "328:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "315:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "306:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "372:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "347:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "347:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "387:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "397:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "387:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "197:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "208:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "220:6:12",
														"type": ""
													}
												],
												"src": "161:247:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "650:1237:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "697:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "706:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "709:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "699:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "699:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "699:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "671:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "680:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "667:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "667:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "692:3:12",
																		"type": "",
																		"value": "480"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "663:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "663:33:12"
															},
															"nodeType": "YulIf",
															"src": "660:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "722:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "748:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "735:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "726:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "792:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "767:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "767:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "807:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "817:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "807:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "831:12:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "841:2:12",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "835:2:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "852:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "884:9:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "895:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "880:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "880:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "867:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "856:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "933:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "908:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "908:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "950:17:12",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "960:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "976:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1008:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1019:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1004:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "991:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "991:32:12"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "980:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "1057:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1032:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1032:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1032:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1074:17:12",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "1084:7:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1074:6:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1145:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1154:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1157:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1147:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1147:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1147:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1118:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1129:3:12",
																						"type": "",
																						"value": "127"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1114:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1114:19:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1135:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1110:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1110:33:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1103:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1103:41:12"
															},
															"nodeType": "YulIf",
															"src": "1100:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1170:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1190:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1184:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1184:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1174:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1202:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1224:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1232:3:12",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1220:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:16:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1206:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1311:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1313:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1313:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1313:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1254:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1266:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1251:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1290:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1302:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1287:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1287:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1248:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1248:62:12"
															},
															"nodeType": "YulIf",
															"src": "1245:2:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1349:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1353:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:22:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1373:17:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1384:6:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1377:3:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1399:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1414:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1425:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1410:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:18:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1403:3:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1437:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1451:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1462:3:12",
																		"type": "",
																		"value": "384"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1447:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1447:19:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1441:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1481:2:12"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1485:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1478:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1478:15:12"
															},
															"nodeType": "YulIf",
															"src": "1475:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1585:118:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1606:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1624:3:12"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1611:12:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1611:17:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1599:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1599:30:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1599:30:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1642:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1653:3:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1658:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1649:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1649:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1642:3:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1674:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1685:3:12"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1690:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1681:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1681:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1674:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1552:4:12",
																		"type": "",
																		"value": "0x09"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:11:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1558:18:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1560:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1569:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1572:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1565:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1565:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1560:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:12",
																"statements": []
															},
															"src": "1538:165:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1712:16:12",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1722:6:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1712:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1737:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1760:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1747:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1747:16:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1737:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1772:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1813:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1824:3:12",
																				"type": "",
																				"value": "416"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1809:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1809:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "1782:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:47:12"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "1772:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1838:43:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1865:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1876:3:12",
																				"type": "",
																				"value": "448"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1861:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1861:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1848:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1848:33:12"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_contract$_ERC20_$585t_contract$_ERC20_$585t_array$_t_uint256_$9_memory_ptrt_uint256t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "568:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "579:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "591:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "599:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "607:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "615:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "623:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "631:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "639:6:12",
														"type": ""
													}
												],
												"src": "413:1474:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1959:174:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2005:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2014:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2017:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2007:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2007:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2007:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1980:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1989:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1976:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1976:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2001:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1972:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:32:12"
															},
															"nodeType": "YulIf",
															"src": "1969:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2030:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2056:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2043:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2034:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2097:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2075:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:28:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2075:28:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2112:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2122:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1925:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1936:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1948:6:12",
														"type": ""
													}
												],
												"src": "1892:241:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2216:167:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2262:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2274:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2264:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2264:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2264:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2237:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2246:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2233:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2233:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2258:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2229:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2229:32:12"
															},
															"nodeType": "YulIf",
															"src": "2226:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2287:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2306:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2300:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2291:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2347:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2325:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2325:28:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2325:28:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2362:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2372:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2182:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2193:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2205:6:12",
														"type": ""
													}
												],
												"src": "2138:245:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2458:110:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2504:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2513:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2516:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2506:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2506:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2506:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2479:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2488:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2475:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2475:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2500:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2471:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2471:32:12"
															},
															"nodeType": "YulIf",
															"src": "2468:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2529:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2552:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2539:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2539:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2529:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2424:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2435:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2447:6:12",
														"type": ""
													}
												],
												"src": "2388:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2654:103:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2700:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2709:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2702:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2702:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2702:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2675:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2684:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2671:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2671:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2696:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:32:12"
															},
															"nodeType": "YulIf",
															"src": "2664:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2725:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2741:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2735:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2735:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2725:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2620:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2631:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:12",
														"type": ""
													}
												],
												"src": "2573:184:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2899:289:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2909:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2929:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2923:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2923:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2913:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2945:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2954:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2949:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3016:77:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "3041:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3046:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3037:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3037:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "3064:6:12"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "3072:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3060:3:12"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3060:14:12"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3076:4:12",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3056:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3056:25:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3050:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3050:32:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3030:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3030:53:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3030:53:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2975:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2978:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2972:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2986:21:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2988:17:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2997:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3000:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2993:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2993:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2988:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2968:3:12",
																"statements": []
															},
															"src": "2964:129:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3119:31:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "3132:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3137:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3128:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3128:16:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3146:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3121:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3121:27:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3121:27:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3108:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3111:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3105:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3105:13:12"
															},
															"nodeType": "YulIf",
															"src": "3102:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3170:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3175:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3166:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3166:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3159:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2875:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2880:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2891:3:12",
														"type": ""
													}
												],
												"src": "2762:426:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3294:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3304:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3316:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3327:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3312:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3312:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3304:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3346:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3361:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3377:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3382:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3373:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3373:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3386:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3369:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3369:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3357:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3357:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3339:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3339:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3339:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3263:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3274:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3285:4:12",
														"type": ""
													}
												],
												"src": "3193:203:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3848:641:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3858:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3870:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3881:3:12",
																		"type": "",
																		"value": "384"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3866:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3858:4:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3894:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3912:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3917:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3908:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3908:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3921:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3904:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3904:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3898:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3939:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3954:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3962:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3950:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3950:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3932:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3932:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3932:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3986:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3997:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3982:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3982:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4006:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4014:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4002:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4002:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3975:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3975:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3975:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4038:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4049:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4034:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4034:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4058:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4066:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4054:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4054:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4027:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4027:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4027:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4090:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4101:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4086:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4086:18:12"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4106:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4079:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4079:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4079:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4133:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4144:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4129:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4129:19:12"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "4150:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4122:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4122:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4177:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4188:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4173:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4173:19:12"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "4194:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4166:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4166:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4221:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4232:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4217:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4217:19:12"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "4238:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4210:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4210:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4210:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4265:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4276:3:12",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4261:19:12"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "4282:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4254:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4254:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4254:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4309:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4320:3:12",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4305:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4305:19:12"
																	},
																	{
																		"name": "value8",
																		"nodeType": "YulIdentifier",
																		"src": "4326:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4298:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4298:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4298:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4353:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4364:3:12",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4349:19:12"
																	},
																	{
																		"name": "value9",
																		"nodeType": "YulIdentifier",
																		"src": "4370:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4342:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4342:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4397:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4408:3:12",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4393:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4393:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value10",
																						"nodeType": "YulIdentifier",
																						"src": "4428:7:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4421:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4421:15:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4414:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4414:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4386:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4386:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4386:52:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4458:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4469:3:12",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4454:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4454:19:12"
																	},
																	{
																		"name": "value11",
																		"nodeType": "YulIdentifier",
																		"src": "4475:7:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4447:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4447:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4447:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_contract$_ERC20_$585_t_contract$_ERC20_$585_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3727:9:12",
														"type": ""
													},
													{
														"name": "value11",
														"nodeType": "YulTypedName",
														"src": "3738:7:12",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "3747:7:12",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "3756:6:12",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "3764:6:12",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "3772:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "3780:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3788:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3796:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3804:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3812:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3820:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3828:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3839:4:12",
														"type": ""
													}
												],
												"src": "3401:1088:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4631:145:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4641:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4653:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4664:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4649:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4649:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4641:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4683:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4698:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4714:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4719:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4710:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4710:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4723:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4706:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4706:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4694:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4694:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4676:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4676:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4676:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4747:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4758:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4743:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4743:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4763:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4736:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4736:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4736:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4592:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4603:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4611:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4622:4:12",
														"type": ""
													}
												],
												"src": "4494:282:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4938:218:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4948:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4960:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4971:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4956:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4956:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4948:4:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4983:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5001:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5006:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4997:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4997:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5010:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4993:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4987:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5028:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5043:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5051:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5039:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5039:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5021:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5021:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5021:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5075:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5086:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5071:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5071:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5095:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5103:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5091:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5091:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5064:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5064:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5064:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5127:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5138:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5123:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5123:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5143:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5116:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5116:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5116:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4891:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4902:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4910:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4918:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4929:4:12",
														"type": ""
													}
												],
												"src": "4781:375:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5290:145:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5300:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5312:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5323:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5308:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5308:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5300:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5342:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5357:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5373:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5378:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5369:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5369:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5382:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5365:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5365:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5353:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5353:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5335:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5335:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5335:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5417:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5402:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5422:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5395:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5395:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5395:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5251:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5262:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5270:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5281:4:12",
														"type": ""
													}
												],
												"src": "5161:274:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5535:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5545:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5557:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5568:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5553:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5553:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5545:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5587:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5612:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5605:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5605:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5598:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5598:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5580:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5580:41:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5580:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5504:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5515:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5526:4:12",
														"type": ""
													}
												],
												"src": "5440:187:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5747:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5757:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5769:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5780:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5765:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5765:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5757:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5799:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5814:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5830:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5835:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5826:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5826:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5839:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5822:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5822:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5810:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5810:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5792:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5792:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5792:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$663__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5716:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5727:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5738:4:12",
														"type": ""
													}
												],
												"src": "5632:217:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6028:173:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6045:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6056:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6038:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6038:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6079:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6090:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6075:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6075:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6095:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6068:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6068:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6068:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6118:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6129:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6114:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6114:18:12"
																	},
																	{
																		"hexValue": "596f752068617665206e6f7420626f7567687420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6134:25:12",
																		"type": "",
																		"value": "You have not bought yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6107:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6107:53:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6107:53:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6169:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6181:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6192:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6177:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6177:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6169:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0006a43500af0340b9603203140392eab02fee063ae96bfd6edc189c82d0020d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6005:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6019:4:12",
														"type": ""
													}
												],
												"src": "5854:347:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6380:176:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6397:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6408:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6390:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6390:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6390:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6431:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6442:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6427:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6427:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6447:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6420:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6420:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6420:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6470:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6481:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6466:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6466:18:12"
																	},
																	{
																		"hexValue": "506c656173652070726f76696465206e617669746520636f696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6486:28:12",
																		"type": "",
																		"value": "Please provide navite coin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6459:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:56:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6459:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6524:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6536:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6547:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6532:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6532:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6524:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_065202cf6a33a781bd303592d3b073d0a0ec6f08ff85121e6ae03bb0f6220773__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6357:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6371:4:12",
														"type": ""
													}
												],
												"src": "6206:350:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6735:177:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6752:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6763:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6745:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6745:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6745:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6786:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6797:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6782:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6782:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6802:2:12",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6775:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6775:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6825:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6836:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6821:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6821:18:12"
																	},
																	{
																		"hexValue": "416c6c20746f6b656e20686173206265656e207769746864726177",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6841:29:12",
																		"type": "",
																		"value": "All token has been withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6814:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6814:57:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6814:57:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6880:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6892:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6903:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6888:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6888:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6880:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6712:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6726:4:12",
														"type": ""
													}
												],
												"src": "6561:351:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7091:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7108:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7119:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7101:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7101:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7101:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7142:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7153:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7138:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7138:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7158:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7131:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7131:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7131:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7181:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7192:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7177:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7177:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7197:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7170:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7170:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7170:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7252:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7263:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7248:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7248:18:12"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7268:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7241:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7241:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7241:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7286:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7298:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7309:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7294:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7294:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7286:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7068:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7082:4:12",
														"type": ""
													}
												],
												"src": "6917:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7498:180:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7515:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7526:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7508:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7508:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7508:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7549:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7560:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7545:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7545:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7565:2:12",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7538:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7538:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7538:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7588:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7599:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7584:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7584:18:12"
																	},
																	{
																		"hexValue": "4e6f7468696e6720666f72206f776e657220726566756e6420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7604:32:12",
																		"type": "",
																		"value": "Nothing for owner refund token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7577:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7577:60:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7577:60:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7646:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7658:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7669:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7654:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7654:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7646:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e48990c897d5ba8999d28c98a07d3d42bbeebbb9e5450611d5ac4c4c1ff405e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7475:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7489:4:12",
														"type": ""
													}
												],
												"src": "7324:354:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:164:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7874:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7885:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7867:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7867:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7867:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7908:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7919:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7904:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7904:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7924:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7897:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7897:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7897:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7947:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7958:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7943:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7943:18:12"
																	},
																	{
																		"hexValue": "596f7520636c61696d20616c6c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7963:16:12",
																		"type": "",
																		"value": "You claim alll"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7936:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7936:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7936:44:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7989:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8001:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8012:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7997:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7997:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7989:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2f0f7a7138a486905fda9c2420ae85e1a942b60a01a8f1a582662b41b722e06b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7834:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7848:4:12",
														"type": ""
													}
												],
												"src": "7683:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8200:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8217:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8228:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8210:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8210:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8210:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8251:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8262:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8247:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8247:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8267:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8240:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8240:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8290:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8301:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8286:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8286:18:12"
																	},
																	{
																		"hexValue": "596f7520726566756e6420616c6c206f722068617665206e6f7420626f756768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8306:34:12",
																		"type": "",
																		"value": "You refund all or have not bough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8279:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8279:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8279:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8361:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8372:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8357:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8357:18:12"
																	},
																	{
																		"hexValue": "7420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8377:7:12",
																		"type": "",
																		"value": "t yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8350:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8350:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8350:35:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8394:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8406:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8417:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8402:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8402:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8394:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3dbc1fd319e3f4bcd97bd22d02924b97bf368efdc0fea6895ac72354c36f8910__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8177:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8191:4:12",
														"type": ""
													}
												],
												"src": "8026:401:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8606:164:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8623:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8634:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8616:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8616:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8616:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8657:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8668:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8653:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8653:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8673:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8646:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8646:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8646:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8696:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8707:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8692:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8692:18:12"
																	},
																	{
																		"hexValue": "4f766572666c6f772076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8712:16:12",
																		"type": "",
																		"value": "Overflow value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8685:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8685:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8685:44:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8738:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8750:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8761:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8746:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8746:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8738:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48cc793e3ea877d6bf034b11f4c6d0d583dd24a0f1374daf495701b65f42f81c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8583:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8597:4:12",
														"type": ""
													}
												],
												"src": "8432:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8949:226:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8966:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8977:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8959:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8959:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8959:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9000:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8996:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8996:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9016:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8989:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8989:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8989:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9039:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9050:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9035:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9035:18:12"
																	},
																	{
																		"hexValue": "596f7520636c61696d20616c6c206f722068617665206e6f7420626f75676874",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9055:34:12",
																		"type": "",
																		"value": "You claim all or have not bought"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9028:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9028:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9028:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9110:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9121:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9106:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9106:18:12"
																	},
																	{
																		"hexValue": "20796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9126:6:12",
																		"type": "",
																		"value": " yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9099:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9099:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9099:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9142:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9154:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9165:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9150:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9150:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9142:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6ec702614952d92463e106ee761540d67283b909ca1034380fe138358153b4f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8926:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8940:4:12",
														"type": ""
													}
												],
												"src": "8775:400:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9354:166:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9371:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9382:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9364:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9364:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9364:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9405:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9416:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9401:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9401:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9421:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9394:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9394:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9394:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9444:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9455:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9440:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9440:18:12"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9460:18:12",
																		"type": "",
																		"value": "Not enough value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9433:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9433:46:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9433:46:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9488:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9500:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9511:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9496:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9496:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9488:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9331:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9345:4:12",
														"type": ""
													}
												],
												"src": "9180:340:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9699:168:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9716:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9727:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9709:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9709:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9709:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9750:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9761:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9746:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9746:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9766:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9739:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9739:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9739:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9789:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9800:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9785:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9785:18:12"
																	},
																	{
																		"hexValue": "4f6e6c792070726573616c65206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9805:20:12",
																		"type": "",
																		"value": "Only presale owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9778:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9778:48:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9778:48:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9835:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9847:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9858:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9843:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9843:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9835:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9484c9f673aabd7ceaf636aee1345679ba5a9ed94ea54709581b0fe1962a68ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9676:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9690:4:12",
														"type": ""
													}
												],
												"src": "9525:342:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10046:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10063:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10074:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10056:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10056:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10056:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10097:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10108:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10093:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10093:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10113:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10086:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10086:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10086:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10136:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10147:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10132:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10132:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10152:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10125:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10125:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10125:62:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10196:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10208:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10219:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10204:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10204:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10196:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10023:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10037:4:12",
														"type": ""
													}
												],
												"src": "9872:356:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10407:164:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10424:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10435:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10417:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10417:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10417:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10458:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10469:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10454:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10454:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10474:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10447:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10447:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10447:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10497:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10508:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10493:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10493:18:12"
																	},
																	{
																		"hexValue": "596f7520726566756e6420616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10513:16:12",
																		"type": "",
																		"value": "You refund all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10486:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10486:44:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10486:44:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10539:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10551:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10562:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10547:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10547:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10539:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf5df9de6d8de0251e215beb301e570c88b0796fccdb277f788272e9f262e220__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10384:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10398:4:12",
														"type": ""
													}
												],
												"src": "10233:338:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10750:226:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10767:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10778:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10760:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10760:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10760:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10801:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10812:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10797:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10797:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10817:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10790:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10790:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10790:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10840:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10851:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10836:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10836:18:12"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10856:34:12",
																		"type": "",
																		"value": "TransferHelper: TRANSFER_FROM_FA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10829:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10829:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10829:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10911:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10922:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10907:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10907:18:12"
																	},
																	{
																		"hexValue": "494c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10927:6:12",
																		"type": "",
																		"value": "ILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10900:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10900:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10900:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10943:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10955:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10966:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10951:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10951:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10943:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10727:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10741:4:12",
														"type": ""
													}
												],
												"src": "10576:400:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11155:179:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11172:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11183:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11165:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11165:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11165:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11206:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11217:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11202:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11202:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11222:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11195:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11195:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11195:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11245:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11256:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11241:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11241:18:12"
																	},
																	{
																		"hexValue": "4e6f7468696e6720666f72206f776e657220636c61696d20746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11261:31:12",
																		"type": "",
																		"value": "Nothing for owner claim token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11234:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11234:59:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11234:59:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11302:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11314:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11325:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11310:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11310:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11302:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebae11f2a640aa762fd205f7bf17893e71e2f27eaf181bd18ed2bc1866cdc8cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11132:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11146:4:12",
														"type": ""
													}
												],
												"src": "10981:353:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11513:181:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11530:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11541:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11523:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11523:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11523:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11564:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11575:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11560:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11560:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11580:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11553:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11553:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11553:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11603:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11614:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11599:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11599:18:12"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11619:33:12",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11592:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11592:61:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11592:61:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11662:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11674:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11685:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11670:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11670:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11662:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11490:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11504:4:12",
														"type": ""
													}
												],
												"src": "11339:355:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11873:165:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11890:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11901:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11883:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11883:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11883:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11924:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11935:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11920:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11920:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11940:2:12",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11913:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11913:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11913:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11963:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11974:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11959:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11959:18:12"
																	},
																	{
																		"hexValue": "53616c652069732073756363657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11979:17:12",
																		"type": "",
																		"value": "Sale is success"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11952:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11952:45:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11952:45:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12006:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12018:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12029:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12014:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12014:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12006:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f04f9a30ea5d365bfb2900741297979fe0df33fc47f4cd4f9a152dc08b22c374__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11850:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11864:4:12",
														"type": ""
													}
												],
												"src": "11699:339:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12144:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12154:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12166:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12177:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12162:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12162:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12154:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12196:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12207:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12189:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12189:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12189:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12113:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12124:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12135:4:12",
														"type": ""
													}
												],
												"src": "12043:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12354:119:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12364:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12376:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12387:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12372:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12372:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12364:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12406:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12417:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12399:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12399:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12399:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12444:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12455:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12440:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12440:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12460:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12433:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12433:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12433:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12315:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12326:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12334:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12345:4:12",
														"type": ""
													}
												],
												"src": "12225:248:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12691:250:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12701:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12713:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12724:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12709:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12709:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12701:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12744:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12755:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12737:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12737:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12737:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12782:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12793:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12778:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12778:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12798:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12771:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12771:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12771:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12825:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12836:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12821:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12821:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12841:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12814:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12814:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12814:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12868:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12879:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12864:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12864:18:12"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12884:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12857:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12857:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12857:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12911:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12922:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12907:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12907:19:12"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "12928:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12900:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12900:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12900:35:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12628:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12639:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12647:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12655:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12663:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12671:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12682:4:12",
														"type": ""
													}
												],
												"src": "12478:463:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13259:458:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13269:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13281:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13292:3:12",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13277:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13277:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13269:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13312:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13323:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13305:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13305:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13305:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13350:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13361:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13346:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13346:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13366:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13339:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13339:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13339:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13393:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13404:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13389:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13389:18:12"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13409:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13382:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13382:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13382:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13436:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13447:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13432:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13432:18:12"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13452:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13425:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13425:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13425:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13479:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13490:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13475:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13475:19:12"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13496:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13468:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13468:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13468:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13523:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13534:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13519:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13519:19:12"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "13540:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13512:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13512:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13512:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13567:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13578:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13563:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13563:19:12"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "13584:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13556:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13556:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13556:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13611:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13622:3:12",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13607:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13607:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value7",
																						"nodeType": "YulIdentifier",
																						"src": "13642:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13635:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13635:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13628:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13628:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13600:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13600:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13600:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13671:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13682:3:12",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13667:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13667:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value8",
																						"nodeType": "YulIdentifier",
																						"src": "13702:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13695:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13695:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13688:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13688:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13660:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13660:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13660:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13164:9:12",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "13175:6:12",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "13183:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "13191:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "13199:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13207:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13215:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13223:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13231:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13239:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13250:4:12",
														"type": ""
													}
												],
												"src": "12946:771:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13770:80:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13797:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13799:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13799:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13799:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13786:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13793:1:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13789:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13789:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13783:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13783:13:12"
															},
															"nodeType": "YulIf",
															"src": "13780:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13828:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13839:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13842:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13835:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13835:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13828:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13753:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13756:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13762:3:12",
														"type": ""
													}
												],
												"src": "13722:128:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13901:171:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13932:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13953:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13960:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13965:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "13956:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13956:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13946:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13946:31:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13946:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13997:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14000:4:12",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13990:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13990:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13990:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14025:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14028:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14018:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14018:15:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14018:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13921:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13914:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13914:9:12"
															},
															"nodeType": "YulIf",
															"src": "13911:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14052:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14061:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14064:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14057:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14057:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "14052:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13886:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13889:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13895:1:12",
														"type": ""
													}
												],
												"src": "13855:217:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14141:358:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14151:16:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14166:1:12",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "14155:7:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14176:16:12",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "14185:7:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "14176:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14201:13:12",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "14209:5:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "14201:4:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14265:228:12",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "14310:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "14312:16:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14312:18:12"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "14312:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "14285:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "14299:1:12",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "14295:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14295:6:12"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "14303:4:12"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "14291:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14291:17:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "14282:2:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14282:27:12"
																		},
																		"nodeType": "YulIf",
																		"src": "14279:2:12"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "14371:29:12",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "14373:25:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "14386:5:12"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "14393:4:12"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "14382:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14382:16:12"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "14373:5:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "14352:8:12"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "14362:7:12"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "14348:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14348:22:12"
																		},
																		"nodeType": "YulIf",
																		"src": "14345:2:12"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14413:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "14425:4:12"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "14431:4:12"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "14421:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14421:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "14413:4:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14449:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "14465:7:12"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "14474:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "14461:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14461:22:12"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "14449:8:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "14234:8:12"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "14244:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14231:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14231:21:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14253:3:12",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14227:3:12",
																"statements": []
															},
															"src": "14223:270:12"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "14105:5:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "14112:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "14125:5:12",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "14132:4:12",
														"type": ""
													}
												],
												"src": "14077:422:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14574:61:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14584:45:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "14614:4:12"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "14620:8:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "14593:20:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14593:36:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "14584:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "14545:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "14551:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "14564:5:12",
														"type": ""
													}
												],
												"src": "14504:131:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14699:747:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14737:52:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14751:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14760:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "14751:5:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "14774:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "14719:8:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14712:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14712:16:12"
															},
															"nodeType": "YulIf",
															"src": "14709:2:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14822:52:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14836:10:12",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14845:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "14836:5:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "14859:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "14808:4:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14801:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14801:12:12"
															},
															"nodeType": "YulIf",
															"src": "14798:2:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14910:52:12",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "14924:10:12",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14933:1:12",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "14924:5:12"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "14947:5:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "14903:59:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14908:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14978:123:12",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "15013:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "15015:16:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15015:18:12"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "15015:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "14998:8:12"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15008:3:12",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "14995:2:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14995:17:12"
																				},
																				"nodeType": "YulIf",
																				"src": "14992:2:12"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "15048:25:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "15061:8:12"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15071:1:12",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "15057:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15057:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "15048:5:12"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "15086:5:12"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "14971:130:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14976:1:12",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "14890:4:12"
															},
															"nodeType": "YulSwitch",
															"src": "14883:218:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15199:70:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15213:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "15226:4:12"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "15232:8:12"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "15222:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15222:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "15213:5:12"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "15254:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "15123:4:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15129:2:12",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "15120:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15120:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "15137:8:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15147:2:12",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "15134:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15134:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15116:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15116:35:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "15160:4:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15166:3:12",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "15157:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15157:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "15175:8:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15185:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "15172:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15172:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15153:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15153:36:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15113:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15113:77:12"
															},
															"nodeType": "YulIf",
															"src": "15110:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15278:57:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "15320:4:12"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "15326:8:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "15301:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15301:34:12"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "15282:7:12",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "15291:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15380:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15382:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15382:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15382:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "15350:7:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15367:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "15363:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15363:6:12"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "15371:6:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "15359:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15359:19:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15347:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15347:32:12"
															},
															"nodeType": "YulIf",
															"src": "15344:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15411:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "15424:7:12"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "15433:6:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15420:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15420:20:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "15411:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "14670:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "14676:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "14689:5:12",
														"type": ""
													}
												],
												"src": "14640:806:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15503:116:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15562:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15564:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15564:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15564:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15534:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15527:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15527:9:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "15520:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15520:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15542:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15553:1:12",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "15549:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15549:6:12"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15557:1:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "15545:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15545:14:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15539:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15539:21:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15516:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15516:45:12"
															},
															"nodeType": "YulIf",
															"src": "15513:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15593:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15608:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15611:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15604:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15604:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "15593:7:12"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15482:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15485:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "15491:7:12",
														"type": ""
													}
												],
												"src": "15451:168:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15673:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15695:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15697:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15697:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15697:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15689:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15692:1:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15686:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15686:8:12"
															},
															"nodeType": "YulIf",
															"src": "15683:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15726:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15738:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15741:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15734:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15734:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15726:4:12"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15655:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15658:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15664:4:12",
														"type": ""
													}
												],
												"src": "15624:125:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15801:88:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15832:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15834:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15834:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15834:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15817:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15828:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15824:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15824:6:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15814:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15814:17:12"
															},
															"nodeType": "YulIf",
															"src": "15811:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15863:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15874:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15881:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15870:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15870:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15863:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15783:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15793:3:12",
														"type": ""
													}
												],
												"src": "15754:135:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15926:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15943:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15950:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15955:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15946:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15946:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15936:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15936:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15936:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15983:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15986:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15976:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15976:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15976:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16007:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16010:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16000:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16000:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16000:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15894:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16058:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16075:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16082:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16087:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16078:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16078:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16068:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16068:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16068:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16115:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16118:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16108:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16108:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16108:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16139:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16142:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16132:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16132:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16132:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "16026:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16190:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16207:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16214:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16219:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16210:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16210:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16200:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16200:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16200:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16247:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16250:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16240:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16240:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16240:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16271:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16274:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16264:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16264:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16264:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "16158:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16335:86:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16399:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16408:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16411:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16401:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16401:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16401:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16358:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16369:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16384:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16389:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "16380:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16380:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16393:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "16376:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16376:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16365:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16365:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16355:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16355:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16348:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16348:50:12"
															},
															"nodeType": "YulIf",
															"src": "16345:2:12"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16324:5:12",
														"type": ""
													}
												],
												"src": "16290:131:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16468:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16522:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16531:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16534:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16524:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16524:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16524:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16491:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "16512:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "16505:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16505:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "16498:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16498:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16488:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16488:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16481:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16481:40:12"
															},
															"nodeType": "YulIf",
															"src": "16478:2:12"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16457:5:12",
														"type": ""
													}
												],
												"src": "16426:118:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_payable(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_contract$_ERC20_$585t_contract$_ERC20_$585t_array$_t_uint256_$9_memory_ptrt_uint256t_address_payablet_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 480) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        let value_1 := calldataload(add(headStart, _1))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        if iszero(slt(add(headStart, 127), dataEnd)) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 288)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        let src := add(headStart, 96)\n        let _2 := add(headStart, 384)\n        if gt(_2, dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, 0x09) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value3 := memPtr\n        value4 := calldataload(_2)\n        value5 := abi_decode_address_payable(add(headStart, 416))\n        value6 := calldataload(add(headStart, 448))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable_t_contract$_ERC20_$585_t_contract$_ERC20_$585_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_payable_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 384)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n        mstore(add(headStart, 320), iszero(iszero(value10)))\n        mstore(add(headStart, 352), value11)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$663__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_0006a43500af0340b9603203140392eab02fee063ae96bfd6edc189c82d0020d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"You have not bought yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_065202cf6a33a781bd303592d3b073d0a0ec6f08ff85121e6ae03bb0f6220773__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Please provide navite coin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"All token has been withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2e48990c897d5ba8999d28c98a07d3d42bbeebbb9e5450611d5ac4c4c1ff405e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Nothing for owner refund token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2f0f7a7138a486905fda9c2420ae85e1a942b60a01a8f1a582662b41b722e06b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"You claim alll\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3dbc1fd319e3f4bcd97bd22d02924b97bf368efdc0fea6895ac72354c36f8910__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"You refund all or have not bough\")\n        mstore(add(headStart, 96), \"t yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_48cc793e3ea877d6bf034b11f4c6d0d583dd24a0f1374daf495701b65f42f81c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Overflow value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6ec702614952d92463e106ee761540d67283b909ca1034380fe138358153b4f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"You claim all or have not bought\")\n        mstore(add(headStart, 96), \" yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not enough value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9484c9f673aabd7ceaf636aee1345679ba5a9ed94ea54709581b0fe1962a68ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Only presale owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bf5df9de6d8de0251e215beb301e570c88b0796fccdb277f788272e9f262e220__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"You refund all\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"TransferHelper: TRANSFER_FROM_FA\")\n        mstore(add(headStart, 96), \"ILED\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebae11f2a640aa762fd205f7bf17893e71e2f27eaf181bd18ed2bc1866cdc8cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Nothing for owner claim token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f04f9a30ea5d365bfb2900741297979fe0df33fc47f4cd4f9a152dc08b22c374__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Sale is success\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), iszero(iszero(value7)))\n        mstore(add(headStart, 256), iszero(iszero(value8)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101405760003560e01c80639b25415c116100b6578063cad5b0f71161006f578063cad5b0f714610440578063d4c1dee914610465578063e2d3f4231461047b578063eb002bb0146104ed578063f2fde38b1461050d578063f8b2cb4f1461052d57600080fd5b80639b25415c14610331578063ab33985a14610351578063acfb235514610366578063ad5c4648146103ed578063ae2b09651461040d578063b6b55f251461042d57600080fd5b806356c5f3491161010857806356c5f34914610289578063715018a6146102b6578063861faf5f146102cd5780638da5cb5b146102d55780638edf18e61461030757806395661e701461031c57600080fd5b806312e5d0b91461014557806318856a2f1461017a5780631df4ccfc1461023a578063200d2ed21461025e5780633b5ef2ad14610273575b600080fd5b34801561015157600080fd5b50600d54600e54610160919082565b604080519283526020830191909152015b60405180910390f35b34801561018657600080fd5b50600f54601054601154601254601354601454601554601654601754601854601954601a546101ce9b6001600160a01b039081169b81169a16989796959493929160ff16908c565b604080516001600160a01b039d8e1681529b8d1660208d015299909b16988a01989098526060890196909652608088019490945260a087019290925260c086015260e0850152610100840152610120830152151561014082015261016081019190915261018001610171565b34801561024657600080fd5b50610250601e5481565b604051908152602001610171565b34801561026a57600080fd5b50610250610555565b34801561027f57600080fd5b50610250601f5481565b34801561029557600080fd5b506102506102a4366004611a21565b60036020526000908152604090205481565b3480156102c257600080fd5b506102cb61057e565b005b6102cb6105e9565b3480156102e157600080fd5b506001546001600160a01b03165b6040516001600160a01b039091168152602001610171565b34801561031357600080fd5b506102cb610618565b34801561032857600080fd5b506102cb6108dd565b34801561033d57600080fd5b506102cb61034c366004611a45565b610ab4565b34801561035d57600080fd5b506102cb610e58565b34801561037257600080fd5b50600454600554600654600754600854600954600a54600b546103a5979695949392919060ff8082169161010090041689565b60408051998a5260208a0198909852968801959095526060870193909352608086019190915260a085015260c0840152151560e0830152151561010082015261012001610171565b3480156103f957600080fd5b50601b546102ef906001600160a01b031681565b34801561041957600080fd5b506020546102ef906001600160a01b031681565b6102cb61043b366004611b65565b61107e565b34801561044c57600080fd5b5061045561144d565b6040519015158152602001610171565b34801561047157600080fd5b5061025060215481565b34801561048757600080fd5b506104c5610496366004611a21565b600260208190526000918252604090912080546001820154928201546003830154600490930154919392909185565b604080519586526020860194909452928401919091526060830152608082015260a001610171565b3480156104f957600080fd5b506102cb610508366004611b2b565b61145f565b34801561051957600080fd5b506102cb610528366004611a21565b611714565b34801561053957600080fd5b50610250610548366004611a21565b6001600160a01b03163190565b6013546000904210156105685750600090565b6014544211156105785750600290565b50600190565b6001546001600160a01b031633146105dd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6105e760006117fa565b565b60405133904780156108fc02916000818181858888f19350505050158015610615573d6000803e3d6000fd5b50565b600f546001600160a01b0316336001600160a01b0316146106705760405162461bcd60e51b815260206004820152601260248201527127b7363c90383932b9b0b6329037bbb732b960711b60448201526064016105d4565b600260005414156106935760405162461bcd60e51b81526004016105d490611c09565b600260009081556010546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107159190611b7e565b60085460045491925060009161072a9161184c565b600454909150156107535760085460055461075091610749919061184c565b839061184c565b91505b600b5460ff16156107a65760405162461bcd60e51b815260206004820152601d60248201527f4e6f7468696e6720666f72206f776e657220636c61696d20746f6b656e00000060448201526064016105d4565b600b54610100900460ff16156107fe5760405162461bcd60e51b815260206004820152601e60248201527f4e6f7468696e6720666f72206f776e657220726566756e6420746f6b656e000060448201526064016105d4565b600b805460ff191660011790556000601a55601054600f5460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561086057600080fd5b505af1158015610874573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108989190611b48565b50600f546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156108d3573d6000803e3d6000fd5b5050600160005550565b600260005414156109005760405162461bcd60e51b81526004016105d490611c09565b600260009081556007546004546109179190611d84565b116109345760405162461bcd60e51b81526004016105d490611bd2565b336000908152600260205260409020805461098b5760405162461bcd60e51b8152602060048201526017602482015276165bdd481a185d99481b9bdd08189bdd59da1d081e595d604a1b60448201526064016105d4565b60048101548154116109d05760405162461bcd60e51b815260206004820152600e60248201526d165bdd481c99599d5b9908185b1b60921b60448201526064016105d4565b80546017546000916109fb916103e8916109f5916109ef90849061184c565b90611858565b90611864565b8254909150610a0b908290611d84565b601e6000828254610a1c9190611c40565b909155505060078054829190600090610a36908490611c40565b9250508190555080826004016000828254610a519190611c40565b909155505042600283015560038201546001830154610a709190611d84565b60088054600090610a82908490611c40565b9091555050604051339082156108fc029083906000818181858888f193505050501580156108d3573d6000803e3d6000fd5b600f80546001600160a01b03808a166001600160a01b03199283161790925560108054898416908316811790915560118054938916939092169290921790556040805163313ce56760e01b8152905163313ce56791600480820192602092909190829003018186803b158015610b2957600080fd5b505afa158015610b3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b619190611b7e565b610b6c90600a611cbd565b8451610b789190611d65565b6012556020808501516013556040808601516014556060860151601555601154815163313ce56760e01b815291516001600160a01b039091169263313ce5679260048082019391829003018186803b158015610bd357600080fd5b505afa158015610be7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0b9190611b7e565b610c1690600a611cbd565b6080850151610c259190611d65565b60165560a084015160175560c08401516018556011546040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b158015610c7d57600080fd5b505afa158015610c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb59190611b7e565b610cc090600a611cbd565b60e0850151610ccf9190611d65565b600d556011546040805163313ce56760e01b815290516001600160a01b039092169163313ce56791600480820192602092909190829003018186803b158015610d1757600080fd5b505afa158015610d2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4f9190611b7e565b610d5a90600a611cbd565b610100850151610d6a9190611d65565b600e55601154601b546019805460ff19166001600160a01b0392831692909316918214929092179091556040805163313ce56760e01b8152905163313ce56791600480820192602092909190829003018186803b158015610dca57600080fd5b505afa158015610dde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e029190611b7e565b610e0d90600a611cbd565b600d54601254610e1c91611858565b610e269190611c58565b601a55601f92909255602080546001600160a01b0319166001600160a01b039290921691909117905560215550505050565b60026000541415610e7b5760405162461bcd60e51b81526004016105d490611c09565b60026000908155600654600554610e929190611d84565b11610eaf5760405162461bcd60e51b81526004016105d490611bd2565b3360009081526002602052604090206001810154610f095760405162461bcd60e51b8152602060048201526017602482015276165bdd481a185d99481b9bdd08189bdd59da1d081e595d604a1b60448201526064016105d4565b8060030154816001015411610f515760405162461bcd60e51b815260206004820152600e60248201526d165bdd4818db185a5b48185b1b1b60921b60448201526064016105d4565b6000610f7b6103e86109f584600101546109ef600f600901546103e861184c90919063ffffffff16565b90508060046002016000828254610f929190611c40565b9091555050601a8054829190600090610fac908490611d84565b9250508190555080826003016000828254610fc79190611c40565b909155505042600283015560048201548254610fe39190611d84565b60098054600090610ff5908490611c40565b909155505060105460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561104657600080fd5b505af115801561105a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d39190611b48565b600260005414156110a15760405162461bcd60e51b81526004016105d490611c09565b600260008181553381526020919091526040812090829081906103e83483111561110d5760405162461bcd60e51b815260206004820152601a60248201527f506c656173652070726f76696465206e617669746520636f696e00000000000060448201526064016105d4565b6015548310156111525760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682076616c756560801b60448201526064016105d4565b6016548311156111955760405162461bcd60e51b815260206004820152600e60248201526d4f766572666c6f772076616c756560901b60448201526064016105d4565b61119d61144d565b6111cd576111be816109f5856109ef601f548661184c90919063ffffffff16565b92506111ca8385611d84565b91505b84546016546000916111de91611d84565b600454601a549192506000916111f49190611d84565b905060008183116112055782611207565b815b90508086111561124b5760405162461bcd60e51b815260206004820152600f60248201526e53616c65206973207375636365737360881b60448201526064016105d4565b60006112f2600f60020160009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156112a157600080fd5b505afa1580156112b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d99190611b7e565b6112e490600a611cbd565b6012546109f5908a90611858565b9050868960000160008282546113089190611c40565b92505081905550808960010160008282546113239190611c40565b90915550506004805488919060009061133d908490611c40565b909155505060058054829190600090611357908490611c40565b9091555050600a805490600061136c83611d9b565b90915550503360009081526003602052604081208054889290611390908490611c40565b9250508190555085601e60008282546113a99190611c40565b909155505060195460ff1680156113c95750346113c68789611c40565b11155b1561141157336108fc876113dd8a34611d84565b6113e79190611d84565b6040518115909202916000818181858888f1935050505015801561140f573d6000803e3d6000fd5b505b60195460ff1661143c5760115461143c906001600160a01b031633306114378a8c611c40565b611870565b505060016000555050505050505050565b600061145a601c336119a0565b905090565b80156115fb5760065460055460009161147791611d84565b116114945760405162461bcd60e51b81526004016105d490611bd2565b33600090815260026020526040902060038101546001820154116115065760405162461bcd60e51b8152602060048201526024808201527f596f7520636c61696d20616c6c206f722068617665206e6f7420626f75676874604482015263081e595d60e21b60648201526084016105d4565b601054600182015460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561155857600080fd5b505af115801561156c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115909190611b48565b506001810154600680546000906115a8908490611c40565b90915550506001810154601a80546000906115c4908490611d84565b909155505060018101546003820180546000906115e2908490611c40565b9091555050600080825560018201554260029091015550565b60075460045460009161160d91611d84565b1161162a5760405162461bcd60e51b81526004016105d490611bd2565b33600090815260026020526040902080546116955760405162461bcd60e51b815260206004820152602560248201527f596f7520726566756e6420616c6c206f722068617665206e6f7420626f7567686044820152641d081e595d60da1b60648201526084016105d4565b80546116a18180611d84565b601e60008282546116b29190611c40565b9091555050600780548291906000906116cc908490611c40565b9091555050600080835560018301819055426002840155604051339183156108fc02918491818181858888f1935050505015801561170e573d6000803e3d6000fd5b50505050565b6001546001600160a01b0316331461176e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d4565b6001600160a01b0381166117d35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d4565b610615816117fa565b60006117f1836001600160a01b0384166119c2565b90505b92915050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006117f18284611d84565b60006117f18284611d65565b60006117f18284611c58565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916118d49190611b97565b6000604051808303816000865af19150503d8060008114611911576040519150601f19603f3d011682016040523d82523d6000602084013e611916565b606091505b50915091508180156119405750805115806119405750808060200190518101906119409190611b48565b6119985760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b60648201526084016105d4565b505050505050565b6001600160a01b038116600090815260018301602052604081205415156117f1565b6000818152600183016020526040812054611a09575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556117f4565b5060006117f4565b8035611a1c81611de2565b919050565b600060208284031215611a3357600080fd5b8135611a3e81611de2565b9392505050565b60008060008060008060006101e0888a031215611a6157600080fd5b8735611a6c81611de2565b9650602088810135611a7d81611de2565b96506040890135611a8d81611de2565b9550607f89018a13611a9e57600080fd5b604051610120810181811067ffffffffffffffff82111715611ac257611ac2611dcc565b6040528060608b016101808c018d811115611adc57600080fd5b60005b6009811015611afc57823584529285019291850191600101611adf565b509297505090359450611b159150506101a08901611a11565b91506101c0880135905092959891949750929550565b600060208284031215611b3d57600080fd5b8135611a3e81611df7565b600060208284031215611b5a57600080fd5b8151611a3e81611df7565b600060208284031215611b7757600080fd5b5035919050565b600060208284031215611b9057600080fd5b5051919050565b6000825160005b81811015611bb85760208186018101518583015201611b9e565b81811115611bc7576000828501525b509190910192915050565b6020808252601b908201527f416c6c20746f6b656e20686173206265656e2077697468647261770000000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008219821115611c5357611c53611db6565b500190565b600082611c7557634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115611cb5578160001904821115611c9b57611c9b611db6565b80851615611ca857918102915b93841c9390800290611c7f565b509250929050565b60006117f18383600082611cd3575060016117f4565b81611ce0575060006117f4565b8160018114611cf65760028114611d0057611d1c565b60019150506117f4565b60ff841115611d1157611d11611db6565b50506001821b6117f4565b5060208310610133831016604e8410600b8410161715611d3f575081810a6117f4565b611d498383611c7a565b8060001904821115611d5d57611d5d611db6565b029392505050565b6000816000190483118215151615611d7f57611d7f611db6565b500290565b600082821015611d9657611d96611db6565b500390565b6000600019821415611daf57611daf611db6565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461061557600080fd5b801515811461061557600080fdfea2646970667358221220555ef1133e90df923734ba2c3b871b1ef4e27e0ade2c79a95067784fd37ac43664736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B25415C GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xCAD5B0F7 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCAD5B0F7 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xD4C1DEE9 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xE2D3F423 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xEB002BB0 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B25415C EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xAB33985A EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xACFB2355 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xAE2B0965 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x56C5F349 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x56C5F349 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x861FAF5F EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x8EDF18E6 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x95661E70 EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12E5D0B9 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x18856A2F EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x1DF4CCFC EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x200D2ED2 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x3B5EF2AD EQ PUSH2 0x273 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH2 0x160 SWAP2 SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH1 0x16 SLOAD PUSH1 0x17 SLOAD PUSH1 0x18 SLOAD PUSH1 0x19 SLOAD PUSH1 0x1A SLOAD PUSH2 0x1CE SWAP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP12 DUP2 AND SWAP11 AND SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 DUP13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP14 DUP15 AND DUP2 MSTORE SWAP12 DUP14 AND PUSH1 0x20 DUP14 ADD MSTORE SWAP10 SWAP1 SWAP12 AND SWAP9 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x60 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xA0 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x160 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x180 ADD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0x555 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x1F SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A21 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x57E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CB PUSH2 0x5E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x618 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x8DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A45 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0xE58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x3A5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP10 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE SWAP7 DUP9 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE ISZERO ISZERO PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 ADD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1B SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B65 JUMP JUMPDEST PUSH2 0x107E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x455 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH1 0x21 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C5 PUSH2 0x496 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A21 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x145F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x528 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A21 JUMP JUMPDEST PUSH2 0x1714 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x250 PUSH2 0x548 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x0 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x568 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD TIMESTAMP GT ISZERO PUSH2 0x578 JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E7 PUSH1 0x0 PUSH2 0x17FA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x615 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x27B7363C90383932B9B0B6329037BBB732B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x4 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x72A SWAP2 PUSH2 0x184C JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x753 JUMPI PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD PUSH2 0x750 SWAP2 PUSH2 0x749 SWAP2 SWAP1 PUSH2 0x184C JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x184C JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720666F72206F776E657220636C61696D20746F6B656E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7468696E6720666F72206F776E657220726566756E6420746F6B656E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x1A SSTORE PUSH1 0x10 SLOAD PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x874 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x898 SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x900 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD PUSH2 0x917 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST GT PUSH2 0x934 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x165BDD481A185D99481B9BDD08189BDD59DA1D081E595D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD DUP2 SLOAD GT PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x165BDD481C99599D5B9908185B1B PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x17 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x9FB SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0x9F5 SWAP2 PUSH2 0x9EF SWAP1 DUP5 SWAP1 PUSH2 0x184C JUMP JUMPDEST SWAP1 PUSH2 0x1858 JUMP JUMPDEST SWAP1 PUSH2 0x1864 JUMP JUMPDEST DUP3 SLOAD SWAP1 SWAP2 POP PUSH2 0xA0B SWAP1 DUP3 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x1E PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA1C SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xA36 SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA51 SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0xA70 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xA82 SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x10 DUP1 SLOAD DUP10 DUP5 AND SWAP1 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x11 DUP1 SLOAD SWAP4 DUP10 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB3D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB61 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0xB6C SWAP1 PUSH1 0xA PUSH2 0x1CBD JUMP JUMPDEST DUP5 MLOAD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x12 SSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD PUSH1 0x13 SSTORE PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0x14 SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x15 SSTORE PUSH1 0x11 SLOAD DUP2 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x313CE567 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC0B SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0xC16 SWAP1 PUSH1 0xA PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0xC25 SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x16 SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x17 SSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x18 SSTORE PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC91 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0xCC0 SWAP1 PUSH1 0xA PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0xCCF SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD4F SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0xD5A SWAP1 PUSH1 0xA PUSH2 0x1CBD JUMP JUMPDEST PUSH2 0x100 DUP6 ADD MLOAD PUSH2 0xD6A SWAP2 SWAP1 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0x11 SLOAD PUSH1 0x1B SLOAD PUSH1 0x19 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP4 AND SWAP2 DUP3 EQ SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0xE0D SWAP1 PUSH1 0xA PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x12 SLOAD PUSH2 0xE1C SWAP2 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0xE26 SWAP2 SWAP1 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x1A SSTORE PUSH1 0x1F SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x20 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x21 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xE7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xE92 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST GT PUSH2 0xEAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xF09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x165BDD481A185D99481B9BDD08189BDD59DA1D081E595D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD GT PUSH2 0xF51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x165BDD4818DB185A5B48185B1B1B PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7B PUSH2 0x3E8 PUSH2 0x9F5 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x9EF PUSH1 0xF PUSH1 0x9 ADD SLOAD PUSH2 0x3E8 PUSH2 0x184C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF92 SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1A DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xFAC SWAP1 DUP5 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFC7 SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x4 DUP3 ADD SLOAD DUP3 SLOAD PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xFF5 SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1046 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x105A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D3 SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x10A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 DUP2 SSTORE CALLER DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x3E8 CALLVALUE DUP4 GT ISZERO PUSH2 0x110D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C656173652070726F76696465206E617669746520636F696E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP4 LT ISZERO PUSH2 0x1152 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4E6F7420656E6F7567682076616C7565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP4 GT ISZERO PUSH2 0x1195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4F766572666C6F772076616C7565 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0x119D PUSH2 0x144D JUMP JUMPDEST PUSH2 0x11CD JUMPI PUSH2 0x11BE DUP2 PUSH2 0x9F5 DUP6 PUSH2 0x9EF PUSH1 0x1F SLOAD DUP7 PUSH2 0x184C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0x11CA DUP4 DUP6 PUSH2 0x1D84 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP5 SLOAD PUSH1 0x16 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x11DE SWAP2 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1A SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH2 0x11F4 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x1205 JUMPI DUP3 PUSH2 0x1207 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP DUP1 DUP7 GT ISZERO PUSH2 0x124B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x53616C652069732073756363657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F2 PUSH1 0xF PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D9 SWAP2 SWAP1 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x12E4 SWAP1 PUSH1 0xA PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH2 0x9F5 SWAP1 DUP11 SWAP1 PUSH2 0x1858 JUMP JUMPDEST SWAP1 POP DUP7 DUP10 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1308 SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP10 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1323 SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 DUP1 SLOAD DUP9 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x133D SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1357 SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x136C DUP4 PUSH2 0x1D9B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1390 SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1E PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13A9 SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x19 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x13C9 JUMPI POP CALLVALUE PUSH2 0x13C6 DUP8 DUP10 PUSH2 0x1C40 JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x1411 JUMPI CALLER PUSH2 0x8FC DUP8 PUSH2 0x13DD DUP11 CALLVALUE PUSH2 0x1D84 JUMP JUMPDEST PUSH2 0x13E7 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x140F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0xFF AND PUSH2 0x143C JUMPI PUSH1 0x11 SLOAD PUSH2 0x143C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS PUSH2 0x1437 DUP11 DUP13 PUSH2 0x1C40 JUMP JUMPDEST PUSH2 0x1870 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145A PUSH1 0x1C CALLER PUSH2 0x19A0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15FB JUMPI PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x1477 SWAP2 PUSH2 0x1D84 JUMP JUMPDEST GT PUSH2 0x1494 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD GT PUSH2 0x1506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x596F7520636C61696D20616C6C206F722068617665206E6F7420626F75676874 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x81E595D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x156C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1590 SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x15A8 SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1A DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x15C4 SWAP1 DUP5 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x15E2 SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SSTORE TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x160D SWAP2 PUSH2 0x1D84 JUMP JUMPDEST GT PUSH2 0x162A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1695 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520726566756E6420616C6C206F722068617665206E6F7420626F756768 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D081E595D PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x16A1 DUP2 DUP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x1E PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16B2 SWAP2 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x16CC SWAP1 DUP5 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP4 SSTORE PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE TIMESTAMP PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x170E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x176E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST PUSH2 0x615 DUP2 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x19C2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F1 DUP3 DUP5 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F1 DUP3 DUP5 PUSH2 0x1D65 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F1 DUP3 DUP5 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x18D4 SWAP2 SWAP1 PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1911 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1940 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1940 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1940 SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1998 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x12531151 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x17F1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1A09 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x17F4 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x17F4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1A1C DUP2 PUSH2 0x1DE2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A3E DUP2 PUSH2 0x1DE2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1E0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1A61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1A6C DUP2 PUSH2 0x1DE2 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 DUP2 ADD CALLDATALOAD PUSH2 0x1A7D DUP2 PUSH2 0x1DE2 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x1A8D DUP2 PUSH2 0x1DE2 JUMP JUMPDEST SWAP6 POP PUSH1 0x7F DUP10 ADD DUP11 SGT PUSH2 0x1A9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1AC2 JUMPI PUSH2 0x1AC2 PUSH2 0x1DCC JUMP JUMPDEST PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP12 ADD PUSH2 0x180 DUP13 ADD DUP14 DUP2 GT ISZERO PUSH2 0x1ADC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x1AFC JUMPI DUP3 CALLDATALOAD DUP5 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP2 DUP6 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1ADF JUMP JUMPDEST POP SWAP3 SWAP8 POP POP SWAP1 CALLDATALOAD SWAP5 POP PUSH2 0x1B15 SWAP2 POP POP PUSH2 0x1A0 DUP10 ADD PUSH2 0x1A11 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A3E DUP2 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A3E DUP2 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BB8 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1B9E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1BC7 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x416C6C20746F6B656E20686173206265656E2077697468647261770000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C53 JUMPI PUSH2 0x1C53 PUSH2 0x1DB6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1CB5 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1C9B JUMPI PUSH2 0x1C9B PUSH2 0x1DB6 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1CA8 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1C7F JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F1 DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x1CD3 JUMPI POP PUSH1 0x1 PUSH2 0x17F4 JUMP JUMPDEST DUP2 PUSH2 0x1CE0 JUMPI POP PUSH1 0x0 PUSH2 0x17F4 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1CF6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1D00 JUMPI PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x17F4 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1D11 JUMPI PUSH2 0x1D11 PUSH2 0x1DB6 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x17F4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1D3F JUMPI POP DUP2 DUP2 EXP PUSH2 0x17F4 JUMP JUMPDEST PUSH2 0x1D49 DUP4 DUP4 PUSH2 0x1C7A JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1D5D JUMPI PUSH2 0x1D5D PUSH2 0x1DB6 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1D7F JUMPI PUSH2 0x1D7F PUSH2 0x1DB6 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1D96 JUMPI PUSH2 0x1D96 PUSH2 0x1DB6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1DAF JUMPI PUSH2 0x1DAF PUSH2 0x1DB6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0x5E CALL SGT RETURNDATACOPY SWAP1 0xDF SWAP3 CALLDATACOPY CALLVALUE 0xBA 0x2C EXTCODESIZE DUP8 SHL 0x1E DELEGATECALL 0xE2 PUSH31 0xADE2C79A95067784FD37AC43664736F6C6343000805003300000000000000 ",
							"sourceMap": "370:11434:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1741:38;;;;;;;;;;-1:-1:-1;1741:38:4;;;;;;;;;;;;;12399:25:12;;;12455:2;12440:18;;12433:34;;;;12372:18;1741:38:4;;;;;;;;1786:26;;;;;;;;;;-1:-1:-1;1786:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1786:26:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3950:15:12;;;3932:34;;4002:15;;;3997:2;3982:18;;3975:43;4054:15;;;;4034:18;;;4027:43;;;;4101:2;4086:18;;4079:34;;;;4144:3;4129:19;;4122:35;;;;3912:3;4173:19;;4166:35;;;;4232:3;4217:19;;4210:35;4276:3;4261:19;;4254:35;4320:3;4305:19;;4298:35;4364:3;4349:19;;4342:35;4421:15;4414:23;4408:3;4393:19;;4386:52;4469:3;4454:19;;4447:36;;;;3881:3;3866:19;1786:26:4;3848:641:12;1891:23:4;;;;;;;;;;;;;;;;;;;12189:25:12;;;12177:2;12162:18;1891:23:4;12144:76:12;4065:337:4;;;;;;;;;;;;;:::i;1921:24::-;;;;;;;;;;;;;;;;1651:42;;;;;;;;;;-1:-1:-1;1651:42:4;;;;;:::i;:::-;;;;;;;;;;;;;;1714:103:8;;;;;;;;;;;;;:::i;:::-;;11693:108:4;;;:::i;1063:87:8:-;;;;;;;;;;-1:-1:-1;1136:6:8;;-1:-1:-1;;;;;1136:6:8;1063:87;;;-1:-1:-1;;;;;3357:32:12;;;3339:51;;3327:2;3312:18;1063:87:8;3294:102:12;8780:1202:4;;;;;;;;;;;;;:::i;7761:1011::-;;;;;;;;;;;;;:::i;2640:1416::-;;;;;;;;;;-1:-1:-1;2640:1416:4;;;;;:::i;:::-;;:::i;6749:1004::-;;;;;;;;;;;;;:::i;1700:34::-;;;;;;;;;;-1:-1:-1;1700:34:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13305:25:12;;;13361:2;13346:18;;13339:34;;;;13389:18;;;13382:34;;;;13447:2;13432:18;;13425:34;;;;13490:3;13475:19;;13468:35;;;;13534:3;13519:19;;13512:35;13578:3;13563:19;;13556:35;13635:14;13628:22;13622:3;13607:19;;13600:51;13695:14;13688:22;13682:3;13667:19;;13660:51;13292:3;13277:19;1700:34:4;13259:458:12;1819:18:4;;;;;;;;;;-1:-1:-1;1819:18:4;;;;-1:-1:-1;;;;;1819:18:4;;;1952:30;;;;;;;;;;-1:-1:-1;1952:30:4;;;;-1:-1:-1;;;;;1952:30:4;;;4529:2212;;;;;;:::i;:::-;;:::i;4411:110::-;;;;;;;;;;;;;:::i;:::-;;;5605:14:12;;5598:22;5580:41;;5568:2;5553:18;4411:110:4;5535:92:12;1990:28:4;;;;;;;;;;;;;;;;1598:46;;;;;;;;;;-1:-1:-1;1598:46:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12737:25:12;;;12793:2;12778:18;;12771:34;;;;12821:18;;;12814:34;;;;12879:2;12864:18;;12857:34;12922:3;12907:19;;12900:35;12724:3;12709:19;1598:46:4;12691:250:12;9990:1573:4;;;;;;;;;;-1:-1:-1;9990:1573:4;;;;;:::i;:::-;;:::i;1972:201:8:-;;;;;;;;;;-1:-1:-1;1972:201:8;;;;;:::i;:::-;;:::i;11571:111:4:-;;;;;;;;;;-1:-1:-1;11571:111:4;;;;;:::i;:::-;-1:-1:-1;;;;;11658:16:4;;;11571:111;4065:337;4144:19;;4103:7;;4126:15;:37;4123:272;;;-1:-1:-1;4187:1:4;;4065:337::o;4123:272::-;4254:17;;4236:15;:35;4233:151;;;-1:-1:-1;4299:1:4;;4065:337::o;4233:151::-;-1:-1:-1;4357:1:4;;4065:337::o;1714:103:8:-;1136:6;;-1:-1:-1;;;;;1136:6:8;736:10:6;1283:23:8;1275:68;;;;-1:-1:-1;;;1275:68:8;;10074:2:12;1275:68:8;;;10056:21:12;;;10093:18;;;10086:30;10152:34;10132:18;;;10125:62;10204:18;;1275:68:8;;;;;;;;;1779:30:::1;1806:1;1779:18;:30::i;:::-;1714:103::o:0;11693:108:4:-;11742:51;;11750:10;;11771:21;11742:51;;;;;;;;;11771:21;11750:10;11742:51;;;;;;;;;;;;;;;;;;;;;11693:108::o;8780:1202::-;2203:9;:22;-1:-1:-1;;;;;2203:22:4;736:10:6;-1:-1:-1;;;;;2187:38:4;;2179:69;;;;-1:-1:-1;;;2179:69:4;;9727:2:12;2179:69:4;;;9709:21:12;9766:2;9746:18;;;9739:30;-1:-1:-1;;;9785:18:12;;;9778:48;9843:18;;2179:69:4;9699:168:12;2179:69:4;1778:1:9::1;2376:7;;:19;;2368:63;;;;-1:-1:-1::0;;;2368:63:9::1;;;;;;;:::i;:::-;1778:1;2509:7;:18:::0;;;8963:19:4;;8957:51:::2;::::0;-1:-1:-1;;;8957:51:4;;9002:4:::2;8957:51;::::0;::::2;3339::12::0;-1:-1:-1;;;;;8963:19:4;;::::2;::::0;8957:36:::2;::::0;3312:18:12;;8957:51:4::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9145:36:::0;;:13:::2;9059:32:::0;8925:83;;-1:-1:-1;9020:35:4::2;::::0;9059:172:::2;::::0;:85:::2;:172::i;:::-;9246:13;:32:::0;9020:212;;-1:-1:-1;9246:37:4;9243:283:::2;;9458:36:::0;;9387:28;;9323:173:::2;::::0;9387:108:::2;::::0;:28;:70:::2;:108::i;:::-;9323:21:::0;;:63:::2;:173::i;:::-;9299:197;;9243:283;9545:35:::0;;::::2;;9544:36;9536:78;;;::::0;-1:-1:-1;;;9536:78:4;;11183:2:12;9536:78:4::2;::::0;::::2;11165:21:12::0;11222:2;11202:18;;;11195:30;11261:31;11241:18;;;11234:59;11310:18;;9536:78:4::2;11155:179:12::0;9536:78:4::2;9634:36:::0;;::::2;::::0;::::2;;;9633:37;9625:80;;;::::0;-1:-1:-1;;;9625:80:4;;7526:2:12;9625:80:4::2;::::0;::::2;7508:21:12::0;7565:2;7545:18;;;7538:30;7604:32;7584:18;;;7577:60;7654:18;;9625:80:4::2;7498:180:12::0;9625:80:4::2;9716:35:::0;:42;;-1:-1:-1;;9716:42:4::2;9754:4;9716:42;::::0;;-1:-1:-1;9769:28:4;:32;9818:19;;9769:9:::2;9848:22:::0;9812:82:::2;::::0;-1:-1:-1;;;9812:82:4;;-1:-1:-1;;;;;9848:22:4;;::::2;9716:13;9812:82:::0;::::2;4676:51:12::0;4743:18;;;4736:34;;;9818:19:4;::::2;::::0;9812:35:::2;::::0;4649:18:12;;9812:82:4::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9913:9:4::2;:22:::0;9905:69:::2;::::0;-1:-1:-1;;;;;9913:22:4;;::::2;::::0;9905:69;::::2;;;::::0;9946:27;;9913:22:::2;9905:69:::0;9913:22;9905:69;9946:27;9913:22;9905:69;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1734:1:9::1;2688:7;:22:::0;-1:-1:-1;8780:1202:4:o;7761:1011::-;1778:1:9;2376:7;;:19;;2368:63;;;;-1:-1:-1;;;2368:63:9;;;;;;;:::i;:::-;1778:1;2509:7;:18;;;7920:31:4;;:13:::1;7885:32:::0;:66:::1;::::0;7920:31;7885:66:::1;:::i;:::-;:70;7877:137;;;;-1:-1:-1::0;;;7877:137:4::1;;;;;;;:::i;:::-;8062:10;8026:23;8052:21:::0;;;:9:::1;:21;::::0;;;;8092:17;;8084:57:::1;;;::::0;-1:-1:-1;;;8084:57:4;;6056:2:12;8084:57:4::1;::::0;::::1;6038:21:12::0;6095:2;6075:18;;;6068:30;-1:-1:-1;;;6114:18:12;;;6107:53;6177:18;;8084:57:4::1;6028:173:12::0;8084:57:4::1;8180:23;::::0;::::1;::::0;8160:17;;:43:::1;8152:70;;;::::0;-1:-1:-1;;;8152:70:4;;10435:2:12;8152:70:4::1;::::0;::::1;10417:21:12::0;10474:2;10454:18;;;10447:30;-1:-1:-1;;;10493:18:12;;;10486:44;10547:18;;8152:70:4::1;10407:164:12::0;8152:70:4::1;8335:17:::0;;8276:19;;8233:20:::1;::::0;8256:150:::1;::::0;8400:4:::1;::::0;8257:96:::1;::::0;8258:38:::1;::::0;8400:4;;8258:17:::1;:38::i;:::-;8257:77:::0;::::1;:96::i;:::-;8256:135:::0;::::1;:150::i;:::-;8429:17:::0;;8233:173;;-1:-1:-1;8429:32:4::1;::::0;8233:173;;8429:32:::1;:::i;:::-;8417:8;;:44;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;8472:31:4;:47;;8507:12;;8472:31;::::1;::::0;:47:::1;::::0;8507:12;;8472:47:::1;:::i;:::-;;;;;;;;8557:12;8530:5;:23;;;:39;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;8601:15:4::1;8580:18;::::0;::::1;:36:::0;8686:24:::1;::::0;::::1;::::0;8667:16:::1;::::0;::::1;::::0;:43:::1;::::0;8686:24;8667:43:::1;:::i;:::-;8627:36:::0;:83;;:36:::1;::::0;:83:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;8722:42:4::1;::::0;8730:10:::1;::::0;8722:42;::::1;;;::::0;8751:12;;8722:42:::1;::::0;;;8751:12;8730:10;8722:42;::::1;;;;;;;;;;;;;::::0;::::1;;;;2640:1416:::0;2926:9;:38;;-1:-1:-1;;;;;2926:38:4;;;-1:-1:-1;;;;;;2926:38:4;;;;;;;2975:19;:32;;;;;;;;;;;;;3018:19;:32;;;;;;;;;;;;;;;3108:37;;;-1:-1:-1;;;3108:37:4;;;;:35;;:37;;;;;;;;;;;;;;;2975:32;3108:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3095:51;;:2;:51;:::i;:::-;3084:8;;:62;;;;:::i;:::-;3061:20;:85;3179:8;;;;;3157:19;:30;3218:8;;;;;3198:17;:28;3266:8;;;;3237:26;:37;3345:19;;3339:37;;-1:-1:-1;;;3339:37:4;;;;-1:-1:-1;;;;;3345:19:4;;;;3339:35;;:37;;;;;;;;;;;3345:19;3339:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3325:52;;:2;:52;:::i;:::-;3314:8;;;;:63;;;;:::i;:::-;3285:26;:92;3410:8;;;;3388:19;:30;3450:8;;;;3429:18;:29;3526:19;;3520:37;;;-1:-1:-1;;;3520:37:4;;;;-1:-1:-1;;;;;3526:19:4;;;;3520:35;;:37;;;;;3410:8;;3520:37;;;;;;;;3526:19;3520:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3506:52;;:2;:52;:::i;:::-;3495:8;;;;:63;;;;:::i;:::-;3469:15;:89;3625:19;;3619:37;;;-1:-1:-1;;;3619:37:4;;;;-1:-1:-1;;;;;3625:19:4;;;;3619:35;;:37;;;;;;;;;;;;;;;3625:19;3619:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3606:51;;:2;:51;:::i;:::-;3595:8;;;;:62;;;;:::i;:::-;3569:23;:88;3721:19;;3704:4;;3668:25;:73;;-1:-1:-1;;3668:73:4;-1:-1:-1;;;;;3704:4:4;;;3721:19;;;;3696:45;;;3668:73;;;;;;;3888:37;;;-1:-1:-1;;;3888:37:4;;;;:35;;:37;;;;;;;;;;;;;;;3721:19;3888:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3875:51;;:2;:51;:::i;:::-;3808:15;:23;3783:20;;:49;;:24;:49::i;:::-;:144;;;;:::i;:::-;3752:28;:175;3938:9;:22;;;;3971:15;:34;;-1:-1:-1;;;;;;3971:34:4;-1:-1:-1;;;;;3971:34:4;;;;;;;;;;4016:13;:30;-1:-1:-1;;;;2640:1416:4:o;6749:1004::-;1778:1:9;2376:7;;:19;;2368:63;;;;-1:-1:-1;;;2368:63:9;;;;;;;:::i;:::-;1778:1;2509:7;:18;;;6904:32:4;;6873:28;;:63:::1;::::0;6904:32;6873:63:::1;:::i;:::-;:67;6865:134;;;;-1:-1:-1::0;;;6865:134:4::1;;;;;;;:::i;:::-;7046:10;7010:23;7036:21:::0;;;:9:::1;:21;::::0;;;;7076:16:::1;::::0;::::1;::::0;7068:56:::1;;;::::0;-1:-1:-1;;;7068:56:4;;6056:2:12;7068:56:4::1;::::0;::::1;6038:21:12::0;6095:2;6075:18;;;6068:30;-1:-1:-1;;;6114:18:12;;;6107:53;6177:18;;7068:56:4::1;6028:173:12::0;7068:56:4::1;7162:5;:24;;;7143:5;:16;;;:43;7135:70;;;::::0;-1:-1:-1;;;7135:70:4;;7885:2:12;7135:70:4::1;::::0;::::1;7867:21:12::0;7924:2;7904:18;;;7897:30;-1:-1:-1;;;7943:18:12;;;7936:44;7997:18;;7135:70:4::1;7857:164:12::0;7135:70:4::1;7216:19;7238:136;7368:4;7239:88;7310:5;:16;;;7240:37;7258:9;:18;;;7248:4;7240:17;;:37;;;;:::i;7238:136::-;7216:158;;7421:11;7385:13;:32;;;:47;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7443:28:4;:43;;7475:11;;7443:28;::::1;::::0;:43:::1;::::0;7475:11;;7443:43:::1;:::i;:::-;;;;;;;;7525:11;7497:5;:24;;;:39;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7568:15:4::1;7547:18;::::0;::::1;:36:::0;7651:23:::1;::::0;::::1;::::0;7633:17;;:41:::1;::::0;7651:23;7633:41:::1;:::i;:::-;7594:35:::0;:80;;:35:::1;::::0;:80:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;7691:19:4;;7685:60:::1;::::0;-1:-1:-1;;;7685:60:4;;7721:10:::1;7685:60;::::0;::::1;4676:51:12::0;4743:18;;;4736:34;;;-1:-1:-1;;;;;7691:19:4;;::::1;::::0;7685:35:::1;::::0;4649:18:12;;7685:60:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4529:2212::-:0;1778:1:9;2376:7;;:19;;2368:63;;;;-1:-1:-1;;;2368:63:9;;;;;;;:::i;:::-;1778:1;2509:7;:18;;;4700:10:4::1;4690:21:::0;;::::1;::::0;;;;;;;;4742:7;;;;4855:4:::1;4878:9;:27:::0;-1:-1:-1;4878:27:4::1;4870:66;;;::::0;-1:-1:-1;;;4870:66:4;;6408:2:12;4870:66:4::1;::::0;::::1;6390:21:12::0;6447:2;6427:18;;;6420:30;6486:28;6466:18;;;6459:56;6532:18;;4870:66:4::1;6380:176:12::0;4870:66:4::1;4973:26:::0;;4955:44;::::1;;4947:101;;;::::0;-1:-1:-1;;;4947:101:4;;9382:2:12;4947:101:4::1;::::0;::::1;9364:21:12::0;9421:2;9401:18;;;9394:30;-1:-1:-1;;;9440:18:12;;;9433:46;9496:18;;4947:101:4::1;9354:166:12::0;4947:101:4::1;5085:26:::0;;5067:44;::::1;;5059:99;;;::::0;-1:-1:-1;;;5059:99:4;;8634:2:12;5059:99:4::1;::::0;::::1;8616:21:12::0;8673:2;8653:18;;;8646:30;-1:-1:-1;;;8692:18:12;;;8685:44;8746:18;;5059:99:4::1;8606:164:12::0;5059:99:4::1;5173:19;:17;:19::i;:::-;5169:266;;5226:133;5345:13;5227:81;5293:14;5228:28;5246:9;;5228:13;:17;;:28;;;;:::i;5226:133::-;5209:150:::0;-1:-1:-1;5380:26:4::1;5209:150:::0;5380:9;:26:::1;:::i;:::-;5374:32;;5169:266;5500:17:::0;;5471:26;;5445:23:::1;::::0;5471:46:::1;::::0;::::1;:::i;:::-;5585:13;:32:::0;5554:28;;5445:72;;-1:-1:-1;5528:23:4::1;::::0;5554:63:::1;::::0;5585:32;5554:63:::1;:::i;:::-;5528:89;;5628:17;5666:15;5648;:33;:69;;5702:15;5648:69;;;5684:15;5648:69;5628:89;;5754:9;5736:14;:27;;5728:55;;;::::0;-1:-1:-1;;;5728:55:4;;11901:2:12;5728:55:4::1;::::0;::::1;11883:21:12::0;11940:2;11920:18;;;11913:30;-1:-1:-1;;;11959:18:12;;;11952:45;12014:18;;5728:55:4::1;11873:165:12::0;5728:55:4::1;5794:17;5815:158;5940:9;:19;;;;;;;;;;-1:-1:-1::0;;;;;5940:19:4::1;-1:-1:-1::0;;;;;5934:35:4::1;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5920:52;::::0;:2:::1;:52;:::i;:::-;5864:20:::0;;5815:70:::1;::::0;:14;;:48:::1;:70::i;:158::-;5794:180;;6023:14;6002:5;:17;;;:35;;;;;;;:::i;:::-;;;;;;;;6068:9;6048:5;:16;;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6088:13:4::1;:50:::0;;6124:14;;6088:13;:32:::1;::::0;:50:::1;::::0;6124:14;;6088:50:::1;:::i;:::-;::::0;;;-1:-1:-1;;6149:28:4;:41;;6181:9;;6149:28;::::1;::::0;:41:::1;::::0;6181:9;;6149:41:::1;:::i;:::-;::::0;;;-1:-1:-1;;6201:25:4;:27;;;:25:::1;:27;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;6247:10:4::1;6239:19;::::0;;;:7:::1;:19;::::0;;;;:26;;6262:3;;6239:19;:26:::1;::::0;6262:3;;6239:26:::1;:::i;:::-;;;;;;;;6288:3;6276:8;;:15;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6307:25:4;;::::1;;:62:::0;::::1;;;-1:-1:-1::0;6360:9:4::1;6336:20;6353:3:::0;6336:14;:20:::1;:::i;:::-;:33;;6307:62;6304:156;;;6394:10;6386:62;6444:3:::0;6415:26:::1;6427:14:::0;6415:9:::1;:26;:::i;:::-;:32;;;;:::i;:::-;6386:62;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;6304:156;6475:25:::0;;::::1;;6471:251;;6575:19:::0;;6517:193:::1;::::0;-1:-1:-1;;;;;6575:19:4::1;6614:10;6651:4;6675:20;6692:3:::0;6675:14;:20:::1;:::i;:::-;6517:31;:193::i;:::-;-1:-1:-1::0;;1734:1:9;2688:7;:22;-1:-1:-1;;;;;;;;4529:2212:4:o;4411:110::-;4460:4;4484:29;:6;736:10:6;4484:15:4;:29::i;:::-;4477:36;;4411:110;:::o;9990:1573::-;10130:7;10127:1429;;;10192:32;;10161:28;;10227:1;;10161:63;;;:::i;:::-;:67;10153:139;;;;-1:-1:-1;;;10153:139:4;;;;;;;:::i;:::-;10343:10;10307:23;10333:21;;;:9;:21;;;;;10396:24;;;;10377:16;;;;:43;10369:92;;;;-1:-1:-1;;;10369:92:4;;8977:2:12;10369:92:4;;;8959:21:12;9016:2;8996:18;;;8989:30;9055:34;9035:18;;;9028:62;-1:-1:-1;;;9106:18:12;;;9099:34;9150:19;;10369:92:4;8949:226:12;10369:92:4;10482:19;;;10524:16;;;10476:65;;-1:-1:-1;;;10476:65:4;;10512:10;10476:65;;;4676:51:12;4743:18;;;4736:34;;;;-1:-1:-1;;;;;10482:19:4;;;;10476:35;;4649:18:12;;10476:65:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10592:16:4;;;;10556:32;:52;;:32;;:52;;10592:16;;10556:52;:::i;:::-;;;;-1:-1:-1;;10655:16:4;;;;10623:28;:48;;:28;;:48;;10655:16;;10623:48;:::i;:::-;;;;-1:-1:-1;;10714:16:4;;;;10686:24;;;:44;;:24;;:44;;10714:16;;10686:44;:::i;:::-;;;;-1:-1:-1;;10765:1:4;10745:21;;;10781:16;;;:20;10837:15;10816:18;;;;:36;11742:51;11693:108::o;10127:1429::-;10940:31;;:13;10905:32;10974:1;;10905:66;;;:::i;:::-;:70;10897:142;;;;-1:-1:-1;;;10897:142:4;;;;;;;:::i;:::-;11091:10;11055:23;11081:21;;;:9;:21;;;;;11125:17;;11117:71;;;;-1:-1:-1;;;11117:71:4;;8228:2:12;11117:71:4;;;8210:21:12;8267:2;8247:18;;;8240:30;8306:34;8286:18;;;8279:62;-1:-1:-1;;;8357:18:12;;;8350:35;8402:19;;11117:71:4;8200:227:12;11117:71:4;11226:17;;11270:32;11226:17;;11270:32;:::i;:::-;11258:8;;:44;;;;;;;:::i;:::-;;;;-1:-1:-1;;11317:31:4;:47;;11352:12;;11317:31;;;:47;;11352:12;;11317:47;:::i;:::-;;;;-1:-1:-1;;11400:1:4;11379:22;;;11416:16;;;:20;;;11472:15;11451:18;;;:36;11502:42;;11510:10;;11502:42;;;;;11531:12;;11502:42;11400:1;11502:42;11531:12;11510:10;11502:42;;;;;;;;;;;;;;;;;;;;;10882:674;;9990:1573;:::o;1972:201:8:-;1136:6;;-1:-1:-1;;;;;1136:6:8;736:10:6;1283:23:8;1275:68;;;;-1:-1:-1;;;1275:68:8;;10074:2:12;1275:68:8;;;10056:21:12;;;10093:18;;;10086:30;10152:34;10132:18;;;10125:62;10204:18;;1275:68:8;10046:182:12;1275:68:8;-1:-1:-1;;;;;2061:22:8;::::1;2053:73;;;::::0;-1:-1:-1;;;2053:73:8;;7119:2:12;2053:73:8::1;::::0;::::1;7101:21:12::0;7158:2;7138:18;;;7131:30;7197:34;7177:18;;;7170:62;-1:-1:-1;;;7248:18:12;;;7241:36;7294:19;;2053:73:8::1;7091:228:12::0;2053:73:8::1;2137:28;2156:8;2137:18;:28::i;8259:152:7:-:0;8329:4;8353:50;8358:3;-1:-1:-1;;;;;8378:23:7;;8353:4;:50::i;:::-;8346:57;;8259:152;;;;;:::o;2333:191:8:-;2426:6;;;-1:-1:-1;;;;;2443:17:8;;;-1:-1:-1;;;;;;2443:17:8;;;;;;;2476:40;;2426:6;;;2443:17;2426:6;;2476:40;;2407:16;;2476:40;2396:128;2333:191;:::o;3228:98:10:-;3286:7;3313:5;3317:1;3313;:5;:::i;3585:98::-;3643:7;3670:5;3674:1;3670;:5;:::i;3984:98::-;4042:7;4069:5;4073:1;4069;:5;:::i;1073:430:11:-;1279:51;;;-1:-1:-1;;;;;5039:15:12;;;1279:51:11;;;5021:34:12;5091:15;;;5071:18;;;5064:43;5123:18;;;;5116:34;;;1279:51:11;;;;;;;;;;4956:18:12;;;;1279:51:11;;;;;;;-1:-1:-1;;;;;1279:51:11;-1:-1:-1;;;1279:51:11;;;1254:87;;-1:-1:-1;;;;1254:10:11;;;;:87;;1279:51;1254:87;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1218:123;;;;1374:7;:57;;;;-1:-1:-1;1386:11:11;;:16;;:44;;;1417:4;1406:24;;;;;;;;;;;;:::i;:::-;1352:143;;;;-1:-1:-1;;;1352:143:11;;10778:2:12;1352:143:11;;;10760:21:12;10817:2;10797:18;;;10790:30;10856:34;10836:18;;;10829:62;-1:-1:-1;;;10907:18:12;;;10900:34;10951:19;;1352:143:11;10750:226:12;1352:143:11;1207:296;;1073:430;;;;:::o;8831:167:7:-;-1:-1:-1;;;;;8965:23:7;;8911:4;4367:19;;;:12;;;:19;;;;;;:24;;8935:55;4270:129;2174:414;2237:4;4367:19;;;:12;;;:19;;;;;;2254:327;;-1:-1:-1;2297:23:7;;;;;;;;:11;:23;;;;;;;;;;;;;2480:18;;2458:19;;;:12;;;:19;;;;;;:40;;;;2513:11;;2254:327;-1:-1:-1;2564:5:7;2557:12;;14:142:12;90:20;;119:31;90:20;119:31;:::i;:::-;71:85;;;:::o;161:247::-;220:6;273:2;261:9;252:7;248:23;244:32;241:2;;;289:1;286;279:12;241:2;328:9;315:23;347:31;372:5;347:31;:::i;:::-;397:5;231:177;-1:-1:-1;;;231:177:12:o;413:1474::-;591:6;599;607;615;623;631;639;692:3;680:9;671:7;667:23;663:33;660:2;;;709:1;706;699:12;660:2;748:9;735:23;767:31;792:5;767:31;:::i;:::-;817:5;-1:-1:-1;841:2:12;880:18;;;867:32;908:33;867:32;908:33;:::i;:::-;960:7;-1:-1:-1;1019:2:12;1004:18;;991:32;1032:33;991:32;1032:33;:::i;:::-;1084:7;-1:-1:-1;1129:3:12;1114:19;;1110:33;-1:-1:-1;1100:2:12;;1157:1;1154;1147:12;1100:2;1190;1184:9;1232:3;1224:6;1220:16;1302:6;1290:10;1287:22;1266:18;1254:10;1251:34;1248:62;1245:2;;;1313:18;;:::i;:::-;1349:2;1342:22;1384:6;1425:2;1410:18;;1462:3;1447:19;;1478:15;;;1475:2;;;1506:1;1503;1496:12;1475:2;1528:1;1538:165;1552:4;1549:1;1546:11;1538:165;;;1611:17;;1599:30;;1649:12;;;;1681;;;;1572:1;1565:9;1538:165;;;-1:-1:-1;1722:6:12;;-1:-1:-1;;1747:16:12;;;-1:-1:-1;1782:47:12;;-1:-1:-1;;1824:3:12;1809:19;;1782:47;:::i;:::-;1772:57;;1876:3;1865:9;1861:19;1848:33;1838:43;;650:1237;;;;;;;;;;:::o;1892:241::-;1948:6;2001:2;1989:9;1980:7;1976:23;1972:32;1969:2;;;2017:1;2014;2007:12;1969:2;2056:9;2043:23;2075:28;2097:5;2075:28;:::i;2138:245::-;2205:6;2258:2;2246:9;2237:7;2233:23;2229:32;2226:2;;;2274:1;2271;2264:12;2226:2;2306:9;2300:16;2325:28;2347:5;2325:28;:::i;2388:180::-;2447:6;2500:2;2488:9;2479:7;2475:23;2471:32;2468:2;;;2516:1;2513;2506:12;2468:2;-1:-1:-1;2539:23:12;;2458:110;-1:-1:-1;2458:110:12:o;2573:184::-;2643:6;2696:2;2684:9;2675:7;2671:23;2667:32;2664:2;;;2712:1;2709;2702:12;2664:2;-1:-1:-1;2735:16:12;;2654:103;-1:-1:-1;2654:103:12:o;2762:426::-;2891:3;2929:6;2923:13;2954:1;2964:129;2978:6;2975:1;2972:13;2964:129;;;3076:4;3060:14;;;3056:25;;3050:32;3037:11;;;3030:53;2993:12;2964:129;;;3111:6;3108:1;3105:13;3102:2;;;3146:1;3137:6;3132:3;3128:16;3121:27;3102:2;-1:-1:-1;3166:16:12;;;;;2899:289;-1:-1:-1;;2899:289:12:o;6561:351::-;6763:2;6745:21;;;6802:2;6782:18;;;6775:30;6841:29;6836:2;6821:18;;6814:57;6903:2;6888:18;;6735:177::o;11339:355::-;11541:2;11523:21;;;11580:2;11560:18;;;11553:30;11619:33;11614:2;11599:18;;11592:61;11685:2;11670:18;;11513:181::o;13722:128::-;13762:3;13793:1;13789:6;13786:1;13783:13;13780:2;;;13799:18;;:::i;:::-;-1:-1:-1;13835:9:12;;13770:80::o;13855:217::-;13895:1;13921;13911:2;;13965:10;13960:3;13956:20;13953:1;13946:31;14000:4;13997:1;13990:15;14028:4;14025:1;14018:15;13911:2;-1:-1:-1;14057:9:12;;13901:171::o;14077:422::-;14166:1;14209:5;14166:1;14223:270;14244:7;14234:8;14231:21;14223:270;;;14303:4;14299:1;14295:6;14291:17;14285:4;14282:27;14279:2;;;14312:18;;:::i;:::-;14362:7;14352:8;14348:22;14345:2;;;14382:16;;;;14345:2;14461:22;;;;14421:15;;;;14223:270;;;14227:3;14141:358;;;;;:::o;14504:131::-;14564:5;14593:36;14620:8;14614:4;14689:5;14719:8;14709:2;;-1:-1:-1;14760:1:12;14774:5;;14709:2;14808:4;14798:2;;-1:-1:-1;14845:1:12;14859:5;;14798:2;14890:4;14908:1;14903:59;;;;14976:1;14971:130;;;;14883:218;;14903:59;14933:1;14924:10;;14947:5;;;14971:130;15008:3;14998:8;14995:17;14992:2;;;15015:18;;:::i;:::-;-1:-1:-1;;15071:1:12;15057:16;;15086:5;;14883:218;;15185:2;15175:8;15172:16;15166:3;15160:4;15157:13;15153:36;15147:2;15137:8;15134:16;15129:2;15123:4;15120:12;15116:35;15113:77;15110:2;;;-1:-1:-1;15222:19:12;;;15254:5;;15110:2;15301:34;15326:8;15320:4;15301:34;:::i;:::-;15371:6;15367:1;15363:6;15359:19;15350:7;15347:32;15344:2;;;15382:18;;:::i;:::-;15420:20;;14699:747;-1:-1:-1;;;14699:747:12:o;15451:168::-;15491:7;15557:1;15553;15549:6;15545:14;15542:1;15539:21;15534:1;15527:9;15520:17;15516:45;15513:2;;;15564:18;;:::i;:::-;-1:-1:-1;15604:9:12;;15503:116::o;15624:125::-;15664:4;15692:1;15689;15686:8;15683:2;;;15697:18;;:::i;:::-;-1:-1:-1;15734:9:12;;15673:76::o;15754:135::-;15793:3;-1:-1:-1;;15814:17:12;;15811:2;;;15834:18;;:::i;:::-;-1:-1:-1;15881:1:12;15870:13;;15801:88::o;15894:127::-;15955:10;15950:3;15946:20;15943:1;15936:31;15986:4;15983:1;15976:15;16010:4;16007:1;16000:15;16158:127;16219:10;16214:3;16210:20;16207:1;16200:31;16250:4;16247:1;16240:15;16274:4;16271:1;16264:15;16290:131;-1:-1:-1;;;;;16365:31:12;;16355:42;;16345:2;;16411:1;16408;16401:12;16426:118;16512:5;16505:13;16498:21;16491:5;16488:32;16478:2;;16534:1;16531;16524:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1547800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH()": "2426",
								"adminReceiveFee()": "2448",
								"backToken()": "infinite",
								"buyerInfo(address)": "11126",
								"checkAdminAddress()": "2499",
								"deposit(uint256)": "infinite",
								"feeAnyone()": "2407",
								"feeCreateSale()": "2339",
								"getBalance(address)": "3094",
								"initialSaleInfor(address,address,address,uint256[9],uint256,address,uint256)": "infinite",
								"owner()": "2409",
								"ownerClaimAndRefundToken()": "infinite",
								"presaleStatus()": "17307",
								"renounceOwnership()": "28162",
								"saleInfor()": "25810",
								"saleTotalSupply()": "4441",
								"status()": "4555",
								"totalFee()": "2363",
								"transferOwnership(address)": "infinite",
								"userClaimEmergency()": "infinite",
								"userClaimOrRefundWhenSaleSuccess(bool)": "infinite",
								"userFee(address)": "2536",
								"userRefundEmergency()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 370,
									"end": 11804,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 370,
									"end": 11804,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 370,
									"end": 11804,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1852,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 942,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2438,
									"end": 2442,
									"name": "PUSH",
									"source": 4,
									"value": "1B"
								},
								{
									"begin": 2438,
									"end": 2494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2438,
									"end": 2494,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2451,
									"end": 2493,
									"name": "PUSH",
									"source": 4,
									"value": "C778417E063141139FCE010982780140AA0CD5AB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2438,
									"end": 2494,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2438,
									"end": 2494,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2438,
									"end": 2494,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2438,
									"end": 2494,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2438,
									"end": 2494,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2438,
									"end": 2494,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2505,
									"end": 2559,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2505,
									"end": 2511,
									"name": "PUSH",
									"source": 4,
									"value": "1C"
								},
								{
									"begin": 2516,
									"end": 2558,
									"name": "PUSH",
									"source": 4,
									"value": "6CCB41EEDA5A073076F3E7DC1614C185B5FA41ED"
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551744"
								},
								{
									"begin": 2505,
									"end": 2515,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2505,
									"end": 2559,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2505,
									"end": 2559,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2505,
									"end": 2559,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2505,
									"end": 2559,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2505,
									"end": 2559,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2505,
									"end": 2559,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 2624,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2581,
									"end": 2623,
									"name": "PUSH",
									"source": 4,
									"value": "4F0B12BBF40FC182559822A5B1DB6D34DBC3E016"
								},
								{
									"begin": 2570,
									"end": 2576,
									"name": "PUSH",
									"source": 4,
									"value": "1C"
								},
								{
									"begin": 2570,
									"end": 2580,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2570,
									"end": 2580,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2570,
									"end": 2580,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 2580,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551744"
								},
								{
									"begin": 2570,
									"end": 2580,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 2580,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 2624,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 2624,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 2624,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2570,
									"end": 2624,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 2624,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2570,
									"end": 2624,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2570,
									"end": 2624,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 2624,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 370,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 370,
									"end": 11804,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 8,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "LOG3",
									"source": 8
								},
								{
									"begin": 2396,
									"end": 2524,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8329,
									"end": 8333,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 8358,
									"end": 8361,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8378,
									"end": 8401,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8378,
									"end": 8401,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8353,
									"end": 8357,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 8353,
									"end": 8403,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8346,
									"end": 8403,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8346,
									"end": 8403,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8259,
									"end": 8411,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2174,
									"end": 2588,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 2174,
									"end": 2588,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2241,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4367,
									"end": 4379,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4367,
									"end": 4379,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4367,
									"end": 4379,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 4367,
									"end": 4386,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2308,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2320,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2480,
									"end": 2498,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2480,
									"end": 2498,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2470,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2470,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2470,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2477,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2498,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2513,
									"end": 2524,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 2513,
									"end": 2524,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2254,
									"end": 2581,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2564,
									"end": 2569,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 2557,
									"end": 2569,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 370,
									"end": 11804,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 370,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 370,
									"end": 11804,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 11804,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 370,
									"end": 11804,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 11804,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 11804,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 370,
									"end": 11804,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 11804,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220555ef1133e90df923734ba2c3b871b1ef4e27e0ade2c79a95067784fd37ac43664736f6c63430008050033",
									".code": [
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "9B25415C"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "CAD5B0F7"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "CAD5B0F7"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "D4C1DEE9"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "E2D3F423"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "EB002BB0"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "F8B2CB4F"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "9B25415C"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "AB33985A"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "ACFB2355"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "AD5C4648"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "AE2B0965"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "B6B55F25"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "56C5F349"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "56C5F349"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "861FAF5F"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "8EDF18E6"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "95661E70"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "12E5D0B9"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "18856A2F"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "1DF4CCFC"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "200D2ED2"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "3B5EF2AD"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 370,
											"end": 11804,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12399,
											"end": 12424,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12399,
											"end": 12424,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12399,
											"end": 12424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12455,
											"end": 12457,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12440,
											"end": 12458,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12440,
											"end": 12458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12433,
											"end": 12467,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12433,
											"end": 12467,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12433,
											"end": 12467,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12433,
											"end": 12467,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12372,
											"end": 12390,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1779,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "1A"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SWAP12",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SWAP12",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SWAP11",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3950,
											"end": 3965,
											"name": "SWAP14",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 3965,
											"name": "DUP15",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 3965,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3932,
											"end": 3966,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3932,
											"end": 3966,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4017,
											"name": "SWAP12",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4017,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 4002,
											"end": 4017,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 3999,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3982,
											"end": 4000,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 3982,
											"end": 4000,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3975,
											"end": 4018,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4054,
											"end": 4069,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 4054,
											"end": 4069,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4054,
											"end": 4069,
											"name": "SWAP12",
											"source": 12
										},
										{
											"begin": 4054,
											"end": 4069,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4034,
											"end": 4052,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 4034,
											"end": 4052,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4034,
											"end": 4052,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4027,
											"end": 4070,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 4027,
											"end": 4070,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4027,
											"end": 4070,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 4027,
											"end": 4070,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4113,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4113,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4113,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4113,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4147,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4129,
											"end": 4148,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4129,
											"end": 4148,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4157,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4157,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4157,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4157,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3912,
											"end": 3915,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 4173,
											"end": 4192,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4173,
											"end": 4192,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4201,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4201,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4201,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4201,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4232,
											"end": 4235,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 4217,
											"end": 4236,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4217,
											"end": 4236,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4245,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 4261,
											"end": 4280,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4261,
											"end": 4280,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4254,
											"end": 4289,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4320,
											"end": 4323,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4305,
											"end": 4324,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4305,
											"end": 4324,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4298,
											"end": 4333,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4367,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4342,
											"end": 4377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4421,
											"end": 4436,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4414,
											"end": 4437,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4411,
											"name": "PUSH",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 4393,
											"end": 4412,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4393,
											"end": 4412,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4386,
											"end": 4438,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4469,
											"end": 4472,
											"name": "PUSH",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 4454,
											"end": 4473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4454,
											"end": 4473,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4483,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3881,
											"end": 3884,
											"name": "PUSH",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 3866,
											"end": 3885,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1786,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3848,
											"end": 4489,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "PUSH",
											"source": 4,
											"value": "1E"
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12189,
											"end": 12214,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12189,
											"end": 12214,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12189,
											"end": 12214,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12177,
											"end": 12179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12162,
											"end": 12180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1891,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 12144,
											"end": 12220,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1945,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1693,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 11693,
											"end": 11801,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 11693,
											"end": 11801,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11693,
											"end": 11801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 11693,
											"end": 11801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 11693,
											"end": 11801,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3357,
											"end": 3389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3357,
											"end": 3389,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3357,
											"end": 3389,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3390,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3329,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3294,
											"end": 3396,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13305,
											"end": 13330,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 13305,
											"end": 13330,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 13305,
											"end": 13330,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13361,
											"end": 13363,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13346,
											"end": 13364,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 13346,
											"end": 13364,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13339,
											"end": 13373,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 13339,
											"end": 13373,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13339,
											"end": 13373,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 13339,
											"end": 13373,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13389,
											"end": 13407,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 13389,
											"end": 13407,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 13389,
											"end": 13407,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13382,
											"end": 13416,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 13382,
											"end": 13416,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13382,
											"end": 13416,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 13382,
											"end": 13416,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13447,
											"end": 13449,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 13432,
											"end": 13450,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13432,
											"end": 13450,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13425,
											"end": 13459,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13425,
											"end": 13459,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13425,
											"end": 13459,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13425,
											"end": 13459,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13490,
											"end": 13493,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 13475,
											"end": 13494,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13475,
											"end": 13494,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13468,
											"end": 13503,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13468,
											"end": 13503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13468,
											"end": 13503,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13468,
											"end": 13503,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13534,
											"end": 13537,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 13519,
											"end": 13538,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13519,
											"end": 13538,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13512,
											"end": 13547,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13578,
											"end": 13581,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 13563,
											"end": 13582,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13563,
											"end": 13582,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13591,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13635,
											"end": 13649,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13628,
											"end": 13650,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13622,
											"end": 13625,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 13607,
											"end": 13626,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13607,
											"end": 13626,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13600,
											"end": 13651,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13695,
											"end": 13709,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13688,
											"end": 13710,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13682,
											"end": 13685,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 13667,
											"end": 13686,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13667,
											"end": 13686,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13660,
											"end": 13711,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13292,
											"end": 13295,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 13277,
											"end": 13296,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 13259,
											"end": 13717,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 1982,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5619,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5605,
											"end": 5619,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5598,
											"end": 5620,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5580,
											"end": 5621,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5580,
											"end": 5621,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5568,
											"end": 5570,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5553,
											"end": 5571,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5535,
											"end": 5627,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2018,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12737,
											"end": 12762,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 12737,
											"end": 12762,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12737,
											"end": 12762,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12793,
											"end": 12795,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12778,
											"end": 12796,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12778,
											"end": 12796,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12771,
											"end": 12805,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12771,
											"end": 12805,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12771,
											"end": 12805,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12771,
											"end": 12805,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12821,
											"end": 12839,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12821,
											"end": 12839,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12821,
											"end": 12839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12814,
											"end": 12848,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12814,
											"end": 12848,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12814,
											"end": 12848,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12814,
											"end": 12848,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12879,
											"end": 12881,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12864,
											"end": 12882,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12857,
											"end": 12891,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12922,
											"end": 12925,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 12907,
											"end": 12926,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12907,
											"end": 12926,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12900,
											"end": 12935,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12724,
											"end": 12727,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 12709,
											"end": 12728,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 12691,
											"end": 12941,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11658,
											"end": 11674,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11658,
											"end": 11674,
											"name": "BALANCE",
											"source": 4
										},
										{
											"begin": 11658,
											"end": 11674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11571,
											"end": 11682,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4144,
											"end": 4163,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4144,
											"end": 4163,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4126,
											"end": 4141,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4126,
											"end": 4163,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4123,
											"end": 4395,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4123,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4123,
											"end": 4395,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4187,
											"end": 4188,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4187,
											"end": 4188,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4123,
											"end": 4395,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4123,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4251,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4271,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4384,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4233,
											"end": 4384,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4299,
											"end": 4300,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4299,
											"end": 4300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4233,
											"end": 4384,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4233,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4357,
											"end": 4358,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4357,
											"end": 4358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4065,
											"end": 4402,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10074,
											"end": 10076,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10093,
											"end": 10111,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10093,
											"end": 10111,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10093,
											"end": 10111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10086,
											"end": 10116,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10152,
											"end": 10186,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10132,
											"end": 10150,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10132,
											"end": 10150,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10132,
											"end": 10150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10125,
											"end": 10187,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10204,
											"end": 10222,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10204,
											"end": 10222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11693,
											"end": 11801,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 11693,
											"end": 11801,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11750,
											"end": 11760,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11750,
											"end": 11760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11771,
											"end": 11792,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "PUSH",
											"source": 4,
											"value": "8FC"
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11771,
											"end": 11792,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11750,
											"end": 11760,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11693,
											"end": 11801,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2212,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 2203,
											"end": 2225,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2203,
											"end": 2225,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2225,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2187,
											"end": 2225,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2179,
											"end": 2248,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2248,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2248,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2179,
											"end": 2248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2248,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9727,
											"end": 9729,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2248,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2179,
											"end": 2248,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2248,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9709,
											"end": 9730,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9766,
											"end": 9768,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9739,
											"end": 9769,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C90383932B9B0B6329037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9778,
											"end": 9826,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9843,
											"end": 9861,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9843,
											"end": 9861,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2179,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 9699,
											"end": 9867,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2179,
											"end": 2248,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2179,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8963,
											"end": 8982,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 8963,
											"end": 8982,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9002,
											"end": 9006,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8963,
											"end": 8982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8963,
											"end": 8982,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8963,
											"end": 8982,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8963,
											"end": 8982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 8993,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 8957,
											"end": 8993,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3330,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3312,
											"end": 3330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8957,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9145,
											"end": 9181,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 9145,
											"end": 9181,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9145,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9059,
											"end": 9091,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8925,
											"end": 9008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8925,
											"end": 9008,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9020,
											"end": 9055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9020,
											"end": 9055,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9059,
											"end": 9231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 9059,
											"end": 9231,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9059,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 9059,
											"end": 9231,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9059,
											"end": 9231,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 9059,
											"end": 9231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9246,
											"end": 9259,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9246,
											"end": 9278,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9020,
											"end": 9232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9020,
											"end": 9232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9246,
											"end": 9283,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9243,
											"end": 9526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 9243,
											"end": 9526,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9458,
											"end": 9494,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 9458,
											"end": 9494,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9387,
											"end": 9415,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 9387,
											"end": 9415,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 9323,
											"end": 9496,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9387,
											"end": 9495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 9387,
											"end": 9495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9387,
											"end": 9415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9387,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 9387,
											"end": 9495,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9387,
											"end": 9495,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 9387,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9344,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9323,
											"end": 9386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 9323,
											"end": 9496,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9323,
											"end": 9496,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 9323,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9299,
											"end": 9496,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9299,
											"end": 9496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9243,
											"end": 9526,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 9243,
											"end": 9526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9545,
											"end": 9580,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 9545,
											"end": 9580,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9545,
											"end": 9580,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 9545,
											"end": 9580,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9544,
											"end": 9580,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9536,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 9536,
											"end": 9614,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9536,
											"end": 9614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9536,
											"end": 9614,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9536,
											"end": 9614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9536,
											"end": 9614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11185,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9536,
											"end": 9614,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9536,
											"end": 9614,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9536,
											"end": 9614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11165,
											"end": 11186,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11222,
											"end": 11224,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 11202,
											"end": 11220,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11202,
											"end": 11220,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11202,
											"end": 11220,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11195,
											"end": 11225,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11261,
											"end": 11292,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F7468696E6720666F72206F776E657220636C61696D20746F6B656E000000"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11234,
											"end": 11293,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11310,
											"end": 11328,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11310,
											"end": 11328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9536,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 11155,
											"end": 11334,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9536,
											"end": 9614,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 9536,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9634,
											"end": 9670,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 9634,
											"end": 9670,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9634,
											"end": 9670,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9634,
											"end": 9670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9634,
											"end": 9670,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 9634,
											"end": 9670,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 9634,
											"end": 9670,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9633,
											"end": 9670,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7526,
											"end": 7528,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7508,
											"end": 7529,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7565,
											"end": 7567,
											"name": "PUSH",
											"source": 12,
											"value": "1E"
										},
										{
											"begin": 7545,
											"end": 7563,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7545,
											"end": 7563,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7545,
											"end": 7563,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7538,
											"end": 7568,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7604,
											"end": 7636,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F7468696E6720666F72206F776E657220726566756E6420746F6B656E0000"
										},
										{
											"begin": 7584,
											"end": 7602,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7584,
											"end": 7602,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7584,
											"end": 7602,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7577,
											"end": 7637,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7498,
											"end": 7678,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9716,
											"end": 9751,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 9716,
											"end": 9758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9716,
											"end": 9758,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9716,
											"end": 9758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9754,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9716,
											"end": 9758,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9716,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9716,
											"end": 9758,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9769,
											"end": 9797,
											"name": "PUSH",
											"source": 4,
											"value": "1A"
										},
										{
											"begin": 9769,
											"end": 9801,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9818,
											"end": 9837,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 9818,
											"end": 9837,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9769,
											"end": 9778,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9848,
											"end": 9870,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9716,
											"end": 9729,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4727,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9818,
											"end": 9837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9818,
											"end": 9837,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9818,
											"end": 9837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9847,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 9812,
											"end": 9847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4649,
											"end": 4667,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4649,
											"end": 4667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 9812,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9913,
											"end": 9922,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 9913,
											"end": 9935,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9913,
											"end": 9935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9913,
											"end": 9935,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9913,
											"end": 9935,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9913,
											"end": 9935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "PUSH",
											"source": 4,
											"value": "8FC"
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9946,
											"end": 9973,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9946,
											"end": 9973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9913,
											"end": 9935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9913,
											"end": 9935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9946,
											"end": 9973,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9913,
											"end": 9935,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 9905,
											"end": 9974,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8780,
											"end": 9982,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 7761,
											"end": 8772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7920,
											"end": 7951,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 7920,
											"end": 7951,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7920,
											"end": 7933,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7885,
											"end": 7917,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7885,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 7885,
											"end": 7951,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7920,
											"end": 7951,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7885,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 7885,
											"end": 7951,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7885,
											"end": 7951,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 7885,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7885,
											"end": 7955,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7877,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 7877,
											"end": 8014,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7877,
											"end": 8014,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7877,
											"end": 8014,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7877,
											"end": 8014,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7877,
											"end": 8014,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7877,
											"end": 8014,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7877,
											"end": 8014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7877,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7877,
											"end": 8014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7877,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7877,
											"end": 8014,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7877,
											"end": 8014,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 7877,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8072,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8026,
											"end": 8049,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8052,
											"end": 8073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8061,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8052,
											"end": 8073,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8052,
											"end": 8073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8052,
											"end": 8073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8073,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8109,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8109,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8084,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 8084,
											"end": 8141,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8084,
											"end": 8141,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8084,
											"end": 8141,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8084,
											"end": 8141,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8084,
											"end": 8141,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6056,
											"end": 6058,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8084,
											"end": 8141,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8084,
											"end": 8141,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8084,
											"end": 8141,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6059,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6095,
											"end": 6097,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "165BDD481A185D99481B9BDD08189BDD59DA1D081E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8084,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6028,
											"end": 6201,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8084,
											"end": 8141,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 8084,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8180,
											"end": 8203,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8180,
											"end": 8203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8180,
											"end": 8203,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8180,
											"end": 8203,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8160,
											"end": 8177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8160,
											"end": 8177,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8160,
											"end": 8203,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8152,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 8152,
											"end": 8222,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8152,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8152,
											"end": 8222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8152,
											"end": 8222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8152,
											"end": 8222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10435,
											"end": 10437,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8152,
											"end": 8222,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8152,
											"end": 8222,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8152,
											"end": 8222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10417,
											"end": 10438,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10474,
											"end": 10476,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 10454,
											"end": 10472,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10454,
											"end": 10472,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10454,
											"end": 10472,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10447,
											"end": 10477,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "165BDD481C99599D5B9908185B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10493,
											"end": 10511,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10493,
											"end": 10511,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10493,
											"end": 10511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10486,
											"end": 10530,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10547,
											"end": 10565,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10547,
											"end": 10565,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8152,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 10407,
											"end": 10571,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8152,
											"end": 8222,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 8152,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8352,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8276,
											"end": 8295,
											"name": "PUSH",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 8276,
											"end": 8295,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8233,
											"end": 8253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8256,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 8256,
											"end": 8406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8400,
											"end": 8404,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 8400,
											"end": 8404,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8257,
											"end": 8353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8258,
											"end": 8296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8400,
											"end": 8404,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8400,
											"end": 8404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 8258,
											"end": 8296,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8258,
											"end": 8296,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8258,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8334,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8257,
											"end": 8353,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8257,
											"end": 8353,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8257,
											"end": 8353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8256,
											"end": 8391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8256,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 8256,
											"end": 8406,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8256,
											"end": 8406,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 8256,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8429,
											"end": 8446,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8429,
											"end": 8446,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8233,
											"end": 8406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8233,
											"end": 8406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8429,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 8429,
											"end": 8461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8233,
											"end": 8406,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8233,
											"end": 8406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8429,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8429,
											"end": 8461,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8429,
											"end": 8461,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 8429,
											"end": 8461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8417,
											"end": 8425,
											"name": "PUSH",
											"source": 4,
											"value": "1E"
										},
										{
											"begin": 8417,
											"end": 8425,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8417,
											"end": 8461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8417,
											"end": 8461,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8417,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 8417,
											"end": 8461,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8417,
											"end": 8461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8417,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8417,
											"end": 8461,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8417,
											"end": 8461,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 8417,
											"end": 8461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8417,
											"end": 8461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8417,
											"end": 8461,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8417,
											"end": 8461,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8472,
											"end": 8503,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8507,
											"end": 8519,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8507,
											"end": 8519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8503,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8503,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8472,
											"end": 8503,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8507,
											"end": 8519,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8507,
											"end": 8519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8557,
											"end": 8569,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8530,
											"end": 8535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8530,
											"end": 8553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8530,
											"end": 8569,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8601,
											"end": 8616,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8686,
											"end": 8710,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8686,
											"end": 8710,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8686,
											"end": 8710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8686,
											"end": 8710,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8667,
											"end": 8683,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8667,
											"end": 8683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8667,
											"end": 8683,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8667,
											"end": 8683,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8667,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8667,
											"end": 8710,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8686,
											"end": 8710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8667,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8667,
											"end": 8710,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8667,
											"end": 8710,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8667,
											"end": 8710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8627,
											"end": 8663,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 8627,
											"end": 8710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8627,
											"end": 8710,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8627,
											"end": 8663,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8627,
											"end": 8663,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8627,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8627,
											"end": 8710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8627,
											"end": 8710,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8627,
											"end": 8710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8627,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8627,
											"end": 8710,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8627,
											"end": 8710,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8627,
											"end": 8710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8627,
											"end": 8710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8627,
											"end": 8710,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8627,
											"end": 8710,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8730,
											"end": 8740,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8730,
											"end": 8740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "PUSH",
											"source": 4,
											"value": "8FC"
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8751,
											"end": 8763,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8751,
											"end": 8763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8751,
											"end": 8763,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8730,
											"end": 8740,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8722,
											"end": 8764,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 2926,
											"end": 2964,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2964,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2926,
											"end": 2964,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2964,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2964,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2926,
											"end": 2964,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2964,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2964,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2964,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2964,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2964,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 2994,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2975,
											"end": 3007,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3007,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3007,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3007,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3007,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3007,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3007,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3007,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3007,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3007,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3007,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3007,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3007,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3037,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3143,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 3108,
											"end": 3143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3007,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3108,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 3095,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3097,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 3095,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 3095,
											"end": 3146,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3095,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 3095,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3084,
											"end": 3092,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3084,
											"end": 3092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3084,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 3084,
											"end": 3146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3084,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3084,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 3084,
											"end": 3146,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3084,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 3084,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3061,
											"end": 3146,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3179,
											"end": 3187,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3179,
											"end": 3187,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3179,
											"end": 3187,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3179,
											"end": 3187,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3179,
											"end": 3187,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3157,
											"end": 3176,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 3157,
											"end": 3187,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3218,
											"end": 3226,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3218,
											"end": 3226,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3218,
											"end": 3226,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3218,
											"end": 3226,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3218,
											"end": 3226,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3198,
											"end": 3215,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3198,
											"end": 3226,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3274,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3266,
											"end": 3274,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3274,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3274,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3237,
											"end": 3274,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3345,
											"end": 3364,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3345,
											"end": 3364,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3345,
											"end": 3364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3345,
											"end": 3364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3345,
											"end": 3364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3345,
											"end": 3364,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3374,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 3339,
											"end": 3374,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3345,
											"end": 3364,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3339,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3325,
											"end": 3377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 3325,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 3325,
											"end": 3377,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3325,
											"end": 3377,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3325,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3314,
											"end": 3322,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 3314,
											"end": 3377,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 3314,
											"end": 3377,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3314,
											"end": 3377,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 3314,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3285,
											"end": 3377,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3418,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 3410,
											"end": 3418,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3418,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3418,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "PUSH",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3388,
											"end": 3418,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3450,
											"end": 3458,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 3450,
											"end": 3458,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3450,
											"end": 3458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3450,
											"end": 3458,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "PUSH",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3429,
											"end": 3458,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3545,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3526,
											"end": 3545,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3526,
											"end": 3545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3545,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3545,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3545,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3555,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 3520,
											"end": 3555,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3418,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3418,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3545,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3520,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3506,
											"end": 3558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3508,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 3506,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 3506,
											"end": 3558,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3506,
											"end": 3558,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3506,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3503,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3495,
											"end": 3503,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3503,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3495,
											"end": 3558,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 3495,
											"end": 3558,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3495,
											"end": 3558,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 3495,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3469,
											"end": 3484,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 3469,
											"end": 3558,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3644,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3625,
											"end": 3644,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3625,
											"end": 3644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3644,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3644,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3644,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3619,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3606,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3606,
											"end": 3657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3606,
											"end": 3608,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 3606,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 3606,
											"end": 3657,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3606,
											"end": 3657,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3606,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3603,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3595,
											"end": 3603,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3603,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3603,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3595,
											"end": 3657,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 3595,
											"end": 3657,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3595,
											"end": 3657,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3595,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 3569,
											"end": 3657,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 3740,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3721,
											"end": 3740,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3708,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 3704,
											"end": 3708,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3693,
											"name": "PUSH",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3668,
											"end": 3741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3741,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3668,
											"end": 3741,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3704,
											"end": 3708,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3708,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3708,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 3740,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 3740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 3740,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 3740,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3741,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3741,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3741,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3741,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3741,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3741,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3741,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3923,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 3888,
											"end": 3923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 3740,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 3888,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3875,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 3875,
											"end": 3926,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3875,
											"end": 3877,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 3875,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 3875,
											"end": 3926,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3875,
											"end": 3926,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 3875,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3808,
											"end": 3823,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3783,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 3783,
											"end": 3832,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3783,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3783,
											"end": 3832,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3783,
											"end": 3832,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 3783,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3783,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 3783,
											"end": 3927,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3783,
											"end": 3927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3783,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 3783,
											"end": 3927,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3783,
											"end": 3927,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 3783,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3780,
											"name": "PUSH",
											"source": 4,
											"value": "1A"
										},
										{
											"begin": 3752,
											"end": 3927,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3947,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3938,
											"end": 3960,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3960,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3960,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3971,
											"end": 4005,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 4016,
											"end": 4046,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2640,
											"end": 4056,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6749,
											"end": 7753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6904,
											"end": 6936,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6904,
											"end": 6936,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6873,
											"end": 6901,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6873,
											"end": 6901,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6873,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 6873,
											"end": 6936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6904,
											"end": 6936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6873,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6873,
											"end": 6936,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6873,
											"end": 6936,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 6873,
											"end": 6936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6873,
											"end": 6940,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6865,
											"end": 6999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6865,
											"end": 6999,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6865,
											"end": 6999,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6865,
											"end": 6999,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6865,
											"end": 6999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6865,
											"end": 6999,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6865,
											"end": 6999,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6865,
											"end": 6999,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6865,
											"end": 6999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6865,
											"end": 6999,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6865,
											"end": 6999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6865,
											"end": 6999,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6865,
											"end": 6999,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 6865,
											"end": 6999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7056,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7010,
											"end": 7033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7036,
											"end": 7057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7036,
											"end": 7057,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7036,
											"end": 7045,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7036,
											"end": 7057,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7036,
											"end": 7057,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7036,
											"end": 7057,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7036,
											"end": 7057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7036,
											"end": 7057,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7076,
											"end": 7092,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7076,
											"end": 7092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7076,
											"end": 7092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7076,
											"end": 7092,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7068,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 7068,
											"end": 7124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7068,
											"end": 7124,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7068,
											"end": 7124,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7068,
											"end": 7124,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7068,
											"end": 7124,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6056,
											"end": 6058,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7124,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7068,
											"end": 7124,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7068,
											"end": 7124,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6059,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6095,
											"end": 6097,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6075,
											"end": 6093,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "165BDD481A185D99481B9BDD08189BDD59DA1D081E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6114,
											"end": 6132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6107,
											"end": 6160,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7068,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6028,
											"end": 6201,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7068,
											"end": 7124,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 7068,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7162,
											"end": 7167,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7162,
											"end": 7186,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7162,
											"end": 7186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7162,
											"end": 7186,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7143,
											"end": 7148,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7143,
											"end": 7159,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7143,
											"end": 7159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7143,
											"end": 7159,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7143,
											"end": 7186,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7135,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 7135,
											"end": 7205,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7135,
											"end": 7205,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7135,
											"end": 7205,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7135,
											"end": 7205,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7135,
											"end": 7205,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7885,
											"end": 7887,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7135,
											"end": 7205,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7135,
											"end": 7205,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7135,
											"end": 7205,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7867,
											"end": 7888,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7924,
											"end": 7926,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7897,
											"end": 7927,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "165BDD4818DB185A5B48185B1B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7943,
											"end": 7961,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7943,
											"end": 7961,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7943,
											"end": 7961,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7936,
											"end": 7980,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7997,
											"end": 8015,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7997,
											"end": 8015,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7857,
											"end": 8021,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7205,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 7135,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7216,
											"end": 7235,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7238,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 7368,
											"end": 7372,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 7239,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7310,
											"end": 7315,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7310,
											"end": 7326,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7310,
											"end": 7326,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7310,
											"end": 7326,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7240,
											"end": 7277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 7258,
											"end": 7267,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7258,
											"end": 7276,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7252,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 7240,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 7240,
											"end": 7257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7240,
											"end": 7277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7240,
											"end": 7277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7240,
											"end": 7277,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7240,
											"end": 7277,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7240,
											"end": 7277,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7238,
											"end": 7374,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 7238,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7216,
											"end": 7374,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7216,
											"end": 7374,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7421,
											"end": 7432,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7385,
											"end": 7398,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7385,
											"end": 7417,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7385,
											"end": 7417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7385,
											"end": 7417,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7385,
											"end": 7432,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7385,
											"end": 7432,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7385,
											"end": 7432,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7385,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 7385,
											"end": 7432,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7385,
											"end": 7432,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7385,
											"end": 7432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 7385,
											"end": 7432,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7385,
											"end": 7432,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 7385,
											"end": 7432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7385,
											"end": 7432,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7385,
											"end": 7432,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7385,
											"end": 7432,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7443,
											"end": 7471,
											"name": "PUSH",
											"source": 4,
											"value": "1A"
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7475,
											"end": 7486,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7475,
											"end": 7486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7443,
											"end": 7471,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7443,
											"end": 7471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7443,
											"end": 7471,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7475,
											"end": 7486,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7475,
											"end": 7486,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7443,
											"end": 7486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7536,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7497,
											"end": 7502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7497,
											"end": 7521,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7497,
											"end": 7521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7497,
											"end": 7521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7497,
											"end": 7536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7497,
											"end": 7536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7497,
											"end": 7536,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7497,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 7497,
											"end": 7536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7497,
											"end": 7536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7497,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 7497,
											"end": 7536,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7497,
											"end": 7536,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 7497,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7497,
											"end": 7536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7497,
											"end": 7536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7497,
											"end": 7536,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7568,
											"end": 7583,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 7547,
											"end": 7565,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7547,
											"end": 7565,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7547,
											"end": 7565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7547,
											"end": 7583,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7633,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 7633,
											"end": 7674,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7633,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 7633,
											"end": 7674,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7633,
											"end": 7674,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 7633,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7629,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 7594,
											"end": 7674,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7674,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7629,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7594,
											"end": 7629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 7594,
											"end": 7674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7674,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 7594,
											"end": 7674,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7594,
											"end": 7674,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 7594,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7674,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7674,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7691,
											"end": 7710,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 7691,
											"end": 7710,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7731,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4727,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7691,
											"end": 7710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7691,
											"end": 7710,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7691,
											"end": 7710,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7691,
											"end": 7710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 7685,
											"end": 7720,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4649,
											"end": 4667,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4649,
											"end": 4667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7685,
											"end": 7745,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4700,
											"end": 4710,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 4749,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 4749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 4749,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 4749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4855,
											"end": 4859,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 4878,
											"end": 4887,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4905,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 4878,
											"end": 4905,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 4870,
											"end": 4936,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4936,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4870,
											"end": 4936,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4870,
											"end": 4936,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4936,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6408,
											"end": 6410,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4870,
											"end": 4936,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4870,
											"end": 4936,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6390,
											"end": 6411,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6447,
											"end": 6449,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 6427,
											"end": 6445,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6427,
											"end": 6445,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6427,
											"end": 6445,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6420,
											"end": 6450,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6486,
											"end": 6514,
											"name": "PUSH",
											"source": 12,
											"value": "506C656173652070726F76696465206E617669746520636F696E000000000000"
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6515,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6550,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6532,
											"end": 6550,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4870,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6380,
											"end": 6556,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4870,
											"end": 4936,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 4870,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 4999,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 4973,
											"end": 4999,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4955,
											"end": 4999,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4955,
											"end": 4999,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4955,
											"end": 4999,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4947,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 4947,
											"end": 5048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4947,
											"end": 5048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4947,
											"end": 5048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4947,
											"end": 5048,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4947,
											"end": 5048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9382,
											"end": 9384,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4947,
											"end": 5048,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4947,
											"end": 5048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4947,
											"end": 5048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9364,
											"end": 9385,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9421,
											"end": 9423,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 9401,
											"end": 9419,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9401,
											"end": 9419,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9401,
											"end": 9419,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9394,
											"end": 9424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656E6F7567682076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9440,
											"end": 9458,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9440,
											"end": 9458,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9440,
											"end": 9458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9433,
											"end": 9479,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9496,
											"end": 9514,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9496,
											"end": 9514,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4947,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 9354,
											"end": 9520,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4947,
											"end": 5048,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 4947,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5085,
											"end": 5111,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 5085,
											"end": 5111,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5111,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5111,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5067,
											"end": 5111,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5059,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 5059,
											"end": 5158,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5059,
											"end": 5158,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5059,
											"end": 5158,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5059,
											"end": 5158,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5059,
											"end": 5158,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8634,
											"end": 8636,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5158,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5059,
											"end": 5158,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5059,
											"end": 5158,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8637,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8673,
											"end": 8675,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F766572666C6F772076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8685,
											"end": 8729,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8746,
											"end": 8764,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8746,
											"end": 8764,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5059,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 8606,
											"end": 8770,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5059,
											"end": 5158,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 5059,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5173,
											"end": 5192,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5173,
											"end": 5192,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 5173,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5169,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 5169,
											"end": 5435,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5226,
											"end": 5359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 5345,
											"end": 5358,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5293,
											"end": 5307,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 5246,
											"end": 5255,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5246,
											"end": 5255,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5241,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5256,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5256,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5228,
											"end": 5256,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5228,
											"end": 5256,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5226,
											"end": 5359,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 5226,
											"end": 5359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5209,
											"end": 5359,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5380,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 5209,
											"end": 5359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5389,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 5380,
											"end": 5406,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5380,
											"end": 5406,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 5380,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5169,
											"end": 5435,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 5169,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5500,
											"end": 5517,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5500,
											"end": 5517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5497,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 5471,
											"end": 5497,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5445,
											"end": 5468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 5471,
											"end": 5517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 5471,
											"end": 5517,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5471,
											"end": 5517,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 5471,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5598,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5585,
											"end": 5617,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5554,
											"end": 5582,
											"name": "PUSH",
											"source": 4,
											"value": "1A"
										},
										{
											"begin": 5554,
											"end": 5582,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5445,
											"end": 5517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5528,
											"end": 5551,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5528,
											"end": 5551,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5554,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 5554,
											"end": 5617,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5617,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5554,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 5554,
											"end": 5617,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5554,
											"end": 5617,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 5554,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5617,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5617,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5645,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5681,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5648,
											"end": 5663,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5648,
											"end": 5681,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5648,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 5648,
											"end": 5717,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5702,
											"end": 5717,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5648,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 5648,
											"end": 5717,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5648,
											"end": 5717,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 5648,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5684,
											"end": 5699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5648,
											"end": 5717,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 5648,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5628,
											"end": 5717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5736,
											"end": 5750,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5736,
											"end": 5763,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5736,
											"end": 5763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 5728,
											"end": 5783,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5783,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5728,
											"end": 5783,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5728,
											"end": 5783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5783,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11901,
											"end": 11903,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5728,
											"end": 5783,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5728,
											"end": 5783,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5783,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11883,
											"end": 11904,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11940,
											"end": 11942,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11920,
											"end": 11938,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11913,
											"end": 11943,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53616C652069732073756363657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11952,
											"end": 11997,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12014,
											"end": 12032,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12014,
											"end": 12032,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5728,
											"end": 5783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 11873,
											"end": 12038,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5728,
											"end": 5783,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 5728,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5794,
											"end": 5811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5815,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 5940,
											"end": 5949,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5940,
											"end": 5959,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5934,
											"end": 5969,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5969,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 5934,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5920,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 5920,
											"end": 5972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5920,
											"end": 5922,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 5920,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 5920,
											"end": 5972,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5920,
											"end": 5972,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 5920,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5864,
											"end": 5884,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 5864,
											"end": 5884,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5815,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5815,
											"end": 5885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5815,
											"end": 5829,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5815,
											"end": 5829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5815,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 5815,
											"end": 5885,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5815,
											"end": 5973,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 5815,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5794,
											"end": 5974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5794,
											"end": 5974,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6023,
											"end": 6037,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6007,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6002,
											"end": 6037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6053,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6064,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6048,
											"end": 6064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6077,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6088,
											"end": 6101,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6088,
											"end": 6138,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6138,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6138,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6138,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6088,
											"end": 6120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 6088,
											"end": 6138,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6138,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6138,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6088,
											"end": 6138,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6088,
											"end": 6138,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 6088,
											"end": 6138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6138,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6138,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6138,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6149,
											"end": 6177,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6149,
											"end": 6190,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6149,
											"end": 6190,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6190,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6190,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6149,
											"end": 6177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6149,
											"end": 6177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6149,
											"end": 6177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6149,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 6149,
											"end": 6190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6190,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6181,
											"end": 6190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6149,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6149,
											"end": 6190,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6149,
											"end": 6190,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 6149,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6149,
											"end": 6190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6149,
											"end": 6190,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6149,
											"end": 6190,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6201,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 6201,
											"end": 6228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6201,
											"end": 6228,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6201,
											"end": 6228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6201,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 6201,
											"end": 6228,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6201,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 6201,
											"end": 6228,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6201,
											"end": 6228,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 6201,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6201,
											"end": 6228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6201,
											"end": 6228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6201,
											"end": 6228,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6247,
											"end": 6257,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6258,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6239,
											"end": 6258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6258,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6246,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6239,
											"end": 6258,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6239,
											"end": 6258,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6258,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6239,
											"end": 6258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6258,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6262,
											"end": 6265,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6262,
											"end": 6265,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6262,
											"end": 6265,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6262,
											"end": 6265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6291,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6284,
											"name": "PUSH",
											"source": 4,
											"value": "1E"
										},
										{
											"begin": 6276,
											"end": 6284,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6291,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6291,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6291,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 6276,
											"end": 6291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6276,
											"end": 6291,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6276,
											"end": 6291,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 6276,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6291,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6332,
											"name": "PUSH",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 6307,
											"end": 6332,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6332,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6307,
											"end": 6332,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6369,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 6307,
											"end": 6369,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6369,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 6353,
											"end": 6356,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6350,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 6336,
											"end": 6356,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6369,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6369,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6369,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 6307,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6304,
											"end": 6460,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6304,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 6304,
											"end": 6460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 6404,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "PUSH",
											"source": 4,
											"value": "8FC"
										},
										{
											"begin": 6444,
											"end": 6447,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6415,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 6427,
											"end": 6441,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6415,
											"end": 6424,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 6415,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6415,
											"end": 6441,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6415,
											"end": 6441,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 6415,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6415,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 6415,
											"end": 6447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6415,
											"end": 6447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6415,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6415,
											"end": 6447,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6415,
											"end": 6447,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 6415,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6304,
											"end": 6460,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 6304,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6500,
											"name": "PUSH",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 6475,
											"end": 6500,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6500,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6475,
											"end": 6500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6471,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 6471,
											"end": 6722,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 6594,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 6594,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 6517,
											"end": 6710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6575,
											"end": 6594,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6614,
											"end": 6624,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6651,
											"end": 6655,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 6675,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 6692,
											"end": 6695,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6675,
											"end": 6689,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 6675,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6675,
											"end": 6695,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6675,
											"end": 6695,
											"name": "tag",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 6675,
											"end": 6695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 6517,
											"end": 6710,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6517,
											"end": 6710,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 6517,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4529,
											"end": 6741,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4464,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4484,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 4484,
											"end": 4490,
											"name": "PUSH",
											"source": 4,
											"value": "1C"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 4484,
											"end": 4513,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4484,
											"end": 4513,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 4484,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4477,
											"end": 4513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4477,
											"end": 4513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4521,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10130,
											"end": 10137,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 11556,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 10127,
											"end": 11556,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10192,
											"end": 10224,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 10192,
											"end": 10224,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10161,
											"end": 10189,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 10161,
											"end": 10189,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10227,
											"end": 10228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10227,
											"end": 10228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10161,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 10161,
											"end": 10224,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10161,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 10161,
											"end": 10224,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10161,
											"end": 10224,
											"name": "tag",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 10161,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10161,
											"end": 10228,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 10153,
											"end": 10292,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10292,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10153,
											"end": 10292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10153,
											"end": 10292,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10292,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10153,
											"end": 10292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 10153,
											"end": 10292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 10153,
											"end": 10292,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10153,
											"end": 10292,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 10153,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10343,
											"end": 10353,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10307,
											"end": 10330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10333,
											"end": 10354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10342,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10333,
											"end": 10354,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10333,
											"end": 10354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10354,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10354,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10420,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10396,
											"end": 10420,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10420,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10420,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10377,
											"end": 10393,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10377,
											"end": 10393,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10377,
											"end": 10393,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10377,
											"end": 10393,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10377,
											"end": 10420,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10369,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 10369,
											"end": 10461,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10369,
											"end": 10461,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10369,
											"end": 10461,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10369,
											"end": 10461,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10369,
											"end": 10461,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8977,
											"end": 8979,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10369,
											"end": 10461,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10369,
											"end": 10461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10369,
											"end": 10461,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8959,
											"end": 8980,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9018,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8996,
											"end": 9014,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9014,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9014,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8989,
											"end": 9019,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9089,
											"name": "PUSH",
											"source": 12,
											"value": "596F7520636C61696D20616C6C206F722068617665206E6F7420626F75676874"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9028,
											"end": 9090,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9106,
											"end": 9124,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9106,
											"end": 9124,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9106,
											"end": 9124,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9099,
											"end": 9133,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9150,
											"end": 9169,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9150,
											"end": 9169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10369,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 8949,
											"end": 9175,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10369,
											"end": 10461,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 10369,
											"end": 10461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10482,
											"end": 10501,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 10482,
											"end": 10501,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10482,
											"end": 10501,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10524,
											"end": 10540,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10524,
											"end": 10540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10524,
											"end": 10540,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10512,
											"end": 10522,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4727,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4761,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4736,
											"end": 4770,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10482,
											"end": 10501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10482,
											"end": 10501,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10482,
											"end": 10501,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10482,
											"end": 10501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10511,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 10476,
											"end": 10511,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4649,
											"end": 4667,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4649,
											"end": 4667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "tag",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "tag",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "tag",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 10476,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10592,
											"end": 10608,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10592,
											"end": 10608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10592,
											"end": 10608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10592,
											"end": 10608,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10588,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 10556,
											"end": 10608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10608,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10588,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 10556,
											"end": 10608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10592,
											"end": 10608,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10592,
											"end": 10608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 10556,
											"end": 10608,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10556,
											"end": 10608,
											"name": "tag",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 10556,
											"end": 10608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10608,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10655,
											"end": 10671,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10655,
											"end": 10671,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 10671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 10671,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10623,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "1A"
										},
										{
											"begin": 10623,
											"end": 10671,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10623,
											"end": 10671,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10623,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10623,
											"end": 10651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10623,
											"end": 10671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 10623,
											"end": 10671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 10671,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 10671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10623,
											"end": 10671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 10623,
											"end": 10671,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10623,
											"end": 10671,
											"name": "tag",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 10623,
											"end": 10671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10623,
											"end": 10671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10623,
											"end": 10671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10623,
											"end": 10671,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10714,
											"end": 10730,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10714,
											"end": 10730,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10714,
											"end": 10730,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10714,
											"end": 10730,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10686,
											"end": 10710,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10686,
											"end": 10710,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10686,
											"end": 10710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10686,
											"end": 10730,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10686,
											"end": 10730,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10686,
											"end": 10710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10686,
											"end": 10710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10686,
											"end": 10730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 10686,
											"end": 10730,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10714,
											"end": 10730,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10714,
											"end": 10730,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10686,
											"end": 10730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 10686,
											"end": 10730,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10686,
											"end": 10730,
											"name": "tag",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 10686,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10686,
											"end": 10730,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10686,
											"end": 10730,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10686,
											"end": 10730,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10765,
											"end": 10766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10745,
											"end": 10766,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10766,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10766,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10781,
											"end": 10797,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10781,
											"end": 10797,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10781,
											"end": 10797,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10781,
											"end": 10801,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10837,
											"end": 10852,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 10816,
											"end": 10834,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10816,
											"end": 10834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10816,
											"end": 10834,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10816,
											"end": 10834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10816,
											"end": 10852,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11693,
											"end": 11801,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10127,
											"end": 11556,
											"name": "tag",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 10127,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10940,
											"end": 10971,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 10940,
											"end": 10971,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10940,
											"end": 10953,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10905,
											"end": 10937,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 10975,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10974,
											"end": 10975,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10905,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 10905,
											"end": 10971,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10905,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 10905,
											"end": 10971,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10905,
											"end": 10971,
											"name": "tag",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 10905,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10905,
											"end": 10975,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10897,
											"end": 11039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 10897,
											"end": 11039,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10897,
											"end": 11039,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10897,
											"end": 11039,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10897,
											"end": 11039,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10897,
											"end": 11039,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10897,
											"end": 11039,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10897,
											"end": 11039,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10897,
											"end": 11039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 10897,
											"end": 11039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10897,
											"end": 11039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 10897,
											"end": 11039,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10897,
											"end": 11039,
											"name": "tag",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 10897,
											"end": 11039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11091,
											"end": 11101,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11055,
											"end": 11078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11081,
											"end": 11102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11081,
											"end": 11102,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11081,
											"end": 11102,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11081,
											"end": 11090,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11081,
											"end": 11102,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11081,
											"end": 11102,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11081,
											"end": 11102,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11081,
											"end": 11102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11081,
											"end": 11102,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11125,
											"end": 11142,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11125,
											"end": 11142,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11117,
											"end": 11188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 11117,
											"end": 11188,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11117,
											"end": 11188,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11117,
											"end": 11188,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11117,
											"end": 11188,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11117,
											"end": 11188,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8228,
											"end": 8230,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11117,
											"end": 11188,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11117,
											"end": 11188,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11117,
											"end": 11188,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8231,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8267,
											"end": 8269,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8240,
											"end": 8270,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8306,
											"end": 8340,
											"name": "PUSH",
											"source": 12,
											"value": "596F7520726566756E6420616C6C206F722068617665206E6F7420626F756768"
										},
										{
											"begin": 8286,
											"end": 8304,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8286,
											"end": 8304,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8286,
											"end": 8304,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8341,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D081E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8350,
											"end": 8385,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 8421,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8402,
											"end": 8421,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11117,
											"end": 11188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 8200,
											"end": 8427,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11117,
											"end": 11188,
											"name": "tag",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 11117,
											"end": 11188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11226,
											"end": 11243,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11226,
											"end": 11243,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11270,
											"end": 11302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 11226,
											"end": 11243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11226,
											"end": 11243,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11270,
											"end": 11302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 11270,
											"end": 11302,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11270,
											"end": 11302,
											"name": "tag",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 11270,
											"end": 11302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11266,
											"name": "PUSH",
											"source": 4,
											"value": "1E"
										},
										{
											"begin": 11258,
											"end": 11266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11258,
											"end": 11302,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11302,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11302,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 11258,
											"end": 11302,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 11258,
											"end": 11302,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11258,
											"end": 11302,
											"name": "tag",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 11258,
											"end": 11302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11302,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11302,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11317,
											"end": 11348,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 11317,
											"end": 11364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11364,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11352,
											"end": 11364,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11352,
											"end": 11364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11348,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11317,
											"end": 11348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 11317,
											"end": 11364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11352,
											"end": 11364,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11352,
											"end": 11364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 11317,
											"end": 11364,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11317,
											"end": 11364,
											"name": "tag",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 11317,
											"end": 11364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11317,
											"end": 11364,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11400,
											"end": 11401,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11379,
											"end": 11401,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11379,
											"end": 11401,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11379,
											"end": 11401,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11416,
											"end": 11436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11416,
											"end": 11436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11416,
											"end": 11436,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11472,
											"end": 11487,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 11451,
											"end": 11469,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11451,
											"end": 11469,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11451,
											"end": 11469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11451,
											"end": 11487,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11510,
											"end": 11520,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 11510,
											"end": 11520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "PUSH",
											"source": 4,
											"value": "8FC"
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11543,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11543,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11400,
											"end": 11401,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11531,
											"end": 11543,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11510,
											"end": 11520,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "tag",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11502,
											"end": 11544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10882,
											"end": 11556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10882,
											"end": 11556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9990,
											"end": 11563,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10074,
											"end": 10076,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10093,
											"end": 10111,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10093,
											"end": 10111,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10093,
											"end": 10111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10086,
											"end": 10116,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10152,
											"end": 10186,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10132,
											"end": 10150,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10132,
											"end": 10150,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10132,
											"end": 10150,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10125,
											"end": 10187,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10204,
											"end": 10222,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10204,
											"end": 10222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 10046,
											"end": 10228,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7101,
											"end": 7122,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7158,
											"end": 7160,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 7138,
											"end": 7156,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7138,
											"end": 7156,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7138,
											"end": 7156,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7131,
											"end": 7161,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7197,
											"end": 7231,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7177,
											"end": 7195,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7177,
											"end": 7195,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7177,
											"end": 7195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7170,
											"end": 7232,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7266,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7248,
											"end": 7266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7248,
											"end": 7266,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7241,
											"end": 7277,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7294,
											"end": 7313,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7294,
											"end": 7313,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 7091,
											"end": 7319,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8329,
											"end": 8333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 8358,
											"end": 8361,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8378,
											"end": 8401,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8378,
											"end": 8401,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8353,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 8353,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8346,
											"end": 8403,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8346,
											"end": 8403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8259,
											"end": 8411,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 8,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3228,
											"end": 3326,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 3228,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3286,
											"end": 3293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 3317,
											"end": 3318,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3313,
											"end": 3314,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3313,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 3313,
											"end": 3318,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3585,
											"end": 3683,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 3585,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 3674,
											"end": 3675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3671,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3670,
											"end": 3675,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3984,
											"end": 4082,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 3984,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4042,
											"end": 4049,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4069,
											"end": 4070,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 4069,
											"end": 4074,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1073,
											"end": 1503,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 1073,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5054,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5039,
											"end": 5054,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5039,
											"end": 5054,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5021,
											"end": 5055,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5091,
											"end": 5106,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5091,
											"end": 5106,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5091,
											"end": 5106,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5064,
											"end": 5107,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5123,
											"end": 5141,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5123,
											"end": 5141,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5123,
											"end": 5141,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5123,
											"end": 5141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5116,
											"end": 5150,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5116,
											"end": 5150,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5116,
											"end": 5150,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4956,
											"end": 4974,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4956,
											"end": 4974,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4956,
											"end": 4974,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4956,
											"end": 4974,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1279,
											"end": 1330,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1254,
											"end": 1341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1374,
											"end": 1381,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1374,
											"end": 1431,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1374,
											"end": 1431,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1374,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 1374,
											"end": 1431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1386,
											"end": 1397,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1386,
											"end": 1397,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1386,
											"end": 1402,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1386,
											"end": 1402,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1386,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 1386,
											"end": 1430,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1386,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1417,
											"end": 1421,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 1406,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10778,
											"end": 10780,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10760,
											"end": 10781,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10817,
											"end": 10819,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10790,
											"end": 10820,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10856,
											"end": 10890,
											"name": "PUSH",
											"source": 12,
											"value": "5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641"
										},
										{
											"begin": 10836,
											"end": 10854,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10836,
											"end": 10854,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10836,
											"end": 10854,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10829,
											"end": 10891,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12531151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10900,
											"end": 10934,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10951,
											"end": 10970,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10951,
											"end": 10970,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 10750,
											"end": 10976,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1207,
											"end": 1503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1207,
											"end": 1503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1073,
											"end": 1503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1073,
											"end": 1503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1073,
											"end": 1503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1073,
											"end": 1503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1073,
											"end": 1503,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 8831,
											"end": 8998,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 8831,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8965,
											"end": 8988,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8965,
											"end": 8988,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8911,
											"end": 8915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4391,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4391,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8935,
											"end": 8990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 4270,
											"end": 4399,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2588,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 2174,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2241,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2308,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2320,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2498,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2498,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2470,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2477,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2498,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2513,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 2513,
											"end": 2524,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 2254,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 2557,
											"end": 2569,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 156,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 14,
											"end": 156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 90,
											"end": 110,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 90,
											"end": 110,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 119,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 90,
											"end": 110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 119,
											"end": 150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 119,
											"end": 150,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 119,
											"end": 150,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 119,
											"end": 150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 71,
											"end": 156,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 71,
											"end": 156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 71,
											"end": 156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 71,
											"end": 156,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 161,
											"end": 408,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 161,
											"end": 408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 220,
											"end": 226,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 275,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 261,
											"end": 270,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 252,
											"end": 259,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 248,
											"end": 271,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 244,
											"end": 276,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 241,
											"end": 243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 241,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 241,
											"end": 243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 289,
											"end": 290,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 287,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 279,
											"end": 291,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 241,
											"end": 243,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 241,
											"end": 243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 315,
											"end": 338,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 347,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 372,
											"end": 377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 347,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 347,
											"end": 378,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 347,
											"end": 378,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 347,
											"end": 378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 397,
											"end": 402,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 231,
											"end": 408,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 231,
											"end": 408,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 413,
											"end": 1887,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 413,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 591,
											"end": 597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 605,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 607,
											"end": 613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 621,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 623,
											"end": 629,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 637,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 639,
											"end": 645,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 695,
											"name": "PUSH",
											"source": 12,
											"value": "1E0"
										},
										{
											"begin": 680,
											"end": 689,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 671,
											"end": 678,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 667,
											"end": 690,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 663,
											"end": 696,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 660,
											"end": 662,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 660,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 660,
											"end": 662,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 709,
											"end": 710,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 707,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 699,
											"end": 711,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 660,
											"end": 662,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 660,
											"end": 662,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 748,
											"end": 757,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 735,
											"end": 758,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 767,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 792,
											"end": 797,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 767,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 767,
											"end": 798,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 767,
											"end": 798,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 767,
											"end": 798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 822,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 841,
											"end": 843,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 898,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 880,
											"end": 898,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 880,
											"end": 898,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 867,
											"end": 899,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 908,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 867,
											"end": 899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 908,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 908,
											"end": 941,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 941,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 908,
											"end": 941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 960,
											"end": 967,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1019,
											"end": 1021,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1022,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 1004,
											"end": 1022,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 991,
											"end": 1023,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 991,
											"end": 1023,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 1032,
											"end": 1065,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1032,
											"end": 1065,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 1032,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1084,
											"end": 1091,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 1114,
											"end": 1133,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1133,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1143,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1157,
											"end": 1158,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1154,
											"end": 1155,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1147,
											"end": 1159,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1192,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1193,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1232,
											"end": 1235,
											"name": "PUSH",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 1224,
											"end": 1230,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1220,
											"end": 1236,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1308,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1300,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1287,
											"end": 1309,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1266,
											"end": 1284,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1251,
											"end": 1285,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1248,
											"end": 1310,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1349,
											"end": 1351,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1364,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1384,
											"end": 1390,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1425,
											"end": 1427,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1428,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1462,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1447,
											"end": 1466,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1466,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1493,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1493,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1493,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1475,
											"end": 1477,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1475,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 1475,
											"end": 1477,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1496,
											"end": 1508,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1475,
											"end": 1477,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 1475,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1703,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 1538,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1546,
											"end": 1557,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1538,
											"end": 1703,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1538,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 1538,
											"end": 1703,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1628,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1628,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1599,
											"end": 1629,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1599,
											"end": 1629,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1661,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1661,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1661,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 1693,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 1693,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 1693,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 1693,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1572,
											"end": 1573,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1565,
											"end": 1574,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1538,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 1538,
											"end": 1703,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1538,
											"end": 1703,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 1538,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1722,
											"end": 1728,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1722,
											"end": 1728,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1747,
											"end": 1763,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1747,
											"end": 1763,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1747,
											"end": 1763,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1782,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 1782,
											"end": 1829,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 1827,
											"name": "PUSH",
											"source": 12,
											"value": "1A0"
										},
										{
											"begin": 1809,
											"end": 1828,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 1809,
											"end": 1828,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1782,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 1782,
											"end": 1829,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1782,
											"end": 1829,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 1782,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1829,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1829,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1879,
											"name": "PUSH",
											"source": 12,
											"value": "1C0"
										},
										{
											"begin": 1865,
											"end": 1874,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1861,
											"end": 1880,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1848,
											"end": 1881,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 1881,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 650,
											"end": 1887,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 650,
											"end": 1887,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 650,
											"end": 1887,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 650,
											"end": 1887,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 650,
											"end": 1887,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 650,
											"end": 1887,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 650,
											"end": 1887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 650,
											"end": 1887,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 650,
											"end": 1887,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 650,
											"end": 1887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 650,
											"end": 1887,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1892,
											"end": 2133,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 1892,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1948,
											"end": 1954,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2003,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 1998,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 1987,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1999,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1972,
											"end": 2004,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 1971,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 1969,
											"end": 1971,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2015,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 1971,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 1969,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2056,
											"end": 2065,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2043,
											"end": 2066,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2075,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 2097,
											"end": 2102,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2075,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 2075,
											"end": 2103,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2138,
											"end": 2383,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 2138,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2205,
											"end": 2211,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2255,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2233,
											"end": 2256,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2261,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2226,
											"end": 2228,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2226,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 2226,
											"end": 2228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2276,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2226,
											"end": 2228,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 2226,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2306,
											"end": 2315,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 2347,
											"end": 2352,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 2325,
											"end": 2353,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2388,
											"end": 2568,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 2388,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2447,
											"end": 2453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2502,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2488,
											"end": 2497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2479,
											"end": 2486,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2475,
											"end": 2498,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2471,
											"end": 2503,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2470,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 2468,
											"end": 2470,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2516,
											"end": 2517,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2514,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2518,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2470,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 2468,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2539,
											"end": 2562,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2568,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2458,
											"end": 2568,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2573,
											"end": 2757,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 2573,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2698,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2684,
											"end": 2693,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2675,
											"end": 2682,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2667,
											"end": 2699,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2710,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2735,
											"end": 2751,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2735,
											"end": 2751,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2757,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2654,
											"end": 2757,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2762,
											"end": 3188,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 2762,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 2894,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2935,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2936,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2954,
											"end": 2955,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 3093,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 2964,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2984,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2975,
											"end": 2976,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2972,
											"end": 2985,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3093,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 2964,
											"end": 3093,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3076,
											"end": 3080,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3074,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3074,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3060,
											"end": 3074,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3081,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3081,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3050,
											"end": 3082,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3037,
											"end": 3048,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3037,
											"end": 3048,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3037,
											"end": 3048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3030,
											"end": 3083,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2993,
											"end": 3005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 2964,
											"end": 3093,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3093,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 2964,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3111,
											"end": 3117,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3108,
											"end": 3109,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3105,
											"end": 3118,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3146,
											"end": 3147,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3143,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3132,
											"end": 3135,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3128,
											"end": 3144,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3121,
											"end": 3148,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3166,
											"end": 3182,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3182,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3182,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3182,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3182,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 3188,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2899,
											"end": 3188,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6561,
											"end": 6912,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 6561,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6763,
											"end": 6765,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6745,
											"end": 6766,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6802,
											"end": 6804,
											"name": "PUSH",
											"source": 12,
											"value": "1B"
										},
										{
											"begin": 6782,
											"end": 6800,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6782,
											"end": 6800,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6782,
											"end": 6800,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6775,
											"end": 6805,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6841,
											"end": 6870,
											"name": "PUSH",
											"source": 12,
											"value": "416C6C20746F6B656E20686173206265656E2077697468647261770000000000"
										},
										{
											"begin": 6836,
											"end": 6838,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6814,
											"end": 6871,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6903,
											"end": 6905,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6888,
											"end": 6906,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6888,
											"end": 6906,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6735,
											"end": 6912,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11339,
											"end": 11694,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 11339,
											"end": 11694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11541,
											"end": 11543,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11544,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11523,
											"end": 11544,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11523,
											"end": 11544,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11580,
											"end": 11582,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 11560,
											"end": 11578,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11578,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11560,
											"end": 11578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11553,
											"end": 11583,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11652,
											"name": "PUSH",
											"source": 12,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11614,
											"end": 11616,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11599,
											"end": 11617,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11599,
											"end": 11617,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11592,
											"end": 11653,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11685,
											"end": 11687,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 11670,
											"end": 11688,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11688,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11513,
											"end": 11694,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13722,
											"end": 13850,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 13722,
											"end": 13850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13762,
											"end": 13765,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13794,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13789,
											"end": 13795,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 13786,
											"end": 13787,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13783,
											"end": 13796,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13780,
											"end": 13782,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13780,
											"end": 13782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 13780,
											"end": 13782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13799,
											"end": 13817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 13799,
											"end": 13817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 13799,
											"end": 13817,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13799,
											"end": 13817,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 13799,
											"end": 13817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13835,
											"end": 13844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13835,
											"end": 13844,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13770,
											"end": 13850,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13855,
											"end": 14072,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 13855,
											"end": 14072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13895,
											"end": 13896,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13921,
											"end": 13922,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13911,
											"end": 13913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 13911,
											"end": 13913,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13965,
											"end": 13975,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 13960,
											"end": 13963,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 13956,
											"end": 13976,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 13953,
											"end": 13954,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13946,
											"end": 13977,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14000,
											"end": 14004,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 13997,
											"end": 13998,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13990,
											"end": 14005,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14028,
											"end": 14032,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14025,
											"end": 14026,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14018,
											"end": 14033,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13911,
											"end": 13913,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 13911,
											"end": 13913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14057,
											"end": 14066,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 14057,
											"end": 14066,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13901,
											"end": 14072,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14077,
											"end": 14499,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 14077,
											"end": 14499,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14166,
											"end": 14167,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 14209,
											"end": 14214,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14166,
											"end": 14167,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14493,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 14223,
											"end": 14493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14244,
											"end": 14251,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14234,
											"end": 14242,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14231,
											"end": 14252,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14493,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 14223,
											"end": 14493,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14303,
											"end": 14307,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14299,
											"end": 14300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14295,
											"end": 14301,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 14291,
											"end": 14308,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 14285,
											"end": 14289,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14282,
											"end": 14309,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14279,
											"end": 14281,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14279,
											"end": 14281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 14279,
											"end": 14281,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14312,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 14312,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 14312,
											"end": 14330,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14312,
											"end": 14330,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 14312,
											"end": 14330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14362,
											"end": 14369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14352,
											"end": 14360,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14348,
											"end": 14370,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14345,
											"end": 14347,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14345,
											"end": 14347,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 14345,
											"end": 14347,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14382,
											"end": 14398,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14382,
											"end": 14398,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14382,
											"end": 14398,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 14382,
											"end": 14398,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14345,
											"end": 14347,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 14345,
											"end": 14347,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14461,
											"end": 14483,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14461,
											"end": 14483,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14461,
											"end": 14483,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 14461,
											"end": 14483,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14421,
											"end": 14436,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14421,
											"end": 14436,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14421,
											"end": 14436,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 14421,
											"end": 14436,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 14223,
											"end": 14493,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14493,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 14223,
											"end": 14493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14227,
											"end": 14230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14141,
											"end": 14499,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14141,
											"end": 14499,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14141,
											"end": 14499,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14141,
											"end": 14499,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14141,
											"end": 14499,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14141,
											"end": 14499,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14504,
											"end": 14635,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 14504,
											"end": 14635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14564,
											"end": 14569,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14593,
											"end": 14629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 14620,
											"end": 14628,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14614,
											"end": 14618,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14689,
											"end": 14694,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14719,
											"end": 14727,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14709,
											"end": 14711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 14709,
											"end": 14711,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14760,
											"end": 14761,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 14774,
											"end": 14779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 14774,
											"end": 14779,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14709,
											"end": 14711,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 14709,
											"end": 14711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14808,
											"end": 14812,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14798,
											"end": 14800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 14798,
											"end": 14800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14845,
											"end": 14846,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14859,
											"end": 14864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 14859,
											"end": 14864,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14798,
											"end": 14800,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 14798,
											"end": 14800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14890,
											"end": 14894,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14908,
											"end": 14909,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 14903,
											"end": 14962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14903,
											"end": 14962,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14903,
											"end": 14962,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 14903,
											"end": 14962,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14976,
											"end": 14977,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 14971,
											"end": 15101,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14971,
											"end": 15101,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14971,
											"end": 15101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 14971,
											"end": 15101,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14883,
											"end": 15101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 14883,
											"end": 15101,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14903,
											"end": 14962,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 14903,
											"end": 14962,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14933,
											"end": 14934,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 14924,
											"end": 14934,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14924,
											"end": 14934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14947,
											"end": 14952,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14947,
											"end": 14952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 14947,
											"end": 14952,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14971,
											"end": 15101,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 14971,
											"end": 15101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15008,
											"end": 15011,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 14998,
											"end": 15006,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14995,
											"end": 15012,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14992,
											"end": 14994,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14992,
											"end": 14994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 14992,
											"end": 14994,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15015,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 15015,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 15015,
											"end": 15033,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15015,
											"end": 15033,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 15015,
											"end": 15033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15071,
											"end": 15072,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15057,
											"end": 15073,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15057,
											"end": 15073,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 15086,
											"end": 15091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 15086,
											"end": 15091,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14883,
											"end": 15101,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 14883,
											"end": 15101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14883,
											"end": 15101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15185,
											"end": 15187,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15175,
											"end": 15183,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15172,
											"end": 15188,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15166,
											"end": 15169,
											"name": "PUSH",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 15160,
											"end": 15164,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15157,
											"end": 15170,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15153,
											"end": 15189,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15147,
											"end": 15149,
											"name": "PUSH",
											"source": 12,
											"value": "4E"
										},
										{
											"begin": 15137,
											"end": 15145,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15134,
											"end": 15150,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15129,
											"end": 15131,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 15123,
											"end": 15127,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15120,
											"end": 15132,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15116,
											"end": 15151,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15113,
											"end": 15190,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 15110,
											"end": 15112,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15110,
											"end": 15112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 15110,
											"end": 15112,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15222,
											"end": 15241,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15222,
											"end": 15241,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15222,
											"end": 15241,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 15254,
											"end": 15259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 15254,
											"end": 15259,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15110,
											"end": 15112,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 15110,
											"end": 15112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15301,
											"end": 15335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 15326,
											"end": 15334,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15320,
											"end": 15324,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15301,
											"end": 15335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 15301,
											"end": 15335,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15301,
											"end": 15335,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 15301,
											"end": 15335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15371,
											"end": 15377,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15367,
											"end": 15368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15363,
											"end": 15369,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 15359,
											"end": 15378,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15350,
											"end": 15357,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15347,
											"end": 15379,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15344,
											"end": 15346,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15344,
											"end": 15346,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 15344,
											"end": 15346,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15382,
											"end": 15400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 15382,
											"end": 15400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 15382,
											"end": 15400,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15382,
											"end": 15400,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 15382,
											"end": 15400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15420,
											"end": 15440,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 15420,
											"end": 15440,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14699,
											"end": 15446,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14699,
											"end": 15446,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15451,
											"end": 15619,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 15451,
											"end": 15619,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15491,
											"end": 15498,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15557,
											"end": 15558,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15553,
											"end": 15554,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15549,
											"end": 15555,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 15545,
											"end": 15559,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 15542,
											"end": 15543,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15534,
											"end": 15535,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15527,
											"end": 15536,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15520,
											"end": 15537,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15516,
											"end": 15561,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15513,
											"end": 15515,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15513,
											"end": 15515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 15513,
											"end": 15515,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15564,
											"end": 15582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 15564,
											"end": 15582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 15564,
											"end": 15582,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15564,
											"end": 15582,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 15564,
											"end": 15582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15604,
											"end": 15613,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 15604,
											"end": 15613,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15503,
											"end": 15619,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15624,
											"end": 15749,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 15624,
											"end": 15749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15664,
											"end": 15668,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15692,
											"end": 15693,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15689,
											"end": 15690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15686,
											"end": 15694,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15683,
											"end": 15685,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15683,
											"end": 15685,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 15683,
											"end": 15685,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15697,
											"end": 15715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 15697,
											"end": 15715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 15697,
											"end": 15715,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15697,
											"end": 15715,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 15697,
											"end": 15715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15734,
											"end": 15743,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15673,
											"end": 15749,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15754,
											"end": 15889,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 15754,
											"end": 15889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15793,
											"end": 15796,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15814,
											"end": 15831,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15814,
											"end": 15831,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 15811,
											"end": 15813,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15811,
											"end": 15813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 15811,
											"end": 15813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15834,
											"end": 15852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 15834,
											"end": 15852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 15834,
											"end": 15852,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15834,
											"end": 15852,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 15834,
											"end": 15852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15881,
											"end": 15882,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15870,
											"end": 15883,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15870,
											"end": 15883,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15801,
											"end": 15889,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15894,
											"end": 16021,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 15894,
											"end": 16021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15955,
											"end": 15965,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 15950,
											"end": 15953,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 15946,
											"end": 15966,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 15943,
											"end": 15944,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 15967,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 15983,
											"end": 15984,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15976,
											"end": 15991,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16010,
											"end": 16014,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16007,
											"end": 16008,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16000,
											"end": 16015,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16158,
											"end": 16285,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 16158,
											"end": 16285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16219,
											"end": 16229,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 16214,
											"end": 16217,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 16210,
											"end": 16230,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 16207,
											"end": 16208,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16200,
											"end": 16231,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16250,
											"end": 16254,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 16247,
											"end": 16248,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 16240,
											"end": 16255,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16274,
											"end": 16278,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16271,
											"end": 16272,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16264,
											"end": 16279,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16290,
											"end": 16421,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 16290,
											"end": 16421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16365,
											"end": 16396,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16365,
											"end": 16396,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16355,
											"end": 16397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16355,
											"end": 16397,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 16345,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 16345,
											"end": 16347,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16411,
											"end": 16412,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16408,
											"end": 16409,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16401,
											"end": 16413,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16426,
											"end": 16544,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 16426,
											"end": 16544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16512,
											"end": 16517,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16505,
											"end": 16518,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16498,
											"end": 16519,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16491,
											"end": 16496,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16488,
											"end": 16520,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 16478,
											"end": 16480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 16478,
											"end": 16480,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16534,
											"end": 16535,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16531,
											"end": 16532,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16524,
											"end": 16536,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"adminReceiveFee()": "ae2b0965",
							"backToken()": "861faf5f",
							"buyerInfo(address)": "e2d3f423",
							"checkAdminAddress()": "cad5b0f7",
							"deposit(uint256)": "b6b55f25",
							"feeAnyone()": "3b5ef2ad",
							"feeCreateSale()": "d4c1dee9",
							"getBalance(address)": "f8b2cb4f",
							"initialSaleInfor(address,address,address,uint256[9],uint256,address,uint256)": "9b25415c",
							"owner()": "8da5cb5b",
							"ownerClaimAndRefundToken()": "8edf18e6",
							"presaleStatus()": "acfb2355",
							"renounceOwnership()": "715018a6",
							"saleInfor()": "18856a2f",
							"saleTotalSupply()": "12e5d0b9",
							"status()": "200d2ed2",
							"totalFee()": "1df4ccfc",
							"transferOwnership(address)": "f2fde38b",
							"userClaimEmergency()": "ab33985a",
							"userClaimOrRefundWhenSaleSuccess(bool)": "eb002bb0",
							"userFee(address)": "56c5f349",
							"userRefundEmergency()": "95661e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminReceiveFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenOwner\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBaseWithDraw\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkAdminAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAnyone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCreateSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_presaleOwner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_saleToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_baseTOken\",\"type\":\"address\"},{\"internalType\":\"uint256[9]\",\"name\":\"datas\",\"type\":\"uint256[9]\"},{\"internalType\":\"uint256\",\"name\":\"_feeAnyone\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_adminReceiveFee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeCreateSale\",\"type\":\"uint256\"}],\"name\":\"initialSaleInfor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerClaimAndRefundToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBaseCollected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBaseWithDraw\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokenBackForAdmin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBaseBackForAdmin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberBuyer\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOwnerClaimSaleToken\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isOwnerRefundBaseToken\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleInfor\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"presaleOwner\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"saleToken\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endSale\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSpendPerBuyer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSpendPerBuyer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refundFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"saleIsBaseToken\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenForSale\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"softCap\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"status\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userClaimEmergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isClaim\",\"type\":\"bool\"}],\"name\":\"userClaimOrRefundWhenSaleSuccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userRefundEmergency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ethereum/Presale.sol\":\"Presale\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/ERC20.sol\":{\"keccak256\":\"0x06de64a6e4f0f98aaf7bc91b3826b714e7ce7827a08da3031f8f2f91c14c5687\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79cb85a1ebbc907f8b80a26cfce98cd61eb1dfc5dbed47f2cc5f6e7a3e87d2db\",\"dweb:/ipfs/QmWzRXkG6oFwtNiGz98zduSDVYhnTKkCE5YMTVE15fBFse\"]},\"ERC20/IERC20.sol\":{\"keccak256\":\"0x62e7e272bf9d2c10b294645ea698d7fc41dadc18146ac88e9b9cc18514faacc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e09024b0f1ddb94bdc13008d4c221747b1a6f1e07b0ca599d8d213925982af34\",\"dweb:/ipfs/QmcL6X4KCFc45tk5xSEgBDFUrsKap8G74aJtti5sUYzYCL\"]},\"ERC20/IERC20Metadata.sol\":{\"keccak256\":\"0x2095e6b6cd9fc67a55c1dce6c4a4282036fef487baf848e399adc2f571f6c47b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbdbc5c7af217e674e7c45ab729cf3ffe1c2756c4438e5818f39f30266b836e2\",\"dweb:/ipfs/QmPkmQQ6bAVYGRKR1KMqRhU1kPL49aFc5zqCLmJZEMsavE\"]},\"Ethereum/Presale.sol\":{\"keccak256\":\"0xc50dd820ddd3be06c2e9804795ab56cb934e2a5f789e9164553766117abdaeb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://252a2e5e8d907f4ad250ec621835a1f102fcd47a570531fd795453eafb18314d\",\"dweb:/ipfs/QmfActstdGxT38chY8ThvuqVupjtNtzBwvXoB53WcGCTuQ\"]},\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Utils/EnumerableSet.sol\":{\"keccak256\":\"0x8adfeb5c886c6a727bdeac6db8e78f418e09f16f7c941c7111125b59ec2fd838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632e2346228015ce98183a0f0658057a9f2ae8b8d25b639eb9303e8e0ea34957\",\"dweb:/ipfs/QmPY3nbe3JhMsgyHJTtXRkLTioW997Bvizt23mPNKKGSgu\"]},\"Utils/Ownable.sol\":{\"keccak256\":\"0x5eeb86897007c578f301464fceac720c7330486c54ae85c0c09068b46197cfb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edefd9ff4f087a3016763a687eaae449c0e8f6dcda9d86032a49de900f129050\",\"dweb:/ipfs/Qmc4adiPdGKgEJLxqgd8JuKkwrNBNtB78kkGinnnuUnyJN\"]},\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]},\"Utils/SafeMath.sol\":{\"keccak256\":\"0xdc9b51d94a1db880c1f2e722af561c28c41100eea201b1ae5e77eb7c4250e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b69f7fb378dcfd4aff8ba0547a575485d2d4bb567381e3bf8c593b63272ffc0\",\"dweb:/ipfs/QmaEo28ZDAnpDvpQRRt7Qc8bF5QgJAnTEE4TxYnJS8YmnN\"]},\"Utils/TransferHelper.sol\":{\"keccak256\":\"0xf64de8bda44d6e6a0ef231b637d0d6c78522fd561464c547eeca34f1a8e0482c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e8e7a9c1c50e24298b33bbde7e9d74998b58c889b706c80f95d130952d9e7\",\"dweb:/ipfs/QmP5sAxCH4LFZFJ9uxtFdCdZ3DPJJfv1iU6cHY19urExxw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2783,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 2675,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 813,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "buyerInfo",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(BuyerInfo)786_storage)"
							},
							{
								"astId": 817,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "userFee",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 820,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "presaleStatus",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(PresaleStatus)808_storage"
							},
							{
								"astId": 823,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "saleTotalSupply",
								"offset": 0,
								"slot": "13",
								"type": "t_struct(SaleTotalSupply)775_storage"
							},
							{
								"astId": 826,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "saleInfor",
								"offset": 0,
								"slot": "15",
								"type": "t_struct(SaleInfor)770_storage"
							},
							{
								"astId": 829,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "WETH",
								"offset": 0,
								"slot": "27",
								"type": "t_contract(IERC20)663"
							},
							{
								"astId": 832,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "admins",
								"offset": 0,
								"slot": "28",
								"type": "t_struct(AddressSet)2380_storage"
							},
							{
								"astId": 834,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "totalFee",
								"offset": 0,
								"slot": "30",
								"type": "t_uint256"
							},
							{
								"astId": 836,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "feeAnyone",
								"offset": 0,
								"slot": "31",
								"type": "t_uint256"
							},
							{
								"astId": 838,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "adminReceiveFee",
								"offset": 0,
								"slot": "32",
								"type": "t_address"
							},
							{
								"astId": 840,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "feeCreateSale",
								"offset": 0,
								"slot": "33",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ERC20)585": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)663": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(BuyerInfo)786_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Presale.BuyerInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(BuyerInfo)786_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)2380_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 2379,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)2079_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(BuyerInfo)786_storage": {
								"encoding": "inplace",
								"label": "struct Presale.BuyerInfo",
								"members": [
									{
										"astId": 777,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseDeposit",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 779,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenOwner",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 781,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "lastWithDraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 783,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 785,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseWithDraw",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(PresaleStatus)808_storage": {
								"encoding": "inplace",
								"label": "struct Presale.PresaleStatus",
								"members": [
									{
										"astId": 788,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseCollected",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 790,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenSold",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 792,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenWithDraw",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 794,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseWithDraw",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 796,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalTokenBackForAdmin",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 798,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "totalBaseBackForAdmin",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 800,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "numberBuyer",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 802,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isOwnerClaimSaleToken",
										"offset": 0,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 804,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "isOwnerRefundBaseToken",
										"offset": 1,
										"slot": "7",
										"type": "t_bool"
									},
									{
										"astId": 807,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "admin",
										"offset": 0,
										"slot": "8",
										"type": "t_array(t_address)dyn_storage"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(SaleInfor)770_storage": {
								"encoding": "inplace",
								"label": "struct Presale.SaleInfor",
								"members": [
									{
										"astId": 745,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "presaleOwner",
										"offset": 0,
										"slot": "0",
										"type": "t_address_payable"
									},
									{
										"astId": 748,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "saleToken",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(ERC20)585"
									},
									{
										"astId": 751,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "baseToken",
										"offset": 0,
										"slot": "2",
										"type": "t_contract(ERC20)585"
									},
									{
										"astId": 753,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "tokenPrice",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 755,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "startSale",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 757,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "endSale",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 759,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "minSpendPerBuyer",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 761,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "maxSpendPerBuyer",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 763,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "refundFee",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 765,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "claimFee",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 767,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "saleIsBaseToken",
										"offset": 0,
										"slot": "10",
										"type": "t_bool"
									},
									{
										"astId": 769,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "amountTokenForSale",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "384"
							},
							"t_struct(SaleTotalSupply)775_storage": {
								"encoding": "inplace",
								"label": "struct Presale.SaleTotalSupply",
								"members": [
									{
										"astId": 772,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "hardCap",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 774,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "softCap",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)2079_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 2074,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 2078,
										"contract": "Ethereum/Presale.sol:Presale",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ethereum/PresaleSettings.sol": {
				"PresaleSettings": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SETTINGS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "BASE_FEE",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "TOKEN_FEE",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "ETH_FEE_ADDRESS",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "TOKEN_FEE_ADDRESS",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "ETH_CREATION_FEE",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBaseFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEthAddress",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEthCreationFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenAddress",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_ethAddress",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "_tokenFeeAddress",
									"type": "address"
								}
							],
							"name": "setFeeAddresses",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_baseFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_ethCreationFee",
									"type": "uint256"
								}
							],
							"name": "setFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ethereum/PresaleSettings.sol\":134:1980  contract PresaleSettings is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"Ethereum/PresaleSettings.sol\":586:860  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Utils/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"Utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"Utils/Ownable.sol\":942:960  _transferOwnership */\n  tag_8\n    /* \"Utils/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"Ethereum/PresaleSettings.sol\":631:633  50 */\n  0x32\n    /* \"Ethereum/PresaleSettings.sol\":611:619  SETTINGS */\n  0x01\n    /* \"Ethereum/PresaleSettings.sol\":611:633  SETTINGS.BASE_FEE = 50 */\n  sstore\n    /* \"Ethereum/PresaleSettings.sol\":611:628  SETTINGS.BASE_FEE */\n  0x00\n    /* \"Ethereum/PresaleSettings.sol\":650:668  SETTINGS.TOKEN_FEE */\n  0x02\n    /* \"Ethereum/PresaleSettings.sol\":650:672  SETTINGS.TOKEN_FEE = 0 */\n  sstore\n    /* \"Ethereum/PresaleSettings.sol\":717:724  1 ether */\n  0x0de0b6b3a7640000\n    /* \"Ethereum/PresaleSettings.sol\":689:714  SETTINGS.ETH_CREATION_FEE */\n  0x05\n    /* \"Ethereum/PresaleSettings.sol\":689:724  SETTINGS.ETH_CREATION_FEE = 1 ether */\n  sstore\n    /* \"Ethereum/PresaleSettings.sol\":743:767  SETTINGS.ETH_FEE_ADDRESS */\n  0x03\n    /* \"Ethereum/PresaleSettings.sol\":743:791  SETTINGS.ETH_FEE_ADDRESS = payable(_msgSender()) */\n  dup1\n  sload\n    /* \"Utils/Context.sol\":736:746  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"Ethereum/PresaleSettings.sol\":743:791  SETTINGS.ETH_FEE_ADDRESS = payable(_msgSender()) */\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"Ethereum/PresaleSettings.sol\":802:828  SETTINGS.TOKEN_FEE_ADDRESS */\n  0x04\n    /* \"Ethereum/PresaleSettings.sol\":802:852  SETTINGS.TOKEN_FEE_ADDRESS = payable(_msgSender()) */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"Ethereum/PresaleSettings.sol\":134:1980  contract PresaleSettings is Ownable {\r... */\n  jump(tag_12)\n    /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_8:\n    /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n  0x00\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Utils/Ownable.sol\":2426:2432  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n  swap1\n    /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Utils/Ownable.sol\":2396:2524  {\r... */\n  pop\n    /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"Ethereum/PresaleSettings.sol\":134:1980  contract PresaleSettings is Ownable {\r... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ethereum/PresaleSettings.sol\":134:1980  contract PresaleSettings is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xade97ab5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xcec10c11\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe38ef7a3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x10fe9ae8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x11c84120\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x15e812ad\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x24785172\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x35546850\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Ethereum/PresaleSettings.sol\":1323:1442  function getTokenAddress() external view returns (address payable) {\r... */\n    tag_3:\n        /* \"Ethereum/PresaleSettings.sol\":1408:1434  SETTINGS.TOKEN_FEE_ADDRESS */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"Ethereum/PresaleSettings.sol\":1323:1442  function getTokenAddress() external view returns (address payable) {\r... */\n    tag_15:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1160:1192   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1142:1193   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1130:1132   */\n      0x20\n        /* \"#utility.yul\":1115:1133   */\n      add\n        /* \"Ethereum/PresaleSettings.sol\":1323:1442  function getTokenAddress() external view returns (address payable) {\r... */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ethereum/PresaleSettings.sol\":1450:1695  function setFeeAddresses(\r... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Ethereum/PresaleSettings.sol\":868:965  function getBaseFee() external view returns (uint256) {\r... */\n    tag_5:\n        /* \"Ethereum/PresaleSettings.sol\":940:948  SETTINGS */\n      0x01\n        /* \"Ethereum/PresaleSettings.sol\":940:957  SETTINGS.BASE_FEE */\n      sload\n        /* \"Ethereum/PresaleSettings.sol\":868:965  function getBaseFee() external view returns (uint256) {\r... */\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":2342:2367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2330:2332   */\n      0x20\n        /* \"#utility.yul\":2315:2333   */\n      add\n        /* \"Ethereum/PresaleSettings.sol\":868:965  function getBaseFee() external view returns (uint256) {\r... */\n      tag_17\n        /* \"#utility.yul\":2297:2373   */\n      jump\n        /* \"Ethereum/PresaleSettings.sol\":1200:1315  function getEthAddress() external view returns (address payable) {\r... */\n    tag_6:\n        /* \"Ethereum/PresaleSettings.sol\":1283:1307  SETTINGS.ETH_FEE_ADDRESS */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"Ethereum/PresaleSettings.sol\":1200:1315  function getEthAddress() external view returns (address payable) {\r... */\n      jump(tag_15)\n        /* \"Ethereum/PresaleSettings.sol\":973:1072  function getTokenFee() external view returns (uint256) {\r... */\n    tag_7:\n        /* \"Ethereum/PresaleSettings.sol\":1046:1064  SETTINGS.TOKEN_FEE */\n      sload(0x02)\n        /* \"Ethereum/PresaleSettings.sol\":973:1072  function getTokenFee() external view returns (uint256) {\r... */\n      jump(tag_23)\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_8:\n      tag_19\n      tag_34\n      jump\t// in\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_9:\n        /* \"Utils/Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Utils/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n      jump(tag_15)\n        /* \"Ethereum/PresaleSettings.sol\":553:577  Settings public SETTINGS */\n    tag_10:\n      sload(0x01)\n      sload(0x02)\n      sload(0x03)\n      sload(0x04)\n      sload(0x05)\n      tag_39\n      swap5\n      swap4\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap3\n      and\n      swap1\n      dup6\n      jump\n    tag_39:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2669:2694   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":2725:2727   */\n      0x20\n        /* \"#utility.yul\":2710:2728   */\n      dup7\n      add\n        /* \"#utility.yul\":2703:2737   */\n      swap5\n      swap1\n      swap5\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2811:2826   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":2791:2809   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":2784:2827   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":2863:2878   */\n      and\n        /* \"#utility.yul\":2858:2860   */\n      0x60\n        /* \"#utility.yul\":2843:2861   */\n      dup4\n      add\n        /* \"#utility.yul\":2836:2879   */\n      mstore\n        /* \"#utility.yul\":2910:2913   */\n      0x80\n        /* \"#utility.yul\":2895:2914   */\n      dup3\n      add\n        /* \"#utility.yul\":2888:2923   */\n      mstore\n        /* \"#utility.yul\":2656:2659   */\n      0xa0\n        /* \"#utility.yul\":2641:2660   */\n      add\n        /* \"Ethereum/PresaleSettings.sol\":553:577  Settings public SETTINGS */\n      tag_17\n        /* \"#utility.yul\":2623:2929   */\n      jump\n        /* \"Ethereum/PresaleSettings.sol\":1703:1977  function setFees(\r... */\n    tag_11:\n      tag_19\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"Ethereum/PresaleSettings.sol\":1080:1192  function getEthCreationFee() external view returns (uint256) {\r... */\n    tag_12:\n        /* \"Ethereum/PresaleSettings.sol\":1159:1184  SETTINGS.ETH_CREATION_FEE */\n      sload(0x05)\n        /* \"Ethereum/PresaleSettings.sol\":1080:1192  function getEthCreationFee() external view returns (uint256) {\r... */\n      jump(tag_23)\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_13:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"Ethereum/PresaleSettings.sol\":1450:1695  function setFeeAddresses(\r... */\n    tag_22:\n        /* \"Utils/Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"Ethereum/PresaleSettings.sol\":1593:1617  SETTINGS.ETH_FEE_ADDRESS */\n      0x03\n        /* \"Ethereum/PresaleSettings.sol\":1593:1631  SETTINGS.ETH_FEE_ADDRESS = _ethAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Ethereum/PresaleSettings.sol\":1642:1668  SETTINGS.TOKEN_FEE_ADDRESS */\n      0x04\n        /* \"Ethereum/PresaleSettings.sol\":1642:1687  SETTINGS.TOKEN_FEE_ADDRESS = _tokenFeeAddress */\n      dup1\n      sload\n      swap3\n      swap1\n      swap4\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"Ethereum/PresaleSettings.sol\":1450:1695  function setFeeAddresses(\r... */\n      jump\t// out\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_34:\n        /* \"Utils/Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_69:\n        /* \"Utils/Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      tag_72\n        /* \"Utils/Ownable.sol\":1806:1807  0 */\n      0x00\n        /* \"Utils/Ownable.sol\":1779:1797  _transferOwnership */\n      tag_73\n        /* \"Utils/Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_72:\n        /* \"Utils/Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Ethereum/PresaleSettings.sol\":1703:1977  function setFees(\r... */\n    tag_46:\n        /* \"Utils/Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_78:\n        /* \"Ethereum/PresaleSettings.sol\":1846:1854  SETTINGS */\n      0x01\n        /* \"Ethereum/PresaleSettings.sol\":1846:1874  SETTINGS.BASE_FEE = _baseFee */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"Ethereum/PresaleSettings.sol\":1885:1903  SETTINGS.TOKEN_FEE */\n      0x02\n        /* \"Ethereum/PresaleSettings.sol\":1885:1915  SETTINGS.TOKEN_FEE = _tokenFee */\n      sstore\n        /* \"Ethereum/PresaleSettings.sol\":1926:1951  SETTINGS.ETH_CREATION_FEE */\n      0x05\n        /* \"Ethereum/PresaleSettings.sol\":1926:1969  SETTINGS.ETH_CREATION_FEE = _ethCreationFee */\n      sstore\n        /* \"Ethereum/PresaleSettings.sol\":1703:1977  function setFees(\r... */\n      jump\t// out\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_53:\n        /* \"Utils/Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Utils/Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Utils/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      eq\n        /* \"Utils/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/Ownable.sol\":2061:2083  newOwner != address(0) */\n      dup2\n      and\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1630:1632   */\n      0x20\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1612:1633   */\n      mstore\n        /* \"#utility.yul\":1669:1671   */\n      0x26\n        /* \"#utility.yul\":1649:1667   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1642:1672   */\n      mstore\n        /* \"#utility.yul\":1708:1742   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1688:1706   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1681:1743   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1759:1777   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1752:1788   */\n      mstore\n        /* \"#utility.yul\":1805:1824   */\n      0x84\n      add\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_60\n        /* \"#utility.yul\":1602:1830   */\n      jump\n        /* \"Utils/Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_88:\n        /* \"Utils/Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      tag_91\n        /* \"Utils/Ownable.sol\":2156:2164  newOwner */\n      dup2\n        /* \"Utils/Ownable.sol\":2137:2155  _transferOwnership */\n      tag_73\n        /* \"Utils/Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_91:\n        /* \"Utils/Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_73:\n        /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n      0x00\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Utils/Ownable.sol\":2443:2460  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Utils/Ownable.sol\":2426:2432  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"Utils/Ownable.sol\":2407:2423  address oldOwner */\n      swap1\n        /* \"Utils/Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Utils/Ownable.sol\":2396:2524  {\r... */\n      pop\n        /* \"Utils/Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:261   */\n    tag_52:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_96:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n        /* \"#utility.yul\":200:231   */\n      tag_97\n        /* \"#utility.yul\":225:230   */\n      dup2\n        /* \"#utility.yul\":200:231   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":250:255   */\n      swap4\n        /* \"#utility.yul\":84:261   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":266:670   */\n    tag_21:\n        /* \"#utility.yul\":350:356   */\n      0x00\n        /* \"#utility.yul\":358:364   */\n      dup1\n        /* \"#utility.yul\":411:413   */\n      0x40\n        /* \"#utility.yul\":399:408   */\n      dup4\n        /* \"#utility.yul\":390:397   */\n      dup6\n        /* \"#utility.yul\":386:409   */\n      sub\n        /* \"#utility.yul\":382:414   */\n      slt\n        /* \"#utility.yul\":379:381   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":427:428   */\n      0x00\n        /* \"#utility.yul\":424:425   */\n      dup1\n        /* \"#utility.yul\":417:429   */\n      revert\n        /* \"#utility.yul\":379:381   */\n    tag_100:\n        /* \"#utility.yul\":466:475   */\n      dup3\n        /* \"#utility.yul\":453:476   */\n      calldataload\n        /* \"#utility.yul\":485:516   */\n      tag_101\n        /* \"#utility.yul\":510:515   */\n      dup2\n        /* \"#utility.yul\":485:516   */\n      tag_98\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":535:540   */\n      swap2\n      pop\n        /* \"#utility.yul\":592:594   */\n      0x20\n        /* \"#utility.yul\":577:595   */\n      dup4\n      add\n        /* \"#utility.yul\":564:596   */\n      calldataload\n        /* \"#utility.yul\":605:638   */\n      tag_102\n        /* \"#utility.yul\":564:596   */\n      dup2\n        /* \"#utility.yul\":605:638   */\n      tag_98\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":657:664   */\n      dup1\n        /* \"#utility.yul\":647:664   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":369:670   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:991   */\n    tag_45:\n        /* \"#utility.yul\":752:758   */\n      0x00\n        /* \"#utility.yul\":760:766   */\n      dup1\n        /* \"#utility.yul\":768:774   */\n      0x00\n        /* \"#utility.yul\":821:823   */\n      0x60\n        /* \"#utility.yul\":809:818   */\n      dup5\n        /* \"#utility.yul\":800:807   */\n      dup7\n        /* \"#utility.yul\":796:819   */\n      sub\n        /* \"#utility.yul\":792:824   */\n      slt\n        /* \"#utility.yul\":789:791   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":837:838   */\n      0x00\n        /* \"#utility.yul\":834:835   */\n      dup1\n        /* \"#utility.yul\":827:839   */\n      revert\n        /* \"#utility.yul\":789:791   */\n    tag_104:\n      pop\n      pop\n        /* \"#utility.yul\":860:883   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":930:932   */\n      0x20\n        /* \"#utility.yul\":915:933   */\n      dup4\n      add\n        /* \"#utility.yul\":902:934   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":981:983   */\n      0x40\n        /* \"#utility.yul\":966:984   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":953:985   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":779:991   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1835:2191   */\n    tag_61:\n        /* \"#utility.yul\":2037:2039   */\n      0x20\n        /* \"#utility.yul\":2019:2040   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2056:2074   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2049:2079   */\n      mstore\n        /* \"#utility.yul\":2115:2149   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2110:2112   */\n      0x40\n        /* \"#utility.yul\":2095:2113   */\n      dup3\n      add\n        /* \"#utility.yul\":2088:2150   */\n      mstore\n        /* \"#utility.yul\":2182:2184   */\n      0x60\n        /* \"#utility.yul\":2167:2185   */\n      add\n      swap1\n        /* \"#utility.yul\":2009:2191   */\n      jump\t// out\n        /* \"#utility.yul\":2934:3065   */\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3009:3040   */\n      dup2\n      and\n        /* \"#utility.yul\":2999:3041   */\n      dup2\n      eq\n        /* \"#utility.yul\":2989:2991   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n\n    auxdata: 0xa264697066735822122094bce2c1dd0582ee4795c88270d9b3b8ce4c433c608a0f13315a5104462591f464736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1948": {
									"entryPoint": null,
									"id": 1948,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2691": {
									"entryPoint": null,
									"id": 2691,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2058": {
									"entryPoint": null,
									"id": 2058,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_2771": {
									"entryPoint": 87,
									"id": 2771,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a33610057565b60326001556000600255670de0b6b3a764000060055560038054336001600160a01b031991821681179092556004805490911690911790556100a7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61047c806100b66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146101185780638da5cb5b14610120578063ade97ab514610131578063cec10c111461018b578063e38ef7a31461019e578063f2fde38b146101a657600080fd5b806310fe9ae8146100ae57806311c84120146100d857806315e812ad146100ed57806324785172146100ff5780633554685014610110575b600080fd5b6004546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100eb6100e6366004610397565b6101b9565b005b6001545b6040519081526020016100cf565b6003546001600160a01b03166100bb565b6002546100f1565b6100eb61021a565b6000546001600160a01b03166100bb565b6001546002546003546004546005546101579493926001600160a01b0390811692169085565b6040805195865260208601949094526001600160a01b0392831693850193909352166060830152608082015260a0016100cf565b6100eb6101993660046103d0565b610250565b6005546100f1565b6100eb6101b4366004610373565b610288565b6000546001600160a01b031633146101ec5760405162461bcd60e51b81526004016101e3906103fc565b60405180910390fd5b600380546001600160a01b039384166001600160a01b03199182161790915560048054929093169116179055565b6000546001600160a01b031633146102445760405162461bcd60e51b81526004016101e3906103fc565b61024e6000610323565b565b6000546001600160a01b0316331461027a5760405162461bcd60e51b81526004016101e3906103fc565b600192909255600255600555565b6000546001600160a01b031633146102b25760405162461bcd60e51b81526004016101e3906103fc565b6001600160a01b0381166103175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101e3565b61032081610323565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561038557600080fd5b813561039081610431565b9392505050565b600080604083850312156103aa57600080fd5b82356103b581610431565b915060208301356103c581610431565b809150509250929050565b6000806000606084860312156103e557600080fd5b505081359360208301359350604090920135919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038116811461032057600080fdfea264697066735822122094bce2c1dd0582ee4795c88270d9b3b8ce4c433c608a0f13315a5104462591f464736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x57 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x1 SSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 SSTORE PUSH1 0x3 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x47C DUP1 PUSH2 0xB6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xADE97AB5 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xCEC10C11 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xE38EF7A3 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10FE9AE8 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x11C84120 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x15E812AD EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x24785172 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x35546850 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x397 JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xF1 JUMP JUMPDEST PUSH2 0xEB PUSH2 0x21A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x157 SWAP5 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0xEB PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D0 JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xF1 JUMP JUMPDEST PUSH2 0xEB PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x373 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x3FC JUMP JUMPDEST PUSH2 0x24E PUSH1 0x0 PUSH2 0x323 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x1 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x2 SSTORE PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x317 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x320 DUP2 PUSH2 0x323 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x390 DUP2 PUSH2 0x431 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3B5 DUP2 PUSH2 0x431 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3C5 DUP2 PUSH2 0x431 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xBC 0xE2 0xC1 0xDD SDIV DUP3 0xEE SELFBALANCE SWAP6 0xC8 DUP3 PUSH17 0xD9B3B8CE4C433C608A0F13315A51044625 SWAP2 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
							"sourceMap": "134:1846:5:-:0;;;586:274;;;;;;;;;-1:-1:-1;942:32:8;736:10:6;942:18:8;:32::i;:::-;631:2:5;611:8;:22;:17;650:18;:22;717:7;689:25;:35;743:24;:48;;736:10:6;-1:-1:-1;;;;;;743:48:5;;;;;;;;802:26;:50;;;;;;;;;;134:1846;;2333:191:8;2407:16;2426:6;;-1:-1:-1;;;;;2443:17:8;;;-1:-1:-1;;;;;;2443:17:8;;;;;;2476:40;;2426:6;;;;;;;2476:40;;2407:16;2476:40;2396:128;2333:191;:::o;134:1846:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SETTINGS_1906": {
									"entryPoint": null,
									"id": 1906,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2058": {
									"entryPoint": null,
									"id": 2058,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_2771": {
									"entryPoint": 803,
									"id": 2771,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getBaseFee_1957": {
									"entryPoint": null,
									"id": 1957,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getEthAddress_1984": {
									"entryPoint": null,
									"id": 1984,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getEthCreationFee_1975": {
									"entryPoint": null,
									"id": 1975,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokenAddress_1993": {
									"entryPoint": null,
									"id": 1993,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokenFee_1966": {
									"entryPoint": null,
									"id": 1966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_2700": {
									"entryPoint": null,
									"id": 2700,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_2728": {
									"entryPoint": 538,
									"id": 2728,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setFeeAddresses_2015": {
									"entryPoint": 441,
									"id": 2015,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setFees_2045": {
									"entryPoint": 592,
									"id": 2045,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_2751": {
									"entryPoint": 648,
									"id": 2751,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_address_payable": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3067:12",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:177:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:12"
															},
															"nodeType": "YulIf",
															"src": "94:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "225:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "200:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "200:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "200:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "240:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "250:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "240:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:12",
														"type": ""
													}
												],
												"src": "14:247:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "369:301:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "424:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "427:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "417:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "417:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "390:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "399:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "386:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "386:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "382:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:32:12"
															},
															"nodeType": "YulIf",
															"src": "379:2:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "440:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "466:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "453:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "453:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "444:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "510:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "485:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:31:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:31:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "525:15:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "535:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "549:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "581:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "592:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "577:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "577:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "564:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "564:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "553:7:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "630:7:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "605:24:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "605:33:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "647:17:12",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "657:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "647:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "327:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "338:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "350:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "358:6:12",
														"type": ""
													}
												],
												"src": "266:404:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "779:212:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "834:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "837:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "827:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "827:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "827:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "800:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "809:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "796:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "796:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "821:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "792:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:32:12"
															},
															"nodeType": "YulIf",
															"src": "789:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "850:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "873:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "860:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "850:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "892:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "919:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "930:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "915:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "915:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "902:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "902:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "943:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "970:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "981:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "966:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "953:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "953:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "943:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "729:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "740:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "752:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "760:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "768:6:12",
														"type": ""
													}
												],
												"src": "675:316:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1097:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1107:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1119:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1130:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1115:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1107:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1149:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1164:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1180:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1185:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1176:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1176:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1189:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1172:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1172:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1160:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1160:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1142:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1142:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1066:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1077:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1088:4:12",
														"type": ""
													}
												],
												"src": "996:203:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1321:102:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1331:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1343:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1354:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1339:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1339:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1331:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1373:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1388:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1404:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1409:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1400:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1400:11:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1413:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1396:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1396:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1384:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1384:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1366:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1366:51:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1366:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1290:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1301:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1312:4:12",
														"type": ""
													}
												],
												"src": "1204:219:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1602:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1619:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1630:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1612:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1612:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1653:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1664:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1649:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1649:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1669:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1642:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1642:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1642:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1692:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1703:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1688:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1688:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1708:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1681:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1681:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1681:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1763:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1774:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1759:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1759:18:12"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1779:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:36:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:36:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1797:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1809:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1820:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1805:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1797:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1579:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1593:4:12",
														"type": ""
													}
												],
												"src": "1428:402:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2009:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2026:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2037:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2019:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2060:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2071:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2056:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2056:18:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2076:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2049:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2049:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2049:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2099:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2110:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2095:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2095:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2115:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2088:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2088:62:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2088:62:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2159:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2171:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2167:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2167:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2159:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1986:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2000:4:12",
														"type": ""
													}
												],
												"src": "1835:356:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2297:76:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2307:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2319:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2330:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2307:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2349:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2342:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2342:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2342:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2266:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2277:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2288:4:12",
														"type": ""
													}
												],
												"src": "2196:177:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2623:306:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2633:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2645:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2656:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2641:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2641:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2633:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2676:9:12"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2687:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2669:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2669:25:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2669:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2714:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2725:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2710:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2710:18:12"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2730:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2703:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2703:34:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2746:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2764:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2769:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:11:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2773:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2756:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2756:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2750:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2795:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2806:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2791:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2791:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "2815:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2823:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2811:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2811:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2784:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2784:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2784:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2847:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2858:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2843:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2843:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "2867:6:12"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2875:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2863:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2836:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2836:43:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2836:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2899:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2910:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2895:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2895:19:12"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "2916:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2888:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2888:35:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2888:35:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2560:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2571:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2579:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2587:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2595:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2603:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2614:4:12",
														"type": ""
													}
												],
												"src": "2378:551:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2979:86:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3002:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3013:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3028:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3033:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "3024:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3024:11:12"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3037:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "3020:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3020:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3009:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3009:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2992:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:50:12"
															},
															"nodeType": "YulIf",
															"src": "2989:2:12"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2968:5:12",
														"type": ""
													}
												],
												"src": "2934:131:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payablet_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_uint256_t_uint256_t_address_payable_t_address_payable_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146101185780638da5cb5b14610120578063ade97ab514610131578063cec10c111461018b578063e38ef7a31461019e578063f2fde38b146101a657600080fd5b806310fe9ae8146100ae57806311c84120146100d857806315e812ad146100ed57806324785172146100ff5780633554685014610110575b600080fd5b6004546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100eb6100e6366004610397565b6101b9565b005b6001545b6040519081526020016100cf565b6003546001600160a01b03166100bb565b6002546100f1565b6100eb61021a565b6000546001600160a01b03166100bb565b6001546002546003546004546005546101579493926001600160a01b0390811692169085565b6040805195865260208601949094526001600160a01b0392831693850193909352166060830152608082015260a0016100cf565b6100eb6101993660046103d0565b610250565b6005546100f1565b6100eb6101b4366004610373565b610288565b6000546001600160a01b031633146101ec5760405162461bcd60e51b81526004016101e3906103fc565b60405180910390fd5b600380546001600160a01b039384166001600160a01b03199182161790915560048054929093169116179055565b6000546001600160a01b031633146102445760405162461bcd60e51b81526004016101e3906103fc565b61024e6000610323565b565b6000546001600160a01b0316331461027a5760405162461bcd60e51b81526004016101e3906103fc565b600192909255600255600555565b6000546001600160a01b031633146102b25760405162461bcd60e51b81526004016101e3906103fc565b6001600160a01b0381166103175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101e3565b61032081610323565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561038557600080fd5b813561039081610431565b9392505050565b600080604083850312156103aa57600080fd5b82356103b581610431565b915060208301356103c581610431565b809150509250929050565b6000806000606084860312156103e557600080fd5b505081359360208301359350604090920135919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038116811461032057600080fdfea264697066735822122094bce2c1dd0582ee4795c88270d9b3b8ce4c433c608a0f13315a5104462591f464736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xADE97AB5 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0xCEC10C11 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xE38EF7A3 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x10FE9AE8 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x11C84120 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x15E812AD EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x24785172 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x35546850 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x397 JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xF1 JUMP JUMPDEST PUSH2 0xEB PUSH2 0x21A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH2 0x157 SWAP5 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0xEB PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D0 JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xF1 JUMP JUMPDEST PUSH2 0xEB PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x373 JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x244 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x3FC JUMP JUMPDEST PUSH2 0x24E PUSH1 0x0 PUSH2 0x323 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x1 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x2 SSTORE PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x317 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x320 DUP2 PUSH2 0x323 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x390 DUP2 PUSH2 0x431 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3B5 DUP2 PUSH2 0x431 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3C5 DUP2 PUSH2 0x431 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xBC 0xE2 0xC1 0xDD SDIV DUP3 0xEE SELFBALANCE SWAP6 0xC8 DUP3 PUSH17 0xD9B3B8CE4C433C608A0F13315A51044625 SWAP2 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
							"sourceMap": "134:1846:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1323:119;1408:26;;-1:-1:-1;;;;;1408:26:5;1323:119;;;-1:-1:-1;;;;;1160:32:12;;;1142:51;;1130:2;1115:18;1323:119:5;;;;;;;;1450:245;;;;;;:::i;:::-;;:::i;:::-;;868:97;940:8;:17;868:97;;;2342:25:12;;;2330:2;2315:18;868:97:5;2297:76:12;1200:115:5;1283:24;;-1:-1:-1;;;;;1283:24:5;1200:115;;973:99;1046:18;;973:99;;1714:103:8;;;:::i;1063:87::-;1109:7;1136:6;-1:-1:-1;;;;;1136:6:8;1063:87;;553:24:5;;;;;;;;;;;;;;;-1:-1:-1;;;;;553:24:5;;;;;;;;;;;;2669:25:12;;;2725:2;2710:18;;2703:34;;;;-1:-1:-1;;;;;2811:15:12;;;2791:18;;;2784:43;;;;2863:15;2858:2;2843:18;;2836:43;2910:3;2895:19;;2888:35;2656:3;2641:19;553:24:5;2623:306:12;1703:274:5;;;;;;:::i;:::-;;:::i;1080:112::-;1159:25;;1080:112;;1972:201:8;;;;;;:::i;:::-;;:::i;1450:245:5:-;1109:7:8;1136:6;-1:-1:-1;;;;;1136:6:8;736:10:6;1283:23:8;1275:68;;;;-1:-1:-1;;;1275:68:8;;;;;;;:::i;:::-;;;;;;;;;1593:24:5;:38;;-1:-1:-1;;;;;1593:38:5;;::::1;-1:-1:-1::0;;;;;;1593:38:5;;::::1;;::::0;;;1642:26;:45;;;;;::::1;::::0;::::1;;::::0;;1450:245::o;1714:103:8:-;1109:7;1136:6;-1:-1:-1;;;;;1136:6:8;736:10:6;1283:23:8;1275:68;;;;-1:-1:-1;;;1275:68:8;;;;;;;:::i;:::-;1779:30:::1;1806:1;1779:18;:30::i;:::-;1714:103::o:0;1703:274:5:-;1109:7:8;1136:6;-1:-1:-1;;;;;1136:6:8;736:10:6;1283:23:8;1275:68;;;;-1:-1:-1;;;1275:68:8;;;;;;;:::i;:::-;1846:8:5::1;:28:::0;;;;1885:18;:30;1926:25;:43;1703:274::o;1972:201:8:-;1109:7;1136:6;-1:-1:-1;;;;;1136:6:8;736:10:6;1283:23:8;1275:68;;;;-1:-1:-1;;;1275:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;2061:22:8;::::1;2053:73;;;::::0;-1:-1:-1;;;2053:73:8;;1630:2:12;2053:73:8::1;::::0;::::1;1612:21:12::0;1669:2;1649:18;;;1642:30;1708:34;1688:18;;;1681:62;-1:-1:-1;;;1759:18:12;;;1752:36;1805:19;;2053:73:8::1;1602:228:12::0;2053:73:8::1;2137:28;2156:8;2137:18;:28::i;:::-;1972:201:::0;:::o;2333:191::-;2407:16;2426:6;;-1:-1:-1;;;;;2443:17:8;;;-1:-1:-1;;;;;;2443:17:8;;;;;;2476:40;;2426:6;;;;;;;2476:40;;2407:16;2476:40;2396:128;2333:191;:::o;14:247:12:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;181:9;168:23;200:31;225:5;200:31;:::i;:::-;250:5;84:177;-1:-1:-1;;;84:177:12:o;266:404::-;350:6;358;411:2;399:9;390:7;386:23;382:32;379:2;;;427:1;424;417:12;379:2;466:9;453:23;485:31;510:5;485:31;:::i;:::-;535:5;-1:-1:-1;592:2:12;577:18;;564:32;605:33;564:32;605:33;:::i;:::-;657:7;647:17;;;369:301;;;;;:::o;675:316::-;752:6;760;768;821:2;809:9;800:7;796:23;792:32;789:2;;;837:1;834;827:12;789:2;-1:-1:-1;;860:23:12;;;930:2;915:18;;902:32;;-1:-1:-1;981:2:12;966:18;;;953:32;;779:212;-1:-1:-1;779:212:12:o;1835:356::-;2037:2;2019:21;;;2056:18;;;2049:30;2115:34;2110:2;2095:18;;2088:62;2182:2;2167:18;;2009:182::o;2934:131::-;-1:-1:-1;;;;;3009:31:12;;2999:42;;2989:2;;3055:1;3052;3045:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "229600",
								"executionCost": "123802",
								"totalCost": "353402"
							},
							"external": {
								"SETTINGS()": "10901",
								"getBaseFee()": "2326",
								"getEthAddress()": "2387",
								"getEthCreationFee()": "2380",
								"getTokenAddress()": "2310",
								"getTokenFee()": "2381",
								"owner()": "2342",
								"renounceOwnership()": "28114",
								"setFeeAddresses(address,address)": "infinite",
								"setFees(uint256,uint256,uint256)": "68791",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 1980,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 134,
									"end": 1980,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 134,
									"end": 1980,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 586,
									"end": 860,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 586,
									"end": 860,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 586,
									"end": 860,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 586,
									"end": 860,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 586,
									"end": 860,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 586,
									"end": 860,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 586,
									"end": 860,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 586,
									"end": 860,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 586,
									"end": 860,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 586,
									"end": 860,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 942,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "tag",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 631,
									"end": 633,
									"name": "PUSH",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 611,
									"end": 619,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 611,
									"end": 633,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 611,
									"end": 628,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 650,
									"end": 668,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 650,
									"end": 672,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 717,
									"end": 724,
									"name": "PUSH",
									"source": 5,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 689,
									"end": 714,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 689,
									"end": 724,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 743,
									"end": 767,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 743,
									"end": 791,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 743,
									"end": 791,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 743,
									"end": 791,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 743,
									"end": 791,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 743,
									"end": 791,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 743,
									"end": 791,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 743,
									"end": 791,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 743,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 743,
									"end": 791,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 743,
									"end": 791,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 802,
									"end": 828,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 802,
									"end": 852,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 802,
									"end": 852,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 802,
									"end": 852,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 802,
									"end": 852,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 802,
									"end": 852,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 802,
									"end": 852,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 802,
									"end": 852,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 802,
									"end": 852,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 802,
									"end": 852,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 802,
									"end": 852,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 134,
									"end": 1980,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 134,
									"end": 1980,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 8,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "LOG3",
									"source": 8
								},
								{
									"begin": 2396,
									"end": 2524,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 134,
									"end": 1980,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 134,
									"end": 1980,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 134,
									"end": 1980,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 1980,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 134,
									"end": 1980,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 1980,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 1980,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 134,
									"end": 1980,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 1980,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122094bce2c1dd0582ee4795c88270d9b3b8ce4c433c608a0f13315a5104462591f464736f6c63430008050033",
									".code": [
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "ADE97AB5"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "CEC10C11"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "E38EF7A3"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "10FE9AE8"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "11C84120"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "15E812AD"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "24785172"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "35546850"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 134,
											"end": 1980,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1193,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1193,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1115,
											"end": 1133,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1442,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 868,
											"end": 965,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 868,
											"end": 965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 940,
											"end": 948,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 940,
											"end": 957,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 868,
											"end": 965,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 868,
											"end": 965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 868,
											"end": 965,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 965,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2342,
											"end": 2367,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2342,
											"end": 2367,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2342,
											"end": 2367,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2330,
											"end": 2332,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2333,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 868,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2297,
											"end": 2373,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1200,
											"end": 1315,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1200,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1307,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1283,
											"end": 1307,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1307,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1200,
											"end": 1315,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 973,
											"end": 1072,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 973,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 973,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 973,
											"end": 1072,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 553,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 553,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 553,
											"end": 577,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 553,
											"end": 577,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 553,
											"end": 577,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 553,
											"end": 577,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 553,
											"end": 577,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 553,
											"end": 577,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 553,
											"end": 577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 553,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 577,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 553,
											"end": 577,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2694,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2694,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2669,
											"end": 2694,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2725,
											"end": 2727,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2703,
											"end": 2737,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2703,
											"end": 2737,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2703,
											"end": 2737,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2703,
											"end": 2737,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 2826,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2811,
											"end": 2826,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2811,
											"end": 2826,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2791,
											"end": 2809,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2791,
											"end": 2809,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2791,
											"end": 2809,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 2827,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 2827,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 2827,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 2827,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2863,
											"end": 2878,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2858,
											"end": 2860,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2843,
											"end": 2861,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2861,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2879,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2910,
											"end": 2913,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 2923,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2656,
											"end": 2659,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 2641,
											"end": 2660,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 553,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2623,
											"end": 2929,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1080,
											"end": 1192,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1080,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1159,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1159,
											"end": 1184,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1080,
											"end": 1192,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1593,
											"end": 1617,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1593,
											"end": 1631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1631,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 1631,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1631,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 1631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1631,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1631,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1631,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1687,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1687,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1687,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1687,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1687,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1687,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1687,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1642,
											"end": 1687,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1695,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1846,
											"end": 1854,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1846,
											"end": 1874,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1874,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1874,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1903,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1885,
											"end": 1915,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1951,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1926,
											"end": 1969,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1977,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1632,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1633,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1669,
											"end": 1671,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1649,
											"end": 1667,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1649,
											"end": 1667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1672,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1708,
											"end": 1742,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1688,
											"end": 1706,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1688,
											"end": 1706,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1688,
											"end": 1706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 1743,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1788,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1824,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1805,
											"end": 1824,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1602,
											"end": 1830,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 8,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 14,
											"end": 261,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 225,
											"end": 230,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 200,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 200,
											"end": 231,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 250,
											"end": 255,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 84,
											"end": 261,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 261,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 266,
											"end": 670,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 350,
											"end": 356,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 364,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 411,
											"end": 413,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 408,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 390,
											"end": 397,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 379,
											"end": 381,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 379,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 379,
											"end": 381,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 427,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 425,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 417,
											"end": 429,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 379,
											"end": 381,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 379,
											"end": 381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 466,
											"end": 475,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 453,
											"end": 476,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 485,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 510,
											"end": 515,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 485,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 485,
											"end": 516,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 485,
											"end": 516,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 485,
											"end": 516,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 535,
											"end": 540,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 592,
											"end": 594,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 577,
											"end": 595,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 577,
											"end": 595,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 564,
											"end": 596,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 605,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 564,
											"end": 596,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 605,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 605,
											"end": 638,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 605,
											"end": 638,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 605,
											"end": 638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 657,
											"end": 664,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 647,
											"end": 664,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 647,
											"end": 664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 647,
											"end": 664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 369,
											"end": 670,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 369,
											"end": 670,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 369,
											"end": 670,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 369,
											"end": 670,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 369,
											"end": 670,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 369,
											"end": 670,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 675,
											"end": 991,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 675,
											"end": 991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 752,
											"end": 758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 766,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 768,
											"end": 774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 823,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 800,
											"end": 807,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 796,
											"end": 819,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 792,
											"end": 824,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 789,
											"end": 791,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 789,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 789,
											"end": 791,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 837,
											"end": 838,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 839,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 789,
											"end": 791,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 789,
											"end": 791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 860,
											"end": 883,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 860,
											"end": 883,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 860,
											"end": 883,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 930,
											"end": 932,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 933,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 915,
											"end": 933,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 902,
											"end": 934,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 902,
											"end": 934,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 966,
											"end": 984,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 966,
											"end": 984,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 953,
											"end": 985,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 953,
											"end": 985,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 779,
											"end": 991,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 779,
											"end": 991,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1835,
											"end": 2191,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 1835,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2037,
											"end": 2039,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2019,
											"end": 2040,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2040,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2040,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2056,
											"end": 2074,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2056,
											"end": 2074,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2056,
											"end": 2074,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2149,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2110,
											"end": 2112,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2113,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2095,
											"end": 2113,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2088,
											"end": 2150,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2167,
											"end": 2185,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2009,
											"end": 2191,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2934,
											"end": 3065,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 2934,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3009,
											"end": 3040,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3040,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2999,
											"end": 3041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2999,
											"end": 3041,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2989,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 2989,
											"end": 2991,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"SETTINGS()": "ade97ab5",
							"getBaseFee()": "15e812ad",
							"getEthAddress()": "24785172",
							"getEthCreationFee()": "e38ef7a3",
							"getTokenAddress()": "10fe9ae8",
							"getTokenFee()": "35546850",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setFeeAddresses(address,address)": "11c84120",
							"setFees(uint256,uint256,uint256)": "cec10c11",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SETTINGS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"BASE_FEE\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"TOKEN_FEE\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"ETH_FEE_ADDRESS\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"TOKEN_FEE_ADDRESS\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ETH_CREATION_FEE\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthCreationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_ethAddress\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_tokenFeeAddress\",\"type\":\"address\"}],\"name\":\"setFeeAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ethCreationFee\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ethereum/PresaleSettings.sol\":\"PresaleSettings\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ethereum/PresaleSettings.sol\":{\"keccak256\":\"0x9b7c16089224b8e748e8356016268a8f7383c0a622533a969a6e8e134e236a97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9acc103dbae8f28973c1265d719f76d6adeaffbb4ab2a35107d7414db7df3793\",\"dweb:/ipfs/QmXDUoU1riu5xcASSDQ2zgusRGo5ZvAGVaqT2PWFMTy3dM\"]},\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Utils/EnumerableSet.sol\":{\"keccak256\":\"0x8adfeb5c886c6a727bdeac6db8e78f418e09f16f7c941c7111125b59ec2fd838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632e2346228015ce98183a0f0658057a9f2ae8b8d25b639eb9303e8e0ea34957\",\"dweb:/ipfs/QmPY3nbe3JhMsgyHJTtXRkLTioW997Bvizt23mPNKKGSgu\"]},\"Utils/Ownable.sol\":{\"keccak256\":\"0x5eeb86897007c578f301464fceac720c7330486c54ae85c0c09068b46197cfb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edefd9ff4f087a3016763a687eaae449c0e8f6dcda9d86032a49de900f129050\",\"dweb:/ipfs/Qmc4adiPdGKgEJLxqgd8JuKkwrNBNtB78kkGinnnuUnyJN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2675,
								"contract": "Ethereum/PresaleSettings.sol:PresaleSettings",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1906,
								"contract": "Ethereum/PresaleSettings.sol:PresaleSettings",
								"label": "SETTINGS",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Settings)1903_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_struct(Settings)1903_storage": {
								"encoding": "inplace",
								"label": "struct PresaleSettings.Settings",
								"members": [
									{
										"astId": 1894,
										"contract": "Ethereum/PresaleSettings.sol:PresaleSettings",
										"label": "BASE_FEE",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1896,
										"contract": "Ethereum/PresaleSettings.sol:PresaleSettings",
										"label": "TOKEN_FEE",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1898,
										"contract": "Ethereum/PresaleSettings.sol:PresaleSettings",
										"label": "ETH_FEE_ADDRESS",
										"offset": 0,
										"slot": "2",
										"type": "t_address_payable"
									},
									{
										"astId": 1900,
										"contract": "Ethereum/PresaleSettings.sol:PresaleSettings",
										"label": "TOKEN_FEE_ADDRESS",
										"offset": 0,
										"slot": "3",
										"type": "t_address_payable"
									},
									{
										"astId": 1902,
										"contract": "Ethereum/PresaleSettings.sol:PresaleSettings",
										"label": "ETH_CREATION_FEE",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/Context.sol\":\"Context\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/EnumerableSet.sol\":1265:13048  library EnumerableSet {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/EnumerableSet.sol\":1265:13048  library EnumerableSet {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220158bdb1ac422372bfc8544ac4f91384b1ac8b2acf2e652abd6b82eca0a2427f964736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220158bdb1ac422372bfc8544ac4f91384b1ac8b2acf2e652abd6b82eca0a2427f964736f6c63430008050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO DUP12 0xDB BYTE 0xC4 0x22 CALLDATACOPY 0x2B 0xFC DUP6 DIFFICULTY 0xAC 0x4F SWAP2 CODESIZE 0x4B BYTE 0xC8 0xB2 0xAC CALLCODE 0xE6 MSTORE 0xAB 0xD6 0xB8 0x2E 0xCA EXP 0x24 0x27 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
							"sourceMap": "1265:11783:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1265:11783:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220158bdb1ac422372bfc8544ac4f91384b1ac8b2acf2e652abd6b82eca0a2427f964736f6c63430008050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO DUP12 0xDB BYTE 0xC4 0x22 CALLDATACOPY 0x2B 0xFC DUP6 DIFFICULTY 0xAC 0x4F SWAP2 CODESIZE 0x4B BYTE 0xC8 0xB2 0xAC CALLCODE 0xE6 MSTORE 0xAB 0xD6 0xB8 0x2E 0xCA EXP 0x24 0x27 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
							"sourceMap": "1265:11783:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 13048,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220158bdb1ac422372bfc8544ac4f91384b1ac8b2acf2e652abd6b82eca0a2427f964736f6c63430008050033",
									".code": [
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 13048,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/EnumerableSet.sol\":{\"keccak256\":\"0x8adfeb5c886c6a727bdeac6db8e78f418e09f16f7c941c7111125b59ec2fd838\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632e2346228015ce98183a0f0658057a9f2ae8b8d25b639eb9303e8e0ea34957\",\"dweb:/ipfs/QmPY3nbe3JhMsgyHJTtXRkLTioW997Bvizt23mPNKKGSgu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Utils/Ownable.sol\":{\"keccak256\":\"0x5eeb86897007c578f301464fceac720c7330486c54ae85c0c09068b46197cfb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edefd9ff4f087a3016763a687eaae449c0e8f6dcda9d86032a49de900f129050\",\"dweb:/ipfs/Qmc4adiPdGKgEJLxqgd8JuKkwrNBNtB78kkGinnnuUnyJN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2675,
								"contract": "Utils/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2783,
								"contract": "Utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/SafeMath.sol\":497:7008  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/SafeMath.sol\":497:7008  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122008ecc5f171b47a76a08f28cb37d60f5553f35402888369a89cfaa6af39de3de664736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008ecc5f171b47a76a08f28cb37d60f5553f35402888369a89cfaa6af39de3de664736f6c63430008050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xEC 0xC5 CALL PUSH18 0xB47A76A08F28CB37D60F5553F35402888369 0xA8 SWAP13 STATICCALL 0xA6 0xAF CODECOPY 0xDE RETURNDATASIZE 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
							"sourceMap": "497:6511:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;497:6511:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122008ecc5f171b47a76a08f28cb37d60f5553f35402888369a89cfaa6af39de3de664736f6c63430008050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xEC 0xC5 CALL PUSH18 0xB47A76A08F28CB37D60F5553F35402888369 0xA8 SWAP13 STATICCALL 0xA6 0xAF CODECOPY 0xDE RETURNDATASIZE 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
							"sourceMap": "497:6511:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 497,
									"end": 7008,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008ecc5f171b47a76a08f28cb37d60f5553f35402888369a89cfaa6af39de3de664736f6c63430008050033",
									".code": [
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 497,
											"end": 7008,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/SafeMath.sol\":{\"keccak256\":\"0xdc9b51d94a1db880c1f2e722af561c28c41100eea201b1ae5e77eb7c4250e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b69f7fb378dcfd4aff8ba0547a575485d2d4bb567381e3bf8c593b63272ffc0\",\"dweb:/ipfs/QmaEo28ZDAnpDvpQRRt7Qc8bF5QgJAnTEE4TxYnJS8YmnN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/TransferHelper.sol\":244:2097  library TransferHelper {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/TransferHelper.sol\":244:2097  library TransferHelper {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208ad7961962224ed41e53ff85b1db62f14ea1f5b662a15dc4332beb93f1625ac164736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ad7961962224ed41e53ff85b1db62f14ea1f5b662a15dc4332beb93f1625ac164736f6c63430008050033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xD7 SWAP7 NOT PUSH3 0x224ED4 0x1E MSTORE8 SELFDESTRUCT DUP6 0xB1 0xDB PUSH3 0xF14EA1 CREATE2 0xB6 PUSH3 0xA15DC4 CALLER 0x2B 0xEB SWAP4 CALL PUSH3 0x5AC164 PUSH20 0x6F6C634300080500330000000000000000000000 ",
							"sourceMap": "244:1853:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;244:1853:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ad7961962224ed41e53ff85b1db62f14ea1f5b662a15dc4332beb93f1625ac164736f6c63430008050033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xD7 SWAP7 NOT PUSH3 0x224ED4 0x1E MSTORE8 SELFDESTRUCT DUP6 0xB1 0xDB PUSH3 0xF14EA1 CREATE2 0xB6 PUSH3 0xA15DC4 CALLER 0x2B 0xEB SWAP4 CALL PUSH3 0x5AC164 PUSH20 0x6F6C634300080500330000000000000000000000 ",
							"sourceMap": "244:1853:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferBaseToken(address,address payable,uint256,bool)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 244,
									"end": 2097,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ad7961962224ed41e53ff85b1db62f14ea1f5b662a15dc4332beb93f1625ac164736f6c63430008050033",
									".code": [
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 244,
											"end": 2097,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/TransferHelper.sol\":{\"keccak256\":\"0xf64de8bda44d6e6a0ef231b637d0d6c78522fd561464c547eeca34f1a8e0482c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d36e8e7a9c1c50e24298b33bbde7e9d74998b58c889b706c80f95d130952d9e7\",\"dweb:/ipfs/QmP5sAxCH4LFZFJ9uxtFdCdZ3DPJJfv1iU6cHY19urExxw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> Ethereum/Generator.sol:31:5:\n   |\n31 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 946,
					"file": "Ethereum/Generator.sol",
					"start": 829
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> Ethereum/Presale.sol:155:34:\n    |\n155 |         if(!checkAdminAddress()) {\n    |                                  ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5435,
					"file": "Ethereum/Presale.sol",
					"start": 5194
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> Ethereum/Presale.sol:161:9:\n    |\n161 |         uint256 remainingByUser = saleInfor.maxSpendPerBuyer - buyer.baseDeposit;\n    |         ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5717,
					"file": "Ethereum/Presale.sol",
					"start": 5445
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> Ethereum/Presale.sol:164:9:\n    |\n164 |         require(real_amount_in <= allowance, \"Sale is success\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5783,
					"file": "Ethereum/Presale.sol",
					"start": 5728
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> Ethereum/Presale.sol:165:9:\n    |\n165 |         uint256 tokenSold = (real_amount_in.\n    |         ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5974,
					"file": "Ethereum/Presale.sol",
					"start": 5794
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> Ethereum/Presale.sol:168:9:\n    |\n168 |         buyer.baseDeposit += real_amount_in;\n    |         ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6460,
					"file": "Ethereum/Presale.sol",
					"start": 6002
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> Ethereum/Presale.sol:178:9:\n    |\n178 |         if(!saleInfor.saleIsBaseToken) {\n    |         ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6722,
					"file": "Ethereum/Presale.sol",
					"start": 6471
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							2068
						],
						"ERC20": [
							585
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 664,
							"src": "135:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 689,
							"src": "159:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Context.sol",
							"file": "../Utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 2069,
							"src": "191:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2068,
										"src": "1442:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1442:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "1451:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1451:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 688,
										"src": "1459:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1459:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "225:1197:0",
								"text": " @dev Implementation of the {IERC20} interface.\nz\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 585,
							"linearizedBaseContracts": [
								585,
								688,
								663,
								2068
							],
							"name": "ERC20",
							"nameLocation": "1433:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1517:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1481:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1489:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1481:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1500:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1591:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1535:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1543:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1535:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 19,
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1554:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1573:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1627:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1611:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1611:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1663:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1648:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1648:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1690:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1675:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1675:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2074:60:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2085:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2093:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2085:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2085:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2109:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2119:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2109:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2109:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1706:306:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2044:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2030:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2030:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2065:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2051:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2051:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2074:0:0"
									},
									"scope": 585,
									"src": "2018:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										675
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2273:31:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2291:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2284:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2142:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2213:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2240:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2217:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2258:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2258:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:15:0"
									},
									"scope": 585,
									"src": "2204:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										681
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2494:33:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2505:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2312:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2432:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2461:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2438:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2479:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2479:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2478:15:0"
									},
									"scope": 585,
									"src": "2423:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										687
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3233:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3251:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3244:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2535:625:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3175:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3206:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3183:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3224:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3223:9:0"
									},
									"scope": 585,
									"src": "3166:95:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3396:38:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3414:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3407:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3269:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3335:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3369:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3346:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3387:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3386:9:0"
									},
									"scope": 585,
									"src": "3326:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										620
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3580:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3598:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3608:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3591:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3442:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3506:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3553:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3524:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3516:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3515:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3571:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3570:9:0"
									},
									"scope": 585,
									"src": "3497:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3915:108:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3934:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3926:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3926:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2058,
														"src": "3942:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3942:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3926:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3975:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3982:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3986:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3965:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3965:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3965:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4011:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "4004:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3632:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3839:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3891:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3856:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3848:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3909:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3909:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3908:6:0"
									},
									"scope": 585,
									"src": "3830:193:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4184:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4202:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4214:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4202:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4221:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4202:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4195:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "4031:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4095:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4157:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4113:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4105:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4128:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4120:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4120:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4104:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4175:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4174:9:0"
									},
									"scope": 585,
									"src": "4086:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										650
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4646:112:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4665:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4657:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4657:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2058,
														"src": "4673:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4673:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4657:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4705:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4712:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4721:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "4696:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4696:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4696:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4746:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4739:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4245:306:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4566:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4622:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4599:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4591:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4573:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4640:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4640:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:6:0"
									},
									"scope": 585,
									"src": "4557:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5475:158:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5494:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5486:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5486:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2058,
														"src": "5504:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5504:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5486:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5543:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5558:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "5527:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5527:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5527:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5586:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5592:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5596:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5576:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5576:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5576:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5621:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5614:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4766:566:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5347:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5451:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5401:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5393:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5422:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5414:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5359:76:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5469:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5469:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5468:6:0"
									},
									"scope": 585,
									"src": "5338:295:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "6136:144:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6155:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "6147:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6147:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2058,
														"src": "6163:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6163:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6147:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6195:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6202:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6221:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6228:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6211:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6211:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6239:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6211:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "6186:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6186:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "6186:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6268:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6261:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5641:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6051:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6077:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6069:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6094:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6086:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6068:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6130:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6130:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6129:6:0"
									},
									"scope": 585,
									"src": "6042:238:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6882:337:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6901:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6893:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6893:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2058,
														"src": "6909:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6909:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6893:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6940:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6932:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6969:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6959:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6959:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6932:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "7003:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "7023:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7003:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7040:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6995:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6995:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6995:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "7091:97:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "7125:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "7132:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "7141:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "7160:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7141:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "7116:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7116:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "7116:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7207:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "7200:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6288:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6792:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6818:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6810:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6835:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6827:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6876:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6876:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6875:6:0"
									},
									"scope": 585,
									"src": "6783:436:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7810:559:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7829:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7837:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7837:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7837:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7829:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7849:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7821:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7821:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7908:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7922:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7914:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7914:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7908:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7926:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7900:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7900:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7900:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7998:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8004:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "7977:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7977:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7977:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "8036:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "8028:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8028:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "8050:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "8060:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8050:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8028:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "8084:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "8099:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8084:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8107:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8076:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8076:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "8076:72:0"
											},
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "8159:75:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8184:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "8194:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8184:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "8202:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "8216:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8202:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8184:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "8184:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8244:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 328,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8254:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8244:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8261:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8244:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "8244:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8294:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8300:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8304:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8285:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8285:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8280:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8344:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8350:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8354:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8324:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8324:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8324:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7227:465:0",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7707:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7735:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7727:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7758:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7750:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7750:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7779:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7771:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7716:76:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7810:0:0"
									},
									"scope": 585,
									"src": "7698:671:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8721:334:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8740:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8759:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8751:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8751:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8740:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8763:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8732:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8732:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8732:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8839:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8831:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8831:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8831:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8843:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8852:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8810:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8810:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8872:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8888:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8872:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8872:22:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 377,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8905:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 379,
														"indexExpression": {
															"id": 378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8905:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 380,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8927:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8905:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "8905:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8966:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8958:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8958:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8958:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8970:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8979:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8949:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8949:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "EmitStatement",
												"src": "8944:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9027:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9019:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9019:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9019:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9040:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8999:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8999:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8999:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8377:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8665:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8679:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8671:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8696:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8688:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8670:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8721:0:0"
									},
									"scope": 585,
									"src": "8656:399:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "9453:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "9472:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9491:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9483:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9483:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9483:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9472:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9495:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9464:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9464:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "9464:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9582:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9574:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9574:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9574:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9586:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9544:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9544:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "9544:49:0"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9614:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "9606:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9606:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"baseExpression": {
														"id": 431,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9631:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 433,
													"indexExpression": {
														"id": 432,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "9641:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9631:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9606:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 436,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "9668:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 437,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "9686:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9668:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9694:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9660:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "9660:71:0"
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "9742:81:0",
												"statements": [
													{
														"expression": {
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 442,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9767:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 444,
																"indexExpression": {
																	"id": 443,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "9777:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9767:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 445,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "9788:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 446,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "9805:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9788:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9767:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "9767:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9833:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 452,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "9849:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9833:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "9833:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 456,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9882:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9899:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9891:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9891:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9891:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9903:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "9873:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9873:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "EmitStatement",
												"src": "9868:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9943:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9960:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9952:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9952:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9952:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9964:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9923:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9923:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "9923:48:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "9063:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9397:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9411:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9403:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9428:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9420:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9402:33:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9453:0:0"
									},
									"scope": 585,
									"src": "9388:591:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "10534:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10553:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10570:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10562:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10562:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10562:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10553:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10574:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10545:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10545:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "10545:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "10632:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10651:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10643:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 496,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10643:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10643:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10632:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10655:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10624:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "10624:68:0"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 504,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10705:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 507,
															"indexExpression": {
																"id": 505,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10717:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10705:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 508,
														"indexExpression": {
															"id": 506,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10705:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 509,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "10735:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10705:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "10705:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "10766:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10773:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "10782:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "10757:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10757:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "EmitStatement",
												"src": "10752:37:0"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "9987:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10426:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10477:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10469:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10503:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10495:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10434:82:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10534:0:0"
									},
									"scope": 585,
									"src": "10417:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "11212:329:0",
										"statements": [
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11231:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "11223:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11223:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"id": 532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "11260:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "11267:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 531,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "11250:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11250:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11223:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "11290:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11315:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11315:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 537,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11310:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11310:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11310:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11290:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "11286:248:0",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "11329:205:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 544,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "11352:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 545,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "11372:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11352:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11380:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 543,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11344:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11344:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "11344:68:0"
														},
														{
															"id": 558,
															"nodeType": "UncheckedBlock",
															"src": "11427:96:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 551,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "11465:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 552,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "11472:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 553,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "11481:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 554,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 526,
																					"src": "11500:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11481:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 550,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "11456:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11456:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 557,
																	"nodeType": "ExpressionStatement",
																	"src": "11456:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "10805:277:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11097:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11131:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "11123:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11155:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "11147:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11181:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "11173:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11112:82:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11212:0:0"
									},
									"scope": 585,
									"src": "11088:453:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "12264:2:0",
										"statements": []
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "11549:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12150:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12189:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "12181:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12212:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "12204:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12233:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "12225:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12170:76:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12264:0:0"
									},
									"scope": 585,
									"src": "12141:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "12992:2:0",
										"statements": []
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "12274:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12879:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12917:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12909:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12940:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12932:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12961:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12953:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12898:76:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12992:0:0"
									},
									"scope": 585,
									"src": "12870:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 586,
							"src": "1424:11573:0",
							"usedErrors": []
						}
					],
					"src": "108:12889:0"
				},
				"id": 0
			},
			"ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IERC20",
							"nameLocation": "220:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 597,
									"name": "Transfer",
									"nameLocation": "409:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "418:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "440:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "460:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:1"
									},
									"src": "403:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 606,
									"name": "Approval",
									"nameLocation": "646:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "655:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "678:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "703:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:1"
									},
									"src": "640:78:1"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "846:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:1"
									},
									"scope": 663,
									"src": "800:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "962:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:1"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "1002:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:1"
									},
									"scope": 663,
									"src": "943:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "1027:208:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1250:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1267:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1259:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1279:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1271:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:28:1"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1305:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1305:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:6:1"
									},
									"scope": 663,
									"src": "1241:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "1319:270:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1604:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1622:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1614:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1637:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1629:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1629:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:32:1"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1669:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:9:1"
									},
									"scope": 663,
									"src": "1595:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1686:655:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2356:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2372:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2364:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2389:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2381:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2381:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:33:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2415:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2415:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2414:6:1"
									},
									"scope": 663,
									"src": "2347:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2429:295:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2739:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2770:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2762:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2793:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2785:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2814:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2806:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2806:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2751:76:1"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2846:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2846:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:6:1"
									},
									"scope": 663,
									"src": "2730:122:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 664,
							"src": "210:2645:1",
							"usedErrors": []
						}
					],
					"src": "109:2748:1"
				},
				"id": 1
			},
			"ERC20/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:2"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 689,
							"sourceUnit": 664,
							"src": "140:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 668,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "316:6:2"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "316:6:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "166:120:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 688,
							"linearizedBaseContracts": [
								688,
								663
							],
							"name": "IERC20Metadata",
							"nameLocation": "298:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "330:56:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "401:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "431:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "431:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:15:2"
									},
									"scope": 688,
									"src": "392:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "454:58:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "527:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "559:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:15:2"
									},
									"scope": 688,
									"src": "518:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "582:67:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "664:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "698:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:9:2"
									},
									"scope": 688,
									"src": "655:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 689,
							"src": "288:422:2",
							"usedErrors": []
						}
					],
					"src": "113:599:2"
				},
				"id": 2
			},
			"Ethereum/Generator.sol": {
				"ast": {
					"absolutePath": "Ethereum/Generator.sol",
					"exportedSymbols": {
						"Context": [
							2068
						],
						"ERC20": [
							585
						],
						"EnumerableSet": [
							2667
						],
						"Generator": [
							723
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						],
						"Ownable": [
							2772
						],
						"Presale": [
							1882
						],
						"PresaleSettings": [
							2046
						],
						"ReentrancyGuard": [
							2812
						],
						"SafeMath": [
							3124
						],
						"TransferHelper": [
							3316
						]
					},
					"id": 724,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:3"
						},
						{
							"absolutePath": "Utils/Ownable.sol",
							"file": "../Utils/Ownable.sol",
							"id": 691,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 724,
							"sourceUnit": 2773,
							"src": "67:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/EnumerableSet.sol",
							"file": "../Utils/EnumerableSet.sol",
							"id": 692,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 724,
							"sourceUnit": 2668,
							"src": "99:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC20/ERC20.sol",
							"file": "../ERC20/ERC20.sol",
							"id": 693,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 724,
							"sourceUnit": 586,
							"src": "137:28:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ethereum/Presale.sol",
							"file": "./Presale.sol",
							"id": 694,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 724,
							"sourceUnit": 1883,
							"src": "167:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ethereum/PresaleSettings.sol",
							"file": "./PresaleSettings.sol",
							"id": 695,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 724,
							"sourceUnit": 2047,
							"src": "192:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 696,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2772,
										"src": "251:7:3"
									},
									"id": 697,
									"nodeType": "InheritanceSpecifier",
									"src": "251:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 723,
							"linearizedBaseContracts": [
								723,
								2772,
								2068
							],
							"name": "Generator",
							"nameLocation": "238:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d8f59f91",
									"id": 700,
									"mutability": "mutable",
									"name": "presaleSettings",
									"nameLocation": "805:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 723,
									"src": "782:38:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_PresaleSettings_$2046",
										"typeString": "contract PresaleSettings"
									},
									"typeName": {
										"id": 699,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 698,
											"name": "PresaleSettings",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2046,
											"src": "782:15:3"
										},
										"referencedDeclaration": 2046,
										"src": "782:15:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PresaleSettings_$2046",
											"typeString": "contract PresaleSettings"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "850:96:3",
										"statements": [
											{
												"expression": {
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 703,
														"name": "presaleSettings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "861:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PresaleSettings_$2046",
															"typeString": "contract PresaleSettings"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307833353436353244304531386442433934413132356233313762333945303530356133383332373930",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "895:42:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x354652D0E18dBC94A125b317b39E0505a3832790"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 704,
															"name": "PresaleSettings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "879:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_PresaleSettings_$2046_$",
																"typeString": "type(contract PresaleSettings)"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "879:59:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_PresaleSettings_$2046",
															"typeString": "contract PresaleSettings"
														}
													},
													"src": "861:77:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_PresaleSettings_$2046",
														"typeString": "contract PresaleSettings"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "861:77:3"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:2:3"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "850:0:3"
									},
									"scope": 723,
									"src": "829:117:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "1489:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 716,
																	"name": "presaleSettings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "1523:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PresaleSettings_$2046",
																		"typeString": "contract PresaleSettings"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PresaleSettings_$2046",
																		"typeString": "contract PresaleSettings"
																	}
																],
																"id": 715,
																"name": "PresaleSettings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "1507:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_PresaleSettings_$2046_$",
																	"typeString": "type(contract PresaleSettings)"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1507:32:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PresaleSettings_$2046",
																"typeString": "contract PresaleSettings"
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getEthCreationFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1975,
														"src": "1507:50:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1507:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 720,
												"nodeType": "Return",
												"src": "1500:59:3"
											}
										]
									},
									"functionSelector": "ced72f87",
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFee",
									"nameLocation": "1451:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1457:2:3"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1480:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:9:3"
									},
									"scope": 723,
									"src": "1442:125:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 724,
							"src": "229:1341:3",
							"usedErrors": []
						}
					],
					"src": "40:1530:3"
				},
				"id": 3
			},
			"Ethereum/Presale.sol": {
				"ast": {
					"absolutePath": "Ethereum/Presale.sol",
					"exportedSymbols": {
						"Context": [
							2068
						],
						"ERC20": [
							585
						],
						"EnumerableSet": [
							2667
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						],
						"Ownable": [
							2772
						],
						"Presale": [
							1882
						],
						"ReentrancyGuard": [
							2812
						],
						"SafeMath": [
							3124
						],
						"TransferHelper": [
							3316
						]
					},
					"id": 1883,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 725,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:4"
						},
						{
							"absolutePath": "ERC20/ERC20.sol",
							"file": "../ERC20/ERC20.sol",
							"id": 726,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 586,
							"src": "120:28:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/ReentrancyGuard.sol",
							"file": "../Utils/ReentrancyGuard.sol",
							"id": 727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 2813,
							"src": "150:38:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/TransferHelper.sol",
							"file": "../Utils/TransferHelper.sol",
							"id": 728,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 3317,
							"src": "190:37:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/EnumerableSet.sol",
							"file": "../Utils/EnumerableSet.sol",
							"id": 729,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 2668,
							"src": "229:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Ownable.sol",
							"file": "../Utils/Ownable.sol",
							"id": 730,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 2773,
							"src": "267:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/Context.sol",
							"file": "../Utils/Context.sol",
							"id": 731,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 2069,
							"src": "299:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/SafeMath.sol",
							"file": "../Utils/SafeMath.sol",
							"id": 732,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 3125,
							"src": "331:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 733,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2812,
										"src": "390:15:4"
									},
									"id": 734,
									"nodeType": "InheritanceSpecifier",
									"src": "390:15:4"
								},
								{
									"baseName": {
										"id": 735,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2772,
										"src": "407:7:4"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "407:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1882,
							"linearizedBaseContracts": [
								1882,
								2772,
								2068,
								2812
							],
							"name": "Presale",
							"nameLocation": "379:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 740,
									"libraryName": {
										"id": 737,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2667,
										"src": "427:13:4"
									},
									"nodeType": "UsingForDirective",
									"src": "421:49:4",
									"typeName": {
										"id": 739,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 738,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2380,
											"src": "445:24:4"
										},
										"referencedDeclaration": 2380,
										"src": "445:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"id": 743,
									"libraryName": {
										"id": 741,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3124,
										"src": "482:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "476:27:4",
									"typeName": {
										"id": 742,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "495:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "Presale.SaleInfor",
									"id": 770,
									"members": [
										{
											"constant": false,
											"id": 745,
											"mutability": "mutable",
											"name": "presaleOwner",
											"nameLocation": "555:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 770,
											"src": "539:28:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 744,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "539:15:4",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 748,
											"mutability": "mutable",
											"name": "saleToken",
											"nameLocation": "584:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 770,
											"src": "578:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_ERC20_$585",
												"typeString": "contract ERC20"
											},
											"typeName": {
												"id": 747,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 746,
													"name": "ERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 585,
													"src": "578:5:4"
												},
												"referencedDeclaration": 585,
												"src": "578:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$585",
													"typeString": "contract ERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 751,
											"mutability": "mutable",
											"name": "baseToken",
											"nameLocation": "610:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 770,
											"src": "604:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_ERC20_$585",
												"typeString": "contract ERC20"
											},
											"typeName": {
												"id": 750,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 749,
													"name": "ERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 585,
													"src": "604:5:4"
												},
												"referencedDeclaration": 585,
												"src": "604:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$585",
													"typeString": "contract ERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 753,
											"mutability": "mutable",
											"name": "tokenPrice",
											"nameLocation": "638:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 770,
											"src": "630:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 752,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "630:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 755,
											"mutability": "mutable",
											"name": "startSale",
											"nameLocation": "667:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 770,
											"src": "659:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 754,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "659:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 757,
											"mutability": "mutable",
											"name": "endSale",
											"nameLocation": "695:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 770,
											"src": "687:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 756,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "687:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 759,
											"mutability": "mutable",
											"name": "minSpendPerBuyer",
											"nameLocation": "721:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 770,
											"src": "713:24:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 758,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "713:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 761,
											"mutability": "mutable",
											"name": "maxSpendPerBuyer",
											"nameLocation": "756:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 770,
											"src": "748:24:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 760,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "748:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 763,
											"mutability": "mutable",
											"name": "refundFee",
											"nameLocation": "791:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 770,
											"src": "783:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 762,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "783:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 765,
											"mutability": "mutable",
											"name": "claimFee",
											"nameLocation": "819:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 770,
											"src": "811:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 764,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "811:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 767,
											"mutability": "mutable",
											"name": "saleIsBaseToken",
											"nameLocation": "843:15:4",
											"nodeType": "VariableDeclaration",
											"scope": 770,
											"src": "838:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 766,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "838:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 769,
											"mutability": "mutable",
											"name": "amountTokenForSale",
											"nameLocation": "877:18:4",
											"nodeType": "VariableDeclaration",
											"scope": 770,
											"src": "869:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 768,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "869:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SaleInfor",
									"nameLocation": "518:9:4",
									"nodeType": "StructDefinition",
									"scope": 1882,
									"src": "511:392:4",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.SaleTotalSupply",
									"id": 775,
									"members": [
										{
											"constant": false,
											"id": 772,
											"mutability": "mutable",
											"name": "hardCap",
											"nameLocation": "957:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 775,
											"src": "949:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 771,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "949:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 774,
											"mutability": "mutable",
											"name": "softCap",
											"nameLocation": "983:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 775,
											"src": "975:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 773,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "975:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SaleTotalSupply",
									"nameLocation": "922:15:4",
									"nodeType": "StructDefinition",
									"scope": 1882,
									"src": "915:83:4",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.BuyerInfo",
									"id": 786,
									"members": [
										{
											"constant": false,
											"id": 777,
											"mutability": "mutable",
											"name": "baseDeposit",
											"nameLocation": "1042:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 786,
											"src": "1034:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 776,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1034:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 779,
											"mutability": "mutable",
											"name": "tokenOwner",
											"nameLocation": "1072:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 786,
											"src": "1064:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 778,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1064:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 781,
											"mutability": "mutable",
											"name": "lastWithDraw",
											"nameLocation": "1101:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 786,
											"src": "1093:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 780,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1093:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 783,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nameLocation": "1132:18:4",
											"nodeType": "VariableDeclaration",
											"scope": 786,
											"src": "1124:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 782,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1124:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 785,
											"mutability": "mutable",
											"name": "totalBaseWithDraw",
											"nameLocation": "1169:17:4",
											"nodeType": "VariableDeclaration",
											"scope": 786,
											"src": "1161:25:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 784,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1161:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BuyerInfo",
									"nameLocation": "1013:9:4",
									"nodeType": "StructDefinition",
									"scope": 1882,
									"src": "1006:188:4",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.PresaleStatus",
									"id": 808,
									"members": [
										{
											"constant": false,
											"id": 788,
											"mutability": "mutable",
											"name": "totalBaseCollected",
											"nameLocation": "1242:18:4",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "1234:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 787,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1234:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 790,
											"mutability": "mutable",
											"name": "totalTokenSold",
											"nameLocation": "1279:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "1271:22:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 789,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1271:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 792,
											"mutability": "mutable",
											"name": "totalTokenWithDraw",
											"nameLocation": "1312:18:4",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "1304:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 791,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1304:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 794,
											"mutability": "mutable",
											"name": "totalBaseWithDraw",
											"nameLocation": "1349:17:4",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "1341:25:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 793,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1341:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 796,
											"mutability": "mutable",
											"name": "totalTokenBackForAdmin",
											"nameLocation": "1385:22:4",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "1377:30:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 795,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1377:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 798,
											"mutability": "mutable",
											"name": "totalBaseBackForAdmin",
											"nameLocation": "1426:21:4",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "1418:29:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 797,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1418:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 800,
											"mutability": "mutable",
											"name": "numberBuyer",
											"nameLocation": "1466:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "1458:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 799,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1458:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 802,
											"mutability": "mutable",
											"name": "isOwnerClaimSaleToken",
											"nameLocation": "1493:21:4",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "1488:26:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 801,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1488:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 804,
											"mutability": "mutable",
											"name": "isOwnerRefundBaseToken",
											"nameLocation": "1530:22:4",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "1525:27:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 803,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1525:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 807,
											"mutability": "mutable",
											"name": "admin",
											"nameLocation": "1573:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 808,
											"src": "1563:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 806,
												"nodeType": "ArrayTypeName",
												"src": "1563:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PresaleStatus",
									"nameLocation": "1209:13:4",
									"nodeType": "StructDefinition",
									"scope": 1882,
									"src": "1202:384:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2d3f423",
									"id": 813,
									"mutability": "mutable",
									"name": "buyerInfo",
									"nameLocation": "1635:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "1598:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$786_storage_$",
										"typeString": "mapping(address => struct Presale.BuyerInfo)"
									},
									"typeName": {
										"id": 812,
										"keyType": {
											"id": 809,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1606:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1598:29:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$786_storage_$",
											"typeString": "mapping(address => struct Presale.BuyerInfo)"
										},
										"valueType": {
											"id": 811,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 810,
												"name": "BuyerInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 786,
												"src": "1617:9:4"
											},
											"referencedDeclaration": 786,
											"src": "1617:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
												"typeString": "struct Presale.BuyerInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "56c5f349",
									"id": 817,
									"mutability": "mutable",
									"name": "userFee",
									"nameLocation": "1686:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "1651:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 816,
										"keyType": {
											"id": 814,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1659:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1651:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 815,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1670:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "acfb2355",
									"id": 820,
									"mutability": "mutable",
									"name": "presaleStatus",
									"nameLocation": "1721:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "1700:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
										"typeString": "struct Presale.PresaleStatus"
									},
									"typeName": {
										"id": 819,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 818,
											"name": "PresaleStatus",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 808,
											"src": "1700:13:4"
										},
										"referencedDeclaration": 808,
										"src": "1700:13:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PresaleStatus_$808_storage_ptr",
											"typeString": "struct Presale.PresaleStatus"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "12e5d0b9",
									"id": 823,
									"mutability": "mutable",
									"name": "saleTotalSupply",
									"nameLocation": "1764:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "1741:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_SaleTotalSupply_$775_storage",
										"typeString": "struct Presale.SaleTotalSupply"
									},
									"typeName": {
										"id": 822,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 821,
											"name": "SaleTotalSupply",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 775,
											"src": "1741:15:4"
										},
										"referencedDeclaration": 775,
										"src": "1741:15:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_SaleTotalSupply_$775_storage_ptr",
											"typeString": "struct Presale.SaleTotalSupply"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18856a2f",
									"id": 826,
									"mutability": "mutable",
									"name": "saleInfor",
									"nameLocation": "1803:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "1786:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
										"typeString": "struct Presale.SaleInfor"
									},
									"typeName": {
										"id": 825,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 824,
											"name": "SaleInfor",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 770,
											"src": "1786:9:4"
										},
										"referencedDeclaration": 770,
										"src": "1786:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_SaleInfor_$770_storage_ptr",
											"typeString": "struct Presale.SaleInfor"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 829,
									"mutability": "mutable",
									"name": "WETH",
									"nameLocation": "1833:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "1819:18:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$663",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 828,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 827,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 663,
											"src": "1819:6:4"
										},
										"referencedDeclaration": 663,
										"src": "1819:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$663",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 832,
									"mutability": "mutable",
									"name": "admins",
									"nameLocation": "1877:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "1844:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$2380_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 831,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 830,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2380,
											"src": "1844:24:4"
										},
										"referencedDeclaration": 2380,
										"src": "1844:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1df4ccfc",
									"id": 834,
									"mutability": "mutable",
									"name": "totalFee",
									"nameLocation": "1906:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "1891:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 833,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1891:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3b5ef2ad",
									"id": 836,
									"mutability": "mutable",
									"name": "feeAnyone",
									"nameLocation": "1936:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "1921:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 835,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1921:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ae2b0965",
									"id": 838,
									"mutability": "mutable",
									"name": "adminReceiveFee",
									"nameLocation": "1967:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "1952:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 837,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1952:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4c1dee9",
									"id": 840,
									"mutability": "mutable",
									"name": "feeCreateSale",
									"nameLocation": "2005:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "1990:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 839,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1990:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "2050:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 845,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2058,
																		"src": "2085:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2085:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 843,
																	"name": "admins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "2069:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$2380_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2461,
																"src": "2069:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2380_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2380_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2069:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742061646d696e",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2100:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
																"typeString": "literal_string \"Not admin\""
															},
															"value": "Not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa7e120cf98867f00c0ac28b387a73caec64b93b1889065f7b4c5e5232c0bad6",
																"typeString": "literal_string \"Not admin\""
															}
														],
														"id": 842,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2061:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2061:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "2061:51:4"
											},
											{
												"id": 851,
												"nodeType": "PlaceholderStatement",
												"src": "2123:1:4"
											}
										]
									},
									"id": 853,
									"name": "onlyAdmin",
									"nameLocation": "2038:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:2:4"
									},
									"src": "2029:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "2168:100:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 856,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "2187:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 858,
																	"name": "saleInfor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "2203:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																		"typeString": "struct Presale.SaleInfor storage ref"
																	}
																},
																"id": 859,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "presaleOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 745,
																"src": "2203:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2187:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792070726573616c65206f776e6572",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2227:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9484c9f673aabd7ceaf636aee1345679ba5a9ed94ea54709581b0fe1962a68ab",
																"typeString": "literal_string \"Only presale owner\""
															},
															"value": "Only presale owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9484c9f673aabd7ceaf636aee1345679ba5a9ed94ea54709581b0fe1962a68ab",
																"typeString": "literal_string \"Only presale owner\""
															}
														],
														"id": 855,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2179:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "2179:69:4"
											},
											{
												"id": 864,
												"nodeType": "PlaceholderStatement",
												"src": "2259:1:4"
											}
										]
									},
									"id": 866,
									"name": "onlyPresaleOwner",
									"nameLocation": "2149:16:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2165:2:4"
									},
									"src": "2140:128:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "2301:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 869,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "2320:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 871,
																	"name": "saleInfor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "2336:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																		"typeString": "struct Presale.SaleInfor storage ref"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "presaleOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 745,
																"src": "2336:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2320:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742073616c65206f776e6572",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2360:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d260997bd85ce88e5fe3a090aa0509f0362655b7ef85530ca7ca41b7767ad72f",
																"typeString": "literal_string \"Not sale owner\""
															},
															"value": "Not sale owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d260997bd85ce88e5fe3a090aa0509f0362655b7ef85530ca7ca41b7767ad72f",
																"typeString": "literal_string \"Not sale owner\""
															}
														],
														"id": 868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2312:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2312:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "2312:65:4"
											},
											{
												"id": 877,
												"nodeType": "PlaceholderStatement",
												"src": "2388:1:4"
											}
										]
									},
									"id": 879,
									"name": "onlySaleOwner",
									"nameLocation": "2285:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2298:2:4"
									},
									"src": "2276:121:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "2427:205:4",
										"statements": [
											{
												"expression": {
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 882,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "2438:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$663",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307863373738343137453036333134313133394663653031303938323738303134304161306344354162",
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2451:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xc778417E063141139Fce010982780140Aa0cD5Ab"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 883,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "2445:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2445:49:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$585",
															"typeString": "contract ERC20"
														}
													},
													"src": "2438:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$663",
														"typeString": "contract IERC20"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "2438:56:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307836436362343165656441356130373330373646334537644331363134433138356235664134316544",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2516:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x6Ccb41eedA5a073076F3E7dC1614C185b5fA41eD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 888,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "2505:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2380_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2407,
														"src": "2505:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2380_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2380_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "2505:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307834663042313262424634304663313832353539383232413562316442364433346462433345303136",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2581:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x4f0B12bBF40Fc182559822A5b1dB6D34dbC3E016"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 894,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "2570:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2380_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2407,
														"src": "2570:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2380_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2380_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2570:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "2570:54:4"
											}
										]
									},
									"id": 901,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2416:2:4"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2427:0:4"
									},
									"scope": 1882,
									"src": "2405:227:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "2915:1141:4",
										"statements": [
											{
												"expression": {
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 922,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "2926:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "presaleOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 745,
														"src": "2926:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 925,
														"name": "_presaleOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2951:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2926:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "2926:38:4"
											},
											{
												"expression": {
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 928,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "2975:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "saleToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 748,
														"src": "2975:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$585",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 931,
														"name": "_saleToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "2997:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$585",
															"typeString": "contract ERC20"
														}
													},
													"src": "2975:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$585",
														"typeString": "contract ERC20"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "2975:32:4"
											},
											{
												"expression": {
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 934,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "3018:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "baseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 751,
														"src": "3018:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$585",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 937,
														"name": "_baseTOken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "3040:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$585",
															"typeString": "contract ERC20"
														}
													},
													"src": "3018:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$585",
														"typeString": "contract ERC20"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "3018:32:4"
											},
											{
												"expression": {
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 940,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "3061:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 942,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 753,
														"src": "3061:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 943,
																"name": "datas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "3084:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																	"typeString": "uint256[9] memory"
																}
															},
															"id": 945,
															"indexExpression": {
																"hexValue": "30",
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3090:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3084:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3095:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 950,
																							"name": "saleInfor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 826,
																							"src": "3114:9:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																								"typeString": "struct Presale.SaleInfor storage ref"
																							}
																						},
																						"id": 951,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "saleToken",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 748,
																						"src": "3114:19:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					],
																					"id": 949,
																					"name": "ERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "3108:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																						"typeString": "type(contract ERC20)"
																					}
																				},
																				"id": 952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3108:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$585",
																					"typeString": "contract ERC20"
																				}
																			},
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "decimals",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 74,
																			"src": "3108:35:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																				"typeString": "function () view external returns (uint256)"
																			}
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3108:37:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3100:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 947,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3100:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3100:46:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3095:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3084:62:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3061:85:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "3061:85:4"
											},
											{
												"expression": {
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 960,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "3157:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 755,
														"src": "3157:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 963,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "3179:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 965,
														"indexExpression": {
															"hexValue": "31",
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3185:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3179:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3157:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "3157:30:4"
											},
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 968,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "3198:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 970,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "endSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 757,
														"src": "3198:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 971,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "3218:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 973,
														"indexExpression": {
															"hexValue": "32",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3224:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3218:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3198:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "3198:28:4"
											},
											{
												"expression": {
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 976,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "3237:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "minSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 759,
														"src": "3237:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 979,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "3266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 981,
														"indexExpression": {
															"hexValue": "33",
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3272:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3266:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3237:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "3237:37:4"
											},
											{
												"expression": {
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 984,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "3285:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "maxSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 761,
														"src": "3285:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 987,
																"name": "datas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "3314:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																	"typeString": "uint256[9] memory"
																}
															},
															"id": 989,
															"indexExpression": {
																"hexValue": "34",
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3320:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3314:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3325:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 994,
																							"name": "saleInfor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 826,
																							"src": "3345:9:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																								"typeString": "struct Presale.SaleInfor storage ref"
																							}
																						},
																						"id": 995,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "baseToken",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 751,
																						"src": "3345:19:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					],
																					"id": 993,
																					"name": "ERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "3339:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																						"typeString": "type(contract ERC20)"
																					}
																				},
																				"id": 996,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3339:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$585",
																					"typeString": "contract ERC20"
																				}
																			},
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "decimals",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 74,
																			"src": "3339:35:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																				"typeString": "function () view external returns (uint256)"
																			}
																		},
																		"id": 998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3339:37:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3331:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 991,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3331:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3331:46:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3325:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3314:63:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3285:92:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "3285:92:4"
											},
											{
												"expression": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1004,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "3388:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "refundFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 763,
														"src": "3388:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1007,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "3410:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 1009,
														"indexExpression": {
															"hexValue": "35",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3416:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3410:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3388:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "3388:30:4"
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1012,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "3429:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimFee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 765,
														"src": "3429:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1015,
															"name": "datas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "3450:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																"typeString": "uint256[9] memory"
															}
														},
														"id": 1017,
														"indexExpression": {
															"hexValue": "36",
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3456:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3450:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3429:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "3429:29:4"
											},
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1020,
															"name": "saleTotalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "3469:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleTotalSupply_$775_storage",
																"typeString": "struct Presale.SaleTotalSupply storage ref"
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "hardCap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 772,
														"src": "3469:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1023,
																"name": "datas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "3495:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																	"typeString": "uint256[9] memory"
																}
															},
															"id": 1025,
															"indexExpression": {
																"hexValue": "37",
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3501:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7_by_1",
																	"typeString": "int_const 7"
																},
																"value": "7"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3495:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3506:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1030,
																							"name": "saleInfor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 826,
																							"src": "3526:9:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																								"typeString": "struct Presale.SaleInfor storage ref"
																							}
																						},
																						"id": 1031,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "baseToken",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 751,
																						"src": "3526:19:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					],
																					"id": 1029,
																					"name": "ERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "3520:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																						"typeString": "type(contract ERC20)"
																					}
																				},
																				"id": 1032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3520:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$585",
																					"typeString": "contract ERC20"
																				}
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "decimals",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 74,
																			"src": "3520:35:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																				"typeString": "function () view external returns (uint256)"
																			}
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3520:37:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3512:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1027,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3512:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3512:46:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3506:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3495:63:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3469:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "3469:89:4"
											},
											{
												"expression": {
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1040,
															"name": "saleTotalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "3569:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleTotalSupply_$775_storage",
																"typeString": "struct Presale.SaleTotalSupply storage ref"
															}
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "softCap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 774,
														"src": "3569:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1043,
																"name": "datas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "3595:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
																	"typeString": "uint256[9] memory"
																}
															},
															"id": 1045,
															"indexExpression": {
																"hexValue": "38",
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3601:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_8_by_1",
																	"typeString": "int_const 8"
																},
																"value": "8"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3595:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3606:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1050,
																							"name": "saleInfor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 826,
																							"src": "3625:9:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																								"typeString": "struct Presale.SaleInfor storage ref"
																							}
																						},
																						"id": 1051,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "baseToken",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 751,
																						"src": "3625:19:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					],
																					"id": 1049,
																					"name": "ERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "3619:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																						"typeString": "type(contract ERC20)"
																					}
																				},
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3619:26:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$585",
																					"typeString": "contract ERC20"
																				}
																			},
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "decimals",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 74,
																			"src": "3619:35:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																				"typeString": "function () view external returns (uint256)"
																			}
																		},
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3619:37:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3611:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1047,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3611:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3611:46:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3606:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3595:62:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3569:88:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "3569:88:4"
											},
											{
												"expression": {
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1060,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "3668:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "saleIsBaseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 767,
														"src": "3668:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1065,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "3704:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$663",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$663",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3696:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1063,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3696:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3696:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1069,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "3721:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "baseToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 751,
																	"src": "3721:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3713:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1067,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3713:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3713:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3696:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3668:73:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "3668:73:4"
											},
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1075,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "3752:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amountTokenForSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 769,
														"src": "3752:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1081,
																		"name": "saleTotalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 823,
																		"src": "3808:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleTotalSupply_$775_storage",
																			"typeString": "struct Presale.SaleTotalSupply storage ref"
																		}
																	},
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "hardCap",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 772,
																	"src": "3808:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1078,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "3783:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 753,
																	"src": "3783:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3018,
																"src": "3783:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3783:49:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3875:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1088,
																									"name": "saleInfor",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 826,
																									"src": "3894:9:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																										"typeString": "struct Presale.SaleInfor storage ref"
																									}
																								},
																								"id": 1089,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "baseToken",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 751,
																								"src": "3894:19:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_ERC20_$585",
																									"typeString": "contract ERC20"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_ERC20_$585",
																									"typeString": "contract ERC20"
																								}
																							],
																							"id": 1087,
																							"name": "ERC20",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 585,
																							"src": "3888:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																								"typeString": "type(contract ERC20)"
																							}
																						},
																						"id": 1090,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3888:26:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					},
																					"id": 1091,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "decimals",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 74,
																					"src": "3888:35:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																						"typeString": "function () view external returns (uint256)"
																					}
																				},
																				"id": 1092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3888:37:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3880:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1085,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3880:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3880:46:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3875:51:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1095,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3874:53:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3783:144:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3752:175:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "3752:175:4"
											},
											{
												"expression": {
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1099,
														"name": "feeAnyone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "3938:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1100,
														"name": "_feeAnyone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3950:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3938:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "3938:22:4"
											},
											{
												"expression": {
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1103,
														"name": "adminReceiveFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "3971:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1104,
														"name": "_adminReceiveFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "3989:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3971:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "3971:34:4"
											},
											{
												"expression": {
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1107,
														"name": "feeCreateSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "4016:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1108,
														"name": "_feeCreateSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "4032:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4016:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "4016:30:4"
											}
										]
									},
									"functionSelector": "9b25415c",
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialSaleInfor",
									"nameLocation": "2649:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "_presaleOwner",
												"nameLocation": "2692:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2676:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2676:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "_saleToken",
												"nameLocation": "2722:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2716:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$585",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 905,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 904,
														"name": "ERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 585,
														"src": "2716:5:4"
													},
													"referencedDeclaration": 585,
													"src": "2716:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$585",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "_baseTOken",
												"nameLocation": "2749:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2743:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$585",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 908,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 907,
														"name": "ERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 585,
														"src": "2743:5:4"
													},
													"referencedDeclaration": 585,
													"src": "2743:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$585",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "datas",
												"nameLocation": "2788:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2770:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$9_memory_ptr",
													"typeString": "uint256[9]"
												},
												"typeName": {
													"baseType": {
														"id": 910,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2770:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 912,
													"length": {
														"hexValue": "39",
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"nodeType": "ArrayTypeName",
													"src": "2770:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$9_storage_ptr",
														"typeString": "uint256[9]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "_feeAnyone",
												"nameLocation": "2812:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2804:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2804:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "_adminReceiveFee",
												"nameLocation": "2849:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2833:32:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2833:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "_feeCreateSale",
												"nameLocation": "2884:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2876:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:240:4"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:0:4"
									},
									"scope": 1882,
									"src": "2640:1416:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "4112:290:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1117,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4126:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4126:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1119,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "4144:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 755,
														"src": "4144:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4126:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1137,
													"nodeType": "Block",
													"src": "4218:177:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1125,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4236:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4236:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1127,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "4254:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "endSale",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 757,
																	"src": "4254:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4236:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1135,
																"nodeType": "Block",
																"src": "4331:53:4",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "31",
																			"id": 1133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4357:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"functionReturnParameters": 1116,
																		"id": 1134,
																		"nodeType": "Return",
																		"src": "4350:8:4"
																	}
																]
															},
															"id": 1136,
															"nodeType": "IfStatement",
															"src": "4233:151:4",
															"trueBody": {
																"id": 1132,
																"nodeType": "Block",
																"src": "4273:54:4",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "32",
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4299:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"functionReturnParameters": 1116,
																		"id": 1131,
																		"nodeType": "Return",
																		"src": "4292:8:4"
																	}
																]
															}
														}
													]
												},
												"id": 1138,
												"nodeType": "IfStatement",
												"src": "4123:272:4",
												"trueBody": {
													"id": 1124,
													"nodeType": "Block",
													"src": "4165:49:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4187:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1116,
															"id": 1123,
															"nodeType": "Return",
															"src": "4180:8:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "200d2ed2",
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "status",
									"nameLocation": "4074:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4080:2:4"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "4103:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4103:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:9:4"
									},
									"scope": 1882,
									"src": "4065:337:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "4466:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1147,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "4500:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4500:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1145,
															"name": "admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "4484:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2380_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2461,
														"src": "4484:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2380_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2380_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4484:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1144,
												"id": 1150,
												"nodeType": "Return",
												"src": "4477:36:4"
											}
										]
									},
									"functionSelector": "cad5b0f7",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkAdminAddress",
									"nameLocation": "4420:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4437:2:4"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "4460:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4460:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4459:6:4"
									},
									"scope": 1882,
									"src": "4411:110:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "4593:2148:4",
										"statements": [
											{
												"assignments": [
													1161
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "4682:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "4664:23:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
															"typeString": "struct Presale.BuyerInfo"
														},
														"typeName": {
															"id": 1160,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1159,
																"name": "BuyerInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 786,
																"src": "4664:9:4"
															},
															"referencedDeclaration": 786,
															"src": "4664:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																"typeString": "struct Presale.BuyerInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1166,
												"initialValue": {
													"baseExpression": {
														"id": 1162,
														"name": "buyerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "4690:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$786_storage_$",
															"typeString": "mapping(address => struct Presale.BuyerInfo storage ref)"
														}
													},
													"id": 1165,
													"indexExpression": {
														"expression": {
															"id": 1163,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4700:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4700:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4690:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyerInfo_$786_storage",
														"typeString": "struct Presale.BuyerInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4664:47:4"
											},
											{
												"assignments": [
													1168
												],
												"declarations": [
													{
														"constant": false,
														"id": 1168,
														"mutability": "mutable",
														"name": "amount_in",
														"nameLocation": "4730:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "4722:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4722:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1170,
												"initialValue": {
													"id": 1169,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1154,
													"src": "4742:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4722:27:4"
											},
											{
												"assignments": [
													1172
												],
												"declarations": [
													{
														"constant": false,
														"id": 1172,
														"mutability": "mutable",
														"name": "real_amount_in",
														"nameLocation": "4768:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "4760:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1171,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4760:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1174,
												"initialValue": {
													"id": 1173,
													"name": "amount_in",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1168,
													"src": "4785:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4760:34:4"
											},
											{
												"assignments": [
													1176
												],
												"declarations": [
													{
														"constant": false,
														"id": 1176,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "4813:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "4805:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1175,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4805:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1178,
												"initialValue": {
													"hexValue": "30",
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4819:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4805:15:4"
											},
											{
												"assignments": [
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "fullPercenFee",
														"nameLocation": "4839:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "4831:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1179,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4831:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1182,
												"initialValue": {
													"hexValue": "31303030",
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4855:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000_by_1",
														"typeString": "int_const 1000"
													},
													"value": "1000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4831:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1184,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4878:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4878:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1186,
																"name": "real_amount_in",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "4891:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4878:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c656173652070726f76696465206e617669746520636f696e",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4907:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_065202cf6a33a781bd303592d3b073d0a0ec6f08ff85121e6ae03bb0f6220773",
																"typeString": "literal_string \"Please provide navite coin\""
															},
															"value": "Please provide navite coin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_065202cf6a33a781bd303592d3b073d0a0ec6f08ff85121e6ae03bb0f6220773",
																"typeString": "literal_string \"Please provide navite coin\""
															}
														],
														"id": 1183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4870:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:66:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "4870:66:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1192,
																"name": "real_amount_in",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "4955:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1193,
																	"name": "saleInfor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "4973:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																		"typeString": "struct Presale.SaleInfor storage ref"
																	}
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "minSpendPerBuyer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 759,
																"src": "4973:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4955:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682076616c7565",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5019:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde",
																"typeString": "literal_string \"Not enough value\""
															},
															"value": "Not enough value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8254a19c2218e87bd65e7d451e5bbd6df57ba9f73035118b8f47be7b5659ddde",
																"typeString": "literal_string \"Not enough value\""
															}
														],
														"id": 1191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4947:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:101:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "4947:101:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1200,
																"name": "real_amount_in",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "5067:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1201,
																	"name": "saleInfor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "5085:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																		"typeString": "struct Presale.SaleInfor storage ref"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "maxSpendPerBuyer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 761,
																"src": "5085:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5067:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f766572666c6f772076616c7565",
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5131:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48cc793e3ea877d6bf034b11f4c6d0d583dd24a0f1374daf495701b65f42f81c",
																"typeString": "literal_string \"Overflow value\""
															},
															"value": "Overflow value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48cc793e3ea877d6bf034b11f4c6d0d583dd24a0f1374daf495701b65f42f81c",
																"typeString": "literal_string \"Overflow value\""
															}
														],
														"id": 1199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5059:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5059:99:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "5059:99:4"
											},
											{
												"condition": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5172:20:4",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1207,
															"name": "checkAdminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "5173:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5173:19:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1232,
												"nodeType": "IfStatement",
												"src": "5169:266:4",
												"trueBody": {
													"id": 1231,
													"nodeType": "Block",
													"src": "5194:241:4",
													"statements": [
														{
															"expression": {
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1210,
																	"name": "real_amount_in",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "5209:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1221,
																			"name": "fullPercenFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "5345:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"arguments": [
																						{
																							"id": 1217,
																							"name": "real_amount_in",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1172,
																							"src": "5293:14:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"components": [
																								{
																									"arguments": [
																										{
																											"id": 1213,
																											"name": "feeAnyone",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 836,
																											"src": "5246:9:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 1211,
																											"name": "fullPercenFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1180,
																											"src": "5228:13:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1212,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sub",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 3003,
																										"src": "5228:17:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1214,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "5228:28:4",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1215,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "5227:30:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1216,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3018,
																						"src": "5227:65:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1218,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5227:81:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1219,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5226:83:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3033,
																		"src": "5226:118:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5226:133:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5209:150:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1224,
															"nodeType": "ExpressionStatement",
															"src": "5209:150:4"
														},
														{
															"expression": {
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1225,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "5374:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1226,
																		"name": "amount_in",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1168,
																		"src": "5380:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1227,
																		"name": "real_amount_in",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1172,
																		"src": "5392:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5380:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5374:32:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1230,
															"nodeType": "ExpressionStatement",
															"src": "5374:32:4"
														}
													]
												}
											},
											{
												"assignments": [
													1234
												],
												"declarations": [
													{
														"constant": false,
														"id": 1234,
														"mutability": "mutable",
														"name": "remainingByUser",
														"nameLocation": "5453:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "5445:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1233,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5445:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1240,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1235,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "5471:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "maxSpendPerBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 761,
														"src": "5471:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1237,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "5500:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "baseDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 777,
														"src": "5500:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5471:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:72:4"
											},
											{
												"assignments": [
													1242
												],
												"declarations": [
													{
														"constant": false,
														"id": 1242,
														"mutability": "mutable",
														"name": "remainingByPool",
														"nameLocation": "5536:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "5528:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1241,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5528:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1248,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1243,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "5554:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amountTokenForSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 769,
														"src": "5554:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1245,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "5585:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalBaseCollected",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 788,
														"src": "5585:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5554:63:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5528:89:4"
											},
											{
												"assignments": [
													1250
												],
												"declarations": [
													{
														"constant": false,
														"id": 1250,
														"mutability": "mutable",
														"name": "allowance",
														"nameLocation": "5636:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "5628:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5628:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1257,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1251,
															"name": "remainingByUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "5648:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1252,
															"name": "remainingByPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "5666:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5648:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1255,
														"name": "remainingByUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "5702:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5648:69:4",
													"trueExpression": {
														"id": 1254,
														"name": "remainingByPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "5684:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5628:89:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1259,
																"name": "real_amount_in",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "5736:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1260,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "5754:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5736:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c652069732073756363657373",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5765:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f04f9a30ea5d365bfb2900741297979fe0df33fc47f4cd4f9a152dc08b22c374",
																"typeString": "literal_string \"Sale is success\""
															},
															"value": "Sale is success"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f04f9a30ea5d365bfb2900741297979fe0df33fc47f4cd4f9a152dc08b22c374",
																"typeString": "literal_string \"Sale is success\""
															}
														],
														"id": 1258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5728:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5728:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "5728:55:4"
											},
											{
												"assignments": [
													1266
												],
												"declarations": [
													{
														"constant": false,
														"id": 1266,
														"mutability": "mutable",
														"name": "tokenSold",
														"nameLocation": "5802:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "5794:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5794:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1286,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5920:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1277,
																									"name": "saleInfor",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 826,
																									"src": "5940:9:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																										"typeString": "struct Presale.SaleInfor storage ref"
																									}
																								},
																								"id": 1278,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "baseToken",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 751,
																								"src": "5940:19:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_ERC20_$585",
																									"typeString": "contract ERC20"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_ERC20_$585",
																									"typeString": "contract ERC20"
																								}
																							],
																							"id": 1276,
																							"name": "ERC20",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 585,
																							"src": "5934:5:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																								"typeString": "type(contract ERC20)"
																							}
																						},
																						"id": 1279,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5934:26:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_ERC20_$585",
																							"typeString": "contract ERC20"
																						}
																					},
																					"id": 1280,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "decimals",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 74,
																					"src": "5934:35:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																						"typeString": "function () view external returns (uint256)"
																					}
																				},
																				"id": 1281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5934:37:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5926:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1274,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5926:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5926:46:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5920:52:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1269,
																				"name": "saleInfor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 826,
																				"src": "5864:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																					"typeString": "struct Presale.SaleInfor storage ref"
																				}
																			},
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "tokenPrice",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 753,
																			"src": "5864:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1267,
																			"name": "real_amount_in",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "5815:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3018,
																		"src": "5815:48:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5815:70:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3033,
																"src": "5815:104:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5815:158:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1285,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5814:160:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5794:180:4"
											},
											{
												"expression": {
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1287,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "6002:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "baseDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 777,
														"src": "6002:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1290,
														"name": "real_amount_in",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "6023:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6002:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "6002:35:4"
											},
											{
												"expression": {
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1293,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "6048:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 779,
														"src": "6048:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1296,
														"name": "tokenSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "6068:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6048:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "6048:29:4"
											},
											{
												"expression": {
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1299,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "6088:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBaseCollected",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 788,
														"src": "6088:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1302,
														"name": "real_amount_in",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "6124:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6088:50:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "6088:50:4"
											},
											{
												"expression": {
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1305,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "6149:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalTokenSold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 790,
														"src": "6149:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1308,
														"name": "tokenSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "6181:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6149:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "6149:41:4"
											},
											{
												"expression": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "6201:27:4",
													"subExpression": {
														"expression": {
															"id": 1311,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "6201:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "numberBuyer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 800,
														"src": "6201:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "6201:27:4"
											},
											{
												"expression": {
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1316,
															"name": "userFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "6239:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1319,
														"indexExpression": {
															"expression": {
																"id": 1317,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6247:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6247:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6239:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1320,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "6262:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6239:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "6239:26:4"
											},
											{
												"expression": {
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1323,
														"name": "totalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "6276:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1324,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "6288:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6276:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "6276:15:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1327,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "6307:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1328,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "saleIsBaseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 767,
														"src": "6307:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1329,
																"name": "real_amount_in",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "6336:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1330,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "6353:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6336:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"expression": {
																"id": 1332,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6360:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6360:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6336:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6307:62:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1351,
												"nodeType": "IfStatement",
												"src": "6304:156:4",
												"trueBody": {
													"id": 1350,
													"nodeType": "Block",
													"src": "6371:89:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1342,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "6415:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1343,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"src": "6415:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1344,
																				"name": "real_amount_in",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1172,
																				"src": "6427:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6415:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1346,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1176,
																			"src": "6444:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6415:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1338,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "6394:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "6394:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6386:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1336,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6386:8:4",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6386:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "6386:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6386:62:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1349,
															"nodeType": "ExpressionStatement",
															"src": "6386:62:4"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6474:26:4",
													"subExpression": {
														"expression": {
															"id": 1352,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "6475:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "saleIsBaseToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 767,
														"src": "6475:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1375,
												"nodeType": "IfStatement",
												"src": "6471:251:4",
												"trueBody": {
													"id": 1374,
													"nodeType": "Block",
													"src": "6502:220:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1360,
																					"name": "saleInfor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "6575:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																						"typeString": "struct Presale.SaleInfor storage ref"
																					}
																				},
																				"id": 1361,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "baseToken",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 751,
																				"src": "6575:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$585",
																					"typeString": "contract ERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20_$585",
																					"typeString": "contract ERC20"
																				}
																			],
																			"id": 1359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6567:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1358,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6567:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6567:28:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1363,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6614:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6614:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1367,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6651:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Presale_$1882",
																					"typeString": "contract Presale"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Presale_$1882",
																					"typeString": "contract Presale"
																				}
																			],
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6643:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1365,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6643:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6643:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1369,
																			"name": "real_amount_in",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "6675:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1370,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1176,
																			"src": "6692:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6675:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1355,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3316,
																		"src": "6517:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$3316_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3259,
																	"src": "6517:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6517:193:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1373,
															"nodeType": "ExpressionStatement",
															"src": "6517:193:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1156,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2811,
												"src": "4580:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4580:12:4"
										}
									],
									"name": "deposit",
									"nameLocation": "4538:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4554:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "4546:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4546:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4545:17:4"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4593:0:4"
									},
									"scope": 1882,
									"src": "4529:2212:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "6801:952:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1383,
																		"name": "presaleStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "6873:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																			"typeString": "struct Presale.PresaleStatus storage ref"
																		}
																	},
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalTokenSold",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 790,
																	"src": "6873:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1385,
																		"name": "presaleStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "6904:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																			"typeString": "struct Presale.PresaleStatus storage ref"
																		}
																	},
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalTokenWithDraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 792,
																	"src": "6904:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6873:63:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6939:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6873:67:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20746f6b656e20686173206265656e207769746864726177",
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6959:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be",
																"typeString": "literal_string \"All token has been withdraw\""
															},
															"value": "All token has been withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be",
																"typeString": "literal_string \"All token has been withdraw\""
															}
														],
														"id": 1382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6865:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6865:134:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "6865:134:4"
											},
											{
												"assignments": [
													1395
												],
												"declarations": [
													{
														"constant": false,
														"id": 1395,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "7028:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1486,
														"src": "7010:23:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
															"typeString": "struct Presale.BuyerInfo"
														},
														"typeName": {
															"id": 1394,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1393,
																"name": "BuyerInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 786,
																"src": "7010:9:4"
															},
															"referencedDeclaration": 786,
															"src": "7010:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																"typeString": "struct Presale.BuyerInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1400,
												"initialValue": {
													"baseExpression": {
														"id": 1396,
														"name": "buyerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "7036:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$786_storage_$",
															"typeString": "mapping(address => struct Presale.BuyerInfo storage ref)"
														}
													},
													"id": 1399,
													"indexExpression": {
														"expression": {
															"id": 1397,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7046:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7046:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7036:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyerInfo_$786_storage",
														"typeString": "struct Presale.BuyerInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7010:47:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1402,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "7076:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																		"typeString": "struct Presale.BuyerInfo storage pointer"
																	}
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tokenOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 779,
																"src": "7076:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7076:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f7420626f7567687420796574",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7098:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0006a43500af0340b9603203140392eab02fee063ae96bfd6edc189c82d0020d",
																"typeString": "literal_string \"You have not bought yet\""
															},
															"value": "You have not bought yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0006a43500af0340b9603203140392eab02fee063ae96bfd6edc189c82d0020d",
																"typeString": "literal_string \"You have not bought yet\""
															}
														],
														"id": 1401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7068:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "7068:56:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1410,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "7143:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																		"typeString": "struct Presale.BuyerInfo storage pointer"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tokenOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 779,
																"src": "7143:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 1412,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1395,
																	"src": "7162:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																		"typeString": "struct Presale.BuyerInfo storage pointer"
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalTokenWithDraw",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 783,
																"src": "7162:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7143:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520636c61696d20616c6c6c",
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7188:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2f0f7a7138a486905fda9c2420ae85e1a942b60a01a8f1a582662b41b722e06b",
																"typeString": "literal_string \"You claim alll\""
															},
															"value": "You claim alll"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2f0f7a7138a486905fda9c2420ae85e1a942b60a01a8f1a582662b41b722e06b",
																"typeString": "literal_string \"You claim alll\""
															}
														],
														"id": 1409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7135:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7135:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "7135:70:4"
											},
											{
												"assignments": [
													1419
												],
												"declarations": [
													{
														"constant": false,
														"id": 1419,
														"mutability": "mutable",
														"name": "amountClaim",
														"nameLocation": "7224:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 1486,
														"src": "7216:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7216:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1440,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31303030",
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7368:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7360:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1435,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7360:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7360:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1430,
																				"name": "buyer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1395,
																				"src": "7310:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																					"typeString": "struct Presale.BuyerInfo storage pointer"
																				}
																			},
																			"id": 1431,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "tokenOwner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 779,
																			"src": "7310:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 1425,
																								"name": "saleInfor",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 826,
																								"src": "7258:9:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																									"typeString": "struct Presale.SaleInfor storage ref"
																								}
																							},
																							"id": 1426,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "claimFee",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 765,
																							"src": "7258:18:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 1422,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "7248:4:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"id": 1421,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "7240:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": {
																									"id": 1420,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "7240:7:4",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1423,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "7240:13:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1424,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3003,
																						"src": "7240:17:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1427,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7240:37:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1428,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "7239:39:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3018,
																		"src": "7239:70:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7239:88:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1433,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7238:90:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3033,
														"src": "7238:121:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7238:136:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7216:158:4"
											},
											{
												"expression": {
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1441,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "7385:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalTokenWithDraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 792,
														"src": "7385:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1444,
														"name": "amountClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "7421:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7385:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "7385:47:4"
											},
											{
												"expression": {
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1447,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "7443:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amountTokenForSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 769,
														"src": "7443:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1450,
														"name": "amountClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "7475:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7443:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "7443:43:4"
											},
											{
												"expression": {
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1453,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "7497:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1455,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalTokenWithDraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 783,
														"src": "7497:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1456,
														"name": "amountClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "7525:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7497:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "7497:39:4"
											},
											{
												"expression": {
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1459,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "7547:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1461,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastWithDraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 781,
														"src": "7547:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1462,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7568:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7568:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7547:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "7547:36:4"
											},
											{
												"expression": {
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1466,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "7594:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBaseBackForAdmin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 798,
														"src": "7594:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1469,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "7633:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																	"typeString": "struct Presale.BuyerInfo storage pointer"
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "baseDeposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 777,
															"src": "7633:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 1471,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "7651:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																	"typeString": "struct Presale.BuyerInfo storage pointer"
																}
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalBaseWithDraw",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 785,
															"src": "7651:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7633:41:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7594:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "7594:80:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1481,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7721:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7721:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1483,
															"name": "amountClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "7733:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1477,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "7691:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "saleToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 748,
																	"src": "7691:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1476,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "7685:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7685:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$585",
																"typeString": "contract ERC20"
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "7685:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7685:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1485,
												"nodeType": "ExpressionStatement",
												"src": "7685:60:4"
											}
										]
									},
									"functionSelector": "ab33985a",
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1380,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1379,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2811,
												"src": "6788:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "6788:12:4"
										}
									],
									"name": "userClaimEmergency",
									"nameLocation": "6758:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6776:2:4"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6801:0:4"
									},
									"scope": 1882,
									"src": "6749:1004:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "7814:958:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1493,
																		"name": "presaleStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "7885:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																			"typeString": "struct Presale.PresaleStatus storage ref"
																		}
																	},
																	"id": 1494,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalBaseCollected",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 788,
																	"src": "7885:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1495,
																		"name": "presaleStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "7920:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																			"typeString": "struct Presale.PresaleStatus storage ref"
																		}
																	},
																	"id": 1496,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalBaseWithDraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "7920:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7885:66:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7954:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7885:70:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c20746f6b656e20686173206265656e207769746864726177",
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7974:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be",
																"typeString": "literal_string \"All token has been withdraw\""
															},
															"value": "All token has been withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be",
																"typeString": "literal_string \"All token has been withdraw\""
															}
														],
														"id": 1492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7877:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7877:137:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "7877:137:4"
											},
											{
												"assignments": [
													1505
												],
												"declarations": [
													{
														"constant": false,
														"id": 1505,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "8044:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1596,
														"src": "8026:23:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
															"typeString": "struct Presale.BuyerInfo"
														},
														"typeName": {
															"id": 1504,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1503,
																"name": "BuyerInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 786,
																"src": "8026:9:4"
															},
															"referencedDeclaration": 786,
															"src": "8026:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																"typeString": "struct Presale.BuyerInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1510,
												"initialValue": {
													"baseExpression": {
														"id": 1506,
														"name": "buyerInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "8052:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$786_storage_$",
															"typeString": "mapping(address => struct Presale.BuyerInfo storage ref)"
														}
													},
													"id": 1509,
													"indexExpression": {
														"expression": {
															"id": 1507,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8062:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8062:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8052:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BuyerInfo_$786_storage",
														"typeString": "struct Presale.BuyerInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8026:47:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1512,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "8092:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																		"typeString": "struct Presale.BuyerInfo storage pointer"
																	}
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "baseDeposit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 777,
																"src": "8092:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8112:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8092:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f7420626f7567687420796574",
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8115:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0006a43500af0340b9603203140392eab02fee063ae96bfd6edc189c82d0020d",
																"typeString": "literal_string \"You have not bought yet\""
															},
															"value": "You have not bought yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0006a43500af0340b9603203140392eab02fee063ae96bfd6edc189c82d0020d",
																"typeString": "literal_string \"You have not bought yet\""
															}
														],
														"id": 1511,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8084:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8084:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1518,
												"nodeType": "ExpressionStatement",
												"src": "8084:57:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1520,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "8160:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																		"typeString": "struct Presale.BuyerInfo storage pointer"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "baseDeposit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 777,
																"src": "8160:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 1522,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "8180:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																		"typeString": "struct Presale.BuyerInfo storage pointer"
																	}
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalBaseWithDraw",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 785,
																"src": "8180:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8160:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520726566756e6420616c6c",
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8205:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf5df9de6d8de0251e215beb301e570c88b0796fccdb277f788272e9f262e220",
																"typeString": "literal_string \"You refund all\""
															},
															"value": "You refund all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf5df9de6d8de0251e215beb301e570c88b0796fccdb277f788272e9f262e220",
																"typeString": "literal_string \"You refund all\""
															}
														],
														"id": 1519,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8152:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8152:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "8152:70:4"
											},
											{
												"assignments": [
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "amountRefund",
														"nameLocation": "8241:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1596,
														"src": "8233:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1528,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8233:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1550,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31303030",
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8400:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	}
																],
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8392:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1545,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8392:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8392:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 1540,
																				"name": "buyer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1505,
																				"src": "8335:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																					"typeString": "struct Presale.BuyerInfo storage pointer"
																				}
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "baseDeposit",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 777,
																			"src": "8335:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 1535,
																								"name": "saleInfor",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 826,
																								"src": "8276:9:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																									"typeString": "struct Presale.SaleInfor storage ref"
																								}
																							},
																							"id": 1536,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "refundFee",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 763,
																							"src": "8276:19:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 1532,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "8266:4:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"id": 1531,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "8258:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": {
																									"id": 1530,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "8258:7:4",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1533,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "8258:13:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1534,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3003,
																						"src": "8258:17:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1537,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8258:38:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1538,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "8257:40:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3018,
																		"src": "8257:77:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8257:96:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1543,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8256:98:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3033,
														"src": "8256:135:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8256:150:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8233:173:4"
											},
											{
												"expression": {
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1551,
														"name": "totalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "8417:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1552,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "8429:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																	"typeString": "struct Presale.BuyerInfo storage pointer"
																}
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "baseDeposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 777,
															"src": "8429:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1554,
															"name": "amountRefund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "8449:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8429:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8417:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "8417:44:4"
											},
											{
												"expression": {
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1558,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "8472:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBaseWithDraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 794,
														"src": "8472:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1561,
														"name": "amountRefund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "8507:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8472:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "8472:47:4"
											},
											{
												"expression": {
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1564,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "8530:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBaseWithDraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 785,
														"src": "8530:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1567,
														"name": "amountRefund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "8557:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8530:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1569,
												"nodeType": "ExpressionStatement",
												"src": "8530:39:4"
											},
											{
												"expression": {
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1570,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "8580:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																"typeString": "struct Presale.BuyerInfo storage pointer"
															}
														},
														"id": 1572,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastWithDraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 781,
														"src": "8580:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1573,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8601:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8601:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8580:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "8580:36:4"
											},
											{
												"expression": {
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1577,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "8627:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalTokenBackForAdmin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 796,
														"src": "8627:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1580,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "8667:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																	"typeString": "struct Presale.BuyerInfo storage pointer"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenOwner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 779,
															"src": "8667:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 1582,
																"name": "buyer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "8686:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																	"typeString": "struct Presale.BuyerInfo storage pointer"
																}
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "totalTokenWithDraw",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 783,
															"src": "8686:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8667:43:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8627:83:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1586,
												"nodeType": "ExpressionStatement",
												"src": "8627:83:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1593,
															"name": "amountRefund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "8751:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1589,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8730:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8730:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8722:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1587,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8722:8:4",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8722:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8722:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8722:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "8722:42:4"
											}
										]
									},
									"functionSelector": "95661e70",
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1490,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1489,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2811,
												"src": "7801:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "7801:12:4"
										}
									],
									"name": "userRefundEmergency",
									"nameLocation": "7770:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7789:2:4"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7814:0:4"
									},
									"scope": 1882,
									"src": "7761:1011:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "8854:1128:4",
										"statements": [
											{
												"assignments": [
													1605
												],
												"declarations": [
													{
														"constant": false,
														"id": 1605,
														"mutability": "mutable",
														"name": "amountOwnerClaimToken",
														"nameLocation": "8933:21:4",
														"nodeType": "VariableDeclaration",
														"scope": 1690,
														"src": "8925:29:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1604,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8925:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1616,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1613,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9002:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Presale_$1882",
																		"typeString": "contract Presale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Presale_$1882",
																		"typeString": "contract Presale"
																	}
																],
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8994:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1611,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8994:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8994:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1607,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "8963:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "saleToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 748,
																	"src": "8963:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1606,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "8957:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8957:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$585",
																"typeString": "contract ERC20"
															}
														},
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "8957:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8957:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8925:83:4"
											},
											{
												"assignments": [
													1618
												],
												"declarations": [
													{
														"constant": false,
														"id": 1618,
														"mutability": "mutable",
														"name": "amountOwnerRefundNativeCoin",
														"nameLocation": "9028:27:4",
														"nodeType": "VariableDeclaration",
														"scope": 1690,
														"src": "9020:35:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1617,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9020:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1626,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1622,
																		"name": "presaleStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "9145:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																			"typeString": "struct Presale.PresaleStatus storage ref"
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalTokenBackForAdmin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 796,
																	"src": "9145:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1619,
																		"name": "presaleStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "9059:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																			"typeString": "struct Presale.PresaleStatus storage ref"
																		}
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalBaseCollected",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 788,
																	"src": "9059:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3003,
																"src": "9059:85:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9059:172:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1625,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9058:174:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9020:212:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1627,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "9246:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalBaseCollected",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 788,
														"src": "9246:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9282:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9246:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1644,
												"nodeType": "IfStatement",
												"src": "9243:283:4",
												"trueBody": {
													"id": 1643,
													"nodeType": "Block",
													"src": "9284:242:4",
													"statements": [
														{
															"expression": {
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1631,
																	"name": "amountOwnerClaimToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "9299:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1637,
																						"name": "presaleStatus",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 820,
																						"src": "9458:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																							"typeString": "struct Presale.PresaleStatus storage ref"
																						}
																					},
																					"id": 1638,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "totalTokenBackForAdmin",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 796,
																					"src": "9458:36:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1634,
																						"name": "presaleStatus",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 820,
																						"src": "9387:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																							"typeString": "struct Presale.PresaleStatus storage ref"
																						}
																					},
																					"id": 1635,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "totalTokenSold",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 790,
																					"src": "9387:28:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3003,
																				"src": "9387:70:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9387:108:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1632,
																			"name": "amountOwnerClaimToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1605,
																			"src": "9323:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3003,
																		"src": "9323:63:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9323:173:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9299:197:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1642,
															"nodeType": "ExpressionStatement",
															"src": "9299:197:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9544:36:4",
															"subExpression": {
																"expression": {
																	"id": 1646,
																	"name": "presaleStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "9545:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																		"typeString": "struct Presale.PresaleStatus storage ref"
																	}
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isOwnerClaimSaleToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 802,
																"src": "9545:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720666f72206f776e657220636c61696d20746f6b656e",
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9582:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebae11f2a640aa762fd205f7bf17893e71e2f27eaf181bd18ed2bc1866cdc8cb",
																"typeString": "literal_string \"Nothing for owner claim token\""
															},
															"value": "Nothing for owner claim token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebae11f2a640aa762fd205f7bf17893e71e2f27eaf181bd18ed2bc1866cdc8cb",
																"typeString": "literal_string \"Nothing for owner claim token\""
															}
														],
														"id": 1645,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9536:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9536:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "9536:78:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9633:37:4",
															"subExpression": {
																"expression": {
																	"id": 1653,
																	"name": "presaleStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "9634:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																		"typeString": "struct Presale.PresaleStatus storage ref"
																	}
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isOwnerRefundBaseToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 804,
																"src": "9634:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720666f72206f776e657220726566756e6420746f6b656e",
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9672:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e48990c897d5ba8999d28c98a07d3d42bbeebbb9e5450611d5ac4c4c1ff405e",
																"typeString": "literal_string \"Nothing for owner refund token\""
															},
															"value": "Nothing for owner refund token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e48990c897d5ba8999d28c98a07d3d42bbeebbb9e5450611d5ac4c4c1ff405e",
																"typeString": "literal_string \"Nothing for owner refund token\""
															}
														],
														"id": 1652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9625:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9625:80:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1658,
												"nodeType": "ExpressionStatement",
												"src": "9625:80:4"
											},
											{
												"expression": {
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1659,
															"name": "presaleStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "9716:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																"typeString": "struct Presale.PresaleStatus storage ref"
															}
														},
														"id": 1661,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "isOwnerClaimSaleToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 802,
														"src": "9716:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9754:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "9716:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "9716:42:4"
											},
											{
												"expression": {
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1665,
															"name": "saleInfor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "9769:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																"typeString": "struct Presale.SaleInfor storage ref"
															}
														},
														"id": 1667,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amountTokenForSale",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 769,
														"src": "9769:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9800:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9769:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "9769:32:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1676,
																"name": "saleInfor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "9848:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																	"typeString": "struct Presale.SaleInfor storage ref"
																}
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "presaleOwner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 745,
															"src": "9848:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1678,
															"name": "amountOwnerClaimToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "9872:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1672,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "9818:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "saleToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 748,
																	"src": "9818:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC20_$585",
																		"typeString": "contract ERC20"
																	}
																],
																"id": 1671,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "9812:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9812:26:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$585",
																"typeString": "contract ERC20"
															}
														},
														"id": 1675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "9812:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9812:82:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "9812:82:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1687,
															"name": "amountOwnerRefundNativeCoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "9946:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1683,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "9913:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "presaleOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 745,
																	"src": "9913:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9905:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1681,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9905:8:4",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9905:31:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "9905:40:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9905:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "9905:69:4"
											}
										]
									},
									"functionSelector": "8edf18e6",
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1600,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1599,
												"name": "onlyPresaleOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 866,
												"src": "8825:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "8825:16:4"
										},
										{
											"id": 1602,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1601,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2811,
												"src": "8842:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "8842:12:4"
										}
									],
									"name": "ownerClaimAndRefundToken",
									"nameLocation": "8789:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8813:2:4"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8854:0:4"
									},
									"scope": 1882,
									"src": "8780:1202:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1852,
										"nodeType": "Block",
										"src": "10055:1508:4",
										"statements": [
											{
												"condition": {
													"id": 1696,
													"name": "isClaim",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1693,
													"src": "10130:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1850,
													"nodeType": "Block",
													"src": "10882:674:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1778,
																					"name": "presaleStatus",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10905:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																						"typeString": "struct Presale.PresaleStatus storage ref"
																					}
																				},
																				"id": 1779,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "totalBaseCollected",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 788,
																				"src": "10905:32:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"id": 1780,
																					"name": "presaleStatus",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10940:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																						"typeString": "struct Presale.PresaleStatus storage ref"
																					}
																				},
																				"id": 1781,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "totalBaseWithDraw",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 794,
																				"src": "10940:31:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10905:66:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10974:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "10905:70:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "416c6c20746f6b656e20686173206265656e207769746864726177",
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10995:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be",
																			"typeString": "literal_string \"All token has been withdraw\""
																		},
																		"value": "All token has been withdraw"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be",
																			"typeString": "literal_string \"All token has been withdraw\""
																		}
																	],
																	"id": 1777,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10897:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10897:142:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1787,
															"nodeType": "ExpressionStatement",
															"src": "10897:142:4"
														},
														{
															"assignments": [
																1790
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1790,
																	"mutability": "mutable",
																	"name": "buyer",
																	"nameLocation": "11073:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1850,
																	"src": "11055:23:4",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																		"typeString": "struct Presale.BuyerInfo"
																	},
																	"typeName": {
																		"id": 1789,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1788,
																			"name": "BuyerInfo",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 786,
																			"src": "11055:9:4"
																		},
																		"referencedDeclaration": 786,
																		"src": "11055:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																			"typeString": "struct Presale.BuyerInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1795,
															"initialValue": {
																"baseExpression": {
																	"id": 1791,
																	"name": "buyerInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "11081:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$786_storage_$",
																		"typeString": "mapping(address => struct Presale.BuyerInfo storage ref)"
																	}
																},
																"id": 1794,
																"indexExpression": {
																	"expression": {
																		"id": 1792,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11091:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11091:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11081:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BuyerInfo_$786_storage",
																	"typeString": "struct Presale.BuyerInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11055:47:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1797,
																				"name": "buyer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1790,
																				"src": "11125:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																					"typeString": "struct Presale.BuyerInfo storage pointer"
																				}
																			},
																			"id": 1798,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "baseDeposit",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 777,
																			"src": "11125:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11145:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "11125:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "596f7520726566756e6420616c6c206f722068617665206e6f7420626f7567687420796574",
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11148:39:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3dbc1fd319e3f4bcd97bd22d02924b97bf368efdc0fea6895ac72354c36f8910",
																			"typeString": "literal_string \"You refund all or have not bought yet\""
																		},
																		"value": "You refund all or have not bought yet"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3dbc1fd319e3f4bcd97bd22d02924b97bf368efdc0fea6895ac72354c36f8910",
																			"typeString": "literal_string \"You refund all or have not bought yet\""
																		}
																	],
																	"id": 1796,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11117:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11117:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1803,
															"nodeType": "ExpressionStatement",
															"src": "11117:71:4"
														},
														{
															"assignments": [
																1805
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1805,
																	"mutability": "mutable",
																	"name": "amountRefund",
																	"nameLocation": "11211:12:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1850,
																	"src": "11203:20:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1804,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11203:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1808,
															"initialValue": {
																"expression": {
																	"id": 1806,
																	"name": "buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1790,
																	"src": "11226:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																		"typeString": "struct Presale.BuyerInfo storage pointer"
																	}
																},
																"id": 1807,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "baseDeposit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 777,
																"src": "11226:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11203:40:4"
														},
														{
															"expression": {
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1809,
																	"name": "totalFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "11258:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1810,
																			"name": "buyer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "11270:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																				"typeString": "struct Presale.BuyerInfo storage pointer"
																			}
																		},
																		"id": 1811,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "baseDeposit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 777,
																		"src": "11270:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1812,
																		"name": "amountRefund",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1805,
																		"src": "11290:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11270:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11258:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1815,
															"nodeType": "ExpressionStatement",
															"src": "11258:44:4"
														},
														{
															"expression": {
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1816,
																		"name": "presaleStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "11317:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																			"typeString": "struct Presale.PresaleStatus storage ref"
																		}
																	},
																	"id": 1818,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalBaseWithDraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "11317:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1819,
																	"name": "amountRefund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1805,
																	"src": "11352:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11317:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1821,
															"nodeType": "ExpressionStatement",
															"src": "11317:47:4"
														},
														{
															"expression": {
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1822,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "11379:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																			"typeString": "struct Presale.BuyerInfo storage pointer"
																		}
																	},
																	"id": 1824,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "baseDeposit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 777,
																	"src": "11379:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11400:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11379:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1827,
															"nodeType": "ExpressionStatement",
															"src": "11379:22:4"
														},
														{
															"expression": {
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1828,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "11416:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																			"typeString": "struct Presale.BuyerInfo storage pointer"
																		}
																	},
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tokenOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 779,
																	"src": "11416:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11435:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11416:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1833,
															"nodeType": "ExpressionStatement",
															"src": "11416:20:4"
														},
														{
															"expression": {
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1834,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "11451:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																			"typeString": "struct Presale.BuyerInfo storage pointer"
																		}
																	},
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastWithDraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 781,
																	"src": "11451:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1837,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "11472:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "11472:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11451:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1840,
															"nodeType": "ExpressionStatement",
															"src": "11451:36:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1847,
																		"name": "amountRefund",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1805,
																		"src": "11531:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1843,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "11510:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "11510:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11502:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1841,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11502:8:4",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11502:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "11502:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11502:42:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1849,
															"nodeType": "ExpressionStatement",
															"src": "11502:42:4"
														}
													]
												},
												"id": 1851,
												"nodeType": "IfStatement",
												"src": "10127:1429:4",
												"trueBody": {
													"id": 1776,
													"nodeType": "Block",
													"src": "10138:740:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1698,
																					"name": "presaleStatus",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10161:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																						"typeString": "struct Presale.PresaleStatus storage ref"
																					}
																				},
																				"id": 1699,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "totalTokenSold",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 790,
																				"src": "10161:28:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"id": 1700,
																					"name": "presaleStatus",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10192:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																						"typeString": "struct Presale.PresaleStatus storage ref"
																					}
																				},
																				"id": 1701,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "totalTokenWithDraw",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 792,
																				"src": "10192:32:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10161:63:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10227:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "10161:67:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "416c6c20746f6b656e20686173206265656e207769746864726177",
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10248:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be",
																			"typeString": "literal_string \"All token has been withdraw\""
																		},
																		"value": "All token has been withdraw"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1a08ca9b2c061630f3688e7825008183e816899b30fb4092678404714b0570be",
																			"typeString": "literal_string \"All token has been withdraw\""
																		}
																	],
																	"id": 1697,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10153:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10153:139:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1707,
															"nodeType": "ExpressionStatement",
															"src": "10153:139:4"
														},
														{
															"assignments": [
																1710
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1710,
																	"mutability": "mutable",
																	"name": "buyer",
																	"nameLocation": "10325:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1776,
																	"src": "10307:23:4",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																		"typeString": "struct Presale.BuyerInfo"
																	},
																	"typeName": {
																		"id": 1709,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1708,
																			"name": "BuyerInfo",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 786,
																			"src": "10307:9:4"
																		},
																		"referencedDeclaration": 786,
																		"src": "10307:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																			"typeString": "struct Presale.BuyerInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1715,
															"initialValue": {
																"baseExpression": {
																	"id": 1711,
																	"name": "buyerInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "10333:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_BuyerInfo_$786_storage_$",
																		"typeString": "mapping(address => struct Presale.BuyerInfo storage ref)"
																	}
																},
																"id": 1714,
																"indexExpression": {
																	"expression": {
																		"id": 1712,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10343:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10343:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10333:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BuyerInfo_$786_storage",
																	"typeString": "struct Presale.BuyerInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10307:47:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1717,
																				"name": "buyer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1710,
																				"src": "10377:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																					"typeString": "struct Presale.BuyerInfo storage pointer"
																				}
																			},
																			"id": 1718,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "tokenOwner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 779,
																			"src": "10377:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"expression": {
																				"id": 1719,
																				"name": "buyer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1710,
																				"src": "10396:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																					"typeString": "struct Presale.BuyerInfo storage pointer"
																				}
																			},
																			"id": 1720,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "totalTokenWithDraw",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 783,
																			"src": "10396:24:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10377:43:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "596f7520636c61696d20616c6c206f722068617665206e6f7420626f7567687420796574",
																		"id": 1722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10422:38:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6ec702614952d92463e106ee761540d67283b909ca1034380fe138358153b4f4",
																			"typeString": "literal_string \"You claim all or have not bought yet\""
																		},
																		"value": "You claim all or have not bought yet"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_6ec702614952d92463e106ee761540d67283b909ca1034380fe138358153b4f4",
																			"typeString": "literal_string \"You claim all or have not bought yet\""
																		}
																	],
																	"id": 1716,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10369:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10369:92:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1724,
															"nodeType": "ExpressionStatement",
															"src": "10369:92:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1730,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10512:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10512:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1732,
																			"name": "buyer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1710,
																			"src": "10524:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																				"typeString": "struct Presale.BuyerInfo storage pointer"
																			}
																		},
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenOwner",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 779,
																		"src": "10524:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1726,
																					"name": "saleInfor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10482:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																						"typeString": "struct Presale.SaleInfor storage ref"
																					}
																				},
																				"id": 1727,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "saleToken",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 748,
																				"src": "10482:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ERC20_$585",
																					"typeString": "contract ERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ERC20_$585",
																					"typeString": "contract ERC20"
																				}
																			],
																			"id": 1725,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 585,
																			"src": "10476:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 1728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10476:26:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$585",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "10476:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10476:65:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1735,
															"nodeType": "ExpressionStatement",
															"src": "10476:65:4"
														},
														{
															"expression": {
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1736,
																		"name": "presaleStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10556:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PresaleStatus_$808_storage",
																			"typeString": "struct Presale.PresaleStatus storage ref"
																		}
																	},
																	"id": 1738,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalTokenWithDraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 792,
																	"src": "10556:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 1739,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1710,
																		"src": "10592:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																			"typeString": "struct Presale.BuyerInfo storage pointer"
																		}
																	},
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 779,
																	"src": "10592:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10556:52:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1742,
															"nodeType": "ExpressionStatement",
															"src": "10556:52:4"
														},
														{
															"expression": {
																"id": 1748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1743,
																		"name": "saleInfor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "10623:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SaleInfor_$770_storage",
																			"typeString": "struct Presale.SaleInfor storage ref"
																		}
																	},
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amountTokenForSale",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 769,
																	"src": "10623:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"expression": {
																		"id": 1746,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1710,
																		"src": "10655:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																			"typeString": "struct Presale.BuyerInfo storage pointer"
																		}
																	},
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 779,
																	"src": "10655:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10623:48:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1749,
															"nodeType": "ExpressionStatement",
															"src": "10623:48:4"
														},
														{
															"expression": {
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1750,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1710,
																		"src": "10686:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																			"typeString": "struct Presale.BuyerInfo storage pointer"
																		}
																	},
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalTokenWithDraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 783,
																	"src": "10686:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 1753,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1710,
																		"src": "10714:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																			"typeString": "struct Presale.BuyerInfo storage pointer"
																		}
																	},
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 779,
																	"src": "10714:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10686:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1756,
															"nodeType": "ExpressionStatement",
															"src": "10686:44:4"
														},
														{
															"expression": {
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1757,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1710,
																		"src": "10745:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																			"typeString": "struct Presale.BuyerInfo storage pointer"
																		}
																	},
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "baseDeposit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 777,
																	"src": "10745:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10765:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10745:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1762,
															"nodeType": "ExpressionStatement",
															"src": "10745:21:4"
														},
														{
															"expression": {
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1763,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1710,
																		"src": "10781:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																			"typeString": "struct Presale.BuyerInfo storage pointer"
																		}
																	},
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tokenOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 779,
																	"src": "10781:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10800:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10781:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1768,
															"nodeType": "ExpressionStatement",
															"src": "10781:20:4"
														},
														{
															"expression": {
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1769,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1710,
																		"src": "10816:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BuyerInfo_$786_storage_ptr",
																			"typeString": "struct Presale.BuyerInfo storage pointer"
																		}
																	},
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastWithDraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 781,
																	"src": "10816:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1772,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10837:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "10837:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10816:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1775,
															"nodeType": "ExpressionStatement",
															"src": "10816:36:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "eb002bb0",
									"id": 1853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userClaimOrRefundWhenSaleSuccess",
									"nameLocation": "9999:32:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "isClaim",
												"nameLocation": "10037:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "10032:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10032:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10031:14:4"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10055:0:4"
									},
									"scope": 1882,
									"src": "9990:1573:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "11640:42:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1860,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "11658:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "11658:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1859,
												"id": 1862,
												"nodeType": "Return",
												"src": "11651:23:4"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "11580:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "11599:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "11591:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11591:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11590:18:4"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "11631:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11630:9:4"
									},
									"scope": 1882,
									"src": "11571:111:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1880,
										"nodeType": "Block",
										"src": "11731:70:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1875,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "11779:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Presale_$1882",
																			"typeString": "contract Presale"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Presale_$1882",
																			"typeString": "contract Presale"
																		}
																	],
																	"id": 1874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11771:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1873,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11771:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11771:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "11771:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1869,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11750:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11750:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11742:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1867,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11742:8:4",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11742:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "11742:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11742:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1879,
												"nodeType": "ExpressionStatement",
												"src": "11742:51:4"
											}
										]
									},
									"functionSelector": "861faf5f",
									"id": 1881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "backToken",
									"nameLocation": "11702:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11711:2:4"
									},
									"returnParameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11731:0:4"
									},
									"scope": 1882,
									"src": "11693:108:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1883,
							"src": "370:11434:4",
							"usedErrors": []
						}
					],
					"src": "93:11711:4"
				},
				"id": 4
			},
			"Ethereum/PresaleSettings.sol": {
				"ast": {
					"absolutePath": "Ethereum/PresaleSettings.sol",
					"exportedSymbols": {
						"Context": [
							2068
						],
						"EnumerableSet": [
							2667
						],
						"Ownable": [
							2772
						],
						"PresaleSettings": [
							2046
						]
					},
					"id": 2047,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1884,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"absolutePath": "Utils/Ownable.sol",
							"file": "../Utils/Ownable.sol",
							"id": 1885,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2047,
							"sourceUnit": 2773,
							"src": "62:30:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/EnumerableSet.sol",
							"file": "../Utils/EnumerableSet.sol",
							"id": 1886,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2047,
							"sourceUnit": 2668,
							"src": "94:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1887,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2772,
										"src": "162:7:5"
									},
									"id": 1888,
									"nodeType": "InheritanceSpecifier",
									"src": "162:7:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2046,
							"linearizedBaseContracts": [
								2046,
								2772,
								2068
							],
							"name": "PresaleSettings",
							"nameLocation": "143:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1892,
									"libraryName": {
										"id": 1889,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2667,
										"src": "183:13:5"
									},
									"nodeType": "UsingForDirective",
									"src": "177:49:5",
									"typeName": {
										"id": 1891,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1890,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2380,
											"src": "201:24:5"
										},
										"referencedDeclaration": 2380,
										"src": "201:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"canonicalName": "PresaleSettings.Settings",
									"id": 1903,
									"members": [
										{
											"constant": false,
											"id": 1894,
											"mutability": "mutable",
											"name": "BASE_FEE",
											"nameLocation": "269:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 1903,
											"src": "261:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1893,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "261:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1896,
											"mutability": "mutable",
											"name": "TOKEN_FEE",
											"nameLocation": "324:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 1903,
											"src": "316:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1895,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "316:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1898,
											"mutability": "mutable",
											"name": "ETH_FEE_ADDRESS",
											"nameLocation": "389:15:5",
											"nodeType": "VariableDeclaration",
											"scope": 1903,
											"src": "373:31:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 1897,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "373:15:5",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1900,
											"mutability": "mutable",
											"name": "TOKEN_FEE_ADDRESS",
											"nameLocation": "431:17:5",
											"nodeType": "VariableDeclaration",
											"scope": 1903,
											"src": "415:33:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 1899,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "415:15:5",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1902,
											"mutability": "mutable",
											"name": "ETH_CREATION_FEE",
											"nameLocation": "467:16:5",
											"nodeType": "VariableDeclaration",
											"scope": 1903,
											"src": "459:24:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1901,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "459:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Settings",
									"nameLocation": "241:8:5",
									"nodeType": "StructDefinition",
									"scope": 2046,
									"src": "234:311:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ade97ab5",
									"id": 1906,
									"mutability": "mutable",
									"name": "SETTINGS",
									"nameLocation": "569:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 2046,
									"src": "553:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Settings_$1903_storage",
										"typeString": "struct PresaleSettings.Settings"
									},
									"typeName": {
										"id": 1905,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1904,
											"name": "Settings",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1903,
											"src": "553:8:5"
										},
										"referencedDeclaration": 1903,
										"src": "553:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Settings_$1903_storage_ptr",
											"typeString": "struct PresaleSettings.Settings"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "600:260:5",
										"statements": [
											{
												"expression": {
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1909,
															"name": "SETTINGS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "611:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Settings_$1903_storage",
																"typeString": "struct PresaleSettings.Settings storage ref"
															}
														},
														"id": 1911,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "BASE_FEE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1894,
														"src": "611:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3530",
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "631:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"src": "611:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "611:22:5"
											},
											{
												"expression": {
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1915,
															"name": "SETTINGS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "650:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Settings_$1903_storage",
																"typeString": "struct PresaleSettings.Settings storage ref"
															}
														},
														"id": 1917,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "TOKEN_FEE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1896,
														"src": "650:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "671:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "650:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1920,
												"nodeType": "ExpressionStatement",
												"src": "650:22:5"
											},
											{
												"expression": {
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1921,
															"name": "SETTINGS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "689:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Settings_$1903_storage",
																"typeString": "struct PresaleSettings.Settings storage ref"
															}
														},
														"id": 1923,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "ETH_CREATION_FEE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1902,
														"src": "689:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "717:7:5",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "689:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "689:35:5"
											},
											{
												"expression": {
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1927,
															"name": "SETTINGS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "743:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Settings_$1903_storage",
																"typeString": "struct PresaleSettings.Settings storage ref"
															}
														},
														"id": 1929,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "ETH_FEE_ADDRESS",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1898,
														"src": "743:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1932,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "778:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "778:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "770:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1930,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "770:8:5",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "770:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "743:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1936,
												"nodeType": "ExpressionStatement",
												"src": "743:48:5"
											},
											{
												"expression": {
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1937,
															"name": "SETTINGS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "802:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Settings_$1903_storage",
																"typeString": "struct PresaleSettings.Settings storage ref"
															}
														},
														"id": 1939,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "TOKEN_FEE_ADDRESS",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1900,
														"src": "802:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1942,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "839:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "839:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "831:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 1940,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "831:8:5",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "831:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "802:50:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "802:50:5"
											}
										]
									},
									"id": 1948,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "597:2:5"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "600:0:5"
									},
									"scope": 2046,
									"src": "586:274:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1956,
										"nodeType": "Block",
										"src": "922:43:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1953,
														"name": "SETTINGS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "940:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Settings_$1903_storage",
															"typeString": "struct PresaleSettings.Settings storage ref"
														}
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "BASE_FEE",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1894,
													"src": "940:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1952,
												"id": 1955,
												"nodeType": "Return",
												"src": "933:24:5"
											}
										]
									},
									"functionSelector": "15e812ad",
									"id": 1957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBaseFee",
									"nameLocation": "877:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:2:5"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "913:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:9:5"
									},
									"scope": 2046,
									"src": "868:97:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "1028:44:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1962,
														"name": "SETTINGS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "1046:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Settings_$1903_storage",
															"typeString": "struct PresaleSettings.Settings storage ref"
														}
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "TOKEN_FEE",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1896,
													"src": "1046:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1961,
												"id": 1964,
												"nodeType": "Return",
												"src": "1039:25:5"
											}
										]
									},
									"functionSelector": "35546850",
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenFee",
									"nameLocation": "982:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:2:5"
									},
									"returnParameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "1019:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:5"
									},
									"scope": 2046,
									"src": "973:99:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "1141:51:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1971,
														"name": "SETTINGS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "1159:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Settings_$1903_storage",
															"typeString": "struct PresaleSettings.Settings storage ref"
														}
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "ETH_CREATION_FEE",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1902,
													"src": "1159:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1970,
												"id": 1973,
												"nodeType": "Return",
												"src": "1152:32:5"
											}
										]
									},
									"functionSelector": "e38ef7a3",
									"id": 1975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthCreationFee",
									"nameLocation": "1089:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:2:5"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "1132:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1131:9:5"
									},
									"scope": 2046,
									"src": "1080:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "1265:50:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1980,
														"name": "SETTINGS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "1283:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Settings_$1903_storage",
															"typeString": "struct PresaleSettings.Settings storage ref"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "ETH_FEE_ADDRESS",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1898,
													"src": "1283:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1979,
												"id": 1982,
												"nodeType": "Return",
												"src": "1276:31:5"
											}
										]
									},
									"functionSelector": "24785172",
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthAddress",
									"nameLocation": "1209:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1222:2:5"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "1248:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1248:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:17:5"
									},
									"scope": 2046,
									"src": "1200:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1992,
										"nodeType": "Block",
										"src": "1390:52:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1989,
														"name": "SETTINGS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "1408:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Settings_$1903_storage",
															"typeString": "struct PresaleSettings.Settings storage ref"
														}
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "TOKEN_FEE_ADDRESS",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1900,
													"src": "1408:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1988,
												"id": 1991,
												"nodeType": "Return",
												"src": "1401:33:5"
											}
										]
									},
									"functionSelector": "10fe9ae8",
									"id": 1993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAddress",
									"nameLocation": "1332:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1347:2:5"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "1373:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1373:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:17:5"
									},
									"scope": 2046,
									"src": "1323:119:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "1582:113:5",
										"statements": [
											{
												"expression": {
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2002,
															"name": "SETTINGS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "1593:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Settings_$1903_storage",
																"typeString": "struct PresaleSettings.Settings storage ref"
															}
														},
														"id": 2004,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "ETH_FEE_ADDRESS",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1898,
														"src": "1593:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2005,
														"name": "_ethAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1995,
														"src": "1620:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1593:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2007,
												"nodeType": "ExpressionStatement",
												"src": "1593:38:5"
											},
											{
												"expression": {
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2008,
															"name": "SETTINGS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "1642:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Settings_$1903_storage",
																"typeString": "struct PresaleSettings.Settings storage ref"
															}
														},
														"id": 2010,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "TOKEN_FEE_ADDRESS",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1900,
														"src": "1642:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2011,
														"name": "_tokenFeeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1997,
														"src": "1671:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1642:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2013,
												"nodeType": "ExpressionStatement",
												"src": "1642:45:5"
											}
										]
									},
									"functionSelector": "11c84120",
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2000,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1999,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2714,
												"src": "1572:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1572:9:5"
										}
									],
									"name": "setFeeAddresses",
									"nameLocation": "1459:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "_ethAddress",
												"nameLocation": "1501:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "1485:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1485:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "_tokenFeeAddress",
												"nameLocation": "1539:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "1523:32:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1523:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1474:88:5"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1582:0:5"
									},
									"scope": 2046,
									"src": "1450:245:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "1835:142:5",
										"statements": [
											{
												"expression": {
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2026,
															"name": "SETTINGS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "1846:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Settings_$1903_storage",
																"typeString": "struct PresaleSettings.Settings storage ref"
															}
														},
														"id": 2028,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "BASE_FEE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1894,
														"src": "1846:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2029,
														"name": "_baseFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2017,
														"src": "1866:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1846:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2031,
												"nodeType": "ExpressionStatement",
												"src": "1846:28:5"
											},
											{
												"expression": {
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2032,
															"name": "SETTINGS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "1885:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Settings_$1903_storage",
																"typeString": "struct PresaleSettings.Settings storage ref"
															}
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "TOKEN_FEE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1896,
														"src": "1885:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2035,
														"name": "_tokenFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "1906:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1885:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2037,
												"nodeType": "ExpressionStatement",
												"src": "1885:30:5"
											},
											{
												"expression": {
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2038,
															"name": "SETTINGS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "1926:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Settings_$1903_storage",
																"typeString": "struct PresaleSettings.Settings storage ref"
															}
														},
														"id": 2040,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "ETH_CREATION_FEE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1902,
														"src": "1926:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2041,
														"name": "_ethCreationFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "1954:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1926:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2043,
												"nodeType": "ExpressionStatement",
												"src": "1926:43:5"
											}
										]
									},
									"functionSelector": "cec10c11",
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2024,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2023,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2714,
												"src": "1825:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1825:9:5"
										}
									],
									"name": "setFees",
									"nameLocation": "1712:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "_baseFee",
												"nameLocation": "1738:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "1730:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "_tokenFee",
												"nameLocation": "1765:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "1757:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1757:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "_ethCreationFee",
												"nameLocation": "1793:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "1785:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1719:96:5"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1835:0:5"
									},
									"scope": 2046,
									"src": "1703:274:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2047,
							"src": "134:1846:5",
							"usedErrors": []
						}
					],
					"src": "35:1947:5"
				},
				"id": 5
			},
			"Utils/Context.sol": {
				"ast": {
					"absolutePath": "Utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2068
						]
					},
					"id": 2069,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2048,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2049,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2068,
							"linearizedBaseContracts": [
								2068
							],
							"name": "Context",
							"nameLocation": "641:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "718:36:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2054,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2053,
												"id": 2056,
												"nodeType": "Return",
												"src": "729:17:6"
											}
										]
									},
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 2068,
									"src": "656:98:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2066,
										"nodeType": "Block",
										"src": "829:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2063,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2062,
												"id": 2065,
												"nodeType": "Return",
												"src": "840:15:6"
											}
										]
									},
									"id": 2067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:6"
									},
									"returnParameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "813:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:6"
									},
									"scope": 2068,
									"src": "762:101:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2069,
							"src": "623:243:6",
							"usedErrors": []
						}
					],
					"src": "89:779:6"
				},
				"id": 6
			},
			"Utils/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "Utils/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							2667
						]
					},
					"id": 2668,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2070,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2071,
								"nodeType": "StructuredDocumentation",
								"src": "145:1118:7",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 2667,
							"linearizedBaseContracts": [
								2667
							],
							"name": "EnumerableSet",
							"nameLocation": "1273:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 2079,
									"members": [
										{
											"constant": false,
											"id": 2074,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1809:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 2079,
											"src": "1799:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 2072,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2073,
												"nodeType": "ArrayTypeName",
												"src": "1799:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2078,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "1980:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 2079,
											"src": "1952:36:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 2077,
												"keyType": {
													"id": 2075,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1952:27:7",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1750:3:7",
									"nodeType": "StructDefinition",
									"scope": 2667,
									"src": "1743:253:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2120,
										"nodeType": "Block",
										"src": "2243:345:7",
										"statements": [
											{
												"condition": {
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2258:22:7",
													"subExpression": {
														"arguments": [
															{
																"id": 2091,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "2269:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 2092,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2085,
																"src": "2274:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2090,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "2259:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2079_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2259:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2118,
													"nodeType": "Block",
													"src": "2542:39:7",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2564:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2089,
															"id": 2117,
															"nodeType": "Return",
															"src": "2557:12:7"
														}
													]
												},
												"id": 2119,
												"nodeType": "IfStatement",
												"src": "2254:327:7",
												"trueBody": {
													"id": 2115,
													"nodeType": "Block",
													"src": "2282:254:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2100,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2085,
																		"src": "2314:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2095,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "2297:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2098,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2074,
																		"src": "2297:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2297:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 2101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2297:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2102,
															"nodeType": "ExpressionStatement",
															"src": "2297:23:7"
														},
														{
															"expression": {
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 2103,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "2458:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2106,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2078,
																		"src": "2458:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 2107,
																	"indexExpression": {
																		"id": 2105,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2085,
																		"src": "2471:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2458:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 2108,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "2480:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2109,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2074,
																		"src": "2480:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2480:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2458:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2112,
															"nodeType": "ExpressionStatement",
															"src": "2458:40:7"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2520:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2089,
															"id": 2114,
															"nodeType": "Return",
															"src": "2513:11:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "2004:164:7",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2183:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2200:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "2188:15:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2081,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2079,
														"src": "2188:3:7"
													},
													"referencedDeclaration": 2079,
													"src": "2188:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2213:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "2205:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2084,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2187:32:7"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "2237:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2087,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2237:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2236:6:7"
									},
									"scope": 2667,
									"src": "2174:414:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2204,
										"nodeType": "Block",
										"src": "2836:1348:7",
										"statements": [
											{
												"assignments": [
													2133
												],
												"declarations": [
													{
														"constant": false,
														"id": 2133,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2956:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 2204,
														"src": "2948:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2948:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2138,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 2134,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2125,
															"src": "2969:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2135,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2078,
														"src": "2969:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 2137,
													"indexExpression": {
														"id": 2136,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2127,
														"src": "2982:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2969:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2948:40:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2139,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2133,
														"src": "3005:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3019:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3005:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2202,
													"nodeType": "Block",
													"src": "4138:39:7",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4160:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2131,
															"id": 2201,
															"nodeType": "Return",
															"src": "4153:12:7"
														}
													]
												},
												"id": 2203,
												"nodeType": "IfStatement",
												"src": "3001:1176:7",
												"trueBody": {
													"id": 2199,
													"nodeType": "Block",
													"src": "3022:1110:7",
													"statements": [
														{
															"assignments": [
																2143
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2143,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3388:13:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2199,
																	"src": "3380:21:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2142,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3380:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2147,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2144,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2133,
																	"src": "3404:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3417:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3404:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3380:38:7"
														},
														{
															"assignments": [
																2149
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2149,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3441:9:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2199,
																	"src": "3433:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2148,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3433:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2155,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 2150,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2125,
																			"src": "3453:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2074,
																		"src": "3453:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3453:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3474:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3453:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3433:42:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2156,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2149,
																	"src": "3496:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2157,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2143,
																	"src": "3509:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3496:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2183,
															"nodeType": "IfStatement",
															"src": "3492:405:7",
															"trueBody": {
																"id": 2182,
																"nodeType": "Block",
																"src": "3524:373:7",
																"statements": [
																	{
																		"assignments": [
																			2160
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2160,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3551:9:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 2182,
																				"src": "3543:17:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 2159,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3543:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2165,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 2161,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2125,
																					"src": "3563:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 2162,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2074,
																				"src": "3563:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 2164,
																			"indexExpression": {
																				"id": 2163,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2149,
																				"src": "3575:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3563:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3543:42:7"
																	},
																	{
																		"expression": {
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 2166,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2125,
																						"src": "3688:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 2169,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2074,
																					"src": "3688:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 2170,
																				"indexExpression": {
																					"id": 2168,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2143,
																					"src": "3700:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3688:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2171,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2160,
																				"src": "3717:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3688:38:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 2173,
																		"nodeType": "ExpressionStatement",
																		"src": "3688:38:7"
																	},
																	{
																		"expression": {
																			"id": 2180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 2174,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2125,
																						"src": "3802:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 2177,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2078,
																					"src": "3802:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 2178,
																				"indexExpression": {
																					"id": 2176,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2160,
																					"src": "3815:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3802:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2179,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2133,
																				"src": "3828:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3802:36:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2181,
																		"nodeType": "ExpressionStatement",
																		"src": "3802:36:7"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 2184,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2125,
																			"src": "3978:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2187,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2074,
																		"src": "3978:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3978:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3978:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2190,
															"nodeType": "ExpressionStatement",
															"src": "3978:17:7"
														},
														{
															"expression": {
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4066:26:7",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 2191,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2125,
																			"src": "4073:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2078,
																		"src": "4073:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 2194,
																	"indexExpression": {
																		"id": 2193,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2127,
																		"src": "4086:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4073:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2196,
															"nodeType": "ExpressionStatement",
															"src": "4066:26:7"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4116:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2131,
															"id": 2198,
															"nodeType": "Return",
															"src": "4109:11:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "2596:162:7",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2773:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2793:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "2781:15:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2123,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2079,
														"src": "2781:3:7"
													},
													"referencedDeclaration": 2079,
													"src": "2781:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2806:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "2798:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2126,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2780:32:7"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "2830:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2830:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:6:7"
									},
									"scope": 2667,
									"src": "2764:1420:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2223,
										"nodeType": "Block",
										"src": "4349:50:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 2216,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "4367:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2078,
															"src": "4367:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 2219,
														"indexExpression": {
															"id": 2218,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "4380:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4367:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4390:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4367:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2215,
												"id": 2222,
												"nodeType": "Return",
												"src": "4360:31:7"
											}
										]
									},
									"documentation": {
										"id": 2206,
										"nodeType": "StructuredDocumentation",
										"src": "4192:72:7",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4279:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4301:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "4289:15:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2208,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2207,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2079,
														"src": "4289:3:7"
													},
													"referencedDeclaration": 2079,
													"src": "4289:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4314:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "4306:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2210,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4306:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4288:32:7"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "4343:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4343:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4342:6:7"
									},
									"scope": 2667,
									"src": "4270:129:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2237,
										"nodeType": "Block",
										"src": "4550:44:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 2233,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2228,
															"src": "4568:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2234,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2074,
														"src": "4568:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4568:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2232,
												"id": 2236,
												"nodeType": "Return",
												"src": "4561:25:7"
											}
										]
									},
									"documentation": {
										"id": 2225,
										"nodeType": "StructuredDocumentation",
										"src": "4407:72:7",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4494:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4514:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "4502:15:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2227,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2226,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2079,
														"src": "4502:3:7"
													},
													"referencedDeclaration": 2079,
													"src": "4502:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4501:17:7"
									},
									"returnParameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "4541:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4541:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:9:7"
									},
									"scope": 2667,
									"src": "4485:109:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2254,
										"nodeType": "Block",
										"src": "5024:44:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 2249,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "5042:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2250,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2074,
														"src": "5042:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 2252,
													"indexExpression": {
														"id": 2251,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2244,
														"src": "5054:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5042:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2248,
												"id": 2253,
												"nodeType": "Return",
												"src": "5035:25:7"
											}
										]
									},
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "4602:340:7",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4957:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4973:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "4961:15:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2241,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2240,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2079,
														"src": "4961:3:7"
													},
													"referencedDeclaration": 2079,
													"src": "4961:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4986:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "4978:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4960:32:7"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "5015:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5015:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5014:9:7"
									},
									"scope": 2667,
									"src": "4948:120:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2268,
										"nodeType": "Block",
										"src": "5692:37:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2265,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "5710:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 2266,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2074,
													"src": "5710:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 2264,
												"id": 2267,
												"nodeType": "Return",
												"src": "5703:18:7"
											}
										]
									},
									"documentation": {
										"id": 2256,
										"nodeType": "StructuredDocumentation",
										"src": "5076:536:7",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5627:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5647:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "5635:15:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2257,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2079,
														"src": "5635:3:7"
													},
													"referencedDeclaration": 2079,
													"src": "5635:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5634:17:7"
									},
									"returnParameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "5674:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2261,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5674:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2262,
													"nodeType": "ArrayTypeName",
													"src": "5674:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5673:18:7"
									},
									"scope": 2667,
									"src": "5618:111:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 2273,
									"members": [
										{
											"constant": false,
											"id": 2272,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5791:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 2273,
											"src": "5787:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 2271,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2270,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2079,
													"src": "5787:3:7"
												},
												"referencedDeclaration": 2079,
												"src": "5787:3:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5765:10:7",
									"nodeType": "StructDefinition",
									"scope": 2667,
									"src": "5758:47:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2290,
										"nodeType": "Block",
										"src": "6059:49:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2285,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2277,
																"src": "6082:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2286,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2272,
															"src": "6082:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2287,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "6094:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2284,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2121,
														"src": "6077:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2079_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6077:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2283,
												"id": 2289,
												"nodeType": "Return",
												"src": "6070:30:7"
											}
										]
									},
									"documentation": {
										"id": 2274,
										"nodeType": "StructuredDocumentation",
										"src": "5813:164:7",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5992:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6015:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "5996:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2276,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2275,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2273,
														"src": "5996:10:7"
													},
													"referencedDeclaration": 2273,
													"src": "5996:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6028:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "6020:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5995:39:7"
									},
									"returnParameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2291,
												"src": "6053:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6053:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6052:6:7"
									},
									"scope": 2667,
									"src": "5983:125:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2308,
										"nodeType": "Block",
										"src": "6363:52:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2303,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "6389:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2272,
															"src": "6389:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2305,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "6401:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2302,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2205,
														"src": "6381:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2079_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6381:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2301,
												"id": 2307,
												"nodeType": "Return",
												"src": "6374:33:7"
											}
										]
									},
									"documentation": {
										"id": 2292,
										"nodeType": "StructuredDocumentation",
										"src": "6116:162:7",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6293:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6319:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "6300:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2293,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2273,
														"src": "6300:10:7"
													},
													"referencedDeclaration": 2273,
													"src": "6300:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6332:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "6324:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2296,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6324:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6299:39:7"
									},
									"returnParameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "6357:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6357:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6356:6:7"
									},
									"scope": 2667,
									"src": "6284:131:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2326,
										"nodeType": "Block",
										"src": "6587:54:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2321,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2313,
																"src": "6615:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2322,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2272,
															"src": "6615:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2323,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2315,
															"src": "6627:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2320,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2224,
														"src": "6605:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2079_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6605:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2319,
												"id": 2325,
												"nodeType": "Return",
												"src": "6598:35:7"
											}
										]
									},
									"documentation": {
										"id": 2310,
										"nodeType": "StructuredDocumentation",
										"src": "6423:72:7",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6510:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6538:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "6519:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2312,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2311,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2273,
														"src": "6519:10:7"
													},
													"referencedDeclaration": 2273,
													"src": "6519:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6551:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "6543:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6543:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6518:39:7"
									},
									"returnParameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "6581:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6581:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6580:6:7"
									},
									"scope": 2667,
									"src": "6501:140:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2341,
										"nodeType": "Block",
										"src": "6799:45:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2337,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "6825:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2338,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2272,
															"src": "6825:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2336,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2238,
														"src": "6817:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2079_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6817:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2335,
												"id": 2340,
												"nodeType": "Return",
												"src": "6810:26:7"
											}
										]
									},
									"documentation": {
										"id": 2328,
										"nodeType": "StructuredDocumentation",
										"src": "6649:72:7",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6736:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6762:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "6743:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2329,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2273,
														"src": "6743:10:7"
													},
													"referencedDeclaration": 2273,
													"src": "6743:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6742:24:7"
									},
									"returnParameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2342,
												"src": "6790:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6790:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6789:9:7"
									},
									"scope": 2667,
									"src": "6727:117:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2359,
										"nodeType": "Block",
										"src": "7281:48:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2354,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2346,
																"src": "7303:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2355,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2272,
															"src": "7303:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2356,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2348,
															"src": "7315:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2353,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2255,
														"src": "7299:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2079_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7299:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2352,
												"id": 2358,
												"nodeType": "Return",
												"src": "7292:29:7"
											}
										]
									},
									"documentation": {
										"id": 2343,
										"nodeType": "StructuredDocumentation",
										"src": "6852:340:7",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7207:2:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7229:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "7210:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2345,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2344,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2273,
														"src": "7210:10:7"
													},
													"referencedDeclaration": 2273,
													"src": "7210:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "7234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:39:7"
									},
									"returnParameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2360,
												"src": "7272:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:9:7"
									},
									"scope": 2667,
									"src": "7198:131:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2375,
										"nodeType": "Block",
										"src": "7960:45:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2371,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2364,
																"src": "7986:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2272,
															"src": "7986:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2370,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2269,
														"src": "7978:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2079_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7978:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 2369,
												"id": 2374,
												"nodeType": "Return",
												"src": "7971:26:7"
											}
										]
									},
									"documentation": {
										"id": 2361,
										"nodeType": "StructuredDocumentation",
										"src": "7337:536:7",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7888:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7914:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "7895:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2362,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2273,
														"src": "7895:10:7"
													},
													"referencedDeclaration": 2273,
													"src": "7895:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2273_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7894:24:7"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "7942:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2366,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7942:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2367,
													"nodeType": "ArrayTypeName",
													"src": "7942:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7941:18:7"
									},
									"scope": 2667,
									"src": "7879:126:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 2380,
									"members": [
										{
											"constant": false,
											"id": 2379,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8067:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 2380,
											"src": "8063:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 2378,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2377,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2079,
													"src": "8063:3:7"
												},
												"referencedDeclaration": 2079,
												"src": "8063:3:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8041:10:7",
									"nodeType": "StructDefinition",
									"scope": 2667,
									"src": "8034:47:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2406,
										"nodeType": "Block",
										"src": "8335:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2392,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2384,
																"src": "8358:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2393,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "8358:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2400,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2386,
																					"src": "8394:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8386:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2398,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8386:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8386:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8378:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2396,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8378:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8378:23:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8370:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2394,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8370:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8370:32:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2391,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2121,
														"src": "8353:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2079_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8353:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2390,
												"id": 2405,
												"nodeType": "Return",
												"src": "8346:57:7"
											}
										]
									},
									"documentation": {
										"id": 2381,
										"nodeType": "StructuredDocumentation",
										"src": "8089:164:7",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8268:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8291:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "8272:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2383,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2382,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2380,
														"src": "8272:10:7"
													},
													"referencedDeclaration": 2380,
													"src": "8272:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8304:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "8296:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8296:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8271:39:7"
									},
									"returnParameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "8329:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8329:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:6:7"
									},
									"scope": 2667,
									"src": "8259:152:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "8666:79:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2419,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2411,
																"src": "8692:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2420,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "8692:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2427,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2413,
																					"src": "8728:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8720:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2425,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8720:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8720:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8712:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2423,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8712:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8712:23:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8704:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2421,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8704:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8704:32:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2418,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2205,
														"src": "8684:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2079_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8684:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2417,
												"id": 2432,
												"nodeType": "Return",
												"src": "8677:60:7"
											}
										]
									},
									"documentation": {
										"id": 2408,
										"nodeType": "StructuredDocumentation",
										"src": "8419:162:7",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8596:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8622:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "8603:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2410,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2409,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2380,
														"src": "8603:10:7"
													},
													"referencedDeclaration": 2380,
													"src": "8603:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8635:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "8627:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8627:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8602:39:7"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "8660:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8660:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8659:6:7"
									},
									"scope": 2667,
									"src": "8587:158:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "8917:81:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2446,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2438,
																"src": "8945:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "8945:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2454,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2440,
																					"src": "8981:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8973:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2452,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8973:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8973:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8965:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2450,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8965:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8965:23:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8957:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2448,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8957:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8957:32:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2445,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2224,
														"src": "8935:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2079_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8935:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2444,
												"id": 2459,
												"nodeType": "Return",
												"src": "8928:62:7"
											}
										]
									},
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "8753:72:7",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8840:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8868:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "8849:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2436,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2380,
														"src": "8849:10:7"
													},
													"referencedDeclaration": 2380,
													"src": "8849:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8881:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "8873:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8873:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:39:7"
									},
									"returnParameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "8911:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2442,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8911:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8910:6:7"
									},
									"scope": 2667,
									"src": "8831:167:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2475,
										"nodeType": "Block",
										"src": "9156:45:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2471,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2465,
																"src": "9182:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "9182:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2470,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2238,
														"src": "9174:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2079_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9174:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2469,
												"id": 2474,
												"nodeType": "Return",
												"src": "9167:26:7"
											}
										]
									},
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "9006:72:7",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9093:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9119:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "9100:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2464,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2463,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2380,
														"src": "9100:10:7"
													},
													"referencedDeclaration": 2380,
													"src": "9100:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9099:24:7"
									},
									"returnParameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "9147:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9147:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9146:9:7"
									},
									"scope": 2667,
									"src": "9084:117:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2502,
										"nodeType": "Block",
										"src": "9638:75:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2494,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2480,
																						"src": "9684:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 2495,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2379,
																					"src": "9684:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$2079_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 2496,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2482,
																					"src": "9696:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$2079_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2493,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2255,
																				"src": "9680:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2079_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 2497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9680:22:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9672:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2491,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9672:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9672:31:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9664:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2489,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9664:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9664:40:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9656:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2487,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9656:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2486,
												"id": 2501,
												"nodeType": "Return",
												"src": "9649:56:7"
											}
										]
									},
									"documentation": {
										"id": 2477,
										"nodeType": "StructuredDocumentation",
										"src": "9209:340:7",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9564:2:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9586:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "9567:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2479,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2478,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2380,
														"src": "9567:10:7"
													},
													"referencedDeclaration": 2380,
													"src": "9567:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9599:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "9591:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9591:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9566:39:7"
									},
									"returnParameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "9629:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9629:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9628:9:7"
									},
									"scope": 2667,
									"src": "9555:158:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2532,
										"nodeType": "Block",
										"src": "10344:229:7",
										"statements": [
											{
												"assignments": [
													2517
												],
												"declarations": [
													{
														"constant": false,
														"id": 2517,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10372:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 2532,
														"src": "10355:22:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2515,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10355:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2516,
															"nodeType": "ArrayTypeName",
															"src": "10355:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2522,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2519,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2507,
																"src": "10388:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2520,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "10388:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2518,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2269,
														"src": "10380:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2079_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10380:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10355:44:7"
											},
											{
												"assignments": [
													2527
												],
												"declarations": [
													{
														"constant": false,
														"id": 2527,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10427:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2532,
														"src": "10410:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2525,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10410:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2526,
															"nodeType": "ArrayTypeName",
															"src": "10410:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2528,
												"nodeType": "VariableDeclarationStatement",
												"src": "10410:23:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10499:41:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10514:15:7",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10524:5:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10514:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 2527,
														"isOffset": false,
														"isSlot": false,
														"src": "10514:6:7",
														"valueSize": 1
													},
													{
														"declaration": 2517,
														"isOffset": false,
														"isSlot": false,
														"src": "10524:5:7",
														"valueSize": 1
													}
												],
												"id": 2529,
												"nodeType": "InlineAssembly",
												"src": "10490:50:7"
											},
											{
												"expression": {
													"id": 2530,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2527,
													"src": "10559:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 2512,
												"id": 2531,
												"nodeType": "Return",
												"src": "10552:13:7"
											}
										]
									},
									"documentation": {
										"id": 2504,
										"nodeType": "StructuredDocumentation",
										"src": "9721:536:7",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10272:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10298:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "10279:22:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2506,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2505,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2380,
														"src": "10279:10:7"
													},
													"referencedDeclaration": 2380,
													"src": "10279:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2380_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10278:24:7"
									},
									"returnParameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "10326:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2509,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10326:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2510,
													"nodeType": "ArrayTypeName",
													"src": "10326:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10325:18:7"
									},
									"scope": 2667,
									"src": "10263:310:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 2537,
									"members": [
										{
											"constant": false,
											"id": 2536,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10629:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 2537,
											"src": "10625:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 2535,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2534,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2079,
													"src": "10625:3:7"
												},
												"referencedDeclaration": 2079,
												"src": "10625:3:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2079_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10606:7:7",
									"nodeType": "StructDefinition",
									"scope": 2667,
									"src": "10599:44:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2557,
										"nodeType": "Block",
										"src": "10894:58:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2549,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2541,
																"src": "10917:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2550,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2536,
															"src": "10917:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2553,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2543,
																	"src": "10937:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10929:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2551,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10929:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10929:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2548,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2121,
														"src": "10912:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2079_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10912:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2547,
												"id": 2556,
												"nodeType": "Return",
												"src": "10905:39:7"
											}
										]
									},
									"documentation": {
										"id": 2538,
										"nodeType": "StructuredDocumentation",
										"src": "10651:164:7",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10830:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10850:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "10834:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2540,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2539,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2537,
														"src": "10834:7:7"
													},
													"referencedDeclaration": 2537,
													"src": "10834:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10863:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "10855:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10855:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10833:36:7"
									},
									"returnParameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "10888:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10888:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10887:6:7"
									},
									"scope": 2667,
									"src": "10821:131:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "11204:61:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2570,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2562,
																"src": "11230:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2571,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2536,
															"src": "11230:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2574,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2564,
																	"src": "11250:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11242:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2572,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11242:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11242:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2569,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2205,
														"src": "11222:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2079_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11222:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2568,
												"id": 2577,
												"nodeType": "Return",
												"src": "11215:42:7"
											}
										]
									},
									"documentation": {
										"id": 2559,
										"nodeType": "StructuredDocumentation",
										"src": "10960:162:7",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11137:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11160:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "11144:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2561,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2560,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2537,
														"src": "11144:7:7"
													},
													"referencedDeclaration": 2537,
													"src": "11144:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11173:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "11165:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11165:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11143:36:7"
									},
									"returnParameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "11198:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2566,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11198:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11197:6:7"
									},
									"scope": 2667,
									"src": "11128:137:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2599,
										"nodeType": "Block",
										"src": "11434:63:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2591,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2583,
																"src": "11462:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2592,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2536,
															"src": "11462:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2595,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "11482:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11474:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2593,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11474:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11474:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2590,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2224,
														"src": "11452:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2079_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11452:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2589,
												"id": 2598,
												"nodeType": "Return",
												"src": "11445:44:7"
											}
										]
									},
									"documentation": {
										"id": 2580,
										"nodeType": "StructuredDocumentation",
										"src": "11273:72:7",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11360:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11385:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "11369:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2582,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2581,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2537,
														"src": "11369:7:7"
													},
													"referencedDeclaration": 2537,
													"src": "11369:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11398:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "11390:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11390:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11368:36:7"
									},
									"returnParameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "11428:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2587,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11428:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11427:6:7"
									},
									"scope": 2667,
									"src": "11351:146:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2614,
										"nodeType": "Block",
										"src": "11652:45:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2610,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2604,
																"src": "11678:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2611,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2536,
															"src": "11678:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2609,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2238,
														"src": "11670:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2079_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11670:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2608,
												"id": 2613,
												"nodeType": "Return",
												"src": "11663:26:7"
											}
										]
									},
									"documentation": {
										"id": 2601,
										"nodeType": "StructuredDocumentation",
										"src": "11505:72:7",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11592:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11615:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "11599:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2603,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2602,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2537,
														"src": "11599:7:7"
													},
													"referencedDeclaration": 2537,
													"src": "11599:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11598:21:7"
									},
									"returnParameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "11643:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11643:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11642:9:7"
									},
									"scope": 2667,
									"src": "11583:114:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2635,
										"nodeType": "Block",
										"src": "12131:57:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2629,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2619,
																		"src": "12161:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2536,
																	"src": "12161:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$2079_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 2631,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2621,
																	"src": "12173:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$2079_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2628,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2255,
																"src": "12157:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2079_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12157:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12149:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12149:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12149:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2625,
												"id": 2634,
												"nodeType": "Return",
												"src": "12142:38:7"
											}
										]
									},
									"documentation": {
										"id": 2616,
										"nodeType": "StructuredDocumentation",
										"src": "11705:340:7",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12060:2:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12079:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "12063:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2618,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2617,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2537,
														"src": "12063:7:7"
													},
													"referencedDeclaration": 2537,
													"src": "12063:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12092:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "12084:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12084:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12062:36:7"
									},
									"returnParameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2636,
												"src": "12122:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12122:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12121:9:7"
									},
									"scope": 2667,
									"src": "12051:137:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2665,
										"nodeType": "Block",
										"src": "12816:229:7",
										"statements": [
											{
												"assignments": [
													2650
												],
												"declarations": [
													{
														"constant": false,
														"id": 2650,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12844:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 2665,
														"src": "12827:22:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2648,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12827:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2649,
															"nodeType": "ArrayTypeName",
															"src": "12827:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2655,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2652,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2640,
																"src": "12860:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2653,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2536,
															"src": "12860:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2079_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2651,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2269,
														"src": "12852:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2079_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12852:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12827:44:7"
											},
											{
												"assignments": [
													2660
												],
												"declarations": [
													{
														"constant": false,
														"id": 2660,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12899:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2665,
														"src": "12882:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2658,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12882:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2659,
															"nodeType": "ArrayTypeName",
															"src": "12882:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2661,
												"nodeType": "VariableDeclarationStatement",
												"src": "12882:23:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12971:41:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12986:15:7",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12996:5:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12986:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 2660,
														"isOffset": false,
														"isSlot": false,
														"src": "12986:6:7",
														"valueSize": 1
													},
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": false,
														"src": "12996:5:7",
														"valueSize": 1
													}
												],
												"id": 2662,
												"nodeType": "InlineAssembly",
												"src": "12962:50:7"
											},
											{
												"expression": {
													"id": 2663,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2660,
													"src": "13031:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2645,
												"id": 2664,
												"nodeType": "Return",
												"src": "13024:13:7"
											}
										]
									},
									"documentation": {
										"id": 2637,
										"nodeType": "StructuredDocumentation",
										"src": "12196:536:7",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12747:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12770:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "12754:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2639,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2638,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2537,
														"src": "12754:7:7"
													},
													"referencedDeclaration": 2537,
													"src": "12754:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2537_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12753:21:7"
									},
									"returnParameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "12798:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2642,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12798:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2643,
													"nodeType": "ArrayTypeName",
													"src": "12798:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12797:18:7"
									},
									"scope": 2667,
									"src": "12738:307:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2668,
							"src": "1265:11783:7",
							"usedErrors": []
						}
					],
					"src": "118:12930:7"
				},
				"id": 7
			},
			"Utils/Ownable.sol": {
				"ast": {
					"absolutePath": "Utils/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2068
						],
						"Ownable": [
							2772
						]
					},
					"id": 2773,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2669,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:8"
						},
						{
							"absolutePath": "Utils/Context.sol",
							"file": "./Context.sol",
							"id": 2670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2773,
							"sourceUnit": 2069,
							"src": "117:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2672,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2068,
										"src": "680:7:8"
									},
									"id": 2673,
									"nodeType": "InheritanceSpecifier",
									"src": "680:7:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2671,
								"nodeType": "StructuredDocumentation",
								"src": "144:505:8",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2772,
							"linearizedBaseContracts": [
								2772,
								2068
							],
							"name": "Ownable",
							"nameLocation": "669:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2675,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "711:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 2772,
									"src": "695:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2674,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 2681,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "753:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "784:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:8"
									},
									"src": "726:84:8"
								},
								{
									"body": {
										"id": 2690,
										"nodeType": "Block",
										"src": "931:51:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2686,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "961:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "961:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2685,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2771,
														"src": "942:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2689,
												"nodeType": "ExpressionStatement",
												"src": "942:32:8"
											}
										]
									},
									"documentation": {
										"id": 2682,
										"nodeType": "StructuredDocumentation",
										"src": "818:93:8",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 2691,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:2:8"
									},
									"returnParameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "931:0:8"
									},
									"scope": 2772,
									"src": "917:65:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2699,
										"nodeType": "Block",
										"src": "1118:32:8",
										"statements": [
											{
												"expression": {
													"id": 2697,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2675,
													"src": "1136:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2696,
												"id": 2698,
												"nodeType": "Return",
												"src": "1129:13:8"
											}
										]
									},
									"documentation": {
										"id": 2692,
										"nodeType": "StructuredDocumentation",
										"src": "990:67:8",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1072:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:2:8"
									},
									"returnParameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "1109:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:9:8"
									},
									"scope": 2772,
									"src": "1063:87:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2713,
										"nodeType": "Block",
										"src": "1264:99:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2704,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2700,
																	"src": "1283:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1283:7:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2706,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "1294:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1294:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1283:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 2709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1308:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 2703,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1275:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2711,
												"nodeType": "ExpressionStatement",
												"src": "1275:68:8"
											},
											{
												"id": 2712,
												"nodeType": "PlaceholderStatement",
												"src": "1354:1:8"
											}
										]
									},
									"documentation": {
										"id": 2701,
										"nodeType": "StructuredDocumentation",
										"src": "1158:79:8",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2714,
									"name": "onlyOwner",
									"nameLocation": "1252:9:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:2:8"
									},
									"src": "1243:120:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2727,
										"nodeType": "Block",
										"src": "1768:49:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1806:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1798:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2721,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1798:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1798:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2720,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2771,
														"src": "1779:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2726,
												"nodeType": "ExpressionStatement",
												"src": "1779:30:8"
											}
										]
									},
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "1371:337:8",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2728,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2718,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2717,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2714,
												"src": "1758:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1758:9:8"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1723:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1740:2:8"
									},
									"returnParameters": {
										"id": 2719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1768:0:8"
									},
									"scope": 2772,
									"src": "1714:103:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2750,
										"nodeType": "Block",
										"src": "2042:131:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2737,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2731,
																"src": "2061:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2081:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2073:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2738,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2073:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2073:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2061:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 2743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2085:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 2736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2053:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2053:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2745,
												"nodeType": "ExpressionStatement",
												"src": "2053:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2747,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2731,
															"src": "2156:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2746,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2771,
														"src": "2137:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2749,
												"nodeType": "ExpressionStatement",
												"src": "2137:28:8"
											}
										]
									},
									"documentation": {
										"id": 2729,
										"nodeType": "StructuredDocumentation",
										"src": "1825:141:8",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2751,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2733,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2714,
												"src": "2032:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2032:9:8"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1981:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2007:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2751,
												"src": "1999:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:18:8"
									},
									"returnParameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:8"
									},
									"scope": 2772,
									"src": "1972:201:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2770,
										"nodeType": "Block",
										"src": "2396:128:8",
										"statements": [
											{
												"assignments": [
													2758
												],
												"declarations": [
													{
														"constant": false,
														"id": 2758,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2415:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 2770,
														"src": "2407:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2757,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2407:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2760,
												"initialValue": {
													"id": 2759,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2675,
													"src": "2426:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2407:25:8"
											},
											{
												"expression": {
													"id": 2763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2761,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2675,
														"src": "2443:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2762,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2754,
														"src": "2452:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2443:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2764,
												"nodeType": "ExpressionStatement",
												"src": "2443:17:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2766,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2758,
															"src": "2497:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2767,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2754,
															"src": "2507:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2765,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2681,
														"src": "2476:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2476:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2769,
												"nodeType": "EmitStatement",
												"src": "2471:45:8"
											}
										]
									},
									"documentation": {
										"id": 2752,
										"nodeType": "StructuredDocumentation",
										"src": "2181:146:8",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 2771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2342:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2369:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2771,
												"src": "2361:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:18:8"
									},
									"returnParameters": {
										"id": 2756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2396:0:8"
									},
									"scope": 2772,
									"src": "2333:191:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2773,
							"src": "651:1876:8",
							"usedErrors": []
						}
					],
					"src": "90:2437:8"
				},
				"id": 8
			},
			"Utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "Utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							2812
						]
					},
					"id": 2813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2774,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2775,
								"nodeType": "StructuredDocumentation",
								"src": "127:765:9",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 2812,
							"linearizedBaseContracts": [
								2812
							],
							"name": "ReentrancyGuard",
							"nameLocation": "912:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2778,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1719:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2812,
									"src": "1694:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2776,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1694:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2777,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1734:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2781,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1767:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2812,
									"src": "1742:37:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2779,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2780,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1778:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2783,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1804:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2812,
									"src": "1788:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2782,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1788:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2790,
										"nodeType": "Block",
										"src": "1834:41:9",
										"statements": [
											{
												"expression": {
													"id": 2788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2786,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2783,
														"src": "1845:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2787,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2778,
														"src": "1855:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2789,
												"nodeType": "ExpressionStatement",
												"src": "1845:22:9"
											}
										]
									},
									"id": 2791,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1831:2:9"
									},
									"returnParameters": {
										"id": 2785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:9"
									},
									"scope": 2812,
									"src": "1820:55:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2810,
										"nodeType": "Block",
										"src": "2285:433:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2795,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2783,
																"src": "2376:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2796,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2781,
																"src": "2387:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2376:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 2798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 2794,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2800,
												"nodeType": "ExpressionStatement",
												"src": "2368:63:9"
											},
											{
												"expression": {
													"id": 2803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2801,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2783,
														"src": "2509:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2802,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2781,
														"src": "2519:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2509:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2804,
												"nodeType": "ExpressionStatement",
												"src": "2509:18:9"
											},
											{
												"id": 2805,
												"nodeType": "PlaceholderStatement",
												"src": "2540:1:9"
											},
											{
												"expression": {
													"id": 2808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2806,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2783,
														"src": "2688:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2807,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2778,
														"src": "2698:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2688:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2809,
												"nodeType": "ExpressionStatement",
												"src": "2688:22:9"
											}
										]
									},
									"documentation": {
										"id": 2792,
										"nodeType": "StructuredDocumentation",
										"src": "1883:372:9",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 2811,
									"name": "nonReentrant",
									"nameLocation": "2270:12:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:9"
									},
									"src": "2261:457:9",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2813,
							"src": "894:1827:9",
							"usedErrors": []
						}
					],
					"src": "100:2621:9"
				},
				"id": 9
			},
			"Utils/SafeMath.sol": {
				"ast": {
					"absolutePath": "Utils/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							3124
						]
					},
					"id": 3125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2814,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2815,
								"nodeType": "StructuredDocumentation",
								"src": "294:201:10",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 3124,
							"linearizedBaseContracts": [
								3124
							],
							"name": "SafeMath",
							"nameLocation": "505:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2846,
										"nodeType": "Block",
										"src": "738:146:10",
										"statements": [
											{
												"id": 2845,
												"nodeType": "UncheckedBlock",
												"src": "749:128:10",
												"statements": [
													{
														"assignments": [
															2828
														],
														"declarations": [
															{
																"constant": false,
																"id": 2828,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "782:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 2845,
																"src": "774:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2827,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "774:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2832,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2829,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "786:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2830,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2820,
																"src": "790:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "774:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2833,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2828,
																"src": "810:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2834,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "814:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "810:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2840,
														"nodeType": "IfStatement",
														"src": "806:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "825:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "832:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2838,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "824:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2826,
															"id": 2839,
															"nodeType": "Return",
															"src": "817:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "857:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2842,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2828,
																	"src": "863:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2843,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "856:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2826,
														"id": 2844,
														"nodeType": "Return",
														"src": "849:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2816,
										"nodeType": "StructuredDocumentation",
										"src": "521:135:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "671:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "686:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "678:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "697:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "689:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "677:22:10"
									},
									"returnParameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "723:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "723:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "729:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:15:10"
									},
									"scope": 3124,
									"src": "662:222:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2874,
										"nodeType": "Block",
										"src": "1112:118:10",
										"statements": [
											{
												"id": 2873,
												"nodeType": "UncheckedBlock",
												"src": "1123:100:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2859,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2852,
																"src": "1152:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2860,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2850,
																"src": "1156:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1152:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2866,
														"nodeType": "IfStatement",
														"src": "1148:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1167:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1174:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2864,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1166:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2858,
															"id": 2865,
															"nodeType": "Return",
															"src": "1159:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1199:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2868,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2850,
																		"src": "1205:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2869,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2852,
																		"src": "1209:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1205:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2871,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1198:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2858,
														"id": 2872,
														"nodeType": "Return",
														"src": "1191:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2848,
										"nodeType": "StructuredDocumentation",
										"src": "892:138:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1045:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1060:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "1052:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1071:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "1063:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:22:10"
									},
									"returnParameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "1097:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2854,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1097:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "1103:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:15:10"
									},
									"scope": 3124,
									"src": "1036:194:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2916,
										"nodeType": "Block",
										"src": "1461:427:10",
										"statements": [
											{
												"id": 2915,
												"nodeType": "UncheckedBlock",
												"src": "1472:409:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2887,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2878,
																"src": "1734:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1739:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1734:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2894,
														"nodeType": "IfStatement",
														"src": "1730:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1750:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1756:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2892,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1749:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2886,
															"id": 2893,
															"nodeType": "Return",
															"src": "1742:16:10"
														}
													},
													{
														"assignments": [
															2896
														],
														"declarations": [
															{
																"constant": false,
																"id": 2896,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1781:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 2915,
																"src": "1773:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2895,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1773:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2900,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2897,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2878,
																"src": "1785:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2898,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2880,
																"src": "1789:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1785:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1773:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2901,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2896,
																	"src": "1809:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2902,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2878,
																	"src": "1813:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1809:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2904,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2880,
																"src": "1818:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1809:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2910,
														"nodeType": "IfStatement",
														"src": "1805:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1829:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1836:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2908,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1828:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2886,
															"id": 2909,
															"nodeType": "Return",
															"src": "1821:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1861:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2912,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2896,
																	"src": "1867:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2913,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1860:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2886,
														"id": 2914,
														"nodeType": "Return",
														"src": "1853:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2876,
										"nodeType": "StructuredDocumentation",
										"src": "1238:141:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1394:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1409:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "1401:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1401:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1420:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "1412:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1400:22:10"
									},
									"returnParameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "1446:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1446:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "1452:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1445:15:10"
									},
									"scope": 3124,
									"src": "1385:503:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2944,
										"nodeType": "Block",
										"src": "2120:119:10",
										"statements": [
											{
												"id": 2943,
												"nodeType": "UncheckedBlock",
												"src": "2131:101:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2929,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2922,
																"src": "2160:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2165:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2160:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2936,
														"nodeType": "IfStatement",
														"src": "2156:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2176:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2183:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2934,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2175:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2928,
															"id": 2935,
															"nodeType": "Return",
															"src": "2168:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2208:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2938,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2920,
																		"src": "2214:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2939,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2922,
																		"src": "2218:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2214:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2941,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2207:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2928,
														"id": 2942,
														"nodeType": "Return",
														"src": "2200:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2918,
										"nodeType": "StructuredDocumentation",
										"src": "1896:142:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2053:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2068:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2945,
												"src": "2060:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2079:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2945,
												"src": "2071:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:22:10"
									},
									"returnParameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2945,
												"src": "2105:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2924,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2105:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2945,
												"src": "2111:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2104:15:10"
									},
									"scope": 3124,
									"src": "2044:195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2972,
										"nodeType": "Block",
										"src": "2481:119:10",
										"statements": [
											{
												"id": 2971,
												"nodeType": "UncheckedBlock",
												"src": "2492:101:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2957,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2950,
																"src": "2521:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2526:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2521:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2964,
														"nodeType": "IfStatement",
														"src": "2517:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2537:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2544:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2962,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2536:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2956,
															"id": 2963,
															"nodeType": "Return",
															"src": "2529:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2569:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2966,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2948,
																		"src": "2575:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2967,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2950,
																		"src": "2579:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2575:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2969,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2568:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2956,
														"id": 2970,
														"nodeType": "Return",
														"src": "2561:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2946,
										"nodeType": "StructuredDocumentation",
										"src": "2247:152:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2414:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2948,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2429:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "2421:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2950,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2440:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "2432:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2420:22:10"
									},
									"returnParameters": {
										"id": 2956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "2466:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2952,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2466:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "2472:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2465:15:10"
									},
									"scope": 3124,
									"src": "2405:195:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2987,
										"nodeType": "Block",
										"src": "2914:31:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2983,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2976,
														"src": "2932:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2984,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2978,
														"src": "2936:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2932:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2982,
												"id": 2986,
												"nodeType": "Return",
												"src": "2925:12:10"
											}
										]
									},
									"documentation": {
										"id": 2974,
										"nodeType": "StructuredDocumentation",
										"src": "2608:233:10",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2856:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2868:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "2860:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2879:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "2871:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2859:22:10"
									},
									"returnParameters": {
										"id": 2982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "2905:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2905:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2904:9:10"
									},
									"scope": 3124,
									"src": "2847:98:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3002,
										"nodeType": "Block",
										"src": "3295:31:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2998,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2991,
														"src": "3313:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2999,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2993,
														"src": "3317:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3313:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2997,
												"id": 3001,
												"nodeType": "Return",
												"src": "3306:12:10"
											}
										]
									},
									"documentation": {
										"id": 2989,
										"nodeType": "StructuredDocumentation",
										"src": "2953:269:10",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 3003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3237:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2991,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3249:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 3003,
												"src": "3241:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3241:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3260:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 3003,
												"src": "3252:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3252:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3240:22:10"
									},
									"returnParameters": {
										"id": 2997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3003,
												"src": "3286:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3286:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3285:9:10"
									},
									"scope": 3124,
									"src": "3228:98:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3017,
										"nodeType": "Block",
										"src": "3652:31:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3013,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3006,
														"src": "3670:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 3014,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3008,
														"src": "3674:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3670:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3012,
												"id": 3016,
												"nodeType": "Return",
												"src": "3663:12:10"
											}
										]
									},
									"documentation": {
										"id": 3004,
										"nodeType": "StructuredDocumentation",
										"src": "3334:245:10",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 3018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3594:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3006,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3606:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "3598:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3598:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3617:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "3609:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3609:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3597:22:10"
									},
									"returnParameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "3643:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3642:9:10"
									},
									"scope": 3124,
									"src": "3585:98:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3032,
										"nodeType": "Block",
										"src": "4051:31:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3028,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3021,
														"src": "4069:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3029,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3023,
														"src": "4073:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4069:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3027,
												"id": 3031,
												"nodeType": "Return",
												"src": "4062:12:10"
											}
										]
									},
									"documentation": {
										"id": 3019,
										"nodeType": "StructuredDocumentation",
										"src": "3691:287:10",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 3033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3993:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3021,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4005:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 3033,
												"src": "3997:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4016:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 3033,
												"src": "4008:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3996:22:10"
									},
									"returnParameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3033,
												"src": "4042:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4042:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4041:9:10"
									},
									"scope": 3124,
									"src": "3984:98:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3047,
										"nodeType": "Block",
										"src": "4616:31:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3043,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3036,
														"src": "4634:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 3044,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3038,
														"src": "4638:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4634:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3042,
												"id": 3046,
												"nodeType": "Return",
												"src": "4627:12:10"
											}
										]
									},
									"documentation": {
										"id": 3034,
										"nodeType": "StructuredDocumentation",
										"src": "4090:453:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 3048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4558:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4570:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 3048,
												"src": "4562:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4562:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3038,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4581:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 3048,
												"src": "4573:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4561:22:10"
									},
									"returnParameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3048,
												"src": "4607:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4607:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4606:9:10"
									},
									"scope": 3124,
									"src": "4549:98:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3072,
										"nodeType": "Block",
										"src": "5255:111:10",
										"statements": [
											{
												"id": 3071,
												"nodeType": "UncheckedBlock",
												"src": "5266:93:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3061,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3053,
																		"src": "5299:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 3062,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3051,
																		"src": "5304:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5299:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 3064,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3055,
																	"src": "5307:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3060,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5291:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 3065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5291:29:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 3066,
														"nodeType": "ExpressionStatement",
														"src": "5291:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3067,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3051,
																"src": "5342:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 3068,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3053,
																"src": "5346:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3059,
														"id": 3070,
														"nodeType": "Return",
														"src": "5335:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3049,
										"nodeType": "StructuredDocumentation",
										"src": "4655:465:10",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 3073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5135:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3051,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5157:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "5149:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5177:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "5169:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5203:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "5189:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3054,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5189:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5138:84:10"
									},
									"returnParameters": {
										"id": 3059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "5246:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5246:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5245:9:10"
									},
									"scope": 3124,
									"src": "5126:240:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3097,
										"nodeType": "Block",
										"src": "5993:110:10",
										"statements": [
											{
												"id": 3096,
												"nodeType": "UncheckedBlock",
												"src": "6004:92:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3086,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3078,
																		"src": "6037:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 3087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6041:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6037:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 3089,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3080,
																	"src": "6044:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3085,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6029:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 3090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6029:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 3091,
														"nodeType": "ExpressionStatement",
														"src": "6029:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3092,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3076,
																"src": "6079:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 3093,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3078,
																"src": "6083:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6079:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3084,
														"id": 3095,
														"nodeType": "Return",
														"src": "6072:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3074,
										"nodeType": "StructuredDocumentation",
										"src": "5374:484:10",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 3098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5873:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5895:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "5887:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5887:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5915:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "5907:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5907:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5941:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "5927:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3079,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5927:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5876:84:10"
									},
									"returnParameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "5984:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5984:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5983:9:10"
									},
									"scope": 3124,
									"src": "5864:239:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3122,
										"nodeType": "Block",
										"src": "6895:110:10",
										"statements": [
											{
												"id": 3121,
												"nodeType": "UncheckedBlock",
												"src": "6906:92:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3111,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3103,
																		"src": "6939:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 3112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6943:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6939:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 3114,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3105,
																	"src": "6946:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3110,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6931:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 3115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6931:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 3116,
														"nodeType": "ExpressionStatement",
														"src": "6931:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3117,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3101,
																"src": "6981:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 3118,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3103,
																"src": "6985:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6981:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3109,
														"id": 3120,
														"nodeType": "Return",
														"src": "6974:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3099,
										"nodeType": "StructuredDocumentation",
										"src": "6111:649:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 3123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6775:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3101,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6797:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "6789:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6789:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3103,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6817:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "6809:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6809:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6843:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "6829:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3104,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6829:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6778:84:10"
									},
									"returnParameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "6886:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6886:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6885:9:10"
									},
									"scope": 3124,
									"src": "6766:239:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3125,
							"src": "497:6511:10",
							"usedErrors": []
						}
					],
					"src": "110:6898:10"
				},
				"id": 10
			},
			"Utils/TransferHelper.sol": {
				"ast": {
					"absolutePath": "Utils/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							3316
						]
					},
					"id": 3317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3126,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3127,
								"nodeType": "StructuredDocumentation",
								"src": "62:180:11",
								"text": "helper methods for interacting with ERC20 tokens that do not consistently return true/false\nwith the addition of a transfer function to send eth or an erc20 token"
							},
							"fullyImplemented": true,
							"id": 3316,
							"linearizedBaseContracts": [
								3316
							],
							"name": "TransferHelper",
							"nameLocation": "252:14:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3169,
										"nodeType": "Block",
										"src": "380:284:11",
										"statements": [
											{
												"assignments": [
													3137,
													3139
												],
												"declarations": [
													{
														"constant": false,
														"id": 3137,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "397:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 3169,
														"src": "392:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3136,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "392:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3139,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "419:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 3169,
														"src": "406:17:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3138,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "406:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3149,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 3144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "475:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 3145,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3131,
																	"src": "487:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3146,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3133,
																	"src": "491:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3142,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "452:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "452:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 3147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "452:45:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 3140,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3129,
															"src": "427:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "427:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "427:81:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "391:117:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3151,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3137,
																"src": "541:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3152,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3139,
																					"src": "553:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 3153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "553:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3154,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "568:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "553:16:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3158,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3139,
																					"src": "584:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 3160,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "591:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 3159,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "591:4:11",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 3161,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "590:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 3156,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "573:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "573:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "573:24:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "553:44:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3164,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "552:46:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "541:57:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 3166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "613:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 3150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "519:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "519:137:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3168,
												"nodeType": "ExpressionStatement",
												"src": "519:137:11"
											}
										]
									},
									"id": 3170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "283:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "313:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "305:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "337:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "329:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3133,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "358:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "350:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:76:11"
									},
									"returnParameters": {
										"id": 3135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:11"
									},
									"scope": 3316,
									"src": "274:390:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3212,
										"nodeType": "Block",
										"src": "780:285:11",
										"statements": [
											{
												"assignments": [
													3180,
													3182
												],
												"declarations": [
													{
														"constant": false,
														"id": 3180,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "797:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 3212,
														"src": "792:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3179,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "792:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3182,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "819:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 3212,
														"src": "806:17:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3181,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "806:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3192,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 3187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "875:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 3188,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3174,
																	"src": "887:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3189,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3176,
																	"src": "891:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3185,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "852:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "852:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 3190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "852:45:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 3183,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3172,
															"src": "827:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "827:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "827:81:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "791:117:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3194,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3180,
																"src": "941:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3195,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3182,
																					"src": "953:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 3196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "953:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "968:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "953:16:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3201,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3182,
																					"src": "984:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 3203,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "991:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 3202,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "991:4:11",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 3204,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "990:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 3199,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "973:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "973:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "973:24:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "953:44:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3207,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "952:46:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "941:57:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
															"id": 3209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1013:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															}
														],
														"id": 3193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "919:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "919:138:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3211,
												"nodeType": "ExpressionStatement",
												"src": "919:138:11"
											}
										]
									},
									"id": 3213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "682:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3172,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "713:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3213,
												"src": "705:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3174,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "737:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 3213,
												"src": "729:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "758:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3213,
												"src": "750:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:76:11"
									},
									"returnParameters": {
										"id": 3178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:0:11"
									},
									"scope": 3316,
									"src": "673:392:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3258,
										"nodeType": "Block",
										"src": "1207:296:11",
										"statements": [
											{
												"assignments": [
													3225,
													3227
												],
												"declarations": [
													{
														"constant": false,
														"id": 3225,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1224:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 3258,
														"src": "1219:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3224,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1219:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3227,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1246:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 3258,
														"src": "1233:17:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3226,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1233:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3238,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 3232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1302:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 3233,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3217,
																	"src": "1314:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3234,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3219,
																	"src": "1320:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3235,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3221,
																	"src": "1324:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3230,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1279:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1279:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 3236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1279:51:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 3228,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3215,
															"src": "1254:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1254:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1254:87:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1218:123:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3240,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3225,
																"src": "1374:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3241,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3227,
																					"src": "1386:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 3242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1386:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1401:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1386:16:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3247,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3227,
																					"src": "1417:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 3249,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1424:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 3248,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1424:4:11",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 3250,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1423:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 3245,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1406:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1406:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1406:24:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1386:44:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3253,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1385:46:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1374:57:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 3255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1446:38:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 3239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1352:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:143:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3257,
												"nodeType": "ExpressionStatement",
												"src": "1352:143:11"
											}
										]
									},
									"id": 3259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1082:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3215,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1117:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "1109:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1141:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "1133:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1164:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "1156:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1185:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "1177:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:99:11"
									},
									"returnParameters": {
										"id": 3223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1207:0:11"
									},
									"scope": 3316,
									"src": "1073:430:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3314,
										"nodeType": "Block",
										"src": "1694:400:11",
										"statements": [
											{
												"condition": {
													"id": 3271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1709:8:11",
													"subExpression": {
														"id": 3270,
														"name": "isERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3267,
														"src": "1710:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3312,
													"nodeType": "Block",
													"src": "1770:317:11",
													"statements": [
														{
															"assignments": [
																3280,
																3282
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3280,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "1791:7:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 3312,
																	"src": "1786:12:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 3279,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1786:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 3282,
																	"mutability": "mutable",
																	"name": "data",
																	"nameLocation": "1813:4:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 3312,
																	"src": "1800:17:11",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 3281,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1800:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3292,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30786139303539636262",
																				"id": 3287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1873:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				"value": "0xa9059cbb"
																			},
																			{
																				"id": 3288,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3263,
																				"src": "1885:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 3289,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3265,
																				"src": "1889:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 3285,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1850:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 3286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "1850:22:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 3290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1850:45:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 3283,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3261,
																		"src": "1821:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 3284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "1821:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 3291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1821:89:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1785:125:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3294,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3280,
																			"src": "1951:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 3306,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 3295,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3282,
																								"src": "1963:4:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							"id": 3296,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "1963:11:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 3297,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1978:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "1963:16:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "||",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 3301,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3282,
																								"src": "1994:4:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							{
																								"components": [
																									{
																										"id": 3303,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "2001:4:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_bool_$",
																											"typeString": "type(bool)"
																										},
																										"typeName": {
																											"id": 3302,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "2001:4:11",
																											"typeDescriptions": {}
																										}
																									}
																								],
																								"id": 3304,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2000:6:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								},
																								{
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							],
																							"expression": {
																								"id": 3299,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "1983:3:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 3300,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "decode",
																							"nodeType": "MemberAccess",
																							"src": "1983:10:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 3305,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1983:24:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "1963:44:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 3307,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1962:46:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1951:57:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"id": 3309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2027:33:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		},
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		}
																	],
																	"id": 3293,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1925:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1925:150:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3311,
															"nodeType": "ExpressionStatement",
															"src": "1925:150:11"
														}
													]
												},
												"id": 3313,
												"nodeType": "IfStatement",
												"src": "1705:382:11",
												"trueBody": {
													"id": 3278,
													"nodeType": "Block",
													"src": "1719:45:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3275,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3265,
																		"src": "1746:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3272,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3263,
																		"src": "1734:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 3274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1734:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 3276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1734:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3277,
															"nodeType": "ExpressionStatement",
															"src": "1734:18:11"
														}
													]
												}
											}
										]
									},
									"id": 3315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferBaseToken",
									"nameLocation": "1556:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3261,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1596:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3315,
												"src": "1588:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1588:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3263,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1628:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 3315,
												"src": "1612:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1612:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1649:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3315,
												"src": "1641:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3267,
												"mutability": "mutable",
												"name": "isERC20",
												"nameLocation": "1670:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3315,
												"src": "1665:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1665:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:107:11"
									},
									"returnParameters": {
										"id": 3269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:0:11"
									},
									"scope": 3316,
									"src": "1547:547:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3317,
							"src": "244:1853:11",
							"usedErrors": []
						}
					],
					"src": "35:2064:11"
				},
				"id": 11
			}
		}
	}
}