{
	"id": "4b8cef3fb839725c95d18f3f4d774048",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ethereum/Presale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../ERC20/IERC20.sol\";\r\nimport \"../Utils/ReentrancyGuard.sol\";\r\nimport \"../Utils/TransferHelper.sol\";\r\n\r\ncontract Presale is ReentrancyGuard{\r\n    // struct SaleInfor {\r\n    //     address payable presaleOwner;\r\n    //     IERC20 saleToken;\r\n    //     IERC20 baseToken;\r\n    //     uint256 tokenPrice;\r\n    //     uint256 startSale;\r\n    //     uint256 endSale;\r\n    //     uint256 valueSwapERC20;\r\n    //     uint256 feeTransaction;\r\n    //     uint256 minSpendPerBuyer;\r\n    //     uint256 maxSpendPerBuyer;\r\n    //     uint256 refundFee;\r\n    //     uint256 claimFee;\r\n    // }\r\n\r\n    // struct BuyerInfo {\r\n    //     uint256 baseDeposit;\r\n    //     uint256 tokenOwner;\r\n    //     uint256 lastWithDraw;\r\n    //     uint256 totalTokenWithDraw;\r\n    //     bool isRefund;\r\n    //     bool isClaim;\r\n    // }\r\n\r\n    // struct PresaleStatus {\r\n    //     uint256 totalBaseCollected;\r\n    //     uint256 totalTokenSold;\r\n    //     uint256 totalTokenWithDraw;\r\n    //     uint256 totalBaseWithDraw;\r\n    //     uint256 numByer;\r\n    //     uint256 totalFee;\r\n    // }\r\n    \r\n    // mapping(address => BuyerInfo) public buyerInfo;\r\n    // mapping(address => uint256) public userFee;\r\n    // PresaleStatus public presaleStatus;\r\n    // SaleInfor public saleInfor;\r\n\r\n    // function initialSaleInfor(\r\n    //     address payable _presaleOwner,\r\n    //     IERC20 _saleToken,\r\n    //     IERC20 _baseTOken,\r\n    //     uint256[9] memory datas\r\n    // ) external {\r\n    //     saleInfor.presaleOwner = _presaleOwner;\r\n    //     saleInfor.saleToken = _saleToken;\r\n    //     saleInfor.baseToken = _baseTOken;\r\n    //     saleInfor.tokenPrice = datas[0];\r\n    //     saleInfor.startSale = datas[1];\r\n    //     saleInfor.endSale = datas[2];\r\n    //     saleInfor.valueSwapERC20 = datas[3];\r\n    //     saleInfor.feeTransaction = datas[4];\r\n    //     saleInfor.minSpendPerBuyer = datas[5];\r\n    //     saleInfor.maxSpendPerBuyer = datas[6];\r\n    //     saleInfor.refundFee = datas[7];\r\n    //     saleInfor.claimFee = datas[8];\r\n    // } \r\n\r\n    // function status() external view returns(uint256) {\r\n    //     if(block.timestamp < saleInfor.startSale) {\r\n    //         return 0; // Not Active\r\n    //     }else{\r\n    //         if(block.timestamp > saleInfor.endSale) {\r\n    //             return 2; // Suceess\r\n    //         }else{\r\n    //             return 1; // Active\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    //100 000000000000000\r\n    \r\n    function depodit(uint256 amount) external payable nonReentrant {\r\n        TransferHelper.safeTransferFrom(\r\n                address(0xc778417E063141139Fce010982780140Aa0cD5Ab),\r\n                msg.sender,\r\n                address(this),\r\n                amount\r\n            );\r\n    }\r\n\r\n    // function getBalance(address _address) external view returns(uint256) {\r\n    //     return _address.balance;\r\n    // }\r\n\r\n\r\n    // function backToken() external payable {\r\n    //     payable(msg.sender).transfer(address(this).balance);\r\n    // }\r\n\r\n}"
			},
			"Utils/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n    helper methods for interacting with ERC20 tokens that do not consistently return true/false\r\n    with the addition of a transfer function to send eth or an erc20 token\r\n*/\r\nlibrary TransferHelper {\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x095ea7b3, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: APPROVE_FAILED\"\r\n        );\r\n    }\r\n\r\n    function safeTransfer(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0xa9059cbb, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FAILED\"\r\n        );\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(0x23b872dd, from, to, value)\r\n        );\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            \"TransferHelper: TRANSFER_FROM_FAILED\"\r\n        );\r\n    }\r\n\r\n    // sends ETH or an erc20 token\r\n    function safeTransferBaseToken(\r\n        address token,\r\n        address payable to,\r\n        uint256 value,\r\n        bool isERC20\r\n    ) internal {\r\n        if (!isERC20) {\r\n            to.transfer(value);\r\n        } else {\r\n            (bool success, bytes memory data) = token.call(\r\n                abi.encodeWithSelector(0xa9059cbb, to, value)\r\n            );\r\n            require(\r\n                success && (data.length == 0 || abi.decode(data, (bool))),\r\n                \"TransferHelper: TRANSFER_FAILED\"\r\n            );\r\n        }\r\n    }\r\n}\r\n"
			},
			"Utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}"
			},
			"ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ethereum/Presale.sol": {
				"Presale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depodit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ethereum/Presale.sol\":232:3127  contract Presale is ReentrancyGuard{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n  0x01\n    /* \"Utils/ReentrancyGuard.sol\":1845:1852  _status */\n  0x00\n    /* \"Utils/ReentrancyGuard.sol\":1845:1867  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Ethereum/Presale.sol\":232:3127  contract Presale is ReentrancyGuard{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ethereum/Presale.sol\":232:3127  contract Presale is ReentrancyGuard{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79647833\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Ethereum/Presale.sol\":2583:2867  function depodit(uint256 amount) external payable nonReentrant {\r... */\n    tag_2:\n      tag_3\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_4\n      swap2\n      swap1\n      tag_5\n      jump\t// in\n    tag_4:\n      tag_6\n      jump\t// in\n    tag_3:\n      stop\n    tag_6:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2376:2383  _status */\n      sload(0x00)\n        /* \"Utils/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Utils/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_8\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_9\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_8:\n        /* \"Utils/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"Utils/ReentrancyGuard.sol\":2509:2516  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ethereum/Presale.sol\":2657:2859  TransferHelper.safeTransferFrom(\r... */\n      tag_12\n        /* \"Ethereum/Presale.sol\":2715:2757  0xc778417E063141139Fce010982780140Aa0cD5Ab */\n      0xc778417e063141139fce010982780140aa0cd5ab\n        /* \"Ethereum/Presale.sol\":2777:2787  msg.sender */\n      caller\n        /* \"Ethereum/Presale.sol\":2814:2818  this */\n      address\n        /* \"Ethereum/Presale.sol\":2838:2844  amount */\n      dup5\n        /* \"Ethereum/Presale.sol\":2657:2688  TransferHelper.safeTransferFrom */\n      tag_13\n        /* \"Ethereum/Presale.sol\":2657:2859  TransferHelper.safeTransferFrom(\r... */\n      jump\t// in\n    tag_12:\n        /* \"Utils/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"Utils/ReentrancyGuard.sol\":2688:2695  _status */\n      0x00\n        /* \"Utils/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Ethereum/Presale.sol\":2583:2867  function depodit(uint256 amount) external payable nonReentrant {\r... */\n      pop\n      jump\t// out\n        /* \"Utils/TransferHelper.sol\":1072:1502  function safeTransferFrom(\r... */\n    tag_13:\n        /* \"Utils/TransferHelper.sol\":1218:1230  bool success */\n      0x00\n        /* \"Utils/TransferHelper.sol\":1232:1249  bytes memory data */\n      dup1\n        /* \"Utils/TransferHelper.sol\":1253:1258  token */\n      dup6\n        /* \"Utils/TransferHelper.sol\":1253:1263  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Utils/TransferHelper.sol\":1301:1311  0x23b872dd */\n      0x23b872dd\n        /* \"Utils/TransferHelper.sol\":1313:1317  from */\n      dup7\n        /* \"Utils/TransferHelper.sol\":1319:1321  to */\n      dup7\n        /* \"Utils/TransferHelper.sol\":1323:1328  value */\n      dup7\n        /* \"Utils/TransferHelper.sol\":1278:1329  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_15\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Utils/TransferHelper.sol\":1253:1340  token.call(\r... */\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_21\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_20)\n    tag_21:\n      0x60\n      swap2\n      pop\n    tag_20:\n      pop\n        /* \"Utils/TransferHelper.sol\":1217:1340  (bool success, bytes memory data) = token.call(\r... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Utils/TransferHelper.sol\":1373:1380  success */\n      dup2\n        /* \"Utils/TransferHelper.sol\":1373:1430  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_22\n      jumpi\n      pop\n        /* \"Utils/TransferHelper.sol\":1400:1401  0 */\n      0x00\n        /* \"Utils/TransferHelper.sol\":1385:1389  data */\n      dup2\n        /* \"Utils/TransferHelper.sol\":1385:1396  data.length */\n      mload\n        /* \"Utils/TransferHelper.sol\":1385:1401  data.length == 0 */\n      eq\n        /* \"Utils/TransferHelper.sol\":1385:1429  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_23\n      jumpi\n      pop\n        /* \"Utils/TransferHelper.sol\":1416:1420  data */\n      dup1\n        /* \"Utils/TransferHelper.sol\":1405:1429  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"Utils/TransferHelper.sol\":1385:1429  data.length == 0 || abi.decode(data, (bool)) */\n    tag_23:\n        /* \"Utils/TransferHelper.sol\":1373:1430  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_22:\n        /* \"Utils/TransferHelper.sol\":1351:1494  require(\r... */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"Utils/TransferHelper.sol\":1072:1502  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_30:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_32\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":67:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:289   */\n    tag_34:\n        /* \"#utility.yul\":196:201   */\n      0x00\n        /* \"#utility.yul\":234:240   */\n      dup2\n        /* \"#utility.yul\":221:241   */\n      calldataload\n        /* \"#utility.yul\":212:241   */\n      swap1\n      pop\n        /* \"#utility.yul\":250:283   */\n      tag_36\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":250:283   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":202:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:573   */\n    tag_25:\n        /* \"#utility.yul\":362:368   */\n      0x00\n        /* \"#utility.yul\":411:413   */\n      0x20\n        /* \"#utility.yul\":399:408   */\n      dup3\n        /* \"#utility.yul\":390:397   */\n      dup5\n        /* \"#utility.yul\":386:409   */\n      sub\n        /* \"#utility.yul\":382:414   */\n      slt\n        /* \"#utility.yul\":379:381   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":427:428   */\n      0x00\n        /* \"#utility.yul\":424:425   */\n      dup1\n        /* \"#utility.yul\":417:429   */\n      revert\n        /* \"#utility.yul\":379:381   */\n    tag_39:\n        /* \"#utility.yul\":470:471   */\n      0x00\n        /* \"#utility.yul\":495:556   */\n      tag_40\n        /* \"#utility.yul\":548:555   */\n      dup5\n        /* \"#utility.yul\":539:545   */\n      dup3\n        /* \"#utility.yul\":528:537   */\n      dup6\n        /* \"#utility.yul\":524:546   */\n      add\n        /* \"#utility.yul\":495:556   */\n      tag_30\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":485:556   */\n      swap2\n      pop\n        /* \"#utility.yul\":441:566   */\n      pop\n        /* \"#utility.yul\":369:573   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":579:841   */\n    tag_5:\n        /* \"#utility.yul\":638:644   */\n      0x00\n        /* \"#utility.yul\":687:689   */\n      0x20\n        /* \"#utility.yul\":675:684   */\n      dup3\n        /* \"#utility.yul\":666:673   */\n      dup5\n        /* \"#utility.yul\":662:685   */\n      sub\n        /* \"#utility.yul\":658:690   */\n      slt\n        /* \"#utility.yul\":655:657   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":703:704   */\n      0x00\n        /* \"#utility.yul\":700:701   */\n      dup1\n        /* \"#utility.yul\":693:705   */\n      revert\n        /* \"#utility.yul\":655:657   */\n    tag_42:\n        /* \"#utility.yul\":746:747   */\n      0x00\n        /* \"#utility.yul\":771:824   */\n      tag_43\n        /* \"#utility.yul\":816:823   */\n      dup5\n        /* \"#utility.yul\":807:813   */\n      dup3\n        /* \"#utility.yul\":796:805   */\n      dup6\n        /* \"#utility.yul\":792:814   */\n      add\n        /* \"#utility.yul\":771:824   */\n      tag_34\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":761:824   */\n      swap2\n      pop\n        /* \"#utility.yul\":717:834   */\n      pop\n        /* \"#utility.yul\":645:841   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":847:965   */\n    tag_44:\n        /* \"#utility.yul\":934:958   */\n      tag_46\n        /* \"#utility.yul\":952:957   */\n      dup2\n        /* \"#utility.yul\":934:958   */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":929:932   */\n      dup3\n        /* \"#utility.yul\":922:959   */\n      mstore\n        /* \"#utility.yul\":912:965   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":971:1344   */\n    tag_48:\n        /* \"#utility.yul\":1075:1078   */\n      0x00\n        /* \"#utility.yul\":1103:1141   */\n      tag_50\n        /* \"#utility.yul\":1135:1140   */\n      dup3\n        /* \"#utility.yul\":1103:1141   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1157:1245   */\n      tag_52\n        /* \"#utility.yul\":1238:1244   */\n      dup2\n        /* \"#utility.yul\":1233:1236   */\n      dup6\n        /* \"#utility.yul\":1157:1245   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1150:1245   */\n      swap4\n      pop\n        /* \"#utility.yul\":1254:1306   */\n      tag_54\n        /* \"#utility.yul\":1299:1305   */\n      dup2\n        /* \"#utility.yul\":1294:1297   */\n      dup6\n        /* \"#utility.yul\":1287:1291   */\n      0x20\n        /* \"#utility.yul\":1280:1285   */\n      dup7\n        /* \"#utility.yul\":1276:1292   */\n      add\n        /* \"#utility.yul\":1254:1306   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1331:1337   */\n      dup1\n        /* \"#utility.yul\":1326:1329   */\n      dup5\n        /* \"#utility.yul\":1322:1338   */\n      add\n        /* \"#utility.yul\":1315:1338   */\n      swap2\n      pop\n        /* \"#utility.yul\":1079:1344   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1350:1716   */\n    tag_56:\n        /* \"#utility.yul\":1492:1495   */\n      0x00\n        /* \"#utility.yul\":1513:1580   */\n      tag_58\n        /* \"#utility.yul\":1577:1579   */\n      0x24\n        /* \"#utility.yul\":1572:1575   */\n      dup4\n        /* \"#utility.yul\":1513:1580   */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1506:1580   */\n      swap2\n      pop\n        /* \"#utility.yul\":1589:1682   */\n      tag_60\n        /* \"#utility.yul\":1678:1681   */\n      dup3\n        /* \"#utility.yul\":1589:1682   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1707:1709   */\n      0x40\n        /* \"#utility.yul\":1702:1705   */\n      dup3\n        /* \"#utility.yul\":1698:1710   */\n      add\n        /* \"#utility.yul\":1691:1710   */\n      swap1\n      pop\n        /* \"#utility.yul\":1496:1716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1722:2088   */\n    tag_62:\n        /* \"#utility.yul\":1864:1867   */\n      0x00\n        /* \"#utility.yul\":1885:1952   */\n      tag_64\n        /* \"#utility.yul\":1949:1951   */\n      0x1f\n        /* \"#utility.yul\":1944:1947   */\n      dup4\n        /* \"#utility.yul\":1885:1952   */\n      tag_59\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1878:1952   */\n      swap2\n      pop\n        /* \"#utility.yul\":1961:2054   */\n      tag_65\n        /* \"#utility.yul\":2050:2053   */\n      dup3\n        /* \"#utility.yul\":1961:2054   */\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2079:2081   */\n      0x20\n        /* \"#utility.yul\":2074:2077   */\n      dup3\n        /* \"#utility.yul\":2070:2082   */\n      add\n        /* \"#utility.yul\":2063:2082   */\n      swap1\n      pop\n        /* \"#utility.yul\":1868:2088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2094:2212   */\n    tag_67:\n        /* \"#utility.yul\":2181:2205   */\n      tag_69\n        /* \"#utility.yul\":2199:2204   */\n      dup2\n        /* \"#utility.yul\":2181:2205   */\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2176:2179   */\n      dup3\n        /* \"#utility.yul\":2169:2206   */\n      mstore\n        /* \"#utility.yul\":2159:2212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2218:2489   */\n    tag_18:\n        /* \"#utility.yul\":2348:2351   */\n      0x00\n        /* \"#utility.yul\":2370:2463   */\n      tag_72\n        /* \"#utility.yul\":2459:2462   */\n      dup3\n        /* \"#utility.yul\":2450:2456   */\n      dup5\n        /* \"#utility.yul\":2370:2463   */\n      tag_48\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2363:2463   */\n      swap2\n      pop\n        /* \"#utility.yul\":2480:2483   */\n      dup2\n        /* \"#utility.yul\":2473:2483   */\n      swap1\n      pop\n        /* \"#utility.yul\":2352:2489   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2495:2937   */\n    tag_16:\n        /* \"#utility.yul\":2644:2648   */\n      0x00\n        /* \"#utility.yul\":2682:2684   */\n      0x60\n        /* \"#utility.yul\":2671:2680   */\n      dup3\n        /* \"#utility.yul\":2667:2685   */\n      add\n        /* \"#utility.yul\":2659:2685   */\n      swap1\n      pop\n        /* \"#utility.yul\":2695:2766   */\n      tag_74\n        /* \"#utility.yul\":2763:2764   */\n      0x00\n        /* \"#utility.yul\":2752:2761   */\n      dup4\n        /* \"#utility.yul\":2748:2765   */\n      add\n        /* \"#utility.yul\":2739:2745   */\n      dup7\n        /* \"#utility.yul\":2695:2766   */\n      tag_44\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2776:2848   */\n      tag_75\n        /* \"#utility.yul\":2844:2846   */\n      0x20\n        /* \"#utility.yul\":2833:2842   */\n      dup4\n        /* \"#utility.yul\":2829:2847   */\n      add\n        /* \"#utility.yul\":2820:2826   */\n      dup6\n        /* \"#utility.yul\":2776:2848   */\n      tag_44\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2858:2930   */\n      tag_76\n        /* \"#utility.yul\":2926:2928   */\n      0x40\n        /* \"#utility.yul\":2915:2924   */\n      dup4\n        /* \"#utility.yul\":2911:2929   */\n      add\n        /* \"#utility.yul\":2902:2908   */\n      dup5\n        /* \"#utility.yul\":2858:2930   */\n      tag_67\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2649:2937   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3362   */\n    tag_28:\n        /* \"#utility.yul\":3109:3113   */\n      0x00\n        /* \"#utility.yul\":3147:3149   */\n      0x20\n        /* \"#utility.yul\":3136:3145   */\n      dup3\n        /* \"#utility.yul\":3132:3150   */\n      add\n        /* \"#utility.yul\":3124:3150   */\n      swap1\n      pop\n        /* \"#utility.yul\":3196:3205   */\n      dup2\n        /* \"#utility.yul\":3190:3194   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      sub\n        /* \"#utility.yul\":3182:3183   */\n      0x00\n        /* \"#utility.yul\":3171:3180   */\n      dup4\n        /* \"#utility.yul\":3167:3184   */\n      add\n        /* \"#utility.yul\":3160:3207   */\n      mstore\n        /* \"#utility.yul\":3224:3355   */\n      tag_78\n        /* \"#utility.yul\":3350:3354   */\n      dup2\n        /* \"#utility.yul\":3224:3355   */\n      tag_56\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3216:3355   */\n      swap1\n      pop\n        /* \"#utility.yul\":3114:3362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3368:3787   */\n    tag_10:\n        /* \"#utility.yul\":3534:3538   */\n      0x00\n        /* \"#utility.yul\":3572:3574   */\n      0x20\n        /* \"#utility.yul\":3561:3570   */\n      dup3\n        /* \"#utility.yul\":3557:3575   */\n      add\n        /* \"#utility.yul\":3549:3575   */\n      swap1\n      pop\n        /* \"#utility.yul\":3621:3630   */\n      dup2\n        /* \"#utility.yul\":3615:3619   */\n      dup2\n        /* \"#utility.yul\":3611:3631   */\n      sub\n        /* \"#utility.yul\":3607:3608   */\n      0x00\n        /* \"#utility.yul\":3596:3605   */\n      dup4\n        /* \"#utility.yul\":3592:3609   */\n      add\n        /* \"#utility.yul\":3585:3632   */\n      mstore\n        /* \"#utility.yul\":3649:3780   */\n      tag_80\n        /* \"#utility.yul\":3775:3779   */\n      dup2\n        /* \"#utility.yul\":3649:3780   */\n      tag_62\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3641:3780   */\n      swap1\n      pop\n        /* \"#utility.yul\":3539:3787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3793:3891   */\n    tag_51:\n        /* \"#utility.yul\":3844:3850   */\n      0x00\n        /* \"#utility.yul\":3878:3883   */\n      dup2\n        /* \"#utility.yul\":3872:3884   */\n      mload\n        /* \"#utility.yul\":3862:3884   */\n      swap1\n      pop\n        /* \"#utility.yul\":3851:3891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3897:4044   */\n    tag_53:\n        /* \"#utility.yul\":3998:4009   */\n      0x00\n        /* \"#utility.yul\":4035:4038   */\n      dup2\n        /* \"#utility.yul\":4020:4038   */\n      swap1\n      pop\n        /* \"#utility.yul\":4010:4044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4050:4219   */\n    tag_59:\n        /* \"#utility.yul\":4134:4145   */\n      0x00\n        /* \"#utility.yul\":4168:4174   */\n      dup3\n        /* \"#utility.yul\":4163:4166   */\n      dup3\n        /* \"#utility.yul\":4156:4175   */\n      mstore\n        /* \"#utility.yul\":4208:4212   */\n      0x20\n        /* \"#utility.yul\":4203:4206   */\n      dup3\n        /* \"#utility.yul\":4199:4213   */\n      add\n        /* \"#utility.yul\":4184:4213   */\n      swap1\n      pop\n        /* \"#utility.yul\":4146:4219   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4225:4321   */\n    tag_47:\n        /* \"#utility.yul\":4262:4269   */\n      0x00\n        /* \"#utility.yul\":4291:4315   */\n      tag_85\n        /* \"#utility.yul\":4309:4314   */\n      dup3\n        /* \"#utility.yul\":4291:4315   */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":4280:4315   */\n      swap1\n      pop\n        /* \"#utility.yul\":4270:4321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4327:4417   */\n    tag_87:\n        /* \"#utility.yul\":4361:4368   */\n      0x00\n        /* \"#utility.yul\":4404:4409   */\n      dup2\n        /* \"#utility.yul\":4397:4410   */\n      iszero\n        /* \"#utility.yul\":4390:4411   */\n      iszero\n        /* \"#utility.yul\":4379:4411   */\n      swap1\n      pop\n        /* \"#utility.yul\":4369:4417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4423:4549   */\n    tag_86:\n        /* \"#utility.yul\":4460:4467   */\n      0x00\n        /* \"#utility.yul\":4500:4542   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4493:4498   */\n      dup3\n        /* \"#utility.yul\":4489:4543   */\n      and\n        /* \"#utility.yul\":4478:4543   */\n      swap1\n      pop\n        /* \"#utility.yul\":4468:4549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:4632   */\n    tag_70:\n        /* \"#utility.yul\":4592:4599   */\n      0x00\n        /* \"#utility.yul\":4621:4626   */\n      dup2\n        /* \"#utility.yul\":4610:4626   */\n      swap1\n      pop\n        /* \"#utility.yul\":4600:4632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4638:4945   */\n    tag_55:\n        /* \"#utility.yul\":4706:4707   */\n      0x00\n        /* \"#utility.yul\":4716:4829   */\n    tag_92:\n        /* \"#utility.yul\":4730:4736   */\n      dup4\n        /* \"#utility.yul\":4727:4728   */\n      dup2\n        /* \"#utility.yul\":4724:4737   */\n      lt\n        /* \"#utility.yul\":4716:4829   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":4815:4816   */\n      dup1\n        /* \"#utility.yul\":4810:4813   */\n      dup3\n        /* \"#utility.yul\":4806:4817   */\n      add\n        /* \"#utility.yul\":4800:4818   */\n      mload\n        /* \"#utility.yul\":4796:4797   */\n      dup2\n        /* \"#utility.yul\":4791:4794   */\n      dup5\n        /* \"#utility.yul\":4787:4798   */\n      add\n        /* \"#utility.yul\":4780:4819   */\n      mstore\n        /* \"#utility.yul\":4752:4754   */\n      0x20\n        /* \"#utility.yul\":4749:4750   */\n      dup2\n        /* \"#utility.yul\":4745:4755   */\n      add\n        /* \"#utility.yul\":4740:4755   */\n      swap1\n      pop\n        /* \"#utility.yul\":4716:4829   */\n      jump(tag_92)\n    tag_94:\n        /* \"#utility.yul\":4847:4853   */\n      dup4\n        /* \"#utility.yul\":4844:4845   */\n      dup2\n        /* \"#utility.yul\":4841:4854   */\n      gt\n        /* \"#utility.yul\":4838:4840   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":4927:4928   */\n      0x00\n        /* \"#utility.yul\":4918:4924   */\n      dup5\n        /* \"#utility.yul\":4913:4916   */\n      dup5\n        /* \"#utility.yul\":4909:4925   */\n      add\n        /* \"#utility.yul\":4902:4929   */\n      mstore\n        /* \"#utility.yul\":4838:4840   */\n    tag_95:\n        /* \"#utility.yul\":4687:4945   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4951:5174   */\n    tag_61:\n        /* \"#utility.yul\":5091:5125   */\n      0x5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5079:5085   */\n      dup3\n        /* \"#utility.yul\":5075:5089   */\n      add\n        /* \"#utility.yul\":5068:5126   */\n      mstore\n        /* \"#utility.yul\":5160:5166   */\n      0x494c454400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5155:5157   */\n      0x20\n        /* \"#utility.yul\":5147:5153   */\n      dup3\n        /* \"#utility.yul\":5143:5158   */\n      add\n        /* \"#utility.yul\":5136:5167   */\n      mstore\n        /* \"#utility.yul\":5057:5174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5180:5361   */\n    tag_66:\n        /* \"#utility.yul\":5320:5353   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":5316:5317   */\n      0x00\n        /* \"#utility.yul\":5308:5314   */\n      dup3\n        /* \"#utility.yul\":5304:5318   */\n      add\n        /* \"#utility.yul\":5297:5354   */\n      mstore\n        /* \"#utility.yul\":5286:5361   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5367:5483   */\n    tag_33:\n        /* \"#utility.yul\":5437:5458   */\n      tag_99\n        /* \"#utility.yul\":5452:5457   */\n      dup2\n        /* \"#utility.yul\":5437:5458   */\n      tag_87\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":5430:5435   */\n      dup2\n        /* \"#utility.yul\":5427:5459   */\n      eq\n        /* \"#utility.yul\":5417:5419   */\n      tag_100\n      jumpi\n        /* \"#utility.yul\":5473:5474   */\n      0x00\n        /* \"#utility.yul\":5470:5471   */\n      dup1\n        /* \"#utility.yul\":5463:5475   */\n      revert\n        /* \"#utility.yul\":5417:5419   */\n    tag_100:\n        /* \"#utility.yul\":5407:5483   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5489:5611   */\n    tag_37:\n        /* \"#utility.yul\":5562:5586   */\n      tag_102\n        /* \"#utility.yul\":5580:5585   */\n      dup2\n        /* \"#utility.yul\":5562:5586   */\n      tag_70\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":5555:5560   */\n      dup2\n        /* \"#utility.yul\":5552:5587   */\n      eq\n        /* \"#utility.yul\":5542:5544   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":5601:5602   */\n      0x00\n        /* \"#utility.yul\":5598:5599   */\n      dup1\n        /* \"#utility.yul\":5591:5603   */\n      revert\n        /* \"#utility.yul\":5542:5544   */\n    tag_103:\n        /* \"#utility.yul\":5532:5611   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202093a30ca4f1a8d0fad7f2ddfcfb04b497a753ab3c36d75af380e7716db5b39c64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600160008190555061050e806100286000396000f3fe60806040526004361061001e5760003560e01c80637964783314610023575b600080fd5b61003d60048036038101906100389190610244565b61003f565b005b60026000541415610085576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161007c90610370565b60405180910390fd5b60026000819055506100ad73c778417e063141139fce010982780140aa0cd5ab3330846100b8565b600160008190555050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016100ec93929190610319565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161013a9190610302565b6000604051808303816000865af19150503d8060008114610177576040519150601f19603f3d011682016040523d82523d6000602084013e61017c565b606091505b50915091508180156101aa57506000815114806101a95750808060200190518101906101a8919061021b565b5b5b6101e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e090610350565b60405180910390fd5b505050505050565b600081519050610200816104aa565b92915050565b600081359050610215816104c1565b92915050565b60006020828403121561022d57600080fd5b600061023b848285016101f1565b91505092915050565b60006020828403121561025657600080fd5b600061026484828501610206565b91505092915050565b610276816103b7565b82525050565b600061028782610390565b610291818561039b565b93506102a18185602086016103ff565b80840191505092915050565b60006102ba6024836103a6565b91506102c582610432565b604082019050919050565b60006102dd601f836103a6565b91506102e882610481565b602082019050919050565b6102fc816103f5565b82525050565b600061030e828461027c565b915081905092915050565b600060608201905061032e600083018661026d565b61033b602083018561026d565b61034860408301846102f3565b949350505050565b60006020820190508181036000830152610369816102ad565b9050919050565b60006020820190508181036000830152610389816102d0565b9050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006103c2826103d5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561041d578082015181840152602081019050610402565b8381111561042c576000848401525b50505050565b7f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f464160008201527f494c454400000000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6104b3816103c9565b81146104be57600080fd5b50565b6104ca816103f5565b81146104d557600080fd5b5056fea26469706673582212202093a30ca4f1a8d0fad7f2ddfcfb04b497a753ab3c36d75af380e7716db5b39c64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x50E DUP1 PUSH2 0x28 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79647833 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38 SWAP2 SWAP1 PUSH2 0x244 JUMP JUMPDEST PUSH2 0x3F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C SWAP1 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xAD PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB CALLER ADDRESS DUP5 PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xEC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x177 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1AA JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1A9 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x1E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0 SWAP1 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x200 DUP2 PUSH2 0x4AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x215 DUP2 PUSH2 0x4C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23B DUP5 DUP3 DUP6 ADD PUSH2 0x1F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x264 DUP5 DUP3 DUP6 ADD PUSH2 0x206 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x276 DUP2 PUSH2 0x3B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x287 DUP3 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x291 DUP2 DUP6 PUSH2 0x39B JUMP JUMPDEST SWAP4 POP PUSH2 0x2A1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3FF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA PUSH1 0x24 DUP4 PUSH2 0x3A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C5 DUP3 PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DD PUSH1 0x1F DUP4 PUSH2 0x3A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E8 DUP3 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FC DUP2 PUSH2 0x3F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E DUP3 DUP5 PUSH2 0x27C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x32E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26D JUMP JUMPDEST PUSH2 0x33B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x26D JUMP JUMPDEST PUSH2 0x348 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2F3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x369 DUP2 PUSH2 0x2AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x389 DUP2 PUSH2 0x2D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C2 DUP3 PUSH2 0x3D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x41D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x402 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x494C454400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x4B3 DUP2 PUSH2 0x3C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4CA DUP2 PUSH2 0x3F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 SWAP4 LOG3 0xC LOG4 CALL 0xA8 0xD0 STATICCALL 0xD7 CALLCODE 0xDD 0xFC 0xFB DIV 0xB4 SWAP8 0xA7 MSTORE8 0xAB EXTCODECOPY CALLDATASIZE 0xD7 GAS RETURN DUP1 0xE7 PUSH18 0x6DB5B39C64736F6C63430008040033000000 ",
							"sourceMap": "232:2895:1:-:0;;;;;;;;;;;;;1734:1:2;1845:7;:22;;;;232:2895:1;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5614:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:4",
														"type": ""
													}
												],
												"src": "7:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "202:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "212:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "234:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "221:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "250:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "250:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "180:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "188:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "196:5:4",
														"type": ""
													}
												],
												"src": "150:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "369:204:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "424:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "427:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "417:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "417:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "390:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "399:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "386:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "386:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "382:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:32:4"
															},
															"nodeType": "YulIf",
															"src": "379:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "441:125:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "456:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "470:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "460:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "485:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "528:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "539:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "524:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "524:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "548:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "495:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "495:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "485:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "339:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "350:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "362:6:4",
														"type": ""
													}
												],
												"src": "295:278:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "645:196:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "691:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "700:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "703:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "693:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "693:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "693:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "666:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "675:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "687:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "658:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "658:32:4"
															},
															"nodeType": "YulIf",
															"src": "655:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "717:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "732:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "746:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "736:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "761:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "796:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "807:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "792:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "792:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "816:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "771:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "771:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "761:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "615:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "626:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "638:6:4",
														"type": ""
													}
												],
												"src": "579:262:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "912:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "929:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "952:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "934:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "934:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "922:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "922:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "900:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "907:3:4",
														"type": ""
													}
												],
												"src": "847:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1079:265:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1089:52:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1135:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1103:31:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1103:38:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1093:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1150:95:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1233:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1238:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1157:75:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1157:88:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1150:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1280:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1287:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1294:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1299:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1254:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1315:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1326:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1331:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1322:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:16:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1060:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1067:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1075:3:4",
														"type": ""
													}
												],
												"src": "971:373:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1496:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1506:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1572:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1577:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1513:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1513:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1506:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1678:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																	"nodeType": "YulIdentifier",
																	"src": "1589:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1691:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1702:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1698:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1698:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1691:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1484:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1492:3:4",
														"type": ""
													}
												],
												"src": "1350:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1868:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1878:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1944:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1949:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1885:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1885:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1878:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2050:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "1961:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1961:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1961:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2063:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2074:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2079:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2070:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2063:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1856:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1864:3:4",
														"type": ""
													}
												],
												"src": "1722:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2159:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2176:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2199:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2181:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2181:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2169:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2169:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2147:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2154:3:4",
														"type": ""
													}
												],
												"src": "2094:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2352:137:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2363:100:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2450:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2459:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2370:79:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:93:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2363:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2473:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2480:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2473:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2331:3:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2337:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2348:3:4",
														"type": ""
													}
												],
												"src": "2218:271:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2649:288:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2659:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2682:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2659:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2739:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2752:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2763:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2748:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2748:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2695:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2695:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2820:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2833:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2844:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2776:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2776:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2776:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2902:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2915:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2926:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2911:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2911:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2858:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2858:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2605:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2617:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2625:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2633:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2644:4:4",
														"type": ""
													}
												],
												"src": "2495:442:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3114:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3124:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3136:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3147:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3132:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3132:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3124:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3171:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3182:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3167:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3167:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3190:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3196:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3186:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3186:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3160:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3160:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3160:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3216:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3350:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3224:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3224:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3216:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3094:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3109:4:4",
														"type": ""
													}
												],
												"src": "2943:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3539:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3549:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3561:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3572:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3557:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3557:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3549:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3596:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3607:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3592:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3592:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3615:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3621:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3611:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3611:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3585:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3585:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3585:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3641:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3775:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3649:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3649:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3641:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3519:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3534:4:4",
														"type": ""
													}
												],
												"src": "3368:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3851:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3862:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3878:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3872:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3872:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3834:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3844:6:4",
														"type": ""
													}
												],
												"src": "3793:98:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4010:34:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4020:18:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4035:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4020:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3982:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3987:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3998:11:4",
														"type": ""
													}
												],
												"src": "3897:147:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4146:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4163:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4168:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4156:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4156:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4184:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4203:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4208:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4199:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4199:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4184:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4118:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4123:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4134:11:4",
														"type": ""
													}
												],
												"src": "4050:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4270:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4280:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4309:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4291:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4291:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4280:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4252:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4262:7:4",
														"type": ""
													}
												],
												"src": "4225:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4369:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4379:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4404:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4397:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4397:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4390:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4390:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4379:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4351:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4361:7:4",
														"type": ""
													}
												],
												"src": "4327:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4468:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4478:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4500:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4489:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4489:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4478:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4450:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4460:7:4",
														"type": ""
													}
												],
												"src": "4423:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4600:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4610:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4621:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4610:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4582:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4592:7:4",
														"type": ""
													}
												],
												"src": "4555:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4687:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4697:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4706:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4701:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4766:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4791:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4796:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4787:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4787:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4810:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4815:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4806:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4806:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4800:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4800:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4780:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4780:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4780:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4727:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4730:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4724:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4738:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4740:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4749:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4752:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4745:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4745:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4740:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4720:3:4",
																"statements": []
															},
															"src": "4716:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4863:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4913:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "4918:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4909:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4909:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4927:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4902:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4902:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4902:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4844:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4847:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4841:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4841:13:4"
															},
															"nodeType": "YulIf",
															"src": "4838:2:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4669:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4674:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4679:6:4",
														"type": ""
													}
												],
												"src": "4638:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5057:117:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5079:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5087:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5075:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5075:14:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5091:34:4",
																		"type": "",
																		"value": "TransferHelper: TRANSFER_FROM_FA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5068:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5068:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5068:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5147:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5155:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5143:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5143:15:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5160:6:4",
																		"type": "",
																		"value": "ILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5136:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5136:31:4"
														}
													]
												},
												"name": "store_literal_in_memory_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5049:6:4",
														"type": ""
													}
												],
												"src": "4951:223:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5286:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5308:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5316:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5304:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5304:14:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5320:33:4",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5297:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5297:57:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5297:57:4"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5278:6:4",
														"type": ""
													}
												],
												"src": "5180:181:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5407:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5461:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5470:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5473:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5463:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5463:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5463:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5430:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5452:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5437:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5437:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5427:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5427:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5420:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5420:40:4"
															},
															"nodeType": "YulIf",
															"src": "5417:2:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5400:5:4",
														"type": ""
													}
												],
												"src": "5367:116:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5532:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5589:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5598:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5601:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5591:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5591:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5591:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5555:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5580:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5562:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5562:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5552:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5552:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5545:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5545:43:4"
															},
															"nodeType": "YulIf",
															"src": "5542:2:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5525:5:4",
														"type": ""
													}
												],
												"src": "5489:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function store_literal_in_memory_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferHelper: TRANSFER_FROM_FA\")\n\n        mstore(add(memPtr, 32), \"ILED\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c80637964783314610023575b600080fd5b61003d60048036038101906100389190610244565b61003f565b005b60026000541415610085576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161007c90610370565b60405180910390fd5b60026000819055506100ad73c778417e063141139fce010982780140aa0cd5ab3330846100b8565b600160008190555050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016100ec93929190610319565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161013a9190610302565b6000604051808303816000865af19150503d8060008114610177576040519150601f19603f3d011682016040523d82523d6000602084013e61017c565b606091505b50915091508180156101aa57506000815114806101a95750808060200190518101906101a8919061021b565b5b5b6101e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e090610350565b60405180910390fd5b505050505050565b600081519050610200816104aa565b92915050565b600081359050610215816104c1565b92915050565b60006020828403121561022d57600080fd5b600061023b848285016101f1565b91505092915050565b60006020828403121561025657600080fd5b600061026484828501610206565b91505092915050565b610276816103b7565b82525050565b600061028782610390565b610291818561039b565b93506102a18185602086016103ff565b80840191505092915050565b60006102ba6024836103a6565b91506102c582610432565b604082019050919050565b60006102dd601f836103a6565b91506102e882610481565b602082019050919050565b6102fc816103f5565b82525050565b600061030e828461027c565b915081905092915050565b600060608201905061032e600083018661026d565b61033b602083018561026d565b61034860408301846102f3565b949350505050565b60006020820190508181036000830152610369816102ad565b9050919050565b60006020820190508181036000830152610389816102d0565b9050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006103c2826103d5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561041d578082015181840152602081019050610402565b8381111561042c576000848401525b50505050565b7f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f464160008201527f494c454400000000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6104b3816103c9565b81146104be57600080fd5b50565b6104ca816103f5565b81146104d557600080fd5b5056fea26469706673582212202093a30ca4f1a8d0fad7f2ddfcfb04b497a753ab3c36d75af380e7716db5b39c64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79647833 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38 SWAP2 SWAP1 PUSH2 0x244 JUMP JUMPDEST PUSH2 0x3F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C SWAP1 PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xAD PUSH20 0xC778417E063141139FCE010982780140AA0CD5AB CALLER ADDRESS DUP5 PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xEC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x177 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1AA JUMPI POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1A9 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x21B JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x1E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E0 SWAP1 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x200 DUP2 PUSH2 0x4AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x215 DUP2 PUSH2 0x4C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23B DUP5 DUP3 DUP6 ADD PUSH2 0x1F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x264 DUP5 DUP3 DUP6 ADD PUSH2 0x206 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x276 DUP2 PUSH2 0x3B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x287 DUP3 PUSH2 0x390 JUMP JUMPDEST PUSH2 0x291 DUP2 DUP6 PUSH2 0x39B JUMP JUMPDEST SWAP4 POP PUSH2 0x2A1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3FF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA PUSH1 0x24 DUP4 PUSH2 0x3A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C5 DUP3 PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DD PUSH1 0x1F DUP4 PUSH2 0x3A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E8 DUP3 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FC DUP2 PUSH2 0x3F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E DUP3 DUP5 PUSH2 0x27C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x32E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x26D JUMP JUMPDEST PUSH2 0x33B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x26D JUMP JUMPDEST PUSH2 0x348 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2F3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x369 DUP2 PUSH2 0x2AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x389 DUP2 PUSH2 0x2D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C2 DUP3 PUSH2 0x3D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x41D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x402 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x42C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x494C454400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x4B3 DUP2 PUSH2 0x3C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4CA DUP2 PUSH2 0x3F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 SWAP4 LOG3 0xC LOG4 CALL 0xA8 0xD0 STATICCALL 0xD7 CALLCODE 0xDD 0xFC 0xFB DIV 0xB4 SWAP8 0xA7 MSTORE8 0xAB EXTCODECOPY CALLDATASIZE 0xD7 GAS RETURN DUP1 0xE7 PUSH18 0x6DB5B39C64736F6C63430008040033000000 ",
							"sourceMap": "232:2895:1:-:0;;;;;;;;;;;;;;;;;;;;;2583:284;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;1778:1:2;2376:7;;:19;;2368:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1778:1;2509:7;:18;;;;2657:202:1::1;2715:42;2777:10;2814:4;2838:6;2657:31;:202::i;:::-;1734:1:2::0;2688:7;:22;;;;2583:284:1;:::o;1072:430:3:-;1218:12;1232:17;1253:5;:10;;1301;1313:4;1319:2;1323:5;1278:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1253:87;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1217:123;;;;1373:7;:57;;;;;1400:1;1385:4;:11;:16;:44;;;;1416:4;1405:24;;;;;;;;;;;;:::i;:::-;1385:44;1373:57;1351:143;;;;;;;;;;;;:::i;:::-;;;;;;;;;1072:430;;;;;;:::o;7:137:4:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:139::-;196:5;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;202:87;;;;:::o;295:278::-;362:6;411:2;399:9;390:7;386:23;382:32;379:2;;;427:1;424;417:12;379:2;470:1;495:61;548:7;539:6;528:9;524:22;495:61;:::i;:::-;485:71;;441:125;369:204;;;;:::o;579:262::-;638:6;687:2;675:9;666:7;662:23;658:32;655:2;;;703:1;700;693:12;655:2;746:1;771:53;816:7;807:6;796:9;792:22;771:53;:::i;:::-;761:63;;717:117;645:196;;;;:::o;847:118::-;934:24;952:5;934:24;:::i;:::-;929:3;922:37;912:53;;:::o;971:373::-;1075:3;1103:38;1135:5;1103:38;:::i;:::-;1157:88;1238:6;1233:3;1157:88;:::i;:::-;1150:95;;1254:52;1299:6;1294:3;1287:4;1280:5;1276:16;1254:52;:::i;:::-;1331:6;1326:3;1322:16;1315:23;;1079:265;;;;;:::o;1350:366::-;1492:3;1513:67;1577:2;1572:3;1513:67;:::i;:::-;1506:74;;1589:93;1678:3;1589:93;:::i;:::-;1707:2;1702:3;1698:12;1691:19;;1496:220;;;:::o;1722:366::-;1864:3;1885:67;1949:2;1944:3;1885:67;:::i;:::-;1878:74;;1961:93;2050:3;1961:93;:::i;:::-;2079:2;2074:3;2070:12;2063:19;;1868:220;;;:::o;2094:118::-;2181:24;2199:5;2181:24;:::i;:::-;2176:3;2169:37;2159:53;;:::o;2218:271::-;2348:3;2370:93;2459:3;2450:6;2370:93;:::i;:::-;2363:100;;2480:3;2473:10;;2352:137;;;;:::o;2495:442::-;2644:4;2682:2;2671:9;2667:18;2659:26;;2695:71;2763:1;2752:9;2748:17;2739:6;2695:71;:::i;:::-;2776:72;2844:2;2833:9;2829:18;2820:6;2776:72;:::i;:::-;2858;2926:2;2915:9;2911:18;2902:6;2858:72;:::i;:::-;2649:288;;;;;;:::o;2943:419::-;3109:4;3147:2;3136:9;3132:18;3124:26;;3196:9;3190:4;3186:20;3182:1;3171:9;3167:17;3160:47;3224:131;3350:4;3224:131;:::i;:::-;3216:139;;3114:248;;;:::o;3368:419::-;3534:4;3572:2;3561:9;3557:18;3549:26;;3621:9;3615:4;3611:20;3607:1;3596:9;3592:17;3585:47;3649:131;3775:4;3649:131;:::i;:::-;3641:139;;3539:248;;;:::o;3793:98::-;3844:6;3878:5;3872:12;3862:22;;3851:40;;;:::o;3897:147::-;3998:11;4035:3;4020:18;;4010:34;;;;:::o;4050:169::-;4134:11;4168:6;4163:3;4156:19;4208:4;4203:3;4199:14;4184:29;;4146:73;;;;:::o;4225:96::-;4262:7;4291:24;4309:5;4291:24;:::i;:::-;4280:35;;4270:51;;;:::o;4327:90::-;4361:7;4404:5;4397:13;4390:21;4379:32;;4369:48;;;:::o;4423:126::-;4460:7;4500:42;4493:5;4489:54;4478:65;;4468:81;;;:::o;4555:77::-;4592:7;4621:5;4610:16;;4600:32;;;:::o;4638:307::-;4706:1;4716:113;4730:6;4727:1;4724:13;4716:113;;;4815:1;4810:3;4806:11;4800:18;4796:1;4791:3;4787:11;4780:39;4752:2;4749:1;4745:10;4740:15;;4716:113;;;4847:6;4844:1;4841:13;4838:2;;;4927:1;4918:6;4913:3;4909:16;4902:27;4838:2;4687:258;;;;:::o;4951:223::-;5091:34;5087:1;5079:6;5075:14;5068:58;5160:6;5155:2;5147:6;5143:15;5136:31;5057:117;:::o;5180:181::-;5320:33;5316:1;5308:6;5304:14;5297:57;5286:75;:::o;5367:116::-;5437:21;5452:5;5437:21;:::i;:::-;5430:5;5427:32;5417:2;;5473:1;5470;5463:12;5417:2;5407:76;:::o;5489:122::-;5562:24;5580:5;5562:24;:::i;:::-;5555:5;5552:35;5542:2;;5601:1;5598;5591:12;5542:2;5532:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "258800",
								"executionCost": "20314",
								"totalCost": "279114"
							},
							"external": {
								"depodit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 3127,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 3127,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202093a30ca4f1a8d0fad7f2ddfcfb04b497a753ab3c36d75af380e7716db5b39c64736f6c63430008040033",
									".code": [
										{
											"begin": 232,
											"end": 3127,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "PUSH",
											"source": 1,
											"value": "79647833"
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 232,
											"end": 3127,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2657,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2715,
											"end": 2757,
											"name": "PUSH",
											"source": 1,
											"value": "C778417E063141139FCE010982780140AA0CD5AB"
										},
										{
											"begin": 2777,
											"end": 2787,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2818,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2844,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2657,
											"end": 2859,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2657,
											"end": 2859,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2657,
											"end": 2859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2867,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1072,
											"end": 1502,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1072,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1249,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1263,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1253,
											"end": 1263,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1313,
											"end": 1317,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1319,
											"end": 1321,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1328,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1278,
											"end": 1329,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1253,
											"end": 1340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1217,
											"end": 1340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1217,
											"end": 1340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1217,
											"end": 1340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1217,
											"end": 1340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1373,
											"end": 1430,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1373,
											"end": 1430,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1373,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1373,
											"end": 1430,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1373,
											"end": 1430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1389,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1396,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1401,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1429,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1385,
											"end": 1429,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1416,
											"end": 1420,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1405,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1429,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1385,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1373,
											"end": 1430,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1373,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1351,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1502,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 67,
											"end": 144,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 67,
											"end": 144,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 67,
											"end": 144,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 67,
											"end": 144,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 67,
											"end": 144,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 196,
											"end": 201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 240,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 221,
											"end": 241,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 202,
											"end": 289,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 202,
											"end": 289,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 202,
											"end": 289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 202,
											"end": 289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 202,
											"end": 289,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 573,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 295,
											"end": 573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 413,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 408,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 390,
											"end": 397,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 386,
											"end": 409,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 379,
											"end": 381,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 379,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 379,
											"end": 381,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 427,
											"end": 428,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 425,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 417,
											"end": 429,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 379,
											"end": 381,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 379,
											"end": 381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 470,
											"end": 471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 555,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 528,
											"end": 537,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 524,
											"end": 546,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 495,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 495,
											"end": 556,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 495,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 495,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 485,
											"end": 556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 485,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 441,
											"end": 566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 369,
											"end": 573,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 369,
											"end": 573,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 369,
											"end": 573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 369,
											"end": 573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 369,
											"end": 573,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 579,
											"end": 841,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 579,
											"end": 841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 638,
											"end": 644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 689,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 666,
											"end": 673,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 662,
											"end": 685,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 658,
											"end": 690,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 655,
											"end": 657,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 655,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 655,
											"end": 657,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 703,
											"end": 704,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 693,
											"end": 705,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 655,
											"end": 657,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 655,
											"end": 657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 746,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 816,
											"end": 823,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 807,
											"end": 813,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 796,
											"end": 805,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 792,
											"end": 814,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 771,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 771,
											"end": 824,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 771,
											"end": 824,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 771,
											"end": 824,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 761,
											"end": 824,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 761,
											"end": 824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 717,
											"end": 834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 841,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 645,
											"end": 841,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 841,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 847,
											"end": 965,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 847,
											"end": 965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 952,
											"end": 957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 934,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 934,
											"end": 958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 929,
											"end": 932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 922,
											"end": 959,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 912,
											"end": 965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 912,
											"end": 965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 912,
											"end": 965,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 971,
											"end": 1344,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 971,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1103,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1103,
											"end": 1141,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1103,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1236,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1157,
											"end": 1245,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1157,
											"end": 1245,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1157,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1245,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1294,
											"end": 1297,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1287,
											"end": 1291,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1285,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1292,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1254,
											"end": 1306,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1306,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1254,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1337,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1329,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1338,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1079,
											"end": 1344,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1079,
											"end": 1344,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1079,
											"end": 1344,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1079,
											"end": 1344,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1079,
											"end": 1344,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1079,
											"end": 1344,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1350,
											"end": 1716,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1350,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1577,
											"end": 1579,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1572,
											"end": 1575,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1513,
											"end": 1580,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1513,
											"end": 1580,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1513,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1580,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1580,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1589,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1678,
											"end": 1681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1589,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1589,
											"end": 1682,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1589,
											"end": 1682,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1589,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1705,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1691,
											"end": 1710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1691,
											"end": 1710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1716,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1716,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1716,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1722,
											"end": 2088,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1722,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1949,
											"end": 1951,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1944,
											"end": 1947,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1885,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1952,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1952,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1961,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2050,
											"end": 2053,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1961,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1961,
											"end": 2054,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1961,
											"end": 2054,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1961,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2079,
											"end": 2081,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2077,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2082,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 2088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 2088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 2088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 2088,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2094,
											"end": 2212,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2094,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2199,
											"end": 2204,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2176,
											"end": 2179,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2206,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2212,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2218,
											"end": 2489,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2218,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2351,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2459,
											"end": 2462,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2363,
											"end": 2463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2363,
											"end": 2463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2483,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2352,
											"end": 2489,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2352,
											"end": 2489,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2352,
											"end": 2489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2352,
											"end": 2489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2352,
											"end": 2489,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2495,
											"end": 2937,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2495,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2648,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2659,
											"end": 2685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2659,
											"end": 2685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2763,
											"end": 2764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2761,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2748,
											"end": 2765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2745,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2695,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2695,
											"end": 2766,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2695,
											"end": 2766,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2695,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2776,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2844,
											"end": 2846,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2842,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2826,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2776,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2776,
											"end": 2848,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2776,
											"end": 2848,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2776,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2926,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2915,
											"end": 2924,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2911,
											"end": 2929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2858,
											"end": 2930,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2858,
											"end": 2930,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2858,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2937,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2937,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2937,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2943,
											"end": 3362,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2943,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3109,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3149,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3136,
											"end": 3145,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3150,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3124,
											"end": 3150,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3124,
											"end": 3150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3205,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3190,
											"end": 3194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3183,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3180,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3224,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3350,
											"end": 3354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3224,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3224,
											"end": 3355,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3224,
											"end": 3355,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3224,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3355,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3362,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3368,
											"end": 3787,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3368,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3534,
											"end": 3538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3574,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3570,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3621,
											"end": 3630,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3615,
											"end": 3619,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3611,
											"end": 3631,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3607,
											"end": 3608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3609,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3649,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3775,
											"end": 3779,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3649,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3649,
											"end": 3780,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3649,
											"end": 3780,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3649,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3641,
											"end": 3780,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3641,
											"end": 3780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3539,
											"end": 3787,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3539,
											"end": 3787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3539,
											"end": 3787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3539,
											"end": 3787,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3793,
											"end": 3891,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3793,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3850,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3891,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3891,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3891,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3897,
											"end": 4044,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3897,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4035,
											"end": 4038,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4050,
											"end": 4219,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4050,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4134,
											"end": 4145,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4174,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4163,
											"end": 4166,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4156,
											"end": 4175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4208,
											"end": 4212,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4203,
											"end": 4206,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4199,
											"end": 4213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4219,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4219,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4146,
											"end": 4219,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4225,
											"end": 4321,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4225,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4291,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4309,
											"end": 4314,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4291,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4291,
											"end": 4315,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4291,
											"end": 4315,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4291,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4315,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4270,
											"end": 4321,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4270,
											"end": 4321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4270,
											"end": 4321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4270,
											"end": 4321,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4327,
											"end": 4417,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4327,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4361,
											"end": 4368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4417,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4417,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4423,
											"end": 4549,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4423,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4467,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4542,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4489,
											"end": 4543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4543,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4549,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4549,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4555,
											"end": 4632,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4555,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4592,
											"end": 4599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4621,
											"end": 4626,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 4632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 4632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 4632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 4632,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4638,
											"end": 4945,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4638,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4707,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4716,
											"end": 4829,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4716,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4730,
											"end": 4736,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 4728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 4737,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4716,
											"end": 4829,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4716,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4716,
											"end": 4829,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4815,
											"end": 4816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4810,
											"end": 4813,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4806,
											"end": 4817,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4796,
											"end": 4797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4791,
											"end": 4794,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4798,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4780,
											"end": 4819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4752,
											"end": 4754,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4750,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4745,
											"end": 4755,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4740,
											"end": 4755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4740,
											"end": 4755,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4716,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4716,
											"end": 4829,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4716,
											"end": 4829,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4716,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4847,
											"end": 4853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4845,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4854,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4838,
											"end": 4840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4838,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4838,
											"end": 4840,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4927,
											"end": 4928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4924,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4913,
											"end": 4916,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 4925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4902,
											"end": 4929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4838,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4838,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4687,
											"end": 4945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4687,
											"end": 4945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4687,
											"end": 4945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4687,
											"end": 4945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4687,
											"end": 4945,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4951,
											"end": 5174,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4951,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5091,
											"end": 5125,
											"name": "PUSH",
											"source": 4,
											"value": "5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641"
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5085,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5075,
											"end": 5089,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 5126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5166,
											"name": "PUSH",
											"source": 4,
											"value": "494C454400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5155,
											"end": 5157,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5147,
											"end": 5153,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5158,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5136,
											"end": 5167,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5174,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5174,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5180,
											"end": 5361,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5180,
											"end": 5361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5320,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5314,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5304,
											"end": 5318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5297,
											"end": 5354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5286,
											"end": 5361,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5286,
											"end": 5361,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5367,
											"end": 5483,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5367,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5452,
											"end": 5457,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5437,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 5435,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5427,
											"end": 5459,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5417,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5417,
											"end": 5419,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5475,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5417,
											"end": 5419,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5417,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5407,
											"end": 5483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5407,
											"end": 5483,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5489,
											"end": 5611,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 5489,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5580,
											"end": 5585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5562,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5555,
											"end": 5560,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5587,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5601,
											"end": 5602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5532,
											"end": 5611,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"depodit(uint256)": "79647833"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depodit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ethereum/Presale.sol\":\"Presale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"Ethereum/Presale.sol\":{\"keccak256\":\"0x47019f7bf85cfda3027f93123d728b3c6849093a639552dae8abd205432e70ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fbde130de4a0c375e420009486c8b4e1864a34684c3380023cb67f10ceaa62f\",\"dweb:/ipfs/QmSpZSRRqXLWsuFdTq4cz6kgHL133eiukaA6coXQF6fyMy\"]},\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]},\"Utils/TransferHelper.sol\":{\"keccak256\":\"0x41fb80c244b751010d964e2dc89b07109db10e96d44aeb21e8d53489ef157e82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6163949de54364cf12571097b9eed46191051c028c9e1ae36bc3de9014d433f6\",\"dweb:/ipfs/QmWsnWq1CZmsdzKWW6i2hp377GRk4mmQgrPa5KiUE2CCxb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "Ethereum/Presale.sol:Presale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5531a4a8604939470e38d88dbb16a35c38cf17a3d66393fe9c73b5da561615df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0fd4ce017408e0e7cda8bb02298443533e2fbb261878df176374bee5c3e4adf\",\"dweb:/ipfs/QmPhT3sFavHxyWopC7f1Ukzw1TDmmkzr5te24Btuvunpz1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "Utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Utils/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Utils/TransferHelper.sol\":244:2096  library TransferHelper {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Utils/TransferHelper.sol\":244:2096  library TransferHelper {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200e4ba57af3b4f07a6e26f3b20e9298c21a665597d8898bdc2011499bf0df3d4364736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e4ba57af3b4f07a6e26f3b20e9298c21a665597d8898bdc2011499bf0df3d4364736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x4B 0xA5 PUSH27 0xF3B4F07A6E26F3B20E9298C21A665597D8898BDC2011499BF0DF3D NUMBER PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "244:1852:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e4ba57af3b4f07a6e26f3b20e9298c21a665597d8898bdc2011499bf0df3d4364736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x4B 0xA5 PUSH27 0xF3B4F07A6E26F3B20E9298C21A665597D8898BDC2011499BF0DF3D NUMBER PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "244:1852:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferBaseToken(address,address payable,uint256,bool)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 2096,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 244,
									"end": 2096,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200e4ba57af3b4f07a6e26f3b20e9298c21a665597d8898bdc2011499bf0df3d4364736f6c63430008040033",
									".code": [
										{
											"begin": 244,
											"end": 2096,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2096,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2096,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2096,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 2096,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 2096,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2096,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 2096,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 244,
											"end": 2096,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Utils/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Utils/TransferHelper.sol\":{\"keccak256\":\"0x41fb80c244b751010d964e2dc89b07109db10e96d44aeb21e8d53489ef157e82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6163949de54364cf12571097b9eed46191051c028c9e1ae36bc3de9014d433f6\",\"dweb:/ipfs/QmWsnWq1CZmsdzKWW6i2hp377GRk4mmQgrPa5KiUE2CCxb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "helper methods for interacting with ERC20 tokens that do not consistently return true/false with the addition of a transfer function to send eth or an erc20 token",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "220:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "409:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "418:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "440:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "460:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:0"
									},
									"src": "403:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "646:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "655:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "678:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "703:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:0"
									},
									"src": "640:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "846:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:0"
									},
									"scope": 77,
									"src": "800:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1002:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:0"
									},
									"scope": 77,
									"src": "943:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1251:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1263:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1297:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:0"
									},
									"scope": 77,
									"src": "1233:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1606:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:0"
									},
									"scope": 77,
									"src": "1587:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2373:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2407:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:0"
									},
									"scope": 77,
									"src": "2339:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2762:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2754:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2785:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2777:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2806:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2798:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:76:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2838:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:6:0"
									},
									"scope": 77,
									"src": "2722:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "210:2637:0",
							"usedErrors": []
						}
					],
					"src": "109:2740:0"
				},
				"id": 0
			},
			"Ethereum/Presale.sol": {
				"ast": {
					"absolutePath": "Ethereum/Presale.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"Presale": [
							109
						],
						"ReentrancyGuard": [
							149
						],
						"TransferHelper": [
							341
						]
					},
					"id": 110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:1"
						},
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "../ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 78,
							"src": "120:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/ReentrancyGuard.sol",
							"file": "../Utils/ReentrancyGuard.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 150,
							"src": "151:38:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Utils/TransferHelper.sol",
							"file": "../Utils/TransferHelper.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 342,
							"src": "191:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 83,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 149,
										"src": "252:15:1"
									},
									"id": 84,
									"nodeType": "InheritanceSpecifier",
									"src": "252:15:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109,
								149
							],
							"name": "Presale",
							"nameLocation": "241:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2646:221:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "307863373738343137453036333134313133394663653031303938323738303134304161306344354162",
																	"id": 96,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2715:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0xc778417E063141139Fce010982780140Aa0cD5Ab"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2707:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 94,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2707:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2707:51:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 98,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2777:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2777:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 102,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2814:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Presale_$109",
																		"typeString": "contract Presale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Presale_$109",
																		"typeString": "contract Presale"
																	}
																],
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2806:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 100,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2806:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2806:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2838:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 91,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "2657:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$341_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "2657:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2657:202:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2657:202:1"
											}
										]
									},
									"functionSelector": "79647833",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 89,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 88,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 148,
												"src": "2633:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2633:12:1"
										}
									],
									"name": "depodit",
									"nameLocation": "2592:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2608:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2600:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2600:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2599:16:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2646:0:1"
									},
									"scope": 109,
									"src": "2583:284:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 110,
							"src": "232:2895:1",
							"usedErrors": []
						}
					],
					"src": "93:3034:1"
				},
				"id": 1
			},
			"Utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "Utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							149
						]
					},
					"id": 150,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 112,
								"nodeType": "StructuredDocumentation",
								"src": "127:765:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 149,
							"linearizedBaseContracts": [
								149
							],
							"name": "ReentrancyGuard",
							"nameLocation": "912:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 115,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1719:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "1694:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 113,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1694:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 114,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1734:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1767:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "1742:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1778:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 120,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1804:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 149,
									"src": "1788:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1788:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "1834:41:2",
										"statements": [
											{
												"expression": {
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 123,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1845:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 124,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1855:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "1845:22:2"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1831:2:2"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:2"
									},
									"scope": 149,
									"src": "1820:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "2285:433:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 132,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 133,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2387:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2376:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "2368:63:2"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2519:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2509:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2509:18:2"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "2540:1:2"
											},
											{
												"expression": {
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 143,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2688:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 144,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2698:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2688:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "2688:22:2"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "1883:372:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 148,
									"name": "nonReentrant",
									"nameLocation": "2270:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:2"
									},
									"src": "2261:457:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 150,
							"src": "894:1827:2",
							"usedErrors": []
						}
					],
					"src": "100:2621:2"
				},
				"id": 2
			},
			"Utils/TransferHelper.sol": {
				"ast": {
					"absolutePath": "Utils/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							341
						]
					},
					"id": 342,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 151,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "62:180:3",
								"text": "helper methods for interacting with ERC20 tokens that do not consistently return true/false\nwith the addition of a transfer function to send eth or an erc20 token"
							},
							"fullyImplemented": true,
							"id": 341,
							"linearizedBaseContracts": [
								341
							],
							"name": "TransferHelper",
							"nameLocation": "252:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "380:284:3",
										"statements": [
											{
												"assignments": [
													162,
													164
												],
												"declarations": [
													{
														"constant": false,
														"id": 162,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "397:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "392:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 161,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "392:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 164,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "419:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "406:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 163,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "406:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 174,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "475:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 170,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "487:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 171,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "491:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 167,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "452:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "452:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "452:45:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 165,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "427:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "427:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "427:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "391:117:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 176,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "541:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 177,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 164,
																					"src": "553:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 178,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "553:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "568:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "553:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 183,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 164,
																					"src": "584:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 185,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "591:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 184,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "591:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 186,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "590:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 181,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "573:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "573:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "573:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "553:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 189,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "552:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "541:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "613:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "519:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "519:137:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "519:137:3"
											}
										]
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "283:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "313:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "305:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "337:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "329:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "358:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "350:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:76:3"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:3"
									},
									"scope": 341,
									"src": "274:390:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "779:285:3",
										"statements": [
											{
												"assignments": [
													205,
													207
												],
												"declarations": [
													{
														"constant": false,
														"id": 205,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "796:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 237,
														"src": "791:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 204,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "791:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "818:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 237,
														"src": "805:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 206,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "805:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 217,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "874:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 213,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "886:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 214,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "890:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 210,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "851:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "851:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "851:45:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 208,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "826:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "826:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "826:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "790:117:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 219,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "940:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 220,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 207,
																					"src": "952:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "952:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "967:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "952:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 226,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 207,
																					"src": "983:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 228,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "990:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 227,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "990:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 229,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "989:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 224,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "972:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "972:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "972:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "952:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 232,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "951:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "940:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1012:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "918:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "918:138:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "918:138:3"
											}
										]
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "681:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "712:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "704:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "736:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "728:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "757:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "749:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "749:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:76:3"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:0:3"
									},
									"scope": 341,
									"src": "672:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1206:296:3",
										"statements": [
											{
												"assignments": [
													250,
													252
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1223:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 283,
														"src": "1218:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 249,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1218:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1245:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 283,
														"src": "1232:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 251,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1232:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 263,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1301:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 258,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "1313:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "1319:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 260,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "1323:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 255,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1278:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1278:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1278:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 253,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "1253:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1253:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1253:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1217:123:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 265,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 250,
																"src": "1373:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 266,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 252,
																					"src": "1385:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1385:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 268,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1400:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1385:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 272,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 252,
																					"src": "1416:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 274,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1423:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 273,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1423:4:3",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 275,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1422:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 270,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1405:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1405:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1405:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1385:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 278,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1384:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1373:57:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1445:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1351:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1351:143:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "1351:143:3"
											}
										]
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1081:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1116:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1108:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1140:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1132:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1163:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1155:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1184:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1176:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1097:99:3"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1206:0:3"
									},
									"scope": 341,
									"src": "1072:430:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "1693:400:3",
										"statements": [
											{
												"condition": {
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1708:8:3",
													"subExpression": {
														"id": 295,
														"name": "isERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "1709:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "1769:317:3",
													"statements": [
														{
															"assignments": [
																305,
																307
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 305,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "1790:7:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 337,
																	"src": "1785:12:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 304,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1785:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 307,
																	"mutability": "mutable",
																	"name": "data",
																	"nameLocation": "1812:4:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 337,
																	"src": "1799:17:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 306,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "1799:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 317,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30786139303539636262",
																				"id": 312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1872:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				"value": "0xa9059cbb"
																			},
																			{
																				"id": 313,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "1884:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			{
																				"id": 314,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 290,
																				"src": "1888:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_2835717307_by_1",
																					"typeString": "int_const 2835717307"
																				},
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 310,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1849:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "1849:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1849:45:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 308,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "1820:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"src": "1820:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1820:89:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1784:125:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 319,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 305,
																			"src": "1950:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 331,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 323,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 320,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 307,
																								"src": "1962:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							"id": 321,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "1962:11:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 322,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1977:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "1962:16:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "||",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 326,
																								"name": "data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 307,
																								"src": "1993:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							{
																								"components": [
																									{
																										"id": 328,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "2000:4:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_bool_$",
																											"typeString": "type(bool)"
																										},
																										"typeName": {
																											"id": 327,
																											"name": "bool",
																											"nodeType": "ElementaryTypeName",
																											"src": "2000:4:3",
																											"typeDescriptions": {}
																										}
																									}
																								],
																								"id": 329,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "1999:6:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								},
																								{
																									"typeIdentifier": "t_type$_t_bool_$",
																									"typeString": "type(bool)"
																								}
																							],
																							"expression": {
																								"id": 324,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "1982:3:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "decode",
																							"nodeType": "MemberAccess",
																							"src": "1982:10:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 330,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1982:24:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "1962:44:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 332,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1961:46:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1950:57:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:33:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		},
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																			"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
																		}
																	],
																	"id": 318,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1924:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1924:150:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "1924:150:3"
														}
													]
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "1704:382:3",
												"trueBody": {
													"id": 303,
													"nodeType": "Block",
													"src": "1718:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 300,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "1745:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 297,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "1733:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1733:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1733:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "1733:18:3"
														}
													]
												}
											}
										]
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferBaseToken",
									"nameLocation": "1555:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1595:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1587:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1627:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1611:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1611:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "isERC20",
												"nameLocation": "1669:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1664:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1664:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1576:107:3"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1693:0:3"
									},
									"scope": 341,
									"src": "1546:547:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 342,
							"src": "244:1852:3",
							"usedErrors": []
						}
					],
					"src": "35:2063:3"
				},
				"id": 3
			}
		}
	}
}